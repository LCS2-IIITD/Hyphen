# ::snt Called it.
# ::tokens ["Called", "it", "."]
# ::lemmas ["call", "it", "."]
(c1-0 / call-02
      :ARG1 (c1-1 / it))

# ::snt No sirIm screaming from the rooftops I need a trial!!
# ::tokens ["No", "sirIm", "screaming", "from", "the", "rooftops", "I", "need", "a", "trial", "!", "!"]
# ::lemmas ["no", "sirim", "scream", "from", "the", "rooftop", "i", "need", "a", "trial", "!", "!"]
(c2-2 / say-01
      :ARG0 (c2-6 / i)
      :ARG1 (c2-7 / and
                  :op1 (c2-1 / no)
                  :op2 (c2-0 / scream-01
                             :ARG0 c2-6
                             :location (c2-3 / rooftops))
                  :op3 (c2-4 / need-01
                             :ARG0 c2-6
                             :ARG1 (c2-5 / try-02
                                         :ARG1 c2-6)))
      :ARG2 (c2-8 / sir))

# ::snt Its never been confirmed that hes a pedophile buddy
# ::tokens ["Its", "never", "been", "confirmed", "that", "he", "s", "a", "pedophile", "buddy"]
# ::lemmas ["its", "never", "be", "confirm", "that", "he", "s", "a", "pedophile", "buddy"]
(c3-4 / confirm-01
      :ARG1 (c3-0 / buddy
                  :domain (c3-2 / he)
                  :mod (c3-3 / pedophile))
      :time (c3-1 / ever)
      :polarity -)

# ::snt It means there has been no trail and they are ruining somebodys life and the shit might not even be true thats what that means
# ::tokens ["It", "means", "there", "has", "been", "no", "trail", "and", "they", "are", "ruining", "somebodys", "life", "and", "the", "shit", "might", "not", "even", "be", "true", "that", "s", "what", "that", "means"]
# ::lemmas ["it", "mean", "there", "have", "be", "no", "trail", "and", "they", "be", "ruin", "somebodys", "life", "and", "the", "shit", "might", "not", "even", "be", "true", "that", "s", "what", "that", "mean"]
(c4-1 / mean-01
      :ARG1 (c4-8 / it)
      :ARG2 (c4-4 / and
                  :op1 (c4-9 / trail
                             :polarity -)
                  :op2 (c4-3 / ruin-01
                             :ARG0 (c4-11 / they)
                             :ARG1 (c4-6 / life
                                         :poss (c4-2 / someone)))
                  :op3 (c4-7 / possible-01
                             :ARG1 (c4-10 / true-01
                                          :ARG1 (c4-0 / shit)
                                          :mod (c4-5 / even)
                                          :polarity -))))

# ::snt Unless there are more stories , he won't do any prison time . Can't go to jail for putting someone on a bed and getting on top of them
# ::tokens ["Unless", "there", "are", "more", "stories", ",", "he", "wo", "n't", "do", "any", "prison", "time", ".", "Ca", "n't", "go", "to", "jail", "for", "putting", "someone", "on", "a", "bed", "and", "getting", "on", "top", "of", "them"]
# ::lemmas ["unless", "there", "be", "more", "story", ",", "he", "will", "not", "do", "any", "prison", "time", ".", "can", "not", "go", "to", "jail", "for", "put", "someone", "on", "a", "bed", "and", "get", "on", "top", "of", "they"]
(c5-13 / multi-sentence
       :snt1 (c5-18 / do-02
                    :ARG0 (c5-5 / he)
                    :ARG1 (c5-10 / time
                                 :mod (c5-17 / prison)
                                 :mod (c5-9 / any))
                    :condition (c5-0 / story
                                     :quant (c5-6 / more))
                    :polarity -)
       :snt2 (c5-14 / possible-01
                    :ARG1 (c5-11 / go-02
                                 :ARG0 (c5-4 / you)
                                 :ARG4 (c5-7 / jail)
                                 :ARG1-of (c5-15 / cause-01
                                                 :ARG0 (c5-8 / and
                                                             :op1 (c5-2 / put-01
                                                                        :ARG0 c5-4
                                                                        :ARG1 (c5-3 / someone)
                                                                        :ARG2 (c5-12 / bed))
                                                             :op2 (c5-1 / get-05
                                                                        :ARG0 c5-4
                                                                        :ARG2 (c5-16 / top
                                                                                     :location c5-12)))))
                    :polarity -))

# ::snt Im shocked but it doesnt surprise me with the vast changes in Hollywood lately
# ::tokens ["I", "m", "shocked", "but", "it", "does", "nt", "surprise", "me", "with", "the", "vast", "changes", "in", "Hollywood", "lately"]
# ::lemmas ["i", "m", "shocked", "but", "it", "do", "not", "surprise", "i", "with", "the", "vast", "change", "in", "Hollywood", "lately"]
(c6-6 / contrast-01
      :ARG1 (c6-3 / shock-01
                  :ARG1 (c6-7 / i))
      :ARG2 (c6-0 / surprise-01
                  :ARG0 (c6-8 / change-01
                              :location (c6-1 / market-sector
                                              :name (c6-2 / name
                                                          :op1 "Hollywood"))
                              :mod (c6-4 / vast)
                              :time (c6-5 / lately))
                  :ARG1 c6-7
                  :polarity -))

# ::snt Still waiting for Cosby and Roman Polanski not to be recognized by the Academy.. The t.v. and film industry are filled with hypocrisy
# ::tokens ["Still", "waiting", "for", "Cosby", "and", "Roman", "Polanski", "not", "to", "be", "recognized", "by", "the", "Academy", "..", "The", "t.v", ".", "and", "film", "industry", "are", "filled", "with", "hypocrisy"]
# ::lemmas ["still", "wait", "for", "Cosby", "and", "Roman", "Polanski", "not", "to", "be", "recognize", "by", "the", "Academy", "..", "the", "t.v", ".", "and", "film", "industry", "be", "fill", "with", "hypocrisy"]
(c7-8 / multi-sentence
      :snt1 (c7-17 / wait-01
                   :ARG1 (c7-18 / i)
                   :ARG2 (c7-13 / recognize-01
                                :ARG0 (c7-1 / organization
                                            :name (c7-12 / name
                                                         :op1 "Academy"))
                                :ARG1 (c7-6 / and
                                            :op1 (c7-14 / person
                                                        :name (c7-10 / name
                                                                     :op1 "Bill"
                                                                     :op2 "Cosby"))
                                            :op2 (c7-9 / person
                                                       :name (c7-15 / name
                                                                    :op1 "Roman"
                                                                    :op2 "Polanski")))
                                :polarity -)
                   :mod (c7-0 / still))
      :snt2 (c7-11 / fill-01
                   :ARG1 (c7-4 / and
                               :op1 (c7-2 / industry
                                          :mod (c7-5 / television))
                               :op2 (c7-7 / industry
                                          :mod (c7-16 / film)))
                   :ARG2 (c7-3 / hypocrisy)))

# ::snt Ignorance is a damnation for sure. Seems that nowadays before starting any relationship everyone should sign an NDA.
# ::tokens ["Ignorance", "is", "a", "damnation", "for", "sure", ".", "Seems", "that", "nowadays", "before", "starting", "any", "relationship", "everyone", "should", "sign", "an", "NDA", "."]
# ::lemmas ["ignorance", "be", "a", "damnation", "for", "sure", ".", "seem", "that", "nowadays", "before", "start", "any", "relationship", "everyone", "should", "sign", "an", "NDA", "."]
(c8-2 / multi-sentence
      :snt1 (c8-12 / damn-01
                   :ARG0 (c8-10 / ignorance)
                   :ARG1-of (c8-4 / sure-02))
      :snt2 (c8-0 / seem-01
                  :ARG1 (c8-6 / recommend-01
                              :ARG1 (c8-14 / sign-01
                                           :ARG0 (c8-7 / everyone)
                                           :ARG1 (c8-9 / document
                                                       :name (c8-3 / name
                                                                   :op1 "NDA"))
                                           :time (c8-1 / before
                                                       :op1 (c8-5 / start-01
                                                                  :ARG0 c8-7
                                                                  :ARG1 (c8-13 / relation-03
                                                                               :mod (c8-11 / any)))))
                              :time (c8-8 / nowadays))))

# ::snt Yep. Thats the truth.
# ::tokens ["Yep", ".", "That", "s", "the", "truth", "."]
# ::lemmas ["yep", ".", "that", "s", "the", "truth", "."]
(c9-1 / true-01
      :ARG1 (c9-0 / that))

# ::snt Spot on
# ::tokens ["Spot", "on"]
# ::lemmas ["spot", "on"]
(c10-0 / spot-on-02)

# ::snt Das sind erwachsene Menschen, die knnen juristisch dagegen vorgehen, wenn sie sich sexuell belstigt fhlen, es sind keine Kinder.
# ::tokens ["Das", "sind", "erwachsene", "Menschen", ",", "die", "knnen", "juristisch", "dagegen", "vorgehen", ",", "wenn", "sie", "sich", "sexuell", "belstigt", "fhlen", ",", "es", "sind", "keine", "Kinder", "."]
# ::lemmas ["Das", "sind", "erwachsene", "Menschen", ",", "die", "knnen", "juristisch", "dagegen", "vorgehen", ",", "wenn", "sie", "sich", "sexuell", "belstigt", "fhlen", ",", "es", "sind", "keine", "Kinder", "."]
(c11-8 / and
       :op1 (c11-9 / be-located-at-91
                   :ARG1 (c11-20 / person
                                 :name (c11-17 / name
                                               :op1 "Menschen")
                                 :mod (c11-18 / erwachsene))
                   :ARG2 (c11-5 / here))
       :op2 (c11-0 / be-located-at-91
                   :ARG1 (c11-11 / person
                                 :ARG0-of (c11-21 / have-org-role-91
                                                  :ARG2 (c11-10 / member))
                                 :mod (c11-6 / jurist))
                   :ARG2 c11-5
                   :degree (c11-24 / die-01
                                   :ARG1 c11-11)
                   :mod (c11-13 / die-01
                                :ARG1 (c11-3 / person
                                             :ARG0-of c11-21
                                             :ARG2 c11-6)))
       :mod (c11-12 / die-01
                    :ARG1 c11-3)
       :mod (c11-19 / die-01
                    :ARG1 (c11-1 / person
                                 :ARG0-of c11-21
                                 :ARG3 (c11-15 / judge-01)))
       :mod (c11-14 / die-01
                    :ARG1 c11-3)
       :mod (c11-16 / die-01
                    :ARG1 c11-1
                    :mod c11-6)
       :mod (c11-22 / die-01
                    :ARG1 c11-1)
       :mod (c11-23 / die-01
                    :ARG1 c11-1
                    :mod (c11-2 / die-01
                                :ARG1 c11-1))
       :op3 (c11-4 / be-located-at-91
                   :ARG1 (c11-7 / person
                                :name c11-17
                                :op1 "Kinder"))
       :ARG2 c11-5)

# ::snt A career-killing mess for so many now. Such a waste.
# ::tokens ["A", "career", "-", "killing", "mess", "for", "so", "many", "now", ".", "Such", "a", "waste", "."]
# ::lemmas ["a", "career", "-", "kill", "mess", "for", "so", "many", "now", ".", "such", "a", "waste", "."]
(c12-1 / multi-sentence
       :snt1 (c12-4 / mess
                    :ARG0-of (c12-6 / kill-01
                                    :ARG1 (c12-7 / career))
                    :beneficiary (c12-5 / person
                                        :quant (c12-9 / many
                                                      :mod (c12-3 / so)))
                    :time (c12-2 / now))
       :snt2 (c12-8 / waste-01
                    :degree (c12-0 / such)))

# ::snt when he was a child bro...
# ::tokens ["when", "he", "was", "a", "child", "bro", "..."]
# ::lemmas ["when", "he", "be", "a", "child", "bro", "..."]
(c13-2 / person
       :ARG0-of (c13-1 / have-rel-role-91
                       :ARG1 (c13-4 / he)
                       :ARG2 (c13-0 / bro))
       :time (c13-3 / child
                    :domain c13-4))

# ::snt Come on Dave! A yr old chorus boy or a minor leed or ....WHO CARES a yr old boy? Not cool dude?!?!?
# ::tokens ["Come", "on", "Dave", "!", "A", "yr", "old", "chorus", "boy", "or", "a", "minor", "leed", "or", "....", "WHO", "CARES", "a", "yr", "old", "boy", "?", "Not", "cool", "dude", "?", "!", "?", "!", "?"]
# ::lemmas ["come", "on", "Dave", "!", "a", "yr", "old", "chorus", "boy", "or", "a", "minor", "leed", "or", "....", "who", "CARES", "a", "yr", "old", "boy", "?", "not", "cool", "dude", "?", "!", "?", "!", "?"]
(c14-13 / multi-sentence
        :snt1 (c14-14 / come-on-25
                      :ARG1 (c14-18 / person
                                    :name (c14-17 / name
                                                  :op1 "Dave"))
                      :mode imperative)
        :snt2 (c14-9 / amr-choice
                     :op1 (c14-12 / boy
                                  :mod (c14-11 / chorus)
                                  :age (c14-8 / temporal-quantity
                                              :unit (c14-5 / year)
                                              :quant 1))
                     :op2 (c14-0 / boy
                                 :mod (c14-1 / leed
                                             :ARG1-of (c14-6 / minor-01))
                                 :age (c14-15 / temporal-quantity
                                              :unit (c14-10 / year)
                                              :quant 1))
                     :op3 c14-18
                     :ARG0-of (c14-2 / care-01
                                     :ARG1 (c14-3 / boy
                                                  :age (c14-19 / temporal-quantity
                                                               :unit (c14-4 / year)
                                                               :quant 1))))
        :snt3 (c14-16 / cool-04
                      :ARG1 (c14-20 / dude)
                      :polarity (c14-7 / amr-unknown)
                      :polarity -
                      :mode expressive))

# ::snt C
# ::tokens ["C"]
# ::lemmas ["c"]
(c15-1 / person
       :name (c15-0 / name
                    :op1 "C"))

# ::snt I get your anger, truly I do, but its a wee bit misplaced. You dont know me, nor what path my life has taken. Plus, Im usually w/my kid.
# ::tokens ["I", "get", "your", "anger", ",", "truly", "I", "do", ",", "but", "its", "a", "wee", "bit", "misplaced", ".", "You", "do", "nt", "know", "me", ",", "nor", "what", "path", "my", "life", "has", "taken", ".", "Plus", ",", "I", "m", "usually", "w", "/", "my", "kid", "."]
# ::lemmas ["i", "get", "your", "anger", ",", "truly", "i", "do", ",", "but", "its", "a", "wee", "bit", "misplaced", ".", "you", "do", "not", "know", "i", ",", "nor", "what", "path", "my", "life", "have", "take", ".", "plus", ",", "i", "m", "usually", "w", "/", "my", "kid", "."]
(c16-14 / multi-sentence
        :snt1 (c16-16 / contrast-01
                      :ARG1 (c16-10 / get-01
                                    :ARG0 (c16-22 / i)
                                    :ARG1 (c16-9 / anger-01
                                                 :ARG1 (c16-1 / you))
                                    :ARG1-of (c16-8 / true-01))
                      :ARG2 (c16-3 / misplace-01
                                   :ARG1 c16-9
                                   :degree (c16-13 / bit
                                                   :mod (c16-21 / wee))))
        :snt2 (c16-4 / know-01
                     :ARG0 (c16-11 / you)
                     :ARG1 (c16-7 / and
                                  :op1 (c16-2 / i)
                                  :op2 (c16-20 / path
                                               :ARG1-of (c16-17 / take-01
                                                                :ARG0 (c16-0 / live-01
                                                                             :ARG0 c16-2))))
                     :polarity -)
        :snt3 c16-7
        :op2 (c16-6 / accompany-01
                    :ARG0 (c16-12 / i)
                    :ARG1 (c16-15 / person
                                  :ARG0-of (c16-5 / have-rel-role-91
                                                  :ARG1 c16-12
                                                  :ARG2 (c16-18 / kid)))
                    :mod (c16-19 / usual)))

# ::snt SLIP AND FALL SCHOOL JEE DAVEO WHAT THE FUCK O
# ::tokens ["SLIP", "AND", "FALL", "SCHOOL", "JEE", "DAVEO", "WHAT", "THE", "FUCK", "O"]
# ::lemmas ["SLIP", "and", "FALL", "SCHOOL", "JEE", "DAVEO", "what", "the", "fuck", "o"]
(c17-3 / say-01
       :ARG0 (c17-5 / i)
       :ARG1 (c17-6 / and
                    :op1 (c17-0 / slap-01
                                :ARG0 (c17-4 / person
                                             :name (c17-2 / name
                                                          :op1 "Joe"
                                                          :op2 "Davido"))
                                :mode imperative)
                    :op2 (c17-1 / fuck-01
                                :degree (c17-7 / amr-unknown)
                                :mode expressive))
       :ARG2 c17-4)

# ::snt But hell more than likely be given a standing ovation by the Hollyweird liberals, ie Roman Polanski
# ::tokens ["But", "hell", "more", "than", "likely", "be", "given", "a", "standing", "ovation", "by", "the", "Hollyweird", "liberals", ",", "ie", "Roman", "Polanski"]
# ::lemmas ["but", "hell", "more", "than", "likely", "be", "give", "a", "stand", "ovation", "by", "the", "Hollyweird", "liberal", ",", "ie", "Roman", "Polanski"]
(c18-9 / contrast-01
       :ARG2 (c18-6 / likely-01
                    :ARG1 (c18-0 / ovation-01
                                 :ARG0 (c18-7 / person
                                              :ARG1-of (c18-11 / liberal-02)
                                              :mod (c18-10 / weird
                                                           :mode expressive)
                                              :ARG1-of (c18-1 / mean-01
                                                              :ARG2 (c18-2 / person
                                                                           :name (c18-3 / name
                                                                                        :op1 "Roman"
                                                                                        :op2 "Polanski")))
                                              :ARG1-of c18-0)
                                 :manner (c18-4 / stand-01))
                    :mod (c18-5 / more-than
                                :op1 (c18-8 / hell))))

# ::snt Ok. You do you, sir. For me, I aint judging a damn thing. Way above my pay grade.
# ::tokens ["Ok", ".", "You", "do", "you", ",", "sir", ".", "For", "me", ",", "I", "ai", "nt", "judging", "a", "damn", "thing", ".", "Way", "above", "my", "pay", "grade", "."]
# ::lemmas ["ok", ".", "you", "do", "you", ",", "sir", ".", "for", "i", ",", "i", "be", "not", "judge", "a", "damn", "thing", ".", "way", "above", "my", "pay", "grade", "."]
(c19-2 / multi-sentence
       :snt1 (c19-3 / say-01
                    :ARG0 (c19-10 / i)
                    :ARG1 (c19-13 / do-02
                                  :ARG0 (c19-0 / sir)
                                  :ARG1 (c19-1 / you
                                               :ARG2-of c19-3)))
       :snt2 (c19-9 / judge-01
                    :ARG0 (c19-4 / i)
                    :ARG1 (c19-11 / thing
                                  :mod (c19-8 / damn))
                    :beneficiary c19-4
                    :polarity -)
       :snt3 (c19-5 / above
                    :op1 (c19-12 / grade
                                 :mod (c19-6 / pay-01)
                                 :poss c19-4)
                    :degree (c19-7 / way)))

# ::snt If he's guilty, this would be appropriate.
# ::tokens ["If", "he", "'s", "guilty", ",", "this", "would", "be", "appropriate", "."]
# ::lemmas ["if", "he", "be", "guilty", ",", "this", "would", "be", "appropriate", "."]
(c20-3 / appropriate-02
       :ARG1 (c20-2 / this)
       :condition (c20-0 / guilty-01
                         :ARG1 (c20-1 / he)))

# ::snt Not because of Kevin Spacey. A Netflix spokeswoman said that the decision to make the sixth season the shows last had been made months ago.
# ::tokens ["Not", "because", "of", "Kevin", "Spacey", ".", "A", "Netflix", "spokeswoman", "said", "that", "the", "decision", "to", "make", "the", "sixth", "season", "the", "shows", "last", "had", "been", "made", "months", "ago", "."]
# ::lemmas ["not", "because", "of", "Kevin", "Spacey", ".", "a", "Netflix", "spokeswoman", "say", "that", "the", "decision", "to", "make", "the", "sixth", "season", "the", "show", "last", "have", "be", "make", "months", "ago", "."]
(c21-10 / multi-sentence
        :snt1 (c21-13 / cause-01
                      :ARG0 (c21-16 / person
                                    :name (c21-15 / name
                                                  :op1 "Kevin"
                                                  :op2 "Spacey"))
                      :polarity -)
        :snt2 (c21-0 / say-01
                     :ARG0 (c21-11 / person
                                   :ARG0-of (c21-5 / have-org-role-91
                                                   :ARG1 (c21-8 / company
                                                                :name (c21-12 / name
                                                                              :op1 "Netflix"))
                                                   :ARG2 (c21-3 / spokeswoman)))
                     :ARG1 (c21-18 / decide-01
                                   :ARG0 c21-8
                                   :ARG1 (c21-2 / season
                                                :ord (c21-4 / ordinal-entity
                                                            :value 6)
                                                :mod (c21-1 / last))
                                   :time (c21-9 / before
                                                :op1 (c21-17 / now)
                                                :quant (c21-6 / multiple
                                                              :op1 (c21-7 / temporal-quantity
                                                                          :unit (c21-14 / month)
                                                                          :quant 1))))))

# ::snt No bot hate comments, thank you.
# ::tokens ["No", "bot", "hate", "comments", ",", "thank", "you", "."]
# ::lemmas ["no", "bot", "hate", "comment", ",", "thank", "you", "."]
(c22-2 / and
       :op1 (c22-4 / comment-01
                   :mod (c22-3 / hate-01)
                   :mod (c22-0 / bot)
                   :polarity -)
       :op2 (c22-6 / thank-01
                   :ARG0 (c22-5 / i)
                   :ARG1 (c22-1 / you)))

# ::snt Has nothing to do with politics and everything to do with character.
# ::tokens ["Has", "nothing", "to", "do", "with", "politics", "and", "everything", "to", "do", "with", "character", "."]
# ::lemmas ["have", "nothing", "to", "do", "with", "politic", "and", "everything", "to", "do", "with", "character", "."]
(c23-1 / have-to-do-with-04
       :ARG1 (c23-5 / and
                    :op1 (c23-2 / politics)
                    :op2 (c23-4 / have-to-do-with-04
                                :ARG1 (c23-3 / character)
                                :ARG2 (c23-0 / nothing))))

# ::snt What does that have to do with his great work? No one has been convicted yet. Did I blink and miss the trial?
# ::tokens ["What", "does", "that", "have", "to", "do", "with", "his", "great", "work", "?", "No", "one", "has", "been", "convicted", "yet", ".", "Did", "I", "blink", "and", "miss", "the", "trial", "?"]
# ::lemmas ["what", "do", "that", "have", "to", "do", "with", "his", "great", "work", "?", "no", "one", "have", "be", "convict", "yet", ".", "do", "i", "blink", "and", "miss", "the", "trial", "?"]
(c24-2 / multi-sentence
       :snt1 (c24-6 / have-to-do-with-04
                    :polarity (c24-5 / amr-unknown)
                    :ARG0 (c24-13 / that)
                    :ARG1 (c24-8 / work-01
                                 :ARG0 (c24-11 / he)
                                 :mod (c24-14 / great))
                    :ARG2 (c24-12 / amr-unknown))
       :snt2 (c24-9 / convict-01
                    :ARG1 (c24-3 / no-one)
                    :time (c24-1 / yet))
       :snt3 (c24-10 / and
                     :op1 (c24-0 / blink-01
                                 :ARG0 (c24-15 / i))
                     :op2 (c24-7 / miss-02
                                 :ARG0 c24-15
                                 :ARG1 (c24-16 / try-02))
                     :polarity (c24-4 / amr-unknown)))

# ::snt You know It
# ::tokens ["You", "know", "It"]
# ::lemmas ["you", "know", "it"]
(c25-1 / know-01
       :ARG0 (c25-0 / you)
       :ARG1 (c25-2 / it))

# ::snt Can they kill off his character so the others can keep their jobs?
# ::tokens ["Can", "they", "kill", "off", "his", "character", "so", "the", "others", "can", "keep", "their", "jobs", "?"]
# ::lemmas ["can", "they", "kill", "off", "his", "character", "so", "the", "other", "can", "keep", "their", "job", "?"]
(c26-5 / possible-01
       :polarity (c26-2 / amr-unknown)
       :ARG1 (c26-4 / kill-off-02
                    :ARG0 (c26-8 / they)
                    :ARG1 (c26-6 / character
                                 :poss (c26-3 / he))
                    :purpose (c26-1 / possible-01
                                    :ARG1 (c26-9 / keep-01
                                                 :ARG0 (c26-0 / other)
                                                 :ARG1 (c26-7 / job
                                                              :poss c26-0)))))

# ::snt Agreed
# ::tokens ["Agreed"]
# ::lemmas ["agree"]
(c27-0 / agree-01)

# ::snt He needs to receive prison time!
# ::tokens ["He", "needs", "to", "receive", "prison", "time", "!"]
# ::lemmas ["he", "need", "to", "receive", "prison", "time", "!"]
(c28-0 / obligate-01
       :ARG2 (c28-1 / receive-01
                    :ARG0 (c28-2 / he)
                    :ARG1 (c28-4 / time
                                 :location (c28-3 / prison))))

# ::snt Has anyone considered that this didnt happen ?
# ::tokens ["Has", "anyone", "considered", "that", "this", "did", "nt", "happen", "?"]
# ::lemmas ["have", "anyone", "consider", "that", "this", "do", "not", "happen", "?"]
(c29-2 / consider-02
       :polarity (c29-0 / amr-unknown)
       :ARG0 (c29-3 / anyone)
       :ARG1 (c29-1 / event
                    :mod (c29-4 / this)
                    :polarity -))

# ::snt I dont feel like a I can judge anothers mistakes. Whatever it is, or was, it isnt for me to judge. I have empathy for both sides.
# ::tokens ["I", "do", "nt", "feel", "like", "a", "I", "can", "judge", "anothers", "mistakes", ".", "Whatever", "it", "is", ",", "or", "was", ",", "it", "is", "nt", "for", "me", "to", "judge", ".", "I", "have", "empathy", "for", "both", "sides", "."]
# ::lemmas ["i", "do", "not", "feel", "like", "a", "i", "can", "judge", "another", "mistake", ".", "whatever", "it", "be", ",", "or", "be", ",", "it", "be", "nt", "for", "i", "to", "judge", ".", "i", "have", "empathy", "for", "both", "side", "."]
(c30-4 / multi-sentence
       :snt1 (c30-0 / feel-01
                    :ARG0 (c30-14 / i)
                    :ARG1 (c30-9 / possible-01
                                 :ARG1 (c30-13 / judge-01
                                               :ARG0 c30-14
                                               :ARG1 (c30-8 / mistake-02
                                                            :ARG0 (c30-15 / another))))
                    :polarity -)
       :snt2 (c30-10 / have-concession-91
                     :ARG1 (c30-17 / judge-01
                                   :ARG0 (c30-6 / i)
                                   :polarity -)
                     :ARG2 (c30-1 / or
                                  :op1 (c30-12 / whatever
                                               :domain (c30-16 / it))
                                  :op2 (c30-11 / whatever
                                               :domain c30-16)))
       :snt3 (c30-7 / empathize-01
                    :ARG0 (c30-2 / i)
                    :ARG1 (c30-5 / side
                                 :mod (c30-3 / both))))

# ::snt whats an EM.MM...Y? Oh enema! Got it.
# ::tokens ["what", "s", "an", "EM.MM", "...", "Y", "?", "Oh", "enema", "!", "Got", "it", "."]
# ::lemmas ["what", "s", "an", "EM.MM", "...", "Y", "?", "oh", "enema", "!", "get", "it", "."]
(c31-2 / multi-sentence
       :snt1 (c31-5 / that
                    :mod (c31-3 / EM))
       :snt2 (c31-1 / yep
                    :mode expressive)
       :snt3 (c31-7 / enema
                    :mod (c31-0 / oh)
                    :mode expressive)
       :snt4 (c31-6 / get-01
                    :ARG1 (c31-4 / it)))

# ::snt More to follow...this didnt start and end with one incident.
# ::tokens ["More", "to", "follow", "...", "this", "did", "nt", "start", "and", "end", "with", "one", "incident", "."]
# ::lemmas ["more", "to", "follow", "...", "this", "do", "not", "start", "and", "end", "with", "one", "incident", "."]
(c32-0 / follow-01
       :ARG1 (c32-5 / thing
                    :quant (c32-1 / more))
       :ARG0-of (c32-4 / cause-01
                       :ARG1 (c32-7 / and
                                    :op1 (c32-2 / start-01
                                                :ARG1 (c32-8 / this)
                                                :ARG2 (c32-6 / incident
                                                             :quant 1)
                                                :polarity -)
                                    :op2 (c32-3 / end-01
                                                :ARG1 c32-8
                                                :ARG2 c32-6
                                                :polarity -))))

# ::snt Im totally shocked over these allegations but I guess you never know.
# ::tokens ["I", "m", "totally", "shocked", "over", "these", "allegations", "but", "I", "guess", "you", "never", "know", "."]
# ::lemmas ["i", "m", "totally", "shocked", "over", "these", "allegation", "but", "i", "guess", "you", "never", "know", "."]
(c33-5 / contrast-01
       :ARG1 (c33-1 / shock-01
                    :ARG0 (c33-2 / allege-01
                                 :mod (c33-7 / this))
                    :ARG1 (c33-6 / i)
                    :degree (c33-9 / total))
       :ARG2 (c33-8 / guess-01
                    :ARG0 c33-6
                    :ARG1 (c33-4 / know-01
                                 :ARG0 (c33-0 / you)
                                 :time (c33-3 / ever)
                                 :polarity -)))

# ::snt Am very disappointed in Kevin Spacey. He must face the consequences for his behavior.
# ::tokens ["Am", "very", "disappointed", "in", "Kevin", "Spacey", ".", "He", "must", "face", "the", "consequences", "for", "his", "behavior", "."]
# ::lemmas ["be", "very", "disappointed", "in", "Kevin", "Spacey", ".", "he", "must", "face", "the", "consequence", "for", "his", "behavior", "."]
(c34-4 / multi-sentence
       :snt1 (c34-10 / disappoint-01
                     :ARG0 (c34-7 / person
                                  :name (c34-3 / name
                                               :op1 "Kevin"
                                               :op2 "Spacey"))
                     :ARG1 (c34-9 / i)
                     :degree (c34-5 / very))
       :snt2 (c34-0 / obligate-01
                    :ARG1 (c34-6 / he)
                    :ARG2 (c34-1 / face-01
                                 :ARG0 c34-6
                                 :ARG1 (c34-8 / consequence-03
                                              :ARG1 c34-6
                                              :ARG3 (c34-2 / behave-01
                                                           :ARG0 c34-6)))))

# ::snt international emmy? how about monday emmy? and ice cream smoothie emmy? Gimmie a break. He career is over for the foreseeable future
# ::tokens ["international", "emmy", "?", "how", "about", "monday", "emmy", "?", "and", "ice", "cream", "smoothie", "emmy", "?", "Gimmie", "a", "break", ".", "He", "career", "is", "over", "for", "the", "foreseeable", "future"]
# ::lemmas ["international", "emmy", "?", "how", "about", "monday", "emmy", "?", "and", "ice", "cream", "smoothie", "emmy", "?", "Gimmie", "a", "break", ".", "he", "career", "be", "over", "for", "the", "foreseeable", "future"]
(c35-9 / multi-sentence
       :snt1 (c35-15 / emmy
                     :mod (c35-18 / international)
                     :polarity (c35-6 / amr-unknown))
       :snt2 (c35-5 / and
                    :op1 (c35-7 / emmy)
                    :op2 (c35-0 / smoothie
                                :mod (c35-2 / ice-cream))
                    :polarity (c35-4 / amr-unknown)
                    :mod (c35-11 / emmy))
       :snt3 (c35-8 / break-19
                    :ARG1 (c35-16 / person
                                  :name (c35-14 / name
                                                :op1 "Gimmie"))
                    :mode expressive)
       :snt4 (c35-1 / over-01
                    :ARG1 (c35-12 / career
                                  :poss (c35-3 / he))
                    :time (c35-13 / future
                                  :ARG1-of (c35-17 / foresee-01
                                                   :ARG1-of (c35-10 / possible-01)))))

# ::snt Good decision. I'm so sad for both parties, but KS needs to own up to his actions. HE was the adult at the time.
# ::tokens ["Good", "decision", ".", "I", "'m", "so", "sad", "for", "both", "parties", ",", "but", "KS", "needs", "to", "own", "up", "to", "his", "actions", ".", "HE", "was", "the", "adult", "at", "the", "time", "."]
# ::lemmas ["good", "decision", ".", "i", "be", "so", "sad", "for", "both", "party", ",", "but", "KS", "need", "to", "own", "up", "to", "his", "action", ".", "he", "be", "the", "adult", "at", "the", "time", "."]
(c36-3 / multi-sentence
       :snt1 (c36-15 / decide-01
                     :ARG1-of (c36-14 / good-02))
       :snt2 (c36-10 / contrast-01
                     :ARG1 (c36-5 / sad-02
                                  :ARG0 (c36-8 / party
                                               :mod (c36-2 / both))
                                  :ARG1 (c36-12 / i)
                                  :degree (c36-0 / so))
                     :ARG2 (c36-4 / need-01
                                  :ARG0 (c36-6 / person
                                               :name (c36-7 / name
                                                            :op1 "KS"))
                                  :ARG1 (c36-1 / own-up-02
                                               :ARG0 c36-6
                                               :ARG1 (c36-13 / act-02
                                                             :ARG0 c36-6))))
       :snt3 (c36-16 / adult
                     :domain (c36-9 / he)
                     :time (c36-11 / time)))

# ::snt This is sad. I really liked him as an actor and had so much respect for him. Shame you just cant trust anyone.
# ::tokens ["This", "is", "sad", ".", "I", "really", "liked", "him", "as", "an", "actor", "and", "had", "so", "much", "respect", "for", "him", ".", "Shame", "you", "just", "ca", "nt", "trust", "anyone", "."]
# ::lemmas ["this", "be", "sad", ".", "i", "really", "like", "he", "as", "an", "actor", "and", "have", "so", "much", "respect", "for", "he", ".", "shame", "you", "just", "can", "not", "trust", "anyone", "."]
(c37-13 / multi-sentence
        :snt1 (c37-0 / sad-02
                     :ARG0 (c37-11 / this))
        :snt2 (c37-12 / and
                      :op1 (c37-1 / like-01
                                  :ARG0 (c37-18 / i)
                                  :ARG1 (c37-6 / he
                                               :ARG0-of (c37-10 / act-01))
                                  :degree (c37-15 / really))
                      :op2 (c37-2 / respect-01
                                  :ARG0 c37-18
                                  :ARG1 c37-6
                                  :ARG1-of (c37-17 / have-quant-91
                                                   :ARG2 (c37-7 / much)
                                                   :ARG3 (c37-4 / so))))
        :snt3 (c37-3 / shame-02
                     :ARG1 (c37-5 / you)
                     :ARG2 (c37-16 / possible-01
                                   :ARG1 (c37-14 / trust-02
                                                 :ARG0 c37-5
                                                 :ARG1 (c37-8 / anyone)
                                                 :mod (c37-9 / just))
                                   :polarity -)))

# ::snt world
# ::tokens ["world"]
# ::lemmas ["world"]
(c38-0 / world)

# ::snt So sad. I like him. Good actor.
# ::tokens ["So", "sad", ".", "I", "like", "him", ".", "Good", "actor", "."]
# ::lemmas ["so", "sad", ".", "i", "like", "he", ".", "good", "actor", "."]
(c39-1 / multi-sentence
       :snt1 (c39-2 / sad-02
                    :degree (c39-0 / so))
       :snt2 (c39-4 / like-01
                    :ARG0 (c39-6 / i)
                    :ARG1 (c39-3 / he))
       :snt3 (c39-5 / person
                    :ARG0-of (c39-7 / act-01)
                    :ARG1-of (c39-8 / good-03)))

# ::snt As we used to say to each other in federal prison: "If you're not willing to do the time, then don't commit the crime."
# ::tokens ["As", "we", "used", "to", "say", "to", "each", "other", "in", "federal", "prison", ":", "\"", "If", "you", "'re", "not", "willing", "to", "do", "the", "time", ",", "then", "do", "n't", "commit", "the", "crime", ".", "\""]
# ::lemmas ["as", "we", "use", "to", "say", "to", "each", "other", "in", "federal", "prison", ":", "\"", "if", "you", "be", "not", "willing", "to", "do", "the", "time", ",", "then", "do", "not", "commit", "the", "crime", ".", "\""]
(c40-2 / say-01
       :ARG0 (c40-5 / we)
       :ARG1 (c40-6 / commit-02
                    :ARG0 (c40-1 / you)
                    :ARG1 (c40-10 / crime-02)
                    :condition (c40-4 / will-02
                                      :ARG0 c40-1
                                      :ARG1 (c40-8 / do-02
                                                   :ARG0 c40-1
                                                   :ARG1 (c40-7 / time))
                                      :polarity -)
                    :polarity -
                    :mode imperative)
       :ARG2 c40-1
       :time (c40-9 / use-03)
       :location (c40-3 / prison
                        :mod (c40-0 / federal)))

# ::snt Ram it up his ass...
# ::tokens ["Ram", "it", "up", "his", "ass", "..."]
# ::lemmas ["ram", "it", "up", "his", "ass", "..."]
(c41-1 / ram-01
       :ARG0 (c41-0 / you)
       :ARG1 (c41-3 / it)
       :ARG2 (c41-5 / up-03
                    :ARG1 c41-3
                    :ARG2 (c41-4 / ass
                                 :part-of (c41-2 / he)))
       :mode imperative)

# ::snt What actually happened? Sounds more serious.
# ::tokens ["What", "actually", "happened", "?", "Sounds", "more", "serious", "."]
# ::lemmas ["what", "actually", "happen", "?", "sound", "more", "serious", "."]
(c42-1 / multi-sentence
       :snt1 (c42-3 / event
                    :ARG1-of (c42-6 / actual-02))
       :snt2 (c42-2 / sound-01
                    :ARG1 (c42-0 / serious-01
                                 :ARG2-of (c42-4 / have-degree-91
                                                 :ARG1 c42-2
                                                 :ARG3 (c42-5 / more)))))

# ::snt This breaks my heart I really liked him
# ::tokens ["This", "breaks", "my", "heart", "I", "really", "liked", "him"]
# ::lemmas ["this", "break", "my", "heart", "i", "really", "like", "he"]
(c43-1 / multi-sentence
       :snt1 (c43-0 / break-heart-31
                    :ARG0 (c43-8 / this)
                    :ARG1 (c43-4 / heart
                                 :part-of (c43-7 / i)))
       :snt2 (c43-5 / like-01
                    :ARG0 (c43-2 / i)
                    :ARG1 (c43-6 / he)
                    :degree (c43-3 / really)))

# ::snt I hope he receives a set of handcuffs and a trial
# ::tokens ["I", "hope", "he", "receives", "a", "set", "of", "handcuffs", "and", "a", "trial"]
# ::lemmas ["i", "hope", "he", "receive", "a", "set", "of", "handcuff", "and", "a", "trial"]
(c44-3 / hope-01
       :ARG0 (c44-6 / i)
       :ARG1 (c44-1 / receive-01
                    :ARG0 (c44-4 / he)
                    :ARG1 (c44-7 / and
                                 :op1 (c44-0 / set
                                             :consist-of (c44-2 / handcuff-01))
                                 :op2 (c44-5 / try-02
                                             :ARG1 c44-4))))

# ::snt who gives a shit about awards..i wanna see the news talk about locking the sicko up for life..
# ::tokens ["who", "gives", "a", "shit", "about", "awards", "..", "i", "wanna", "see", "the", "news", "talk", "about", "locking", "the", "sicko", "up", "for", "life", ".."]
# ::lemmas ["who", "give", "a", "shit", "about", "award", "..", "i", "wanna", "see", "the", "news", "talk", "about", "lock", "the", "sicko", "up", "for", "life", ".."]
(c45-1 / multi-sentence
       :snt1 (c45-10 / give-16
                     :ARG0 (c45-9 / amr-unknown)
                     :ARG1 (c45-3 / shit)
                     :ARG2 (c45-8 / award-01))
       :snt2 (c45-6 / want-01
                    :ARG0 (c45-11 / i)
                    :ARG1 (c45-0 / see-01
                                 :ARG0 c45-11
                                 :ARG1 (c45-7 / talk-01
                                              :ARG0 (c45-2 / news)
                                              :ARG1 (c45-4 / lock-up-03
                                                           :ARG1 (c45-5 / person
                                                                        :ARG1-of (c45-13 / sick-05))
                                                           :duration (c45-12 / life))))))

# ::snt Dsve, Im curious to hear your opinion on this topic.
# ::tokens ["Dsve", ",", "I", "m", "curious", "to", "hear", "your", "opinion", "on", "this", "topic", "."]
# ::lemmas ["dsve", ",", "i", "m", "curious", "to", "hear", "your", "opinion", "on", "this", "topic", "."]
(c46-3 / say-01
       :ARG1 (c46-6 / curious-01
                    :ARG0 (c46-4 / hear-01
                                 :ARG0 (c46-7 / i)
                                 :ARG1 (c46-0 / opine-01
                                              :ARG0 (c46-1 / you)
                                              :topic (c46-8 / topic
                                                            :mod (c46-9 / this))))
                    :ARG1 c46-7)
       :ARG2 (c46-5 / person
                    :name (c46-2 / name
                                 :op1 "Dsve")))

# ::snt is the end of the word
# ::tokens ["is", "the", "end", "of", "the", "word"]
# ::lemmas ["be", "the", "end", "of", "the", "word"]
(c47-1 / end-01
       :ARG1 (c47-0 / word))

# ::snt Sad to learn this cuz I really liked his work ...
# ::tokens ["Sad", "to", "learn", "this", "cuz", "I", "really", "liked", "his", "work", "..."]
# ::lemmas ["sad", "to", "learn", "this", "cuz", "i", "really", "like", "his", "work", "..."]
(c48-4 / cause-01
       :ARG0 (c48-3 / like-01
                    :ARG0 (c48-6 / i)
                    :ARG1 (c48-5 / work-01
                                 :ARG0 (c48-2 / he))
                    :degree (c48-1 / really))
       :ARG1 (c48-0 / sad-02
                    :ARG0 (c48-8 / learn-01
                                 :ARG0 c48-6
                                 :ARG1 (c48-7 / this))
                    :ARG1 c48-6))

# ::snt that's fair but you would remember if something that your accused of happened you don't say sorry to something you didn't do.
# ::tokens ["that", "'s", "fair", "but", "you", "would", "remember", "if", "something", "that", "your", "accused", "of", "happened", "you", "do", "n't", "say", "sorry", "to", "something", "you", "did", "n't", "do", "."]
# ::lemmas ["that", "be", "fair", "but", "you", "would", "remember", "if", "something", "that", "your", "accuse", "of", "happen", "you", "do", "not", "say", "sorry", "to", "something", "you", "do", "not", "do", "."]
(c49-7 / contrast-01
       :ARG1 (c49-0 / fair-01
                    :ARG1 (c49-8 / that))
       :ARG2 (c49-5 / remember-01
                    :ARG0 (c49-2 / you)
                    :ARG1 (c49-3 / say-01
                                 :ARG0 c49-2
                                 :ARG1 (c49-1 / sorry-01
                                              :ARG1 c49-2
                                              :ARG2 (c49-10 / something
                                                            :ARG1-of (c49-9 / do-02
                                                                            :ARG0 c49-2
                                                                            :polarity -)))
                                 :condition (c49-6 / accuse-01
                                                   :ARG1 c49-2
                                                   :ARG2 (c49-4 / something))
                                 :polarity -)))

# ::snt God! Another one! Abuse is so rife.
# ::tokens ["God", "!", "Another", "one", "!", "Abuse", "is", "so", "rife", "."]
# ::lemmas ["God", "!", "another", "one", "!", "abuse", "be", "so", "rife", "."]
(c50-1 / multi-sentence
       :snt1 (c50-4 / person
                    :name (c50-0 / name
                                 :op1 "God")
                    :mode expressive)
       :snt2 (c50-3 / rife
                    :domain (c50-5 / abuse-01)
                    :degree (c50-2 / so)))
