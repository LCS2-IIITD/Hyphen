# ::snt Do you still stand by Shia after the video?
# ::tokens ["Do", "you", "still", "stand", "by", "Shia", "after", "the", "video", "?"]
# ::lemmas ["do", "you", "still", "stand", "by", "Shia", "after", "the", "video", "?"]
(c1-3 / stand-11
      :ARG0 (c1-1 / you)
      :ARG2 (c1-5 / person
                  :name (c1-2 / name
                              :op1 "Shia"))
      :polarity (c1-7 / amr-unknown)
      :mod (c1-0 / still)
      :time (c1-6 / after
                  :op1 (c1-4 / video)))

# ::snt Liberalism led to American conservatism.
# ::tokens ["Liberalism", "led", "to", "American", "conservatism", "."]
# ::lemmas ["liberalism", "lead", "to", "American", "conservatism", "."]
(c2-1 / lead-03
      :ARG0 (c2-3 / liberal-02)
      :ARG4 (c2-2 / conservatism
                  :mod (c2-4 / country
                             :name (c2-0 / name
                                         :op1 "America"))))

# ::snt Since when?
# ::tokens ["Since", "when", "?"]
# ::lemmas ["since", "when", "?"]
(c3-1 / since
      :op1 (c3-0 / amr-unknown))

# ::snt What hate? This is about Shia abusing people in the street for not giving him a cigarette.
# ::tokens ["What", "hate", "?", "This", "is", "about", "Shia", "abusing", "people", "in", "the", "street", "for", "not", "giving", "him", "a", "cigarette", "."]
# ::lemmas ["what", "hate", "?", "this", "be", "about", "Shia", "abuse", "people", "in", "the", "street", "for", "not", "give", "he", "a", "cigarette", "."]
(c4-0 / multi-sentence
      :snt1 (c4-5 / hate-01
                  :mod (c4-4 / amr-unknown))
      :snt2 (c4-7 / concern-02
                  :ARG0 (c4-11 / this)
                  :ARG1 (c4-10 / abuse-01
                               :ARG0 (c4-6 / person
                                           :name (c4-1 / name
                                                       :op1 "Shia"))
                               :ARG1 (c4-2 / person
                                           :location (c4-3 / street))
                               :ARG1-of (c4-13 / cause-01
                                               :ARG0 (c4-12 / give-01
                                                            :ARG0 c4-6
                                                            :ARG1 (c4-8 / cigarette)
                                                            :ARG2 (c4-9 / he)
                                                            :polarity -)))))

# ::snt Such a talented actor that clearly needs mental help instead of public shamming
# ::tokens ["Such", "a", "talented", "actor", "that", "clearly", "needs", "mental", "help", "instead", "of", "public", "shamming"]
# ::lemmas ["such", "a", "talented", "actor", "that", "clearly", "need", "mental", "help", "instead", "of", "public", "shamming"]
(c5-7 / person
      :ARG0-of (c5-5 / act-01)
      :mod (c5-10 / talent)
      :mod (c5-3 / such)
      :ARG0-of (c5-1 / need-01
                     :ARG1 (c5-6 / help-01
                                 :ARG1 c5-7
                                 :mod (c5-2 / mental)
                                 :ARG1-of (c5-8 / clear-06)
                                 :ARG1-of (c5-9 / instead-of-91
                                                :ARG2 (c5-0 / shamming
                                                            :ARG1-of (c5-4 / public-02))))))

# ::snt Drank to much Jesus Juice.
# ::tokens ["Drank", "to", "much", "Jesus", "Juice", "."]
# ::lemmas ["drank", "to", "much", "Jesus", "Juice", "."]
(c6-5 / drink-01
      :ARG0 (c6-0 / you)
      :ARG1 (c6-4 / juice
                  :mod (c6-3 / person
                             :name (c6-1 / name
                                         :op1 "Jesus"))
                  :quant (c6-2 / much))
      :mode imperative)

# ::snt Sometimes you have to just DO it.
# ::tokens ["Sometimes", "you", "have", "to", "just", "DO", "it", "."]
# ::lemmas ["sometimes", "you", "have", "to", "just", "do", "it", "."]
(c7-0 / obligate-01
      :ARG1 (c7-1 / you)
      :ARG2 (c7-5 / do-02
                  :ARG0 c7-1
                  :ARG1 (c7-4 / it)
                  :mod (c7-3 / just))
      :frequency (c7-2 / sometimes))

# ::snt A fn shambles
# ::tokens ["A", "fn", "shambles"]
# ::lemmas ["a", "fn", "shamble"]
(c8-2 / shambles
      :domain (c8-1 / person
                    :name (c8-0 / name
                                :op1 " fn")))

# ::snt Honestly...who cares? Such a dirt bag!
# ::tokens ["Honestly", "...", "who", "cares", "?", "Such", "a", "dirt", "bag", "!"]
# ::lemmas ["honestly", "...", "who", "care", "?", "such", "a", "dirt", "bag", "!"]
(c9-1 / multi-sentence
      :snt1 (c9-4 / care-01
                  :ARG0 (c9-5 / amr-unknown)
                  :ARG1-of (c9-3 / honest-01))
      :snt2 (c9-0 / bag
                  :mod (c9-6 / dirt)
                  :mod (c9-2 / such)))

# ::snt This is what liberalism eventually leads too...
# ::tokens ["This", "is", "what", "liberalism", "eventually", "leads", "too", "..."]
# ::lemmas ["this", "be", "what", "liberalism", "eventually", "lead", "too", "..."]
(c10-1 / lead-01
       :ARG0 (c10-4 / liberalism)
       :ARG2 (c10-2 / this)
       :mod (c10-3 / too)
       :time (c10-0 / eventual))

# ::snt He gives no fucks lol
# ::tokens ["He", "gives", "no", "fucks", "lol"]
# ::lemmas ["he", "give", "no", "fuck", "lol"]
(c11-3 / give-16
       :ARG0 (c11-1 / he)
       :ARG1 (c11-0 / fuck)
       :ARG2-of (c11-2 / laugh-01
                       :ARG0 c11-1
                       :manner (c11-4 / loud))
       :polarity -)

# ::snt Poor thing needs serious help and I mean this sincerely.
# ::tokens ["Poor", "thing", "needs", "serious", "help", "and", "I", "mean", "this", "sincerely", "."]
# ::lemmas ["poor", "thing", "need", "serious", "help", "and", "i", "mean", "this", "sincerely", "."]
(c12-4 / and
       :op1 (c12-1 / need-01
                   :ARG0 (c12-8 / thing
                                :mod (c12-6 / poor))
                   :ARG1 (c12-5 / help-01
                                :ARG1 c12-8
                                :ARG1-of (c12-3 / serious-02)))
       :op2 (c12-2 / mean-02
                   :ARG0 (c12-7 / i)
                   :ARG1 c12-1
                   :manner (c12-0 / sincere)))

# ::snt can give him a hug..
# ::tokens ["can", "give", "him", "a", "hug", ".."]
# ::lemmas ["can", "give", "he", "a", "hug", ".."]
(c13-2 / possible-01
       :ARG1 (c13-1 / hug-01
                    :ARG1 (c13-0 / he)))

# ::snt What talent has to do with shitty character?
# ::tokens ["What", "talent", "has", "to", "do", "with", "shitty", "character", "?"]
# ::lemmas ["what", "talent", "have", "to", "do", "with", "shitty", "character", "?"]
(c14-1 / have-to-do-with-04
       :ARG0 (c14-3 / talent
                    :mod (c14-4 / amr-unknown))
       :ARG1 (c14-2 / character
                    :mod (c14-0 / shitty)))

# ::snt Grabbing him in my Dead Pool, big points for his age.
# ::tokens ["Grabbing", "him", "in", "my", "Dead", "Pool", ",", "big", "points", "for", "his", "age", "."]
# ::lemmas ["grab", "he", "in", "my", "Dead", "Pool", ",", "big", "point", "for", "his", "age", "."]
(c15-4 / point-03
       :mod (c15-0 / big)
       :beneficiary (c15-3 / he)
       :condition (c15-6 / grab-01
                         :ARG0 (c15-5 / i)
                         :ARG1 c15-3
                         :location (c15-2 / pool
                                          :name (c15-1 / name
                                                       :op1 "Dead"
                                                       :op2 "Pool")
                                          :poss c15-5)))

# ::snt We need you back in Transformers
# ::tokens ["We", "need", "you", "back", "in", "Transformers"]
# ::lemmas ["we", "need", "you", "back", "in", "transformer"]
(c16-2 / need-01
       :ARG0 (c16-5 / we)
       :ARG1 (c16-0 / be-located-at-91
                    :ARG1 (c16-1 / you)
                    :ARG2 (c16-6 / company
                                 :name (c16-3 / name
                                              :op1 "Transformers"))
                    :mod (c16-4 / back)))

# ::snt shock me
# ::tokens ["shock", "me"]
# ::lemmas ["shock", "i"]
(c17-1 / shock-01
       :ARG1 (c17-0 / i))

# ::snt Never learns
# ::tokens ["Never", "learns"]
# ::lemmas ["never", "learn"]
(c19-1 / learn-01
       :time (c19-0 / ever)
       :polarity -)

# ::snt Who cares?
# ::tokens ["Who", "cares", "?"]
# ::lemmas ["who", "care", "?"]
(c20-0 / care-01
       :ARG0 (c20-1 / amr-unknown))

# ::snt He suffers from malignant narcissitic personality disorder. His attention-seeking stunts backfired. It's that simple.
# ::tokens ["He", "suffers", "from", "malignant", "narcissitic", "personality", "disorder", ".", "His", "attention", "-", "seeking", "stunts", "backfired", ".", "It", "'s", "that", "simple", "."]
# ::lemmas ["he", "suffer", "from", "malignant", "narcissitic", "personality", "disorder", ".", "his", "attention", "-", "seek", "stunt", "backfire", ".", "it", "be", "that", "simple", "."]
(c21-2 / multi-sentence
       :snt1 (c21-4 / suffer-01
                    :ARG0 (c21-6 / he)
                    :ARG1 (c21-12 / disorder
                                  :mod (c21-7 / personality)
                                  :mod (c21-3 / narcissitic)
                                  :mod (c21-8 / malignant)))
       :snt2 (c21-1 / backfire-01
                    :ARG1 (c21-11 / trick-01
                                  :ARG0 (c21-9 / he)
                                  :ARG0-of (c21-0 / seek-01
                                                  :ARG1 (c21-5 / attend-02
                                                               :ARG1 c21-9))))
       :snt3 (c21-14 / simple-02
                     :ARG1 (c21-10 / it)
                     :degree (c21-13 / that)))

# ::snt Shia, give up. You are done. Go to rehab. Get clean. You are done sir. Please get help. Prayers to you
# ::tokens ["Shia", ",", "give", "up", ".", "You", "are", "done", ".", "Go", "to", "rehab", ".", "Get", "clean", ".", "You", "are", "done", "sir", ".", "Please", "get", "help", ".", "Prayers", "to", "you"]
# ::lemmas ["Shia", ",", "give", "up", ".", "you", "be", "do", ".", "go", "to", "rehab", ".", "get", "clean", ".", "you", "be", "do", "sir", ".", "please", "get", "help", ".", "prayer", "to", "you"]
(c22-12 / multi-sentence
        :snt1 (c22-0 / say-01
                     :ARG0 (c22-18 / i)
                     :ARG1 (c22-8 / give-up-07
                                  :ARG0 (c22-17 / person
                                                :name (c22-15 / name
                                                              :op1 "Shia")
                                                :ARG2-of c22-0)
                                  :mode imperative))
        :snt2 (c22-11 / be-done-08
                      :ARG1 c22-17)
        :snt3 (c22-2 / go-02
                     :ARG0 (c22-6 / you)
                     :ARG4 (c22-16 / rehab)
                     :mode imperative)
        :snt4 (c22-3 / get-04
                     :ARG0 (c22-9 / you)
                     :ARG1 (c22-14 / clean-04
                                   :ARG1 c22-9)
                     :mode imperative)
        :snt5 (c22-1 / be-done-08
                     :ARG1 (c22-5 / sir))
        :snt6 (c22-10 / get-01
                      :ARG0 (c22-4 / you)
                      :ARG1 (c22-7 / help-01
                                   :ARG1 c22-4)
                      :mode imperative
                      :polite +)
        :snt7 (c22-13 / Prayers
                      :beneficiary c22-4))

# ::snt I feel like a real shit. It's just too easy to laugh at this guy.
# ::tokens ["I", "feel", "like", "a", "real", "shit", ".", "It", "'s", "just", "too", "easy", "to", "laugh", "at", "this", "guy", "."]
# ::lemmas ["i", "feel", "like", "a", "real", "shit", ".", "it", "be", "just", "too", "easy", "to", "laugh", "at", "this", "guy", "."]
(c23-1 / multi-sentence
       :snt1 (c23-0 / feel-01
                    :ARG0 (c23-8 / i)
                    :ARG1 (c23-2 / shit
                                 :ARG1-of (c23-3 / real-04)))
       :snt2 (c23-4 / easy-05
                    :ARG1 (c23-6 / laugh-01
                                 :ARG2 (c23-10 / guy
                                               :mod (c23-9 / this)))
                    :mod (c23-7 / just)
                    :ARG2-of (c23-5 / have-degree-91
                                    :ARG1 c23-6
                                    :ARG3 (c23-11 / too))))

# ::snt Lock Shia up. Big mouth drunk who is toxic.
# ::tokens ["Lock", "Shia", "up", ".", "Big", "mouth", "drunk", "who", "is", "toxic", "."]
# ::lemmas ["Lock", "Shia", "up", ".", "big", "mouth", "drunk", "who", "be", "toxic", "."]
(c24-3 / multi-sentence
       :snt1 (c24-6 / lock-up-03
                    :ARG0 (c24-1 / you)
                    :ARG1 (c24-5 / person
                                 :name (c24-2 / name
                                              :op1 "Shia"))
                    :mode imperative)
       :snt2 (c24-8 / drunk
                    :mod (c24-4 / mouth
                                :mod (c24-0 / big))
                    :mod (c24-7 / toxic)))

# ::snt Liberals have gone mad;they kill people,they loot and riot;they ask for violence;they are violent
# ::tokens ["Liberals", "have", "gone", "mad;they", "kill", "people", ",", "they", "loot", "and", "riot;they", "ask", "for", "violence;they", "are", "violent"]
# ::lemmas ["liberal", "have", "go", "mad;they", "kill", "people", ",", "they", "loot", "and", "riot;they", "ask", "for", "violence;they", "be", "violent"]
(c25-8 / and
       :op1 (c25-9 / go-08
                   :ARG1 (c25-3 / person
                                :ARG1-of (c25-4 / liberal-02))
                   :ARG2 (c25-0 / mad-04
                                :ARG1 c25-3))
       :op2 (c25-5 / kill-01
                   :ARG0 c25-3
                   :ARG1 c25-3)
       :op3 (c25-10 / loot-01
                    :ARG0 c25-3)
       :op4 (c25-1 / riot-01
                   :ARG0 c25-3)
       :op5 (c25-7 / ask-02
                   :ARG0 c25-3
                   :ARG1 (c25-2 / violence))
       :op6 (c25-6 / violence
                   :domain c25-3))

# ::snt I think this is the only way this "kid" knows how to stay in the public eye.
# ::tokens ["I", "think", "this", "is", "the", "only", "way", "this", "\"", "kid", "\"", "knows", "how", "to", "stay", "in", "the", "public", "eye", "."]
# ::lemmas ["i", "think", "this", "be", "the", "only", "way", "this", "\"", "kid", "\"", "know", "how", "to", "stay", "in", "the", "public", "eye", "."]
(c26-8 / think-01
       :ARG0 (c26-7 / i)
       :ARG1 (c26-6 / way
                    :mod (c26-0 / only)
                    :manner-of (c26-4 / know-01
                                      :ARG0 (c26-10 / kid
                                                    :mod (c26-11 / this))
                                      :ARG1 (c26-2 / stay-01
                                                   :ARG1 c26-10
                                                   :ARG3 (c26-1 / be-located-at-91
                                                                :ARG1 c26-10
                                                                :ARG2 (c26-3 / eye
                                                                             :ARG1-of (c26-5 / public-02)))))
                    :domain (c26-9 / this)))

# ::snt just a pathetic drunk.
# ::tokens ["just", "a", "pathetic", "drunk", "."]
# ::lemmas ["just", "a", "pathetic", "drunk", "."]
(c27-0 / drunk
       :mod (c27-2 / pathetic)
       :mod (c27-1 / just))

# ::snt This is one troubled guy.
# ::tokens ["This", "is", "one", "troubled", "guy", "."]
# ::lemmas ["this", "be", "one", "troubled", "guy", "."]
(c28-0 / guy
       :ARG1-of (c28-2 / trouble-05)
       :domain (c28-1 / this)
       :quant 1)

# ::snt I could care less....
# ::tokens ["I", "could", "care", "less", "...."]
# ::lemmas ["i", "could", "care", "less", "...."]
(c29-2 / possible-01
       :ARG1 (c29-0 / have-degree-91
                    :ARG1 (c29-4 / i)
                    :ARG2 (c29-3 / care-01
                                 :ARG0 c29-4)
                    :ARG3 (c29-1 / less)))

# ::snt He was ranting about John Podesta!
# ::tokens ["He", "was", "ranting", "about", "John", "Podesta", "!"]
# ::lemmas ["he", "be", "rant", "about", "John", "Podesta", "!"]
(c30-0 / rant-01
       :ARG0 (c30-2 / he)
       :ARG3 (c30-3 / person
                    :name (c30-1 / name
                                 :op1 "John"
                                 :op2 "Podesta")))

# ::snt I think this guy has mental issues and uses drugs and alcohol to help him cope. He needs to seek professional help.
# ::tokens ["I", "think", "this", "guy", "has", "mental", "issues", "and", "uses", "drugs", "and", "alcohol", "to", "help", "him", "cope", ".", "He", "needs", "to", "seek", "professional", "help", "."]
# ::lemmas ["i", "think", "this", "guy", "have", "mental", "issue", "and", "use", "drug", "and", "alcohol", "to", "help", "he", "cope", ".", "he", "need", "to", "seek", "professional", "help", "."]
(c31-10 / multi-sentence
        :snt1 (c31-7 / think-01
                     :ARG0 (c31-17 / i)
                     :ARG1 (c31-8 / and
                                  :op1 (c31-1 / issue-02
                                              :ARG0 (c31-3 / mental)
                                              :ARG1 (c31-9 / guy
                                                           :mod (c31-12 / this)))
                                  :op2 (c31-13 / use-01
                                               :ARG0 c31-9
                                               :ARG1 (c31-6 / and
                                                            :op1 (c31-18 / drug)
                                                            :op2 (c31-5 / alcohol))
                                               :ARG2 (c31-4 / help-01
                                                            :ARG0 c31-6
                                                            :ARG1 (c31-11 / cope-01
                                                                          :ARG0 c31-9)
                                                            :ARG2 c31-9))))
        :snt2 (c31-14 / need-01
                      :ARG0 (c31-16 / he)
                      :ARG1 (c31-0 / seek-01
                                   :ARG0 c31-16
                                   :ARG1 (c31-2 / help-01
                                                :ARG0 (c31-15 / professional)
                                                :ARG2 c31-16))))

# ::snt Lurking in the shadows...Hollywood superstar Shia LaBeouf
# ::tokens ["Lurking", "in", "the", "shadows", "...", "Hollywood", "superstar", "Shia", "LaBeouf"]
# ::lemmas ["lurk", "in", "the", "shadow", "...", "Hollywood", "superstar", "Shia", "LaBeouf"]
(c32-5 / person
       :name (c32-2 / name
                    :op1 "Shia"
                    :op2 "LaBeouf")
       :mod (c32-3 / superstar
                   :mod (c32-1 / market-sector
                               :name (c32-4 / name
                                            :op1 "Hollywood")))
       :ARG1-of (c32-6 / curl-01
                       :location (c32-0 / shadow)))

# ::snt Great! Another drunk Republitard.
# ::tokens ["Great", "!", "Another", "drunk", "Republitard", "."]
# ::lemmas ["great", "!", "another", "drunk", "Republitard", "."]
(c33-0 / multi-sentence
       :snt1 (c33-4 / great
                    :mode expressive)
       :snt2 (c33-1 / person
                    :mod (c33-3 / another)
                    :ARG0-of (c33-5 / drink-01)
                    :mod (c33-2 / drunk)))

# ::snt In other news - it's Saturday.
# ::tokens ["In", "other", "news", "-", "it", "'s", "Saturday", "."]
# ::lemmas ["in", "other", "news", "-", "it", "be", "Saturday", "."]
(c34-3 / concern-02
       :ARG1 (c34-4 / date-entity
                    :weekday (c34-2 / saturday))
       :mod (c34-1 / news
                   :mod (c34-0 / other)))

# ::snt Poor guy! Can you blame him?? He lost Bumble Bee! I'd get wasted too.
# ::tokens ["Poor", "guy", "!", "Can", "you", "blame", "him", "?", "?", "He", "lost", "Bumble", "Bee", "!", "I", "'d", "get", "wasted", "too", "."]
# ::lemmas ["poor", "guy", "!", "can", "you", "blame", "he", "?", "?", "he", "lose", "Bumble", "Bee", "!", "i", "would", "get", "waste", "too", "."]
(c35-2 / multi-sentence
       :snt1 (c35-13 / guy
                     :mod (c35-6 / poor))
       :snt2 (c35-3 / possible-01
                    :ARG1 (c35-0 / blame-01
                                 :ARG0 (c35-1 / you)
                                 :ARG1 (c35-5 / he))
                    :polarity (c35-12 / amr-unknown))
       :snt3 (c35-7 / lose-02
                    :ARG0 (c35-9 / he)
                    :ARG1 (c35-11 / animal
                                  :name (c35-4 / name
                                               :op1 "Bumble"
                                               :op2 "Bee")))
       :snt4 (c35-8 / wasted-03
                    :ARG1 (c35-14 / i)
                    :mod (c35-10 / too)))

# ::snt Hahaha he's out of his tree.... "trump broke me" Lmfao
# ::tokens ["Hahaha", "he", "'s", "out", "of", "his", "tree", "....", "\"", "trump", "broke", "me", "\"", "Lmfao"]
# ::lemmas ["Hahaha", "he", "be", "out", "of", "his", "tree", "....", "\"", "trump", "break", "i", "\"", "Lmfao"]
(c36-2 / multi-sentence
       :snt1 (c36-0 / out-06
                    :ARG1 (c36-5 / he)
                    :ARG2 (c36-9 / tree
                                 :poss c36-5)
                    :mod (c36-7 / haha
                                :mode expressive))
       :snt2 (c36-4 / say-01
                    :ARG0 (c36-6 / person
                                 :name (c36-3 / name
                                              :op1 "Lmfao"))
                    :ARG1 (c36-1 / break-01
                                 :ARG0 c36-6
                                 :name c36-3
                                 :op1 "Trump"))
       :ARG1 (c36-8 / i))

# ::snt what happened to him?
# ::tokens ["what", "happened", "to", "him", "?"]
# ::lemmas ["what", "happen", "to", "he", "?"]
(c37-0 / event
       :mod (c37-1 / he)
       :mod (c37-2 / amr-unknown))

# ::snt Dude. Get some help. You are way too talented to become a recurring sad/predictable/frustrating headline.
# ::tokens ["Dude", ".", "Get", "some", "help", ".", "You", "are", "way", "too", "talented", "to", "become", "a", "recurring", "sad", "/", "predictable", "/", "frustrating", "headline", "."]
# ::lemmas ["dude", ".", "get", "some", "help", ".", "you", "be", "way", "too", "talented", "to", "become", "a", "recur", "sad", "/", "predictable", "/", "frustrating", "headline", "."]
(c38-3 / multi-sentence
       :snt1 (c38-5 / say-01
                    :ARG1 (c38-14 / get-01
                                  :ARG0 (c38-15 / dude)
                                  :ARG1 (c38-9 / help-01
                                               :mod (c38-0 / some))
                                  :mode imperative)
                    :ARG2 c38-15)
       :snt2 (c38-12 / have-degree-91
                     :ARG1 c38-15
                     :ARG2 (c38-13 / talent)
                     :ARG3 (c38-16 / too
                                   :mod (c38-11 / way))
                     :ARG6 (c38-2 / become-01
                                  :ARG1 c38-15
                                  :ARG2 (c38-8 / headline
                                               :ARG1-of (c38-7 / repeat-01)
                                               :ARG1-of (c38-17 / slash
                                                                :op1 (c38-6 / sad-02)
                                                                :op2 (c38-10 / predict-01
                                                                             :ARG1-of (c38-4 / possible-01))
                                                                :op3 (c38-1 / frustrate-01))))))

# ::snt Well they do when you cover it. Why?
# ::tokens ["Well", "they", "do", "when", "you", "cover", "it", ".", "Why", "?"]
# ::lemmas ["well", "they", "do", "when", "you", "cover", "it", ".", "why", "?"]
(c39-1 / multi-sentence
       :snt1 (c39-7 / do-02
                    :ARG0 (c39-6 / they)
                    :time (c39-3 / cover-03
                                 :ARG0 (c39-0 / you)
                                 :ARG1 (c39-5 / it))
                    :mod (c39-4 / well))
       :snt2 (c39-8 / cause-01
                    :ARG0 (c39-2 / amr-unknown)))

# ::snt The kid is having fun, leave him alone.
# ::tokens ["The", "kid", "is", "having", "fun", ",", "leave", "him", "alone", "."]
# ::lemmas ["the", "kid", "be", "have", "fun", ",", "leave", "he", "alone", "."]
(c40-5 / and
       :op1 (c40-0 / fun-01
                   :ARG0 (c40-2 / kid))
       :op2 (c40-3 / leave-14
                   :ARG0 (c40-1 / you)
                   :ARG1 (c40-4 / alone
                                :domain c40-2)
                   :mode imperative))

# ::snt He needs to get some help
# ::tokens ["He", "needs", "to", "get", "some", "help"]
# ::lemmas ["he", "need", "to", "get", "some", "help"]
(c41-2 / need-01
       :ARG0 (c41-1 / he)
       :ARG1 (c41-0 / help-01
                    :ARG1 c41-1
                    :mod (c41-3 / some)))

# ::snt Dude clean up your act
# ::tokens ["Dude", "clean", "up", "your", "act"]
# ::lemmas ["dude", "clean", "up", "your", "act"]
(c42-0 / clean-up-02
       :ARG0 (c42-1 / dude)
       :ARG1 (c42-2 / act-02
                    :ARG0 c42-1))

# ::snt I, for one, think Shai Labeouf and Lena Dunham should go on "Naked and Afraid."
# ::tokens ["I", ",", "for", "one", ",", "think", "Shai", "Labeouf", "and", "Lena", "Dunham", "should", "go", "on", "\"", "Naked", "and", "Afraid", ".", "\""]
# ::lemmas ["i", ",", "for", "one", ",", "think", "Shai", "Labeouf", "and", "Lena", "Dunham", "should", "go", "on", "\"", "Naked", "and", "Afraid", ".", "\""]
(c43-7 / think-01
       :ARG0 (c43-8 / i)
       :ARG1 (c43-3 / recommend-01
                    :ARG1 (c43-10 / go-on-15
                                  :ARG0 (c43-9 / and
                                               :op1 (c43-5 / person
                                                           :name (c43-0 / name
                                                                        :op1 "Shai"
                                                                        :op2 "Lebeouf"))
                                               :op2 (c43-1 / person
                                                           :name (c43-4 / name
                                                                        :op1 "Lena"
                                                                        :op2 "Dunham")))
                                  :ARG1 (c43-2 / show
                                               :name (c43-6 / name
                                                            :op1 "Naked"
                                                            :op2 "and"
                                                            :op3 "Afraid"))))
       :ARG2 c43-9)

# ::snt ...you've got to promote a tennis movie somehow
# ::tokens ["...", "you", "'ve", "got", "to", "promote", "a", "tennis", "movie", "somehow"]
# ::lemmas ["...", "you", "'ve", "get", "to", "promote", "a", "tennis", "movie", "somehow"]
(c44-0 / obligate-01
       :ARG1 (c44-1 / you)
       :ARG2 (c44-4 / promote-02
                    :ARG0 c44-1
                    :ARG1 (c44-2 / movie
                                 :topic (c44-5 / tennis))
                    :manner (c44-3 / somehow)))

# ::snt Ah ffs..it's Twitter!THE Platform of Perfection. Apologies saintly bunch- Pardon my..Lip Slip (twit-talk) keep the more seasoned ease
# ::tokens ["Ah", "ffs", "..", "it", "'s", "Twitter!THE", "Platform", "of", "Perfection", ".", "Apologies", "saintly", "bunch-", "Pardon", "my", "..", "Lip", "Slip", "(", "twit", "-", "talk", ")", "keep", "the", "more", "seasoned", "ease"]
# ::lemmas ["ah", "ffs", "..", "it", "be", "twitter!the", "platform", "of", "Perfection", ".", "apology", "saintly", "bunch-", "pardon", "my", "..", "Lip", "Slip", "(", "twit", "-", "talk", ")", "keep", "the", "more", "seasoned", "ease"]
(c45-14 / multi-sentence
        :snt1 (c45-11 / and
                      :op1 (c45-9 / ah
                                  :mode expressive)
                      :op2 (c45-20 / publication
                                   :name (c45-18 / name
                                                 :op1 "Twitter")
                                   :domain (c45-21 / it)))
        :snt2 (c45-8 / apologize-01
                     :ARG0 (c45-4 / i)
                     :ARG1 (c45-13 / bunch)
                     :mod (c45-0 / saintly))
        :snt3 (c45-15 / pardon-01
                      :ARG0 (c45-12 / i
                                    :ARG1-of c45-15))
        :snt4 (c45-6 / keep-02
                     :ARG0 (c45-3 / slip-01
                                  :mod (c45-1 / lip)
                                  :ARG1-of (c45-5 / mean-01
                                                  :ARG2 (c45-10 / talk-01
                                                                :mod (c45-16 / twit))))
                     :ARG1 (c45-19 / ease-05
                                   :ARG1-of (c45-7 / have-degree-91
                                                   :ARG2 (c45-2 / season-01
                                                                :ARG1 c45-19)
                                                   :ARG3 (c45-17 / more)))))

# ::snt context - talking, towering lips sling judgments to dirty earth. Alcoholism (a thing here) Lack of anonymity likely an added disadvantage
# ::tokens ["context", "-", "talking", ",", "towering", "lips", "sling", "judgments", "to", "dirty", "earth", ".", "Alcoholism", "(", "a", "thing", "here", ")", "Lack", "of", "anonymity", "likely", "an", "added", "disadvantage"]
# ::lemmas ["context", "-", "talk", ",", "tower", "lip", "sle", "judgment", "to", "dirty", "earth", ".", "alcoholism", "(", "a", "thing", "here", ")", "lack", "of", "anonymity", "likely", "an", "add", "disadvantage"]
(c46-0 / multi-sentence
       :snt1 (c46-2 / sling-01
                    :ARG0 (c46-5 / lip
                                 :ARG0-of (c46-13 / tower-01))
                    :ARG1 (c46-11 / judge-01)
                    :ARG2 (c46-6 / planet
                                 :name (c46-1 / name
                                              :op1 "Earth")
                                 :ARG1-of (c46-14 / dirty-02))
                    :source (c46-8 / context))
       :snt2 (c46-3 / alcohol
                    :mod (c46-16 / thing
                                 :location (c46-4 / here)))
       :snt3 (c46-15 / likely-01
                     :ARG1 (c46-9 / disadvantage
                                  :ARG1-of (c46-12 / add-02)
                                  :domain (c46-7 / lack-01
                                                 :ARG1 (c46-10 / anonymity)))))

# ::snt Yeah I wonder what he found out about his life that made him quit the business ....
# ::tokens ["Yeah", "I", "wonder", "what", "he", "found", "out", "about", "his", "life", "that", "made", "him", "quit", "the", "business", "...."]
# ::lemmas ["yeah", "i", "wonder", "what", "he", "find", "out", "about", "his", "life", "that", "make", "he", "quit", "the", "business", "...."]
(c47-6 / wonder-01
       :ARG0 (c47-7 / i)
       :ARG1 (c47-8 / thing
                    :ARG1-of (c47-0 / find-out-03
                                    :ARG0 (c47-4 / he)
                                    :topic (c47-5 / life
                                                  :poss c47-4))
                    :ARG0-of (c47-3 / make-02
                                    :ARG1 (c47-9 / quit-01
                                                 :ARG0 c47-4
                                                 :ARG1 (c47-1 / business))))
       :mod (c47-2 / yeah
                   :mode expressive))

# ::snt Here's context It's a really cool story bro!
# ::tokens ["Here", "'s", "context", "It", "'s", "a", "really", "cool", "story", "bro", "!"]
# ::lemmas ["here", "be", "context", "it", "be", "a", "really", "cool", "story", "bro", "!"]
(c48-2 / multi-sentence
       :snt1 (c48-6 / context
                    :location (c48-5 / here))
       :snt2 (c48-3 / say-01
                    :ARG1 (c48-0 / story
                                 :ARG1-of (c48-7 / cool-04
                                                 :degree (c48-4 / really)))
                    :ARG2 (c48-1 / bro)))

# ::snt I sort of want context but I sort of don't.
# ::tokens ["I", "sort", "of", "want", "context", "but", "I", "sort", "of", "do", "n't", "."]
# ::lemmas ["i", "sort", "of", "want", "context", "but", "i", "sort", "of", "do", "not", "."]
(c49-3 / contrast-01
       :ARG1 (c49-4 / want-01
                    :ARG0 (c49-5 / i)
                    :ARG1 (c49-6 / context)
                    :degree (c49-1 / sort))
       :ARG2 (c49-2 / want-01
                    :ARG0 c49-5
                    :ARG1 c49-6
                    :degree (c49-0 / sort)
                    :polarity -))

# ::snt At least he didn't try to feed strawberries to some random older ladies he met at a bar.I call this an improvement!
# ::tokens ["At", "least", "he", "did", "n't", "try", "to", "feed", "strawberries", "to", "some", "random", "older", "ladies", "he", "met", "at", "a", "bar", ".", "I", "call", "this", "an", "improvement", "!"]
# ::lemmas ["at", "least", "he", "do", "not", "try", "to", "feed", "strawberry", "to", "some", "random", "old", "lady", "he", "meet", "at", "a", "bar", ".", "i", "call", "this", "an", "improvement", "!"]
(c50-3 / multi-sentence
       :snt1 (c50-14 / try-01
                     :ARG0 (c50-8 / he)
                     :ARG1 (c50-0 / feed-01
                                  :ARG0 c50-8
                                  :ARG1 (c50-4 / strawberry)
                                  :ARG2 (c50-9 / lady
                                               :mod (c50-6 / random)
                                               :ARG1-of (c50-10 / meet-03
                                                                :ARG0 c50-8
                                                                :location (c50-2 / bar))
                                               :ARG1-of (c50-12 / have-degree-91
                                                                :ARG2 (c50-1 / old)
                                                                :ARG3 (c50-15 / more))))
                     :mod (c50-7 / at-least)
                     :polarity -)
       :snt2 (c50-11 / call-01
                     :ARG0 (c50-13 / i)
                     :ARG1 (c50-16 / this)
                     :ARG2 (c50-5 / improve-01)))
