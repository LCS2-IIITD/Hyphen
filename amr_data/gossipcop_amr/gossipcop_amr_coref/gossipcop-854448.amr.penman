# ::snt Everyone could tell it was Missy from day one. If it was that obvious to me everyone could tell. BTW already sick of The Doctor being blind.
# ::tokens ["Everyone", "could", "tell", "it", "was", "Missy", "from", "day", "one", ".", "If", "it", "was", "that", "obvious", "to", "me", "everyone", "could", "tell", ".", "BTW", "already", "sick", "of", "The", "Doctor", "being", "blind", "."]
# ::lemmas ["everyone", "could", "tell", "it", "be", "Missy", "from", "day", "one", ".", "if", "it", "be", "that", "obvious", "to", "i", "everyone", "could", "tell", ".", "btw", "already", "sick", "of", "the", "Doctor", "be", "blind", "."]
(c1-12 / multi-sentence
       :snt1 (c1-18 / possible-01
                    :ARG1 (c1-7 / tell-02
                                :ARG0 (c1-17 / everyone)
                                :ARG1 (c1-13 / person
                                             :name (c1-16 / name
                                                          :op1 "Missy"))
                                :time (c1-0 / since
                                            :op1 (c1-21 / day
                                                        :ord (c1-4 / ordinal-entity
                                                                   :value 1)))))
       :snt2 (c1-3 / possible-01
                   :ARG1 (c1-15 / tell-02
                                :ARG0 (c1-9 / everyone)
                                :ARG1 (c1-19 / it)
                                :condition (c1-10 / obvious-01
                                                  :ARG1 c1-19
                                                  :degree (c1-20 / that)
                                                  :ARG2 (c1-6 / i)))
                   :snt3 (c1-5 / sick-04
                               :ARG0 (c1-11 / blind-02
                                            :ARG1 (c1-2 / person
                                                        :name (c1-14 / name
                                                                     :op1 "The"
                                                                     :op2 "Doctor")))
                               :ARG1 c1-6)
                   :time (c1-8 / already)
                   :mod (c1-1 / by-the-way)))

# ::snt Missy.
# ::tokens ["Missy", "."]
# ::lemmas ["Missy", "."]
(c2-0 / missy)

# ::snt Donnie's tax returns?
# ::tokens ["Donnie", "'s", "tax", "returns", "?"]
# ::lemmas ["Donnie", "'s", "tax", "return", "?"]
(c3-1 / return-05
      :ARG1 (c3-3 / tax-01
                  :ARG2 (c3-2 / person
                              :name (c3-0 / name
                                          :op1 "Donnie")))
      :polarity (c3-4 / amr-unknown))
