# ::snt Sorry.. he z good in dat
# ::tokens ["Sorry", "..", "he", "z", "good", "in", "dat"]
# ::lemmas ["sorry", "..", "he", "z", "good", "in", "dat"]
(c1-0 / sorry-01
      :ARG1 (c1-2 / i)
      :ARG2 (c1-4 / good-03
                  :ARG1 (c1-1 / he)
                  :ARG2 (c1-3 / that)))

# ::snt JLo and Ryan are always working.. It's crazy! but they inspire me!
# ::tokens ["JLo", "and", "Ryan", "are", "always", "working", "..", "It", "'s", "crazy", "!", "but", "they", "inspire", "me", "!"]
# ::lemmas ["JLo", "and", "Ryan", "be", "always", "work", "..", "it", "be", "crazy", "!", "but", "they", "inspire", "i", "!"]
(c2-1 / multi-sentence
      :snt1 (c2-6 / work-01
                  :ARG0 (c2-10 / and
                               :op1 (c2-5 / person
                                          :name (c2-0 / name
                                                      :op1 "JLo"))
                               :op2 (c2-2 / person
                                          :name (c2-4 / name
                                                      :op1 "Ryan")))
                  :time (c2-9 / always))
      :snt2 (c2-7 / crazy-03
                  :ARG1 (c2-11 / it)
                  :concession-of (c2-3 / inspire-01
                                       :ARG0 (c2-8 / they)
                                       :ARG1 (c2-12 / i))))

# ::snt Why not...coz he z in dat
# ::tokens ["Why", "not", "...", "coz", "he", "z", "in", "dat"]
# ::lemmas ["why", "not", "...", "coz", "he", "z", "in", "dat"]
(c3-2 / cause-01
      :ARG0 (c3-4 / amr-unknown)
      :ARG1-of (c3-6 / cause-01
                     :ARG0 c3-4)
      :ARG1-of (c3-3 / cause-01
                     :ARG0 (c3-0 / be-located-at-91
                                 :ARG1 (c3-1 / he)
                                 :ARG2 (c3-5 / dat)))
      :polarity -)
