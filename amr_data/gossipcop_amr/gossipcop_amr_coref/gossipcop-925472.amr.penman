# ::snt No commercial just like to eat.
# ::tokens ["No", "commercial", "just", "like", "to", "eat", "."]
# ::lemmas ["no", "commercial", "just", "like", "to", "eat", "."]
(c1-3 / like-01
      :ARG0 (c1-0 / commercial)
      :ARG1 (c1-2 / eat-01
                  :ARG0 c1-0)
      :mod (c1-1 / just)
      :polarity -)

# ::snt Mine's from a roll too. Love Kings Hawaiian yummy
# ::tokens ["Mine", "'s", "from", "a", "roll", "too", ".", "Love", "Kings", "Hawaiian", "yummy"]
# ::lemmas ["Mine", "'s", "from", "a", "roll", "too", ".", "love", "king", "Hawaiian", "yummy"]
(c2-2 / multi-sentence
      :snt1 (c2-0 / be-from-91
                  :ARG1 (c2-9 / thing
                              :poss (c2-8 / i))
                  :ARG2 (c2-4 / roll)
                  :mod (c2-10 / too))
      :snt2 (c2-1 / yummy
                  :domain (c2-6 / product
                                :name (c2-3 / name
                                            :op1 "Love"
                                            :op2 "Kings"))
                  :mod (c2-7 / language
                             :name (c2-5 / name
                                         :op1 "Hawaii"))))

# ::snt Shell probally look better with more weight
# ::tokens ["Shell", "probally", "look", "better", "with", "more", "weight"]
# ::lemmas ["Shell", "probally", "look", "well", "with", "more", "weight"]
(c3-3 / look-02
      :ARG0 (c3-6 / company
                  :name (c3-0 / name
                              :op1 "Shell"))
      :ARG1 (c3-8 / good-02
                  :ARG2-of (c3-2 / have-degree-91
                                 :ARG1 c3-3
                                 :ARG3 (c3-1 / more)))
      :manner (c3-4 / probable)
      :manner (c3-7 / weight
                    :mod (c3-5 / more)))

# ::snt She shouldnt have to...
# ::tokens ["She", "should", "nt", "have", "to", "..."]
# ::lemmas ["she", "should", "not", "have", "to", "..."]
(c4-1 / recommend-01
      :ARG1 (c4-2 / obligate-01
                  :ARG1 (c4-0 / she)
                  :polarity -))

# ::snt Me too. For a role.
# ::tokens ["Me", "too", ".", "For", "a", "role", "."]
# ::lemmas ["i", "too", ".", "for", "a", "role", "."]
(c5-1 / multi-sentence
      :snt1 (c5-2 / i
                  :mod (c5-3 / too))
      :snt2 (c5-0 / role))

# ::snt Im doing the same. Its a very low budget indie that nobody will see.
# ::tokens ["I", "m", "doing", "the", "same", ".", "Its", "a", "very", "low", "budget", "indie", "that", "nobody", "will", "see", "."]
# ::lemmas ["i", "m", "do", "the", "same", ".", "its", "a", "very", "low", "budget", "indie", "that", "nobody", "will", "see", "."]
(c6-2 / multi-sentence
      :snt1 (c6-10 / do-02
                   :ARG0 (c6-8 / i)
                   :ARG1 (c6-9 / thing
                               :ARG1-of (c6-4 / same-01)))
      :snt2 (c6-5 / indie
                  :domain (c6-11 / it)
                  :ARG1-of (c6-0 / see-01
                                 :ARG0 (c6-3 / nobody))
                  :ARG1-of (c6-1 / budget-01
                                 :ARG1-of (c6-7 / low-04
                                                :degree (c6-6 / very)))))

# ::snt She'll look good with a few pounds
# ::tokens ["She", "'ll", "look", "good", "with", "a", "few", "pounds"]
# ::lemmas ["she", "'ll", "look", "good", "with", "a", "few", "pounds"]
(c8-3 / look-02
      :ARG0 (c8-2 / she)
      :ARG1 (c8-5 / good-02)
      :condition (c8-0 / few
                       :op1 (c8-1 / mass-quantity
                                  :unit (c8-4 / pound)
                                  :quant 1)))

# ::snt I still smash
# ::tokens ["I", "still", "smash"]
# ::lemmas ["i", "still", "smash"]
(c9-2 / smash-01
      :ARG0 (c9-1 / i)
      :mod (c9-0 / still))

# ::snt Purposely purposefully
# ::tokens ["Purposely", "purposefully"]
# ::lemmas ["purposely", "purposefully"]
(c10-0 / purposeful)

# ::snt Its amazes me to what extent Actors have to go through for roles.
# ::tokens ["Its", "amazes", "me", "to", "what", "extent", "Actors", "have", "to", "go", "through", "for", "roles", "."]
# ::lemmas ["its", "amaze", "i", "to", "what", "extent", "actor", "have", "to", "go", "through", "for", "role", "."]
(c11-5 / amaze-01
       :ARG0 (c11-2 / extent
                    :degree-of (c11-6 / go-through-20
                                      :ARG0 (c11-3 / person
                                                   :ARG0-of (c11-4 / act-01))
                                      :ARG1 (c11-1 / role)
                                      :ARG2-of (c11-0 / obligate-01)))
       :ARG1 (c11-7 / i))

# ::snt Great! Can cross that one off the list!
# ::tokens ["Great", "!", "Can", "cross", "that", "one", "off", "the", "list", "!"]
# ::lemmas ["great", "!", "can", "cross", "that", "one", "off", "the", "list", "!"]
(c12-2 / multi-sentence
       :snt1 (c12-7 / great
                    :mode expressive)
       :snt2 (c12-3 / possible-01
                    :ARG1 (c12-5 / cross-02
                                 :ARG0 (c12-1 / you)
                                 :ARG1 (c12-0 / one
                                              :mod (c12-6 / that))
                                 :ARG2 (c12-4 / list))))

# ::snt Why can't they leave people alone I'm so sick of people shaming other people's bodies!
# ::tokens ["Why", "ca", "n't", "they", "leave", "people", "alone", "I", "'m", "so", "sick", "of", "people", "shaming", "other", "people", "'s", "bodies", "!"]
# ::lemmas ["why", "can", "not", "they", "leave", "people", "alone", "i", "be", "so", "sick", "of", "people", "shame", "other", "people", "'s", "body", "!"]
(c13-7 / cause-01
       :ARG0 (c13-4 / amr-unknown)
       :ARG1 (c13-5 / possible-01
                    :ARG1 (c13-6 / leave-14
                                 :ARG0 (c13-10 / they)
                                 :ARG1 (c13-2 / person)
                                 :ARG2 (c13-9 / alone))
                    :polarity -)
       :ARG1 c13-7
       :ARG0 (c13-3 / shame-02
                    :ARG0 (c13-11 / person)
                    :ARG1 (c13-1 / body
                                 :poss (c13-8 / person
                                              :mod (c13-0 / other)))))

# ::snt Mind over body
# ::tokens ["Mind", "over", "body"]
# ::lemmas ["mind", "over", "body"]
(c14-1 / mind-over-
       :domain (c14-0 / body))

# ::snt I REALLY chose the wrong profession.
# ::tokens ["I", "REALLY", "chose", "the", "wrong", "profession", "."]
# ::lemmas ["i", "really", "choose", "the", "wrong", "profession", "."]
(c15-2 / choose-01
       :ARG0 (c15-4 / i)
       :ARG1 (c15-1 / profession
                    :ARG2-of (c15-3 / wrong-04
                                    :ARG1 c15-4))
       :ARG1-of (c15-0 / real-04))

# ::snt I love Ann Hathaway
# ::tokens ["I", "love", "Ann", "Hathaway"]
# ::lemmas ["i", "love", "Ann", "Hathaway"]
(c16-2 / love-01
       :ARG0 (c16-3 / i)
       :ARG1 (c16-0 / person
                    :name (c16-1 / name
                                 :op1 "Ann"
                                 :op2 "Hathaway")))

# ::snt Move over Hathaway How do I get said role?
# ::tokens ["Move", "over", "Hathaway", "How", "do", "I", "get", "said", "role", "?"]
# ::lemmas ["move", "over", "Hathaway", "how", "do", "i", "get", "say", "role", "?"]
(c17-2 / multi-sentence
       :snt1 (c17-6 / move-01
                    :ARG0 (c17-1 / you)
                    :ARG2 (c17-0 / over
                                 :op1 (c17-7 / person
                                             :name (c17-3 / name
                                                          :op1 "Hathaway")))
                    :mode imperative)
       :snt2 (c17-10 / get-01
                     :ARG0 (c17-8 / i)
                     :ARG1 (c17-5 / role
                                  :ARG1-of (c17-4 / say-01))
                     :manner (c17-9 / amr-unknown)))

# ::snt Gurl, bye. Ain't nobody thinking bout you.........
# ::tokens ["Gurl", ",", "bye", ".", "Ai", "n't", "nobody", "thinking", "bout", "you", "........."]
# ::lemmas ["Gurl", ",", "bye", ".", "be", "not", "nobody", "think", "bout", "you", "........."]
(c18-3 / multi-sentence
       :snt1 (c18-4 / say-01
                    :ARG1 (c18-0 / bye)
                    :ARG2 (c18-7 / person
                                 :name (c18-2 / name
                                              :op1 "Gurl")))
       :snt2 (c18-8 / think-01
                    :ARG0 (c18-6 / nobody)
                    :ARG2 (c18-1 / you)
                    :ARG1-of (c18-5 / request-confirmation-91)
                    :polarity -))

# ::snt Hi. Anne. Hathaway
# ::tokens ["Hi", ".", "Anne", ".", "Hathaway"]
# ::lemmas ["hi", ".", "Anne", ".", "Hathaway"]
(c19-3 / multi-sentence
       :snt1 (c19-2 / hi)
       :snt2 (c19-0 / person
                    :name (c19-1 / name
                                 :op1 "Anne")))
