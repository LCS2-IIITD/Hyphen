# ::snt THANKS BBSSSS
# ::tokens ["THANKS", "BBSSSS"]
# ::lemmas ["thank", "bbssss"]
(c1-2 / thank-01
      :ARG1 (c1-1 / person
                  :name (c1-0 / name
                              :op1 "Bush")))

# ::snt HANA YOURE SO CUTE WTF
# ::tokens ["HANA", "YOURE", "SO", "CUTE", "WTF"]
# ::lemmas ["HANA", "YOURE", "so", "CUTE", "WTF"]
(c2-3 / say-01
      :ARG0 (c2-5 / i)
      :ARG1 (c2-4 / cute
                  :degree (c2-0 / so)
                  :domain (c2-2 / you)
                  :mod (c2-1 / fuck
                             :mode expressive))
      :ARG2 c2-2)

# ::snt ik C already said what i said but this was filmed at about last night so enjoy
# ::tokens ["ik", "C", "already", "said", "what", "i", "said", "but", "this", "was", "filmed", "at", "about", "last", "night", "so", "enjoy"]
# ::lemmas ["ik", "C", "already", "say", "what", "i", "say", "but", "this", "be", "film", "at", "about", "last", "night", "so", "enjoy"]
(c6-9 / contrast-01
      :ARG1 (c6-4 / say-01
                  :ARG0 (c6-8 / person
                              :name (c6-3 / name
                                          :op1 "ik"
                                          :op2 "C"))
                  :ARG1 (c6-11 / thing
                               :ARG1-of (c6-0 / say-01
                                              :ARG0 (c6-10 / i)))
                  :time (c6-5 / already))
      :ARG2 (c6-1 / film-01
                  :ARG1 (c6-15 / this)
                  :time (c6-13 / date-entity
                               :dayperiod (c6-7 / night)
                               :mod (c6-2 / yesterday))
                  :ARG0-of (c6-14 / cause-01
                                  :ARG1 (c6-6 / enjoy-01
                                              :ARG0 (c6-12 / you)
                                              :mode imperative))))

# ::snt jorgis*
# ::tokens ["jorgis", "*"]
# ::lemmas ["jorgis", "*"]
(c7-1 / person
      :name (c7-0 / name
                  :op1 "Jorgis"))

# ::snt Its my fav song off the album but the video is so basic and boring wtf. I was so excited for this video.
# ::tokens ["Its", "my", "fav", "song", "off", "the", "album", "but", "the", "video", "is", "so", "basic", "and", "boring", "wtf", ".", "I", "was", "so", "excited", "for", "this", "video", "."]
# ::lemmas ["its", "my", "fav", "song", "off", "the", "album", "but", "the", "video", "be", "so", "basic", "and", "boring", "wtf", ".", "i", "be", "so", "excited", "for", "this", "video", "."]
(c8-3 / multi-sentence
      :snt1 (c8-11 / contrast-01
                   :ARG1 (c8-4 / song
                               :ARG1-of (c8-0 / favor-01
                                              :ARG0 (c8-13 / i))
                               :domain (c8-5 / it)
                               :part-of (c8-14 / album))
                   :ARG2 (c8-15 / and
                                :op1 (c8-2 / basic
                                           :degree (c8-1 / so))
                                :op2 (c8-9 / bore-02
                                           :ARG0 (c8-7 / video
                                                       :degree (c8-17 / so))
                                           :mod (c8-10 / fuck
                                                       :mode expressive)))
                   :snt2 (c8-8 / excite-01
                               :ARG0 c8-7
                               :mod (c8-12 / this))
                   :ARG1 (c8-16 / i)
                   :degree (c8-6 / so)))

# ::snt skinny
# ::tokens ["skinny"]
# ::lemmas ["skinny"]
(c9-0 / skinny)

# ::snt She copied Sza video
# ::tokens ["She", "copied", "Sza", "video"]
# ::lemmas ["she", "copy", "Sza", "video"]
(c10-4 / copy-01
       :ARG0 (c10-1 / she)
       :ARG1 (c10-2 / video
                    :poss (c10-3 / person
                                 :name (c10-0 / name
                                              :op1 "Sza"))))

# ::snt Camila snapped
# ::tokens ["Camila", "snapped"]
# ::lemmas ["Camila", "snap"]
(c11-2 / snap-04
       :ARG0 (c11-1 / person
                    :name (c11-0 / name
                                 :op1 "Camila")))

# ::snt I expected better, I'm not even gonna lie
# ::tokens ["I", "expected", "better", ",", "I", "'m", "not", "even", "gon", "na", "lie"]
# ::lemmas ["i", "expect", "well", ",", "i", "be", "not", "even", "going", "to", "lie"]
(c12-1 / and
       :op1 (c12-2 / expect-01
                   :ARG0 (c12-5 / i)
                   :ARG1 (c12-6 / thing
                                :ARG1-of (c12-3 / have-degree-91
                                                :ARG2 (c12-7 / good-02
                                                             :ARG1 c12-6)
                                                :ARG3 (c12-0 / more))))
       :op2 (c12-4 / lie-08
                   :ARG0 c12-5
                   :mod (c12-8 / even)
                   :polarity -))

# ::snt low key not ready tbh
# ::tokens ["low", "key", "not", "ready", "tbh"]
# ::lemmas ["low", "key", "not", "ready", "tbh"]
(c13-0 / ready-02
       :ARG1 (c13-2 / key
                    :ARG1-of (c13-3 / low-04))
       :ARG1-of (c13-1 / honest-01)
       :polarity -)

# ::snt annoying voice and song
# ::tokens ["annoying", "voice", "and", "song"]
# ::lemmas ["annoying", "voice", "and", "song"]
(c14-3 / and
       :op1 (c14-1 / voice)
       :op2 (c14-0 / song)
       :ARG0-of (c14-2 / embarrass-01))

# ::snt ft.
# ::tokens ["ft", "."]
# ::lemmas ["ft", "."]
(c15-0 / ft)

# ::snt Havana is story ,NBTS about Camila mind ,so small detail some part CITC ,some album and havana cover details
# ::tokens ["Havana", "is", "story", ",", "NBTS", "about", "Camila", "mind", ",", "so", "small", "detail", "some", "part", "CITC", ",", "some", "album", "and", "havana", "cover", "details"]
# ::lemmas ["Havana", "be", "story", ",", "NBTS", "about", "Camila", "mind", ",", "so", "small", "detail", "some", "part", "CITC", ",", "some", "album", "and", "havana", "cover", "detail"]
(c16-7 / and
       :op1 (c16-0 / story
                   :domain (c16-13 / country
                                   :name (c16-16 / name
                                                 :op1 "Havana")))
       :op2 (c16-20 / detail-01
                    :topic (c16-18 / person
                                   :name (c16-11 / name
                                                 :op1 "Camila"
                                                 :op2 "Mind"))
                    :degree (c16-4 / small))
       :op3 (c16-14 / detail-01
                    :ARG1 (c16-10 / part
                                  :mod (c16-3 / some)
                                  :part-of (c16-2 / program
                                                  :name (c16-19 / name
                                                                :op1 "CITC")))
                    :degree (c16-17 / some))
       :op4 (c16-12 / detail-01
                    :ARG1 (c16-6 / and
                                 :op1 (c16-5 / album
                                             :mod (c16-1 / some))
                                 :op2 (c16-8 / cover-03
                                             :ARG1 (c16-9 / music
                                                          :name (c16-15 / name
                                                                        :op1 "Havana"))))))

# ::snt Camila + Cabello = piece of art
# ::tokens ["Camila", "+", "Cabello", "=", "piece", "of", "art"]
# ::lemmas ["Camila", "+", "Cabello", "=", "piece", "of", "art"]
(c18-2 / equal-01
       :ARG1 (c18-1 / sum-of
                    :op1 (c18-5 / city
                                :name (c18-0 / name
                                             :op1 "Camila"))
                    :op2 (c18-7 / city
                                :name (c18-3 / name
                                             :op1 "Cabello")))
       :ARG2 (c18-4 / piece
                    :mod (c18-6 / art)))

# ::snt Queen ended flop harmony
# ::tokens ["Queen", "ended", "flop", "harmony"]
# ::lemmas ["queen", "end", "flop", "harmony"]
(c19-1 / end-01
       :ARG0 (c19-3 / queen)
       :ARG1 (c19-2 / harmony
                    :mod (c19-0 / flop)))

# ::snt VISUALS!!
# ::tokens ["VISUALS", "!", "!"]
# ::lemmas ["VISUALS", "!", "!"]
(c20-0 / visa)

# ::snt Queen coming for that top ten.
# ::tokens ["Queen", "coming", "for", "that", "top", "ten", "."]
# ::lemmas ["queen", "come", "for", "that", "top", "ten", "."]
(c21-3 / come-03
       :ARG1 (c21-2 / person
                    :name (c21-1 / name
                                 :op1 "Queen"))
       :ARG2 (c21-4 / top
                    :ord (c21-0 / ordinal-entity
                                :value 10)
                    :mod (c21-5 / that)))

# ::snt Queen snapped
# ::tokens ["Queen", "snapped"]
# ::lemmas ["Queen", "snap"]
(c22-3 / snap-04
       :ARG0 (c22-1 / person
                    :ARG0-of (c22-0 / have-org-role-91
                                    :ARG2 (c22-2 / queen))))

# ::snt ES LA FORZA , DEL PUELO , EL PUBE , LAS NOCHE
# ::tokens ["ES", "LA", "FORZA", ",", "DEL", "PUELO", ",", "EL", "PUBE", ",", "LAS", "NOCHE"]
# ::lemmas ["ES", "LA", "FORZA", ",", "DEL", "PUELO", ",", "EL", "PUBE", ",", "LAS", "NOCHE"]
(c23-7 / and
       :op1 (c23-2 / local-region
                   :name (c23-0 / name
                                :op1 "La"
                                :op2 "Forza"))
       :op2 (c23-8 / local-region
                   :name (c23-1 / name
                                :op1 "Del"
                                :op2 "Pelo"))
       :op3 (c23-3 / local-region
                   :name (c23-4 / name
                                :op1 "El"
                                :op2 "Pube"))
       :op4 (c23-6 / local-region
                   :name (c23-5 / name
                                :op1 "Las"
                                :op2 "Noches")))

# ::snt ctfu sjskjssks
# ::tokens ["ctfu", "sjskjssks"]
# ::lemmas ["ctfu", "sjskjssk"]
(c24-1 / say-01
       :ARG0 (c24-3 / i)
       :ARG1 (c24-4 / thing
                    :name (c24-0 / name
                                 :op1 "ctfu"))
       :ARG2 (c24-2 / person
                    :name c24-0
                    :op1 "skjssks"))

# ::snt Disappointing i prefer havana video :/
# ::tokens ["Disappointing", "i", "prefer", "havana", "video", ":/"]
# ::lemmas ["Disappointing", "i", "prefer", "havana", "video", ":/"]
(c25-5 / disappoint-01
       :ARG0 (c25-2 / prefer-01
                    :ARG0 (c25-4 / i)
                    :ARG1 (c25-1 / video
                                 :mod (c25-3 / work-of-art
                                             :name (c25-0 / name
                                                          :op1 "Haiti")))))

# ::snt CAMILA , NON TI DEPILARE , LE GAMBE , E L ANO . NON TI DEPILARE PIU' , NON TI DEPILARE PIU'
# ::tokens ["CAMILA", ",", "NON", "TI", "DEPILARE", ",", "LE", "GAMBE", ",", "E", "L", "ANO", ".", "NON", "TI", "DEPILARE", "PIU", "'", ",", "NON", "TI", "DEPILARE", "PIU", "'"]
# ::lemmas ["camila", ",", "NON", "TI", "DEPILARE", ",", "LE", "GAMBE", ",", "E", "L", "ANO", ".", "NON", "TI", "DEPILARE", "PIU", "'", ",", "NON", "TI", "DEPILARE", "PIU", "'"]
(c27-1 / multi-sentence
       :snt1 (c27-9 / and
                    :op1 (c27-6 / city
                                :name (c27-0 / name
                                             :op1 "Cambila"))
                    :op2 (c27-4 / product
                                :name (c27-3 / name
                                             :op1 "Non"
                                             :op2 "Ti"
                                             :op3 "DePilare")
                                :op3-of c27-9)
                    :name (c27-5 / name
                                 :op1 "Le"
                                 :op2 "Gambe"))
       :op4 c27-4
       :name (c27-7 / name
                    :op1 "E-l"
                    :op2 "Ano")
       :snt2 c27-9
       :op1 c27-4
       :name (c27-8 / name
                    :op1 "Non"
                    :op2 "Ti"
                    :op3 "DePilare")
       :op2 c27-4
       :op3 c27-4
       :name (c27-2 / name
                    :op1 "Non"
                    :op2 "Ti"
                    :op3 "DePilare")
       :polarity -
       :polarity -)

# ::snt visuals princess
# ::tokens ["visuals", "princess"]
# ::lemmas ["visual", "princess"]
(c29-1 / princess
       :mod (c29-0 / visual))

# ::snt The visuals are amazing Im really proud of this one
# ::tokens ["The", "visuals", "are", "amazing", "I", "m", "really", "proud", "of", "this", "one"]
# ::lemmas ["the", "visual", "be", "amazing", "i", "m", "really", "proud", "of", "this", "one"]
(c30-1 / and
       :op1 (c30-7 / amaze-01
                   :ARG0 (c30-2 / visual))
       :op2 (c30-4 / pride-01
                   :ARG0 (c30-6 / i)
                   :ARG1 (c30-0 / one
                                :mod (c30-5 / this))
                   :degree (c30-3 / really)))

# ::snt Yassss baby camila
# ::tokens ["Yassss", "baby", "camila"]
# ::lemmas ["Yassss", "baby", "camila"]
(c31-3 / person
       :name (c31-0 / name
                    :op1 "Camila")
       :mod (c31-1 / baby)
       :mod (c31-2 / yass
                   :mode expressive))

# ::snt Was boring, expected more
# ::tokens ["Was", "boring", ",", "expected", "more"]
# ::lemmas ["be", "bore", ",", "expect", "more"]
(c32-4 / and
       :op1 (c32-0 / bore-02
                   :ARG0 (c32-3 / i))
       :op2 (c32-2 / expect-01
                   :ARG0 c32-3
                   :ARG1 (c32-1 / more)))

# ::snt BITCH DIDNT COME TO PLAY
# ::tokens ["BITCH", "DIDNT", "COME", "TO", "PLAY"]
# ::lemmas ["BITCH", "didnt", "come", "to", "play"]
(c33-0 / come-01
       :ARG1 (c33-1 / bitch)
       :ARG4 (c33-2 / play-01
                    :ARG0 c33-1)
       :polarity -)

# ::snt Queen Lati went off
# ::tokens ["Queen", "Lati", "went", "off"]
# ::lemmas ["Queen", "Lati", "go", "off"]
(c34-4 / go-off-16
       :ARG1 (c34-2 / person
                    :name (c34-0 / name
                                 :op1 "Lati")
                    :ARG0-of (c34-1 / have-org-role-91
                                    :ARG2 (c34-3 / queen))))

# ::snt Dua has a top hit tho
# ::tokens ["Dua", "has", "a", "top", "hit", "tho"]
# ::lemmas ["Dua", "have", "a", "top", "hit", "tho"]
(c35-1 / have-concession-91
       :ARG1 (c35-3 / hit-01
                    :ARG0 (c35-2 / person
                                 :name (c35-0 / name
                                              :op1 "Dua"))
                    :mod (c35-4 / top)))

# ::snt Delicate video coming for wigs. Don't forget to stream and watch for good luck!
# ::tokens ["Delicate", "video", "coming", "for", "wigs", ".", "Do", "n't", "forget", "to", "stream", "and", "watch", "for", "good", "luck", "!"]
# ::lemmas ["delicate", "video", "come", "for", "wig", ".", "do", "not", "forget", "to", "stream", "and", "watch", "for", "good", "luck", "!"]
(c36-2 / multi-sentence
       :snt1 (c36-7 / come-03
                    :ARG1 (c36-4 / video
                                 :ARG1-of (c36-11 / complicate-01))
                    :ARG4 (c36-8 / wig))
       :snt2 (c36-0 / forget-01
                    :ARG0 (c36-1 / you)
                    :ARG1 (c36-9 / and
                                 :op1 (c36-3 / stream-01
                                             :ARG0 c36-1)
                                 :op2 (c36-6 / watch-01
                                             :ARG0 c36-1
                                             :ARG1 (c36-5 / luck
                                                          :ARG1-of (c36-10 / good-02))))
                    :polarity -
                    :mode imperative))

# ::snt SHE DID THAT!!! AGAIN . Shes gorgeous
# ::tokens ["SHE", "DID", "THAT", "!", "!", "!", "AGAIN", ".", "She", "s", "gorgeous"]
# ::lemmas ["SHE", "do", "that", "!", "!", "!", "again", ".", "she", "s", "gorgeous"]
(c37-0 / multi-sentence
       :snt1 (c37-6 / do-02
                    :ARG0 (c37-1 / she)
                    :ARG1 (c37-3 / that)
                    :mod (c37-4 / again)
                    :mode expressive)
       :snt2 (c37-5 / gorgeous
                    :domain (c37-2 / he)))

# ::snt Lati snapped omg
# ::tokens ["Lati", "snapped", "omg"]
# ::lemmas ["Lati", "snap", "omg"]
(c38-3 / snap-01
       :ARG1 (c38-2 / person
                    :name (c38-0 / name
                                 :op1 "Lati"))
       :mod (c38-1 / omg
                   :mode expressive))

# ::snt She looks so much like lati
# ::tokens ["She", "looks", "so", "much", "like", "lati"]
# ::lemmas ["she", "look", "so", "much", "like", "lat"]
(c40-3 / look-02
       :ARG0 (c40-2 / she)
       :ARG1 (c40-4 / lati)
       :degree (c40-1 / much
                      :degree (c40-0 / so)))

# ::snt coming for
# ::tokens ["coming", "for"]
# ::lemmas ["come", "for"]
(c41-0 / come-for-91)

# ::snt You care enough to reply to me
# ::tokens ["You", "care", "enough", "to", "reply", "to", "me"]
# ::lemmas ["you", "care", "enough", "to", "reply", "to", "i"]
(c42-3 / have-degree-91
       :ARG1 (c42-0 / you)
       :ARG2 (c42-4 / care-01
                    :ARG0 c42-0)
       :ARG3 (c42-2 / enough)
       :ARG6 (c42-1 / reply-01
                    :ARG0 c42-0
                    :ARG1 (c42-5 / i)))

# ::snt legend
# ::tokens ["legend"]
# ::lemmas ["legend"]
(c43-0 / legacy)

# ::snt You cared enough to comment
# ::tokens ["You", "cared", "enough", "to", "comment"]
# ::lemmas ["you", "care", "enough", "to", "comment"]
(c44-3 / care-01
       :ARG0 (c44-0 / you)
       :ARG1-of (c44-2 / have-quant-91
                       :ARG3 (c44-1 / enough)
                       :ARG6 (c44-4 / comment-01
                                    :ARG0 c44-0)))

# ::snt QUEEN
# ::tokens ["QUEEN"]
# ::lemmas ["queen"]
(c45-1 / person
       :name (c45-0 / name
                    :op1 "QUEEN"))

# ::snt served visuals we stan
# ::tokens ["served", "visuals", "we", "stan"]
# ::lemmas ["serve", "visual", "we", "stan"]
(c46-3 / see-01
       :ARG0 (c46-0 / we)
       :ARG1 (c46-1 / visual)
       :ARG1-of (c46-2 / serve-02
                       :ARG0 c46-0))

# ::snt Visuals on point
# ::tokens ["Visuals", "on", "point"]
# ::lemmas ["visual", "on", "point"]
(c47-1 / visual
       :location (c47-0 / on-point))

# ::snt Dont care
# ::tokens ["Do", "nt", "care"]
# ::lemmas ["do", "nt", "care"]
(c48-0 / care-01
       :ARG0 (c48-1 / you)
       :polarity -
       :mode imperative)
