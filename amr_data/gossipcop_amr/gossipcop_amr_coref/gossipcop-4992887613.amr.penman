# ::snt Freedom to watch bravo or E! relies on our democracys survival
# ::tokens ["Freedom", "to", "watch", "bravo", "or", "E", "!", "relies", "on", "our", "democracys", "survival"]
# ::lemmas ["freedom", "to", "watch", "bravo", "or", "e", "!", "rely", "on", "our", "democracys", "survival"]
(c2-6 / rely-01
      :ARG0 (c2-1 / free-04
                  :ARG3 (c2-12 / watch-01
                               :ARG0 (c2-10 / we)
                               :ARG1 (c2-0 / or
                                           :op1 (c2-2 / bravo)
                                           :op2 (c2-7 / broadcast-program
                                                      :name (c2-3 / name
                                                                  :op1 "E!")))))
      :ARG1 (c2-5 / survive-01
                  :ARG0 (c2-8 / person
                              :ARG0-of (c2-9 / have-org-role-91
                                             :ARG1 (c2-4 / political-party
                                                         :name (c2-11 / name
                                                                      :op1 "Democratic"
                                                                      :op2 "Party")))
                              :poss c2-10)))

# ::snt Tricky!
# ::tokens ["Tricky", "!"]
# ::lemmas ["tricky", "!"]
(c3-0 / tricky-02)

# ::snt omg it thought it was gonna be fake wtf
# ::tokens ["omg", "it", "thought", "it", "was", "gon", "na", "be", "fake", "wtf"]
# ::lemmas ["omg", "it", "think", "it", "be", "going", "to", "be", "fake", "wtf"]
(c4-5 / think-01
      :ARG0 (c4-4 / it)
      :ARG1 (c4-0 / fake-02
                  :ARG1 (c4-2 / it))
      :mod (c4-3 / fuck
                 :mode expressive)
      :mod (c4-1 / oh-my-god
                 :mode expressive))

# ::snt Stream With You
# ::tokens ["Stream", "With", "You"]
# ::lemmas ["stream", "with", "you"]
(c5-1 / stream-01
      :accompanier (c5-0 / you))

# ::snt Well played.
# ::tokens ["Well", "played", "."]
# ::lemmas ["well", "play", "."]
(c6-1 / play-01
      :ARG1-of (c6-0 / well-09))

# ::snt sure? me /?
# ::tokens ["sure", "?", "me", "/", "?"]
# ::lemmas ["sure", "?", "i", "/", "?"]
(c7-2 / sure-02
      :polarity (c7-4 / amr-unknown)
      :ARG1 (c7-0 / or
                  :op1 (c7-3 / i)
                  :op2 (c7-1 / you)))

# ::snt You are brilliant... may I borrow that?
# ::tokens ["You", "are", "brilliant", "...", "may", "I", "borrow", "that", "?"]
# ::lemmas ["you", "be", "brilliant", "...", "may", "i", "borrow", "that", "?"]
(c8-2 / multi-sentence
      :snt1 (c8-0 / brilliant-01
                  :ARG1 (c8-1 / you))
      :snt2 (c8-4 / permit-01
                  :ARG1 (c8-3 / borrow-01
                              :ARG0 (c8-5 / i)
                              :ARG1 (c8-6 / that))
                  :ARG2 c8-5
                  :polite +))

# ::snt Well played sir...well played
# ::tokens ["Well", "played", "sir", "...", "well", "played"]
# ::lemmas ["well", "play", "sir", "...", "well", "play"]
(c9-2 / say-01
      :ARG1 (c9-6 / and
                  :op1 (c9-3 / play-01
                             :ARG0 (c9-0 / sir)
                             :ARG1-of (c9-5 / well-09))
                  :op2 (c9-1 / play-01
                             :ARG0 c9-0
                             :ARG1-of (c9-4 / well-09)))
      :ARG2 c9-0)

# ::snt iz u still hoen/? coon yeee nooo say it aint sooo
# ::tokens ["iz", "u", "still", "hoen/", "?", "coon", "yeee", "nooo", "say", "it", "ai", "nt", "sooo"]
# ::lemmas ["iz", "u", "still", "hoen/", "?", "coon", "yeee", "nooo", "say", "it", "be", "not", "sooo"]
(c10-6 / cause-01
       :ARG0 (c10-9 / and
                    :op1 (c10-4 / hey
                                :domain (c10-1 / you)
                                :mod (c10-2 / still)
                                :mode expressive)
                    :op2 (c10-7 / hey
                                :ARG1-of (c10-0 / say-01
                                                :ARG0 (c10-8 / they)
                                                :ARG1-of (c10-10 / cause-01
                                                                 :ARG0 (c10-5 / possible-01
                                                                              :ARG1 (c10-11 / so)
                                                                              :polarity -)))
                                :mode expressive))
       :ARG1 (c10-3 / hoen-00
                    :ARG1 c10-1
                    :mod c10-2))

# ::snt ....sneaky bastard...
# ::tokens ["....", "sneaky", "bastard", "..."]
# ::lemmas ["....", "sneaky", "bastard", "..."]
(c11-0 / bastard
       :ARG0-of (c11-1 / sneaky-03))

# ::snt I can't take credit for originality
# ::tokens ["I", "ca", "n't", "take", "credit", "for", "originality"]
# ::lemmas ["i", "can", "not", "take", "credit", "for", "originality"]
(c12-1 / possible-01
       :ARG1 (c12-4 / take-01
                    :ARG0 (c12-3 / i)
                    :ARG1 (c12-2 / credit-01
                                 :ARG1 c12-3
                                 :ARG2 (c12-0 / originality)))
       :polarity -)

# ::snt Almost unfair...
# ::tokens ["Almost", "unfair", "..."]
# ::lemmas ["almost", "unfair", "..."]
(c14-0 / fair-01
       :mod (c14-1 / almost)
       :polarity -)

# ::snt Nice one prof. Lol
# ::tokens ["Nice", "one", "prof", ".", "Lol"]
# ::lemmas ["nice", "one", "prof", ".", "Lol"]
(c15-2 / multi-sentence
       :snt1 (c15-3 / say-01
                    :ARG1 (c15-1 / nice-01
                                 :ARG1 (c15-0 / one))
                    :ARG2 (c15-4 / prof))
       :snt2 (c15-5 / laugh-01
                    :ARG0 (c15-6 / i)
                    :manner (c15-7 / loud)
                    :mode expressive))

# ::snt Honestly, $50,000 isn't that shocking to build a pool. And by is pretty big but not ridiculous or anything. Those pools with all the grottoes and crap cost well into the $100K range. Not sure why this is even a headline...
# ::tokens ["Honestly", ",", "$", "50,000", "is", "n't", "that", "shocking", "to", "build", "a", "pool", ".", "And", "by", "is", "pretty", "big", "but", "not", "ridiculous", "or", "anything", ".", "Those", "pools", "with", "all", "the", "grottoes", "and", "crap", "cost", "well", "into", "the", "$", "100", "K", "range", ".", "Not", "sure", "why", "this", "is", "even", "a", "headline", "..."]
# ::lemmas ["honestly", ",", "$", "50,000", "be", "not", "that", "shocking", "to", "build", "a", "pool", ".", "and", "by", "be", "pretty", "big", "but", "not", "ridiculous", "or", "anything", ".", "those", "pool", "with", "all", "the", "grotto", "and", "crap", "cost", "well", "into", "the", "$", "100", "K", "range", ".", "not", "sure", "why", "this", "be", "even", "a", "headline", "..."]
(c16-17 / multi-sentence
        :snt1 (c16-0 / shock-01
                     :ARG0 (c16-16 / build-01
                                   :ARG1 (c16-26 / pool))
                     :ARG2 (c16-8 / monetary-quantity
                                  :unit (c16-30 / dollar)
                                  :quant 50000)
                     :mod (c16-13 / that)
                     :ARG1-of (c16-9 / honest-01)
                     :polarity -)
        :snt2 (c16-19 / contrast-01
                      :ARG1 (c16-2 / big
                                   :degree (c16-18 / pretty))
                      :ARG2 (c16-6 / or
                                   :op1 (c16-24 / ridiculous-02
                                                :polarity -)
                                   :op2 (c16-12 / anything)))
        :snt3 (c16-15 / cost-01
                      :ARG1 (c16-4 / pool
                                   :mod (c16-21 / that)
                                   :poss-of (c16-11 / and
                                                    :op1 (c16-14 / grottoe
                                                                 :mod (c16-10 / all))
                                                    :op2 (c16-3 / crap
                                                                :mod c16-10))))
        :ARG2 (c16-22 / monetary-quantity
                      :unit (c16-20 / dollar)
                      :ARG5-of (c16-5 / range-01)
                      :quant 100000)
        :snt4 (c16-7 / sure-02
                     :ARG0 (c16-28 / i)
                     :ARG1 (c16-29 / thing
                                   :ARG0-of (c16-23 / cause-01
                                                    :ARG1 (c16-27 / headline-01
                                                                  :mod (c16-25 / even)
                                                                  :domain (c16-1 / this))))
                     :polarity -))

# ::snt Thats a good one
# ::tokens ["That", "s", "a", "good", "one"]
# ::lemmas ["that", "s", "a", "good", "one"]
(c17-0 / good-02
       :ARG1 (c17-1 / that))

# ::snt Well played lol
# ::tokens ["Well", "played", "lol"]
# ::lemmas ["well", "play", "lol"]
(c18-1 / play-01
       :ARG0 (c18-0 / you)
       :ARG1-of (c18-2 / laugh-01
                       :ARG0 (c18-4 / i)
                       :manner (c18-5 / loud))
       :ARG1-of (c18-3 / well-09))

# ::snt Read all about it by clicking the link. Word is Kanye has a crush on . In the article--just click and read the story.
# ::tokens ["Read", "all", "about", "it", "by", "clicking", "the", "link", ".", "Word", "is", "Kanye", "has", "a", "crush", "on", ".", "In", "the", "article", "--", "just", "click", "and", "read", "the", "story", "."]
# ::lemmas ["read", "all", "about", "it", "by", "click", "the", "link", ".", "Word", "be", "Kanye", "have", "a", "crush", "on", ".", "in", "the", "article", "--", "just", "click", "and", "read", "the", "story", "."]
(c19-1 / multi-sentence
       :snt1 (c19-4 / read-01
                    :ARG1 (c19-12 / it
                                  :mod (c19-13 / all))
                    :manner (c19-7 / click-01
                                   :ARG1 (c19-5 / link)))
       :snt2 (c19-8 / word-01
                    :ARG1 (c19-16 / crush-02
                                  :ARG0 (c19-6 / person
                                               :name (c19-2 / name
                                                            :op1 "Kanye"))))
       :snt3 (c19-14 / and
                     :op1 (c19-10 / click-01
                                  :ARG0 (c19-0 / you)
                                  :mod (c19-11 / just)
                                  :mode imperative)
                     :op2 (c19-15 / read-01
                                  :ARG0 c19-0
                                  :ARG1 (c19-3 / story)
                                  :mode imperative)
                     :location (c19-9 / article)))

# ::snt Lol what
# ::tokens ["Lol", "what"]
# ::lemmas ["Lol", "what"]
(c20-2 / thing
       :mod (c20-1 / laugh-01
                   :manner (c20-0 / loud)
                   :mode expressive))

# ::snt Hahaha!
# ::tokens ["Hahaha", "!"]
# ::lemmas ["Hahaha", "!"]
(c21-0 / haha
       :mode expressive)

# ::snt Thank god for you, sir or madam.
# ::tokens ["Thank", "god", "for", "you", ",", "sir", "or", "madam", "."]
# ::lemmas ["thank", "god", "for", "you", ",", "sir", "or", "madam", "."]
(c23-8 / thank-01
       :ARG0 (c23-7 / i)
       :ARG1 (c23-0 / or
                    :op1 (c23-5 / person
                                :name (c23-2 / name
                                             :op1 "God"))
                    :op2 (c23-3 / person
                                :name (c23-4 / name
                                             :op1 " sir"))
                    :op3 (c23-9 / person
                                :name (c23-6 / name
                                             :op1 "Madam")))
       :ARG2 (c23-1 / you))

# ::snt Ya got me good with that one! I'm already ready though
# ::tokens ["Ya", "got", "me", "good", "with", "that", "one", "!", "I", "'m", "already", "ready", "though"]
# ::lemmas ["Ya", "get", "i", "good", "with", "that", "one", "!", "i", "be", "already", "ready", "though"]
(c24-2 / multi-sentence
       :snt1 (c24-10 / get-02
                     :ARG0 (c24-1 / you)
                     :ARG1 (c24-9 / good-03
                                  :ARG1 (c24-8 / i)
                                  :prep-with (c24-0 / one
                                                    :mod (c24-7 / that))))
       :snt2 (c24-4 / ready-02
                    :ARG0 (c24-3 / i)
                    :time (c24-5 / already)
                    :ARG1-of (c24-6 / have-concession-91)))

# ::snt i had to click it times to make sure. i see what u did there!
# ::tokens ["i", "had", "to", "click", "it", "times", "to", "make", "sure", ".", "i", "see", "what", "u", "did", "there", "!"]
# ::lemmas ["i", "have", "to", "click", "it", "time", "to", "make", "sure", ".", "i", "see", "what", "u", "do", "there", "!"]
(c25-2 / multi-sentence
       :snt1 (c25-0 / obligate-01
                    :ARG1 (c25-7 / i)
                    :ARG2 (c25-6 / click-01
                                 :ARG0 c25-7
                                 :ARG1 (c25-4 / it)
                                 :frequency (c25-8 / time)
                                 :purpose (c25-5 / ensure-01
                                                 :ARG0 c25-7)))
       :snt2 (c25-3 / see-01
                    :ARG0 (c25-11 / i)
                    :ARG1 (c25-12 / thing
                                  :ARG1-of (c25-10 / do-02
                                                   :ARG0 (c25-1 / you)
                                                   :location (c25-9 / there)))))

# ::snt I order all mine from here
# ::tokens ["I", "order", "all", "mine", "from", "here"]
# ::lemmas ["i", "order", "all", "mine", "from", "here"]
(c26-0 / order-02
       :ARG0 (c26-3 / i)
       :ARG1 (c26-2 / thing
                    :mod (c26-4 / all)
                    :poss c26-3)
       :source (c26-1 / here))

# ::snt It is
# ::tokens ["It", "is"]
# ::lemmas ["it", "be"]
(c27-0 / it)

# ::snt I think you should click if you live in America lol
# ::tokens ["I", "think", "you", "should", "click", "if", "you", "live", "in", "America", "lol"]
# ::lemmas ["i", "think", "you", "should", "click", "if", "you", "live", "in", "America", "lol"]
(c28-7 / think-01
       :ARG0 (c28-6 / i)
       :ARG1 (c28-2 / recommend-01
                    :ARG1 (c28-5 / click-01
                                 :ARG0 (c28-0 / you
                                              :ARG2-of c28-2))
                    :condition (c28-3 / live-01
                                      :ARG0 c28-0
                                      :location (c28-9 / country
                                                       :name (c28-1 / name
                                                                    :op1 "America")))
                    :ARG2-of (c28-8 / laugh-01
                                    :ARG0 c28-6
                                    :manner (c28-4 / loud)
                                    :mode expressive)))

# ::snt link clicks lol
# ::tokens ["link", "clicks", "lol"]
# ::lemmas ["link", "click", "lol"]
(c29-0 / click-01
       :ARG0 (c29-3 / link)
       :ARG2-of (c29-1 / laugh-01
                       :manner (c29-2 / loud)
                       :mode expressive))

# ::snt got em!
# ::tokens ["got", "em", "!"]
# ::lemmas ["get", "em", "!"]
(c32-0 / get-01
       :ARG1 (c32-1 / they))

# ::snt Congrats! Better play Celebration at least once. "Grab a drink grab a glass, after dat I grab yo ..."
# ::tokens ["Congrats", "!", "Better", "play", "Celebration", "at", "least", "once", ".", "\"", "Grab", "a", "drink", "grab", "a", "glass", ",", "after", "dat", "I", "grab", "yo", "...", "\""]
# ::lemmas ["Congrats", "!", "well", "play", "Celebration", "at", "least", "once", ".", "\"", "grab", "a", "drink", "grab", "a", "glass", ",", "after", "dat", "i", "grab", "yo", "...", "\""]
(c33-14 / multi-sentence
        :snt1 (c33-15 / congratulate-01
                      :mode expressive)
        :snt2 (c33-16 / play-01
                      :ARG0 (c33-4 / you)
                      :ARG1 (c33-13 / celebrate-01)
                      :ARG1-of (c33-5 / have-degree-91
                                      :ARG2 (c33-10 / good-02
                                                    :ARG1 c33-16)
                                      :ARG3 (c33-6 / more))
                      :frequency (c33-9 / at-least
                                        :op1 1)
                      :mode imperative)
        :snt3 (c33-0 / say-01
                     :ARG1 (c33-8 / and
                                  :op1 (c33-2 / grab-01
                                              :ARG0 (c33-11 / you)
                                              :ARG1 (c33-18 / drink)
                                              :mode imperative)
                                  :op2 (c33-3 / grab-01
                                              :ARG0 c33-11
                                              :ARG1 (c33-12 / glass)
                                              :mode imperative)
                                  :time (c33-7 / after
                                               :op1 (c33-1 / grab-01
                                                           :ARG0 (c33-17 / i)
                                                           :ARG1 c33-11)))))

# ::snt Hell yeah if or wants to help out I wouldnt be opposed
# ::tokens ["Hell", "yeah", "if", "or", "wants", "to", "help", "out", "I", "would", "nt", "be", "opposed"]
# ::lemmas ["hell", "yeah", "if", "or", "want", "to", "help", "out", "i", "would", "not", "be", "oppose"]
(c34-1 / oppose-01
       :ARG0 (c34-7 / i)
       :condition (c34-0 / or
                         :op1 (c34-4 / help-out-03
                                     :ARG0 c34-7)
                         :op2 (c34-5 / want-01
                                     :ARG0 c34-7
                                     :ARG1 (c34-6 / help-out-03
                                                  :ARG0 c34-7)))
       :mod (c34-2 / yeah
                   :mod (c34-3 / hell)
                   :mode expressive)
       :polarity -)

# ::snt god that is awesome. it would seriously be the coolest fucking thing if they attended. i know is followed by Kim. maybe contact them?
# ::tokens ["god", "that", "is", "awesome", ".", "it", "would", "seriously", "be", "the", "coolest", "fucking", "thing", "if", "they", "attended", ".", "i", "know", "is", "followed", "by", "Kim", ".", "maybe", "contact", "them", "?"]
# ::lemmas ["god", "that", "be", "awesome", ".", "it", "would", "seriously", "be", "the", "cool", "fucking", "thing", "if", "they", "attend", ".", "i", "know", "be", "follow", "by", "Kim", ".", "maybe", "contact", "they", "?"]
(c35-11 / multi-sentence
        :snt1 (c35-8 / awesome-03
                     :ARG0 (c35-9 / that)
                     :ARG1 (c35-18 / person
                                   :name (c35-17 / name
                                                 :op1 "God")))
        :snt2 (c35-3 / have-condition-91
                     :ARG1 (c35-20 / have-degree-91
                                   :ARG1 (c35-15 / thing
                                                 :domain (c35-7 / attend-01
                                                                :ARG0 (c35-21 / they))
                                                 :mod (c35-16 / fucking))
                                   :ARG2 (c35-14 / cool-04
                                                 :ARG1 c35-15)
                                   :ARG3 (c35-4 / most))
                     :ARG2 c35-7
                     :ARG1-of (c35-0 / serious-02))
        :snt3 (c35-5 / know-01
                     :ARG0 (c35-22 / i)
                     :ARG1 (c35-19 / follow-01
                                   :ARG1 (c35-12 / person
                                                 :name (c35-13 / name
                                                               :op1 "Kim"))))
        :snt4 (c35-2 / possible-01
                     :ARG1 (c35-10 / contact-01
                                   :ARG1 (c35-1 / they)
                                   :polarity (c35-6 / amr-unknown))))

# ::snt Can i come ?
# ::tokens ["Can", "i", "come", "?"]
# ::lemmas ["can", "i", "come", "?"]
(c36-1 / possible-01
       :polarity (c36-3 / amr-unknown)
       :ARG1 (c36-0 / come-01
                    :ARG1 (c36-2 / i)))

# ::snt Congrats.. wishing that and make it....
# ::tokens ["Congrats", "..", "wishing", "that", "and", "make", "it", "...."]
# ::lemmas ["Congrats", "..", "wish", "that", "and", "make", "it", "...."]
(c37-1 / and
       :op1 (c37-2 / congratulate-01)
       :op2 (c37-4 / and
                   :op1 (c37-3 / wish-01
                               :ARG1 (c37-5 / that))
                   :op2 (c37-0 / make-18
                               :ARG1 (c37-6 / it))))

# ::snt Should have written that slides (of any size) are acceptable attire just to be sure he knows.
# ::tokens ["Should", "have", "written", "that", "slides", "(", "of", "any", "size", ")", "are", "acceptable", "attire", "just", "to", "be", "sure", "he", "knows", "."]
# ::lemmas ["should", "have", "write", "that", "slide", "(", "of", "any", "size", ")", "be", "acceptable", "attire", "just", "to", "be", "sure", "he", "know", "."]
(c38-2 / recommend-01
       :ARG1 (c38-6 / write-01
                    :ARG1 (c38-4 / possible-01
                                 :ARG1 (c38-10 / accept-01
                                               :ARG1 (c38-9 / attire
                                                            :mod (c38-1 / slide
                                                                        :mod (c38-0 / size
                                                                                    :mod (c38-7 / any)))))))
       :purpose (c38-11 / sure-02
                        :ARG0 (c38-3 / he)
                        :ARG1 (c38-5 / know-01
                                     :ARG0 c38-3)
                        :mod (c38-8 / just)))

# ::snt Always so optimistic lol.
# ::tokens ["Always", "so", "optimistic", "lol", "."]
# ::lemmas ["always", "so", "optimistic", "lol", "."]
(c40-0 / optimistic
       :time (c40-3 / always)
       :degree (c40-1 / so)
       :ARG2-of (c40-2 / laugh-01
                       :manner (c40-4 / loud)
                       :mode expressive))

# ::snt aww!! congrats &amp; good luck
# ::tokens ["aww", "!", "!", "congrats", "&", "amp", ";", "good", "luck"]
# ::lemmas ["aww", "!", "!", "congrats", "&", "amp", ";", "good", "luck"]
(c41-0 / multi-sentence
       :snt1 (c41-4 / wow
                    :mode expressive)
       :snt2 (c41-6 / and
                    :op1 (c41-5 / congratulate-01
                                :ARG1 (c41-2 / person
                                             :name (c41-1 / name
                                                          :op1 "Andy")))
                    :op2 (c41-3 / luck
                                :ARG1-of (c41-7 / good-02))))

# ::snt Amazing! All the best bro!
# ::tokens ["Amazing", "!", "All", "the", "best", "bro", "!"]
# ::lemmas ["amazing", "!", "all", "the", "good", "bro", "!"]
(c42-1 / multi-sentence
       :snt1 (c42-2 / amaze-01)
       :snt2 (c42-5 / wish-01
                    :ARG1 (c42-7 / thing
                                 :mod (c42-6 / all)
                                 :ARG1-of (c42-3 / have-degree-91
                                                 :ARG2 (c42-8 / good-02
                                                              :ARG1 c42-7)
                                                 :ARG3 (c42-4 / most)))
                    :ARG2 (c42-0 / bro)))

# ::snt DM me for details!
# ::tokens ["DM", "me", "for", "details", "!"]
# ::lemmas ["dm", "i", "for", "detail", "!"]
(c43-0 / DM-01
       :ARG0 (c43-2 / you)
       :ARG1 (c43-3 / i)
       :ARG2 (c43-1 / detail)
       :mode imperative)

# ::snt Genius
# ::tokens ["Genius"]
# ::lemmas ["genius"]
(c45-1 / person
       :name (c45-0 / name
                    :op1 "Genius"))

# ::snt Fool me once ....not gonna click
# ::tokens ["Fool", "me", "once", "....", "not", "gon", "na", "click"]
# ::lemmas ["fool", "i", "once", "....", "not", "going", "to", "click"]
(c46-5 / and
       :op1 (c46-1 / ool-01
                   :ARG0 (c46-2 / you)
                   :ARG1 (c46-4 / i)
                   :time (c46-0 / once)
                   :mode imperative)
       :op2 (c46-3 / click-01
                   :ARG0 c46-2
                   :polarity -
                   :mode imperative))

# ::snt Did m7 as for a loan oba they refused?
# ::tokens ["Did", "m7", "as", "for", "a", "loan", "oba", "they", "refused", "?"]
# ::lemmas ["do", "m7", "as", "for", "a", "loan", "oba", "they", "refuse", "?"]
(c47-1 / amr-unknown
       :polarity (c47-3 / amr-unknown)
       :topic (c47-2 / loan-01
                     :ARG2 (c47-4 / they)
                     :ARG1-of (c47-0 / refuse-01
                                     :ARG0 c47-4
                                     :ARG1-of (c47-5 / request-confirmation-91))))

# ::snt I cant decide if this works better or worse this year...
# ::tokens ["I", "ca", "nt", "decide", "if", "this", "works", "better", "or", "worse", "this", "year", "..."]
# ::lemmas ["i", "can", "not", "decide", "if", "this", "work", "well", "or", "bad", "this", "year", "..."]
(c48-5 / possible-01
       :ARG1 (c48-13 / decide-01
                     :ARG0 (c48-10 / i)
                     :ARG1 (c48-0 / or
                                  :op1 (c48-8 / work-09
                                              :ARG1 (c48-11 / this)
                                              :ARG1-of (c48-4 / have-degree-91
                                                              :ARG2 (c48-12 / good-02
                                                                            :ARG1 c48-8)
                                                              :ARG3 (c48-3 / more)))
                                  :op2 (c48-7 / work-09
                                              :ARG1 c48-11
                                              :ARG1-of (c48-9 / have-degree-91
                                                              :ARG2 (c48-1 / bad-07
                                                                           :ARG1 c48-7)
                                                              :ARG3 (c48-6 / more)))
                                  :time (c48-2 / year
                                               :mod c48-11)))
       :polarity -)

# ::snt Lol! You got me!
# ::tokens ["Lol", "!", "You", "got", "me", "!"]
# ::lemmas ["Lol", "!", "you", "get", "i", "!"]
(c49-1 / multi-sentence
       :snt1 (c49-2 / laugh-01
                    :manner (c49-5 / loud)
                    :mode expressive)
       :snt2 (c49-4 / get-01
                    :ARG0 (c49-0 / you)
                    :ARG1 (c49-3 / i)))

# ::snt Lol, that's perfect.
# ::tokens ["Lol", ",", "that", "'s", "perfect", "."]
# ::lemmas ["Lol", ",", "that", "be", "perfect", "."]
(c50-1 / perfect-02
       :ARG1 (c50-3 / that)
       :mod (c50-2 / laugh-01
                   :manner (c50-0 / loud)
                   :mode expressive))
