# ::snt I completely agree!! Give these famous people a break!! They are human!!
# ::tokens ["I", "completely", "agree", "!", "!", "Give", "these", "famous", "people", "a", "break", "!", "!", "They", "are", "human", "!", "!"]
# ::lemmas ["i", "completely", "agree", "!", "!", "give", "these", "famous", "people", "a", "break", "!", "!", "they", "be", "human", "!", "!"]
(c1-3 / multi-sentence
      :snt1 (c1-9 / agree-01
                  :ARG0 (c1-8 / i)
                  :ARG1-of (c1-6 / complete-02))
      :snt2 (c1-10 / give-01
                   :ARG0 (c1-2 / you)
                   :ARG1 (c1-1 / break-19)
                   :ARG2 (c1-5 / person
                               :ARG1-of (c1-0 / fame-01)
                               :mod (c1-7 / this))
                   :mode imperative)
      :snt3 (c1-4 / human
                  :domain (c1-11 / they)))

# ::snt Jeff, I thought the same thing!! People get them daily!!! Why did this make national news as well?
# ::tokens ["Jeff", ",", "I", "thought", "the", "same", "thing", "!", "!", "People", "get", "them", "daily", "!", "!", "!", "Why", "did", "this", "make", "national", "news", "as", "well", "?"]
# ::lemmas ["Jeff", ",", "i", "think", "the", "same", "thing", "!", "!", "people", "get", "they", "daily", "!", "!", "!", "why", "do", "this", "make", "national", "news", "as", "well", "?"]
(c2-9 / multi-sentence
      :snt1 (c2-0 / say-01
                  :ARG0 (c2-18 / i)
                  :ARG1 (c2-7 / think-01
                              :ARG0 c2-18
                              :ARG1 (c2-13 / thing
                                           :ARG1-of (c2-2 / same-01)))
                  :ARG2 (c2-16 / person
                               :name (c2-14 / name
                                            :op1 "Jeff")))
      :snt2 (c2-8 / get-01
                  :ARG0 (c2-10 / person)
                  :ARG1 (c2-19 / they)
                  :frequency (c2-15 / rate-entity-91
                                    :ARG3 (c2-1 / temporal-quantity
                                                :unit (c2-20 / day)
                                                :quant 1)))
      :snt3 (c2-12 / cause-01
                   :ARG0 (c2-5 / amr-unknown)
                   :ARG1 (c2-3 / make-18
                               :ARG0 (c2-6 / this)
                               :ARG1 (c2-11 / news
                                            :mod (c2-17 / nation))
                               :mod (c2-4 / as-well))))

# ::snt Another example of how awful the is. An actor, in LA is picked up for DUI. Why is that news in Springfield?
# ::tokens ["Another", "example", "of", "how", "awful", "the", "is", ".", "An", "actor", ",", "in", "LA", "is", "picked", "up", "for", "DUI", ".", "Why", "is", "that", "news", "in", "Springfield", "?"]
# ::lemmas ["another", "example", "of", "how", "awful", "the", "be", ".", "an", "actor", ",", "in", "LA", "be", "pick", "up", "for", "DUI", ".", "why", "be", "that", "news", "in", "Springfield", "?"]
(c3-7 / multi-sentence
      :snt1 (c3-14 / exemplify-01
                   :ARG0 (c3-15 / pick-up-05
                                :ARG1 (c3-8 / person
                                            :ARG0-of (c3-5 / act-01)
                                            :location (c3-10 / city
                                                             :name (c3-12 / name
                                                                          :op1 "LA")))
                                :ARG1-of (c3-6 / cause-01
                                               :ARG0 (c3-13 / drive-01
                                                            :ARG0 c3-8
                                                            :manner (c3-17 / influence-01
                                                                           :ARG1 c3-8))))
                   :ARG1 (c3-3 / awful
                               :degree (c3-0 / so))
                   :mod (c3-2 / another))
      :snt2 (c3-1 / cause-01
                  :ARG0 (c3-18 / amr-unknown)
                  :ARG1 (c3-9 / news
                              :mod (c3-4 / that)
                              :location (c3-11 / city
                                               :name (c3-16 / name
                                                            :op1 "Springfield")))))

# ::snt Oh NO for REAL wow community services EL BORRACHO
# ::tokens ["Oh", "NO", "for", "REAL", "wow", "community", "services", "EL", "BORRACHO"]
# ::lemmas ["oh", "no", "for", "real", "wow", "community", "service", "EL", "BORRACHO"]
(c4-1 / multi-sentence
      :snt1 (c4-0 / oh-no
                  :mod (c4-4 / wow
                             :ARG1-of (c4-3 / real-04)
                             :mode expressive)
                  :mode expressive)
      :snt2 (c4-2 / serve-01
                  :ARG2 (c4-5 / community)
                  :mod (c4-6 / amr-unintelligible
                             :value "EL")))

# ::snt His career has been in the crapper since True Detective Season Two. Uber it, drunk - before you kill somebody.
# ::tokens ["His", "career", "has", "been", "in", "the", "crapper", "since", "True", "Detective", "Season", "Two", ".", "Uber", "it", ",", "drunk", "-", "before", "you", "kill", "somebody", "."]
# ::lemmas ["his", "career", "have", "be", "in", "the", "crapper", "since", "True", "Detective", "Season", "Two", ".", "uber", "it", ",", "drunk", "-", "before", "you", "kill", "somebody", "."]
(c5-3 / multi-sentence
      :snt1 (c5-9 / career
                  :poss (c5-6 / he)
                  :location (c5-13 / crapper)
                  :time (c5-5 / since
                              :op1 (c5-0 / season
                                         :part-of (c5-1 / broadcast-program
                                                        :name (c5-4 / name
                                                                    :op1 "True"
                                                                    :op2 "Detective"))
                                         :mod 2)))
      :snt2 (c5-12 / Uber-00
                   :ARG0 (c5-2 / you)
                   :ARG1 (c5-10 / it)
                   :manner (c5-11 / drunk)
                   :time (c5-7 / before
                               :op1 (c5-8 / kill-01
                                          :ARG0 c5-2
                                          :ARG1 (c5-14 / somebody)))
                   :mode imperative))

# ::snt Noooo really? I could not help but wonder- why u need all those money when you cant afford a chauffeur
# ::tokens ["Noooo", "really", "?", "I", "could", "not", "help", "but", "wonder-", "why", "u", "need", "all", "those", "money", "when", "you", "ca", "nt", "afford", "a", "chauffeur"]
# ::lemmas ["Noooo", "really", "?", "i", "could", "not", "help", "but", "wonder-", "why", "u", "need", "all", "those", "money", "when", "you", "can", "not", "afford", "a", "chauffeur"]
(c7-1 / multi-sentence
      :snt1 (c7-4 / real-04
                  :polarity (c7-13 / amr-unknown)
                  :polarity -)
      :snt2 (c7-6 / possible-01
                  :ARG1 (c7-5 / help-02
                              :ARG0 (c7-12 / i)
                              :ARG1 (c7-8 / wonder-01
                                          :ARG0 c7-12
                                          :ARG1 (c7-11 / thing
                                                       :ARG0-of (c7-9 / cause-01
                                                                      :ARG1 (c7-2 / need-01
                                                                                  :ARG0 (c7-0 / you)
                                                                                  :ARG1 (c7-7 / money
                                                                                              :mod (c7-14 / all)
                                                                                              :mod (c7-16 / that))
                                                                                  :condition (c7-3 / possible-01
                                                                                                   :ARG1 (c7-10 / afford-01
                                                                                                                :ARG0 c7-0
                                                                                                                :ARG1 (c7-15 / chauvinur))
                                                                                                   :polarity -))))))
                  :polarity -))

# ::snt Nooooooo!
# ::tokens ["Nooooooo", "!"]
# ::lemmas ["Nooooooo", "!"]
(c8-0 / no)

# ::snt Guilty
# ::tokens ["Guilty"]
# ::lemmas ["guilty"]
(c9-0 / guilty-01)

# ::snt Such a stupid mistake in general, but even more so when MBPD send out mass notifications (texts, emails) as to where check points will be!!
# ::tokens ["Such", "a", "stupid", "mistake", "in", "general", ",", "but", "even", "more", "so", "when", "MBPD", "send", "out", "mass", "notifications", "(", "texts", ",", "emails", ")", "as", "to", "where", "check", "points", "will", "be", "!", "!"]
# ::lemmas ["such", "a", "stupid", "mistake", "in", "general", ",", "but", "even", "more", "so", "when", "MBPD", "send", "out", "mass", "notification", "(", "text", ",", "email", ")", "as", "to", "where", "check", "point", "will", "be", "!", "!"]
(c10-10 / contrast-01
        :ARG1 (c10-2 / mistake-02
                     :mod (c10-4 / stupid
                                 :mod (c10-0 / such))
                     :ARG1-of (c10-13 / general-02))
        :ARG2 (c10-17 / send-out-04
                      :ARG0 (c10-1 / organization
                                   :name (c10-3 / name
                                                :op1 "MBPD"))
                      :ARG1 (c10-6 / notify-01
                                   :ARG1 c10-1
                                   :ARG2 (c10-7 / point
                                                :location-of (c10-16 / check-01))
                                   :mod (c10-8 / mass)
                                   :example (c10-12 / and
                                                    :op1 (c10-11 / text)
                                                    :op2 (c10-5 / email))))
        :ARG1-of (c10-9 / have-degree-91
                        :ARG2 c10-2
                        :ARG3 (c10-15 / more
                                      :mod (c10-14 / even))))

# ::snt Two words...maybe one. Sun screen
# ::tokens ["Two", "words", "...", "maybe", "one", ".", "Sun", "screen"]
# ::lemmas ["Two", "word", "...", "maybe", "one", ".", "Sun", "screen"]
(c11-1 / multi-sentence
       :snt1 (c11-5 / word
                    :domain (c11-4 / word
                                   :ARG1-of (c11-3 / possible-01)
                                   :quant 1)
                    :quant 2)
       :snt2 (c11-2 / screen
                    :mod (c11-0 / sun)))

# ::snt Jameson says you earned this moment.
# ::tokens ["Jameson", "says", "you", "earned", "this", "moment", "."]
# ::lemmas ["Jameson", "say", "you", "earn", "this", "moment", "."]
(c12-3 / say-01
       :ARG0 (c12-5 / person
                    :name (c12-1 / name
                                 :op1 "Jameson"))
       :ARG1 (c12-4 / earn-01
                    :ARG0 (c12-0 / you)
                    :ARG1 (c12-2 / moment
                                 :mod (c12-6 / this))))

# ::snt Shouldve called someone to pick him up. Manhattan Beach checkpoint on Saturday nights.
# ::tokens ["Should", "ve", "called", "someone", "to", "pick", "him", "up", ".", "Manhattan", "Beach", "checkpoint", "on", "Saturday", "nights", "."]
# ::lemmas ["should", "ve", "call", "someone", "to", "pick", "he", "up", ".", "Manhattan", "Beach", "checkpoint", "on", "Saturday", "nights", "."]
(c13-2 / multi-sentence
       :snt1 (c13-5 / recommend-01
                    :ARG1 (c13-9 / call-02
                                 :ARG1 (c13-4 / someone)
                                 :purpose (c13-7 / pick-up-04
                                                 :ARG0 c13-4
                                                 :ARG1 (c13-6 / he))))
       :snt2 (c13-11 / checkpoint
                     :location (c13-1 / beach
                                      :name (c13-3 / name
                                                   :op1 "Manhattan"
                                                   :op2 "Beach"))
                     :time (c13-10 / date-entity
                                   :weekday (c13-0 / saturday)
                                   :dayperiod (c13-8 / night))))

# ::snt He is a rich idiot
# ::tokens ["He", "is", "a", "rich", "idiot"]
# ::lemmas ["he", "be", "a", "rich", "idiot"]
(c14-2 / idiot
       :mod (c14-0 / rich)
       :domain (c14-1 / he))

# ::snt Maybe he needed a good passport photo.
# ::tokens ["Maybe", "he", "needed", "a", "good", "passport", "photo", "."]
# ::lemmas ["maybe", "he", "need", "a", "good", "passport", "photo", "."]
(c15-3 / possible-01
       :ARG1 (c15-0 / need-01
                    :ARG0 (c15-2 / he)
                    :ARG1 (c15-1 / photograph-01
                                 :ARG1 (c15-4 / passport)
                                 :ARG1-of (c15-5 / good-02))))

# ::snt He does look great! Doesnt look smashed or mishaven or droopy eyed! Nice smile too!
# ::tokens ["He", "does", "look", "great", "!", "Does", "nt", "look", "smashed", "or", "mishaven", "or", "droopy", "eyed", "!", "Nice", "smile", "too", "!"]
# ::lemmas ["he", "do", "look", "great", "!", "do", "not", "look", "smash", "or", "mishaven", "or", "droopy", "eye", "!", "nice", "smile", "too", "!"]
(c16-2 / multi-sentence
       :snt1 (c16-7 / look-02
                    :ARG0 (c16-6 / he)
                    :ARG1 (c16-12 / great)
                    :mode expressive)
       :snt2 (c16-14 / look-02
                     :ARG0 (c16-10 / he)
                     :ARG1 (c16-0 / or
                                  :op1 (c16-4 / smash-01
                                              :ARG1 c16-10)
                                  :op2 (c16-8 / mishaven
                                              :domain c16-10)
                                  :op3 (c16-5 / have-part-91
                                              :ARG1 c16-10
                                              :ARG2 (c16-9 / eye
                                                           :ARG1-of (c16-13 / droopy-03))))
                     :polarity -)
       :snt3 (c16-1 / smile-01
                    :ARG1-of (c16-3 / nice-01)
                    :mod (c16-11 / too)))

# ::snt "Suspicion" lol. Cute. Ya I've been called out on "suspicion" of eating cake too. You know I ate it, we all know I ate it.
# ::tokens ["\"", "Suspicion", "\"", "lol", ".", "Cute", ".", "Ya", "I", "'ve", "been", "called", "out", "on", "\"", "suspicion", "\"", "of", "eating", "cake", "too", ".", "You", "know", "I", "ate", "it", ",", "we", "all", "know", "I", "ate", "it", "."]
# ::lemmas ["\"", "Suspicion", "\"", "lol", ".", "cute", ".", "ya", "i", "'ve", "be", "call", "out", "on", "\"", "suspicion", "\"", "of", "eat", "cake", "too", ".", "you", "know", "i", "eat", "it", ",", "we", "all", "know", "i", "eat", "it", "."]
(c18-2 / multi-sentence
       :snt1 (c18-3 / suspect-01
                    :ARG2-of (c18-7 / laugh-01
                                    :manner (c18-16 / loud)))
       :snt2 (c18-9 / cute)
       :snt3 (c18-17 / call-out-15
                     :ARG1 (c18-12 / i)
                     :ARG2 (c18-0 / sin-01
                                  :ARG0 c18-12
                                  :ARG1 (c18-5 / eat-01
                                               :ARG0 c18-12
                                               :ARG1 (c18-11 / cake)
                                               :mod (c18-13 / too
                                                            :mod-of c18-17))))
       :snt4 (c18-4 / and
                    :op1 (c18-8 / know-01
                                :ARG0 (c18-1 / you)
                                :ARG1 (c18-15 / eat-01
                                              :ARG0 c18-12
                                              :ARG1 c18-11))
                    :op2 (c18-6 / know-01
                                :ARG0 (c18-10 / we
                                              :mod (c18-14 / all))
                                :ARG1 c18-15)))

# ::snt As far as Los Angeles County Sheriffs Department mugs go, this is a glamour shot! Great pic.
# ::tokens ["As", "far", "as", "Los", "Angeles", "County", "Sheriffs", "Department", "mugs", "go", ",", "this", "is", "a", "glamour", "shot", "!", "Great", "pic", "."]
# ::lemmas ["as", "far", "as", "Los", "Angeles", "County", "Sheriffs", "Department", "mug", "go", ",", "this", "be", "a", "glamour", "shot", "!", "great", "pic", "."]
(c19-0 / multi-sentence
       :snt1 (c19-2 / shoot-01
                    :mod (c19-7 / glamorous)
                    :domain (c19-6 / this)
                    :topic (c19-3 / mug
                                  :poss (c19-5 / government-organization
                                               :name (c19-1 / name
                                                            :op1 "Los"
                                                            :op2 "Angeles"
                                                            :op3 "Sheriffs"
                                                            :op4 "Department"))))
       :snt2 (c19-4 / pic
                    :mod (c19-8 / great)))

# ::snt Not guilty based on that picture. Doesn't he know how to use Uber
# ::tokens ["Not", "guilty", "based", "on", "that", "picture", ".", "Does", "n't", "he", "know", "how", "to", "use", "Uber"]
# ::lemmas ["not", "guilty", "base", "on", "that", "picture", ".", "do", "not", "he", "know", "how", "to", "use", "Uber"]
(c20-1 / multi-sentence
       :snt1 (c20-9 / guilty-01
                    :ARG1-of (c20-0 / base-02
                                    :ARG2 (c20-5 / picture
                                                 :mod (c20-8 / that)))
                    :polarity -)
       :snt2 (c20-6 / know-03
                    :ARG0 (c20-4 / he)
                    :ARG1 (c20-11 / thing
                                  :manner-of (c20-10 / use-01
                                                     :ARG0 c20-4
                                                     :ARG1 (c20-7 / company
                                                                  :name (c20-2 / name
                                                                               :op1 "Uber"))))
                    :ARG1-of (c20-3 / request-confirmation-91)))

# ::snt Man he looks wasted!
# ::tokens ["Man", "he", "looks", "wasted", "!"]
# ::lemmas ["man", "he", "look", "waste", "!"]
(c21-3 / look-02
       :ARG0 (c21-2 / he)
       :ARG1 (c21-1 / wasted-03
                    :ARG1 c21-2)
       :mod (c21-0 / man
                   :mode expressive))

# ::snt - Hes looking good. Drunk...but good.
# ::tokens ["-", "He", "s", "looking", "good", ".", "Drunk", "...", "but", "good", "."]
# ::lemmas ["-", "he", "s", "look", "good", ".", "drunk", "...", "but", "good", "."]
(c23-0 / multi-sentence
       :snt1 (c23-2 / look-02
                    :ARG0 (c23-1 / he)
                    :ARG1 (c23-6 / good-02))
       :snt2 (c23-3 / contrast-01
                    :ARG1 (c23-7 / drunk
                                 :domain (c23-4 / he))
                    :ARG2 (c23-5 / good-02
                                 :ARG1 c23-4)))

# ::snt Too bad I wasn't in Miami for it. !!
# ::tokens ["Too", "bad", "I", "was", "n't", "in", "Miami", "for", "it", ".", "!", "!"]
# ::lemmas ["too", "bad", "i", "be", "not", "in", "Miami", "for", "it", ".", "!", "!"]
(c24-0 / bad-07
       :ARG1 (c24-3 / be-located-at-91
                    :ARG1 (c24-6 / i)
                    :ARG2 (c24-5 / city
                                 :name (c24-1 / name
                                              :op1 "Miami"))
                    :purpose (c24-2 / it)
                    :polarity -)
       :ARG2-of (c24-4 / have-degree-91
                       :ARG1 c24-3
                       :ARG3 (c24-7 / too))
       :mode expressive)

# ::snt It is a good mugshot, though. LOL
# ::tokens ["It", "is", "a", "good", "mugshot", ",", "though", ".", "LOL"]
# ::lemmas ["it", "be", "a", "good", "mugshot", ",", "though", ".", "LOL"]
(c25-2 / have-concession-91
       :ARG1 (c25-0 / mugshot
                    :ARG1-of (c25-5 / good-02)
                    :domain (c25-4 / it)
                    :ARG2-of (c25-3 / laugh-01
                                    :ARG0 (c25-1 / i)
                                    :manner (c25-6 / loud)
                                    :mode expressive)))

# ::snt Lord!
# ::tokens ["Lord", "!"]
# ::lemmas ["Lord", "!"]
(c26-1 / person
       :name (c26-0 / name
                    :op1 "Lord")
       :mode expressive)

# ::snt Anyway, is El Torasco still in MHB?
# ::tokens ["Anyway", ",", "is", "El", "Torasco", "still", "in", "MHB", "?"]
# ::lemmas ["anyway", ",", "be", "El", "Torasco", "still", "in", "MHB", "?"]
(c27-2 / be-located-at-91
       :ARG1 (c27-4 / ship
                    :name (c27-3 / name
                                 :op1 "El"
                                 :op2 "Torasco"))
       :ARG2 (c27-0 / facility
                    :name (c27-5 / name
                                 :op1 "MHB"))
       :polarity (c27-7 / amr-unknown)
       :mod (c27-6 / anyway)
       :mod (c27-1 / still))

# ::snt Oh Vince.... Why?
# ::tokens ["Oh", "Vince", "....", "Why", "?"]
# ::lemmas ["oh", "Vince", "....", "why", "?"]
(c28-5 / ask-01
       :ARG1 (c28-3 / cause-01
                    :ARG0 (c28-4 / amr-unknown))
       :ARG2 (c28-2 / person
                    :name (c28-1 / name
                                 :op1 "Vince"))
       :mod (c28-0 / oh
                   :mode expressive))

# ::snt BFD
# ::tokens ["BFD"]
# ::lemmas ["BFD"]
(c29-1 / have-org-role-91
       :ARG1 (c29-0 / government-organization
                    :name (c29-2 / name
                                 :op1 "BFD")))

# ::snt Sure it wasn't for crimes against cinema?Wocka wocka.
# ::tokens ["Sure", "it", "was", "n't", "for", "crimes", "against", "cinema?Wocka", "wocka", "."]
# ::lemmas ["sure", "it", "be", "not", "for", "crime", "against", "cinema?Wocka", "wocka", "."]
(c30-0 / sure-02
       :ARG1 (c30-2 / have-purpose-91
                    :ARG1 (c30-4 / it)
                    :ARG2 (c30-3 / crime-02
                                 :ARG2 (c30-5 / cinema))
                    :polarity -)
       :ARG1-of (c30-1 / request-confirmation-91)
       :polarity -)

# ::snt Damn it...
# ::tokens ["Damn", "it", "..."]
# ::lemmas ["damn", "it", "..."]
(c31-0 / damn-01
       :ARG1 (c31-1 / it))

# ::snt Take Uber or Lyft.. not like you cant afford it. Terrible that people still drink and drive.. it is like pointing a gun at people walking down the street.
# ::tokens ["Take", "Uber", "or", "Lyft", "..", "not", "like", "you", "ca", "nt", "afford", "it", ".", "Terrible", "that", "people", "still", "drink", "and", "drive", "..", "it", "is", "like", "pointing", "a", "gun", "at", "people", "walking", "down", "the", "street", "."]
# ::lemmas ["take", "Uber", "or", "lyft", "..", "not", "like", "you", "can", "not", "afford", "it", ".", "terrible", "that", "people", "still", "drink", "and", "drive", "..", "it", "be", "like", "point", "a", "gun", "at", "people", "walk", "down", "the", "street", "."]
(c32-13 / multi-sentence
        :snt1 (c32-10 / take-01
                      :ARG0 (c32-6 / you)
                      :ARG1 (c32-4 / or
                                   :op1 (c32-17 / company
                                                :name (c32-19 / name
                                                              :op1 "Uber"))
                                   :op2 (c32-12 / company
                                                :name (c32-15 / name
                                                              :op1 "Lyft")))
                      :ARG1-of (c32-20 / resemble-01
                                       :ARG2 (c32-21 / possible-01
                                                     :ARG1 (c32-9 / afford-01
                                                                  :ARG0 c32-6
                                                                  :ARG1 c32-4)
                                                     :polarity -)
                                       :polarity -)
                      :mode imperative)
        :snt2 (c32-7 / horrible
                     :domain (c32-8 / and
                                    :op1 (c32-24 / drink-01
                                                 :ARG0 (c32-14 / person)
                                                 :mod (c32-0 / still))
                                    :op2 (c32-18 / drive-01
                                                 :ARG0 c32-14)))
        :snt3 (c32-3 / resemble-01
                     :ARG1 (c32-23 / it)
                     :ARG2 (c32-2 / point-01
                                  :ARG1 (c32-11 / gun)
                                  :ARG2 (c32-1 / person
                                               :ARG0-of (c32-22 / walk-01
                                                                :ARG2 (c32-5 / street
                                                                             :direction (c32-16 / down)))))))

# ::snt un po ingrassato
# ::tokens ["un", "po", "ingrassato"]
# ::lemmas ["un", "po", "ingrassato"]
(c34-0 / ingrassato
       :polarity -
       :mode expressive)

# ::snt What a POS
# ::tokens ["What", "a", "POS"]
# ::lemmas ["what", "a", "POS"]
(c35-1 / piece
       :ARG1-of (c35-2 / shit-01)
       :degree (c35-0 / so))

# ::snt Conservative values!!!
# ::tokens ["Conservative", "values", "!", "!", "!"]
# ::lemmas ["conservative", "value", "!", "!", "!"]
(c36-1 / value
       :mod (c36-0 / conservative)
       :mode expressive)

# ::snt Who?
# ::tokens ["Who", "?"]
# ::lemmas ["who", "?"]
(c38-0 / amr-unknown)

# ::snt Were GOING STREAKING!!! Finally JOINING FRANK THE TANK.
# ::tokens ["Were", "GOING", "STREAKING", "!", "!", "!", "Finally", "JOINING", "FRANK", "THE", "TANK", "."]
# ::lemmas ["be", "go", "streaking", "!", "!", "!", "finally", "join", "FRANK", "the", "tank", "."]
(c41-2 / multi-sentence
       :snt1 (c41-3 / lay-01
                    :mode expressive)
       :snt2 (c41-4 / join-in-05
                    :ARG0 (c41-1 / you)
                    :ARG1 (c41-5 / tanker)
                    :time (c41-0 / final)
                    :mode imperative))

# ::snt This is insane. I know he can afford to call Uber.
# ::tokens ["This", "is", "insane", ".", "I", "know", "he", "can", "afford", "to", "call", "Uber", "."]
# ::lemmas ["this", "be", "insane", ".", "i", "know", "he", "can", "afford", "to", "call", "Uber", "."]
(c42-0 / multi-sentence
       :snt1 (c42-8 / insane
                    :domain (c42-9 / this))
       :snt2 (c42-5 / know-01
                    :ARG0 (c42-2 / i)
                    :ARG1 (c42-6 / possible-01
                                 :ARG1 (c42-3 / afford-01
                                              :ARG0 (c42-4 / he)
                                              :ARG1 (c42-7 / call-02
                                                           :ARG0 c42-4
                                                           :ARG1 (c42-10 / company
                                                                         :name (c42-1 / name
                                                                                      :op1 "Uber")))))))

# ::snt So do we have to cancel all his movies and not allow them to air as well? Because who gives a fuck someone famous got a DUI big whoop
# ::tokens ["So", "do", "we", "have", "to", "cancel", "all", "his", "movies", "and", "not", "allow", "them", "to", "air", "as", "well", "?", "Because", "who", "gives", "a", "fuck", "someone", "famous", "got", "a", "DUI", "big", "whoop"]
# ::lemmas ["so", "do", "we", "have", "to", "cancel", "all", "his", "movie", "and", "not", "allow", "they", "to", "air", "as", "well", "?", "because", "who", "give", "a", "fuck", "someone", "famous", "get", "a", "DUI", "big", "whoop"]
(c44-12 / multi-sentence
        :snt1 (c44-2 / obligate-01
                     :ARG1 (c44-18 / we)
                     :ARG2 (c44-8 / and
                                  :op1 (c44-13 / cancel-01
                                               :ARG0 c44-18
                                               :ARG1 (c44-3 / movie
                                                            :poss (c44-4 / he)
                                                            :mod (c44-7 / all)))
                                  :op2 (c44-6 / allow-01
                                              :ARG0 c44-18
                                              :ARG1 (c44-21 / air-01
                                                            :ARG1 c44-3
                                                            :mod (c44-19 / as-well))
                                              :polarity -))
                     :polarity (c44-14 / amr-unknown))
        :snt2 (c44-10 / cause-01
                      :ARG0 (c44-9 / give-16
                                   :ARG0 (c44-5 / amr-unknown)
                                   :ARG1 (c44-15 / fuck)
                                   :ARG2 (c44-1 / get-02
                                                :ARG0 (c44-0 / someone
                                                             :ARG1-of (c44-17 / fame-01))
                                                :ARG1 (c44-16 / drive-01
                                                              :ARG0 c44-0
                                                              :manner (c44-20 / influence-01
                                                                              :ARG1 c44-0)))
                                   :mod (c44-11 / big))))

# ::snt Good chance the passenger was not Mrs. Vaughn! You old motor boating SOB!
# ::tokens ["Good", "chance", "the", "passenger", "was", "not", "Mrs.", "Vaughn", "!", "You", "old", "motor", "boating", "SOB", "!"]
# ::lemmas ["good", "chance", "the", "passenger", "be", "not", "Mrs.", "Vaughn", "!", "you", "old", "motor", "boat", "SOB", "!"]
(c45-3 / multi-sentence
       :snt1 (c45-9 / chance-02
                    :ARG1 (c45-8 / passenger
                                 :domain (c45-4 / person
                                                :name (c45-5 / name
                                                             :op1 "Mrs."
                                                             :op2 "Vaughn"))
                                 :polarity -)
                    :ARG1-of (c45-10 / good-02))
       :snt2 (c45-2 / you
                    :mod (c45-6 / son-of-a-bitch
                                :mod (c45-0 / old)
                                :ARG0-of (c45-1 / boate-01
                                                :mod (c45-7 / motor))
                                :mode expressive)))

# ::snt His passenger?
# ::tokens ["His", "passenger", "?"]
# ::lemmas ["his", "passenger", "?"]
(c46-1 / passenger
       :polarity (c46-2 / amr-unknown)
       :poss (c46-0 / he))

# ::snt Im sure he has a personal chef, maid, trainer. But no driver? Its more thrilling to drink and drive.
# ::tokens ["I", "m", "sure", "he", "has", "a", "personal", "chef", ",", "maid", ",", "trainer", ".", "But", "no", "driver", "?", "Its", "more", "thrilling", "to", "drink", "and", "drive", "."]
# ::lemmas ["i", "m", "sure", "he", "have", "a", "personal", "chef", ",", "maid", ",", "trainer", ".", "but", "no", "driver", "?", "its", "more", "thrilling", "to", "drink", "and", "drive", "."]
(c47-10 / multi-sentence
        :snt1 (c47-0 / sure-02
                     :ARG0 (c47-18 / i)
                     :ARG1 (c47-3 / have-03
                                  :ARG0 (c47-17 / he)
                                  :ARG1 (c47-8 / and
                                               :op1 (c47-12 / chef)
                                               :op2 (c47-4 / maid)
                                               :op3 (c47-16 / person
                                                            :ARG0-of (c47-7 / train-01))
                                               :ARG1-of (c47-11 / personal-02))))
        :snt2 (c47-9 / contrast-01
                     :ARG2 (c47-1 / person
                                  :ARG0-of (c47-19 / drive-01)
                                  :polarity -)
                     :polarity (c47-6 / amr-unknown))
        :snt3 (c47-14 / thrill-01
                      :ARG0 (c47-5 / and
                                   :op1 (c47-13 / drink-01)
                                   :op2 c47-19))
        :ARG2-of (c47-2 / have-degree-91
                        :ARG1 c47-5
                        :ARG3 (c47-15 / more)))

# ::snt Shocker
# ::tokens ["Shocker"]
# ::lemmas ["shocker"]
(c49-0 / shock-01)
