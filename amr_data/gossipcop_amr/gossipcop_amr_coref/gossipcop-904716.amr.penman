# ::snt Um, how? He created of the most popular series of the last decade (one of which Gwen was employed on, meaning he was her boss).
# ::tokens ["Um", ",", "how", "?", "He", "created", "of", "the", "most", "popular", "series", "of", "the", "last", "decade", "(", "one", "of", "which", "Gwen", "was", "employed", "on", ",", "meaning", "he", "was", "her", "boss", ")", "."]
# ::lemmas ["um", ",", "how", "?", "he", "create", "of", "the", "most", "popular", "series", "of", "the", "last", "decade", "(", "one", "of", "which", "Gwen", "be", "employ", "on", ",", "mean", "he", "be", "her", "boss", ")", "."]
(c2-2 / multi-sentence
      :snt1 (c2-15 / amr-unknown
                   :mod (c2-16 / um
                               :mode expressive))
      :snt2 (c2-11 / create-01
                   :ARG0 (c2-7 / he)
                   :ARG1 (c2-4 / series
                               :ARG1-of (c2-14 / include-91
                                               :ARG2 (c2-0 / series
                                                           :ARG1-of (c2-6 / employ-01
                                                                          :ARG0 (c2-8 / person
                                                                                      :name (c2-3 / name
                                                                                                  :op1 "Gwen"))
                                                                          :ARG1-of (c2-9 / mean-01
                                                                                         :ARG2 (c2-13 / have-rel-role-91
                                                                                                      :ARG0 c2-7
                                                                                                      :ARG1 c2-8
                                                                                                      :ARG2 (c2-1 / boss)))))
                                               :ARG1-of (c2-10 / have-degree-91
                                                               :ARG2 (c2-5 / popular-02
                                                                           :ARG1 c2-0)
                                                               :ARG3 (c2-12 / most))))))

# ::snt Created Glee, American Horror Story, American Crime Story, Scream Queens, etc.
# ::tokens ["Created", "Glee", ",", "American", "Horror", "Story", ",", "American", "Crime", "Story", ",", "Scream", "Queens", ",", "etc", "."]
# ::lemmas ["Created", "Glee", ",", "American", "Horror", "Story", ",", "American", "Crime", "Story", ",", "Scream", "Queens", ",", "etc", "."]
(c3-7 / create-01
      :ARG1 (c3-9 / and
                  :op1 (c3-2 / show
                             :name (c3-1 / name
                                         :op1 "Glee"))
                  :op2 (c3-0 / show
                             :name (c3-5 / name
                                         :op1 "American"
                                         :op2 "Horror"
                                         :op3 "Story"))
                  :op3 (c3-10 / show
                              :name (c3-6 / name
                                          :op1 "American"
                                          :op2 "Crime"
                                          :op3 "Story"))
                  :op4 (c3-3 / show
                             :name (c3-8 / name
                                         :op1 "Scream"
                                         :op2 "Queens"))
                  :op5 (c3-4 / et-cetera)))

# ::snt Prepare the divorce headline for
# ::tokens ["Prepare", "the", "divorce", "headline", "for"]
# ::lemmas ["prepare", "the", "divorce", "headline", "for"]
(c4-2 / prepare-02
      :ARG0 (c4-1 / you)
      :ARG1 (c4-3 / headline-01
                  :ARG2 (c4-0 / divorce-01))
      :mode imperative)

# ::snt What the Falchuk?!?
# ::tokens ["What", "the", "Falchuk", "?", "!", "?"]
# ::lemmas ["what", "the", "Falchuk", "?", "!", "?"]
(c5-1 / person
      :name (c5-0 / name
                  :op1 "Falchuk")
      :mod (c5-2 / amr-unknown)
      :mode expressive)

# ::snt Good idea to stick with Brads, sensible strategy (a) sleep-talk (b) sexy talk
# ::tokens ["Good", "idea", "to", "stick", "with", "Brads", ",", "sensible", "strategy", "(", "a", ")", "sleep", "-", "talk", "(", "b", ")", "sexy", "talk"]
# ::lemmas ["good", "idea", "to", "stick", "with", "Brads", ",", "sensible", "strategy", "(", "a", ")", "sleep", "-", "talk", "(", "b", ")", "sexy", "talk"]
(c6-7 / and
      :op1 (c6-6 / idea
                 :ARG1-of (c6-8 / good-02)
                 :purpose (c6-2 / stick-01
                                :ARG2 (c6-1 / brad)))
      :op2 (c6-0 / strategy
                 :ARG1-of (c6-10 / sense-02)
                 :domain (c6-5 / talk-01
                               :ARG1 (c6-3 / sleep-01))
                 :li "a")
      :op3 (c6-9 / talk-01
                 :ARG1-of (c6-4 / sexy-00)
                 :li "b"))

# ::snt I made it a reality with my Subconscious Coupling
# ::tokens ["I", "made", "it", "a", "reality", "with", "my", "Subconscious", "Coupling"]
# ::lemmas ["i", "make", "it", "a", "reality", "with", "my", "Subconscious", "Coupling"]
(c7-0 / make-01
      :ARG0 (c7-3 / i)
      :ARG1 (c7-1 / reality)
      :ARG2 (c7-2 / couple-01
                  :ARG0 c7-3
                  :mod (c7-4 / conscious)))

# ::snt Will she remove the jade egg for the honeymoon?
# ::tokens ["Will", "she", "remove", "the", "jade", "egg", "for", "the", "honeymoon", "?"]
# ::lemmas ["will", "she", "remove", "the", "jade", "egg", "for", "the", "honeymoon", "?"]
(c8-1 / remove-01
      :ARG0 (c8-0 / she)
      :ARG1 (c8-2 / egg
                  :mod (c8-4 / jade))
      :polarity (c8-5 / amr-unknown)
      :purpose (c8-3 / honeymoon))

# ::snt Congratulations! Wishing many exciting adventures in your life together!
# ::tokens ["Congratulations", "!", "Wishing", "many", "exciting", "adventures", "in", "your", "life", "together", "!"]
# ::lemmas ["congratulation", "!", "wish", "many", "exciting", "adventure", "in", "your", "life", "together", "!"]
(c10-1 / multi-sentence
       :snt1 (c10-5 / congratulate-01)
       :snt2 (c10-6 / wish-01
                    :ARG1 (c10-8 / adventure
                                 :ARG0-of (c10-2 / excite-01)
                                 :quant (c10-3 / many)
                                 :part-of (c10-4 / life
                                                 :poss (c10-0 / you)
                                                 :mod (c10-7 / together)))))

# ::snt Ill go for the easy joke: conscious coupling?
# ::tokens ["Ill", "go", "for", "the", "easy", "joke", ":", "conscious", "coupling", "?"]
# ::lemmas ["Ill", "go", "for", "the", "easy", "joke", ":", "conscious", "coupling", "?"]
(c11-5 / go-03
       :polarity (c11-4 / amr-unknown)
       :ARG0 (c11-3 / i)
       :ARG1 (c11-2 / joke-01
                    :ARG2 (c11-1 / couple-01
                                 :mod (c11-6 / conscious))
                    :ARG1-of (c11-0 / easy-05)))

# ::snt Congratulations from Blighty.Ps- We don't give a shit.
# ::tokens ["Congratulations", "from", "Blighty", ".", "Ps-", "We", "do", "n't", "give", "a", "shit", "."]
# ::lemmas ["congratulation", "from", "Blighty", ".", "ps-", "we", "do", "not", "give", "a", "shit", "."]
(c12-3 / congratulate-01
       :ARG0 (c12-2 / person
                    :name (c12-0 / name
                                 :op1 "Blighty"))
       :ARG1 (c12-4 / we
                    :ARG0-of (c12-5 / give-16
                                    :ARG1 (c12-1 / shit)
                                    :polarity -)))

# ::snt I give it a year
# ::tokens ["I", "give", "it", "a", "year"]
# ::lemmas ["i", "give", "it", "a", "year"]
(c13-5 / give-01
       :ARG0 (c13-3 / i)
       :ARG1 (c13-2 / rate-entity-91
                    :ARG3 (c13-4 / temporal-quantity
                                 :unit (c13-0 / year)
                                 :quant 1))
       :ARG2 (c13-1 / it))

# ::snt And will be divorced in years
# ::tokens ["And", "will", "be", "divorced", "in", "years"]
# ::lemmas ["and", "will", "be", "divorce", "in", "years"]
(c14-5 / and
       :op2 (c14-6 / divorce-01
                   :time (c14-4 / after
                                :op1 (c14-2 / now)
                                :quant (c14-1 / multiple
                                              :op1 (c14-3 / temporal-quantity
                                                          :unit (c14-0 / year)
                                                          :quant 1)))))

# ::snt Who cares about this flake. Another Hollywood weirdo. This marriage will fail too.
# ::tokens ["Who", "cares", "about", "this", "flake", ".", "Another", "Hollywood", "weirdo", ".", "This", "marriage", "will", "fail", "too", "."]
# ::lemmas ["who", "care", "about", "this", "flake", ".", "another", "Hollywood", "weirdo", ".", "this", "marriage", "will", "fail", "too", "."]
(c15-1 / multi-sentence
       :snt1 (c15-6 / care-01
                    :ARG0 (c15-3 / amr-unknown)
                    :ARG1 (c15-0 / flake
                                 :mod (c15-9 / this)))
       :snt2 (c15-7 / weirdo
                    :mod (c15-8 / another)
                    :mod (c15-4 / market-sector
                                :name (c15-2 / name
                                             :op1 "Hollywood")))
       :snt3 (c15-5 / fail-01
                    :ARG1 (c15-11 / marry-01
                                  :mod (c15-12 / this))
                    :mod (c15-10 / too)))

# ::snt I'm not familiar with who he is.
# ::tokens ["I", "'m", "not", "familiar", "with", "who", "he", "is", "."]
# ::lemmas ["i", "be", "not", "familiar", "with", "who", "he", "be", "."]
(c16-0 / familiarize-01
       :ARG1 (c16-3 / i)
       :ARG2 (c16-2 / person
                    :domain (c16-1 / he))
       :polarity -)

# ::snt Shes intolerant and disgusting
# ::tokens ["She", "s", "intolerant", "and", "disgusting"]
# ::lemmas ["she", "s", "intolerant", "and", "disgusting"]
(c17-3 / and
       :op1 (c17-2 / tolerate-01
                   :ARG0 (c17-1 / he)
                   :polarity -)
       :op2 (c17-0 / disgust-01
                   :ARG0 c17-1))

# ::snt No one cares
# ::tokens ["No", "one", "cares"]
# ::lemmas ["no", "one", "care"]
(c18-0 / care-01
       :ARG0 (c18-1 / no-one))

# ::snt That will be no bacon sarnies for breakfast then.Does he know what he's letting himself in for?
# ::tokens ["That", "will", "be", "no", "bacon", "sarnies", "for", "breakfast", "then", ".", "Does", "he", "know", "what", "he", "'s", "letting", "himself", "in", "for", "?"]
# ::lemmas ["that", "will", "be", "no", "bacon", "sarnie", "for", "breakfast", "then", ".", "do", "he", "know", "what", "he", "be", "let", "himself", "in", "for", "?"]
(c19-1 / multi-sentence
       :snt1 (c19-0 / breakfast-01
                    :ARG1 (c19-2 / sarnies
                                 :mod (c19-4 / bacon)
                                 :domain (c19-9 / that)
                                 :polarity -))
       :snt2 (c19-5 / know-01
                    :ARG0 (c19-6 / he)
                    :ARG1 (c19-10 / thing
                                  :ARG2-of (c19-8 / invite-01
                                                  :ARG0 (c19-7 / he)
                                                  :ARG1 c19-6))
                    :polarity (c19-3 / amr-unknown)))

# ::snt Cool!
# ::tokens ["Cool", "!"]
# ::lemmas ["cool", "!"]
(c21-0 / cool-04)
