# ::snt Love this because I actually didnt buy tickets this time!!! Need weekend contest too since I have been working so much during the week now!!
# ::tokens ["Love", "this", "because", "I", "actually", "did", "nt", "buy", "tickets", "this", "time", "!", "!", "!", "Need", "weekend", "contest", "too", "since", "I", "have", "been", "working", "so", "much", "during", "the", "week", "now", "!", "!"]
# ::lemmas ["Love", "this", "because", "i", "actually", "do", "not", "buy", "ticket", "this", "time", "!", "!", "!", "need", "weekend", "contest", "too", "since", "i", "have", "be", "work", "so", "much", "during", "the", "week", "now", "!", "!"]
(c1-13 / multi-sentence
       :snt1 (c1-2 / love-01
                   :ARG0 (c1-19 / i)
                   :ARG1 (c1-9 / this)
                   :ARG1-of (c1-15 / cause-01
                                   :ARG0 (c1-12 / buy-01
                                                :ARG0 c1-19
                                                :ARG1 (c1-16 / ticket)
                                                :ARG1-of (c1-8 / actual-02)
                                                :time (c1-20 / time
                                                             :mod (c1-1 / this))
                                                :polarity -)))
       :snt2 (c1-17 / need-01
                    :ARG0 (c1-5 / i)
                    :ARG1 (c1-11 / contest-02
                                 :time (c1-18 / weekend))
                    :ARG1-of (c1-4 / cause-01
                                   :ARG0 (c1-3 / work-01
                                               :ARG0 c1-5
                                               :time (c1-14 / now)
                                               :ARG1-of (c1-6 / have-quant-91
                                                              :ARG2 (c1-7 / much)
                                                              :ARG3 (c1-0 / so))))
                    :mod (c1-10 / too)))

# ::snt No thanks.
# ::tokens ["No", "thanks", "."]
# ::lemmas ["no", "thank", "."]
(c2-0 / have-concession-91
      :ARG2 (c2-1 / no))

# ::snt Profiles-IN-Entertainment (HR)
# ::tokens ["Profiles", "-", "IN", "-", "Entertainment", "(", "HR", ")"]
# ::lemmas ["profiles", "-", "in", "-", "Entertainment", "(", "HR", ")"]
(c3-0 / company
      :name (c3-1 / name
                  :op1 "Profiles-in-Entertainment"))

# ::snt me and deserves wins a special award win he is so multi talented
# ::tokens ["me", "and", "deserves", "wins", "a", "special", "award", "win", "he", "is", "so", "multi", "talented"]
# ::lemmas ["i", "and", "deserve", "win", "a", "special", "award", "win", "he", "be", "so", "multi", "talented"]
(c4-1 / multi-sentence
      :snt1 (c4-7 / and
                  :op1 (c4-6 / i)
                  :op2 (c4-9 / deserve-01
                             :ARG0 c4-6
                             :ARG1 (c4-4 / win-01
                                         :ARG0 c4-6
                                         :ARG1 (c4-8 / award
                                                     :ARG1-of (c4-2 / special-02)))))
      :snt2 (c4-5 / talent
                  :degree (c4-0 / so)
                  :domain (c4-3 / he)))

# ::snt I have seen his concerts and yes, I would, BUT I am also waiting for announcement!
# ::tokens ["I", "have", "seen", "his", "concerts", "and", "yes", ",", "I", "would", ",", "BUT", "I", "am", "also", "waiting", "for", "announcement", "!"]
# ::lemmas ["i", "have", "see", "his", "concert", "and", "yes", ",", "i", "would", ",", "but", "i", "be", "also", "wait", "for", "announcement", "!"]
(c5-3 / contrast-01
      :ARG1 (c5-7 / and
                  :op1 (c5-1 / see-01
                             :ARG0 (c5-6 / i)
                             :ARG1 (c5-9 / concert
                                         :poss (c5-2 / he)))
                  :op2 (c5-0 / see-01
                             :ARG0 c5-6
                             :ARG1 c5-9))
      :ARG2 (c5-4 / wait-01
                  :ARG1 c5-6
                  :ARG2 (c5-8 / announce-01)
                  :mod (c5-5 / also)))

# ::snt Not me!
# ::tokens ["Not", "me", "!"]
# ::lemmas ["not", "i", "!"]
(c6-0 / i
      :polarity -)

# ::snt I wanna goooooooo
# ::tokens ["I", "wanna", "goooooooo"]
# ::lemmas ["i", "wanna", "goooooooo"]
(c7-1 / want-01
      :ARG0 (c7-2 / i)
      :ARG1 (c7-0 / go-02
                  :ARG0 c7-2))

# ::snt No one
# ::tokens ["No", "one"]
# ::lemmas ["no", "one"]
(c11-0 / no-one)

# ::snt You &amp; I its about the turmoil in the world, Love &amp; unity
# ::tokens ["You", "&", "amp", ";", "I", "its", "about", "the", "turmoil", "in", "the", "world", ",", "Love", "&", "amp", ";", "unity"]
# ::lemmas ["you", "&", "amp", ";", "i", "its", "about", "the", "turmoil", "in", "the", "world", ",", "Love", "&", "amp", ";", "unity"]
(c12-2 / say-01
       :ARG0 (c12-9 / i)
       :ARG1 (c12-7 / concern-02
                    :ARG0 (c12-3 / it)
                    :ARG1 (c12-10 / turmoil
                                  :location (c12-8 / world)))
       :ARG2 (c12-4 / and
                    :op1 (c12-6 / person
                                :name (c12-0 / name
                                             :op1 "Love"))
                    :op2 (c12-1 / person
                                :name (c12-5 / name
                                             :op1 "amp"))
                    :op3 (c12-11 / unity)))

# ::snt Sounds like a gag... but looks intriguing.
# ::tokens ["Sounds", "like", "a", "gag", "...", "but", "looks", "intriguing", "."]
# ::lemmas ["sound", "like", "a", "gag", "...", "but", "look", "intriguing", "."]
(c13-2 / contrast-01
       :ARG1 (c13-0 / sound-01
                    :ARG2 (c13-4 / gag))
       :ARG2 (c13-1 / look-02
                    :ARG1 (c13-3 / intrigue-01)))

# ::snt What about Europe?
# ::tokens ["What", "about", "Europe", "?"]
# ::lemmas ["what", "about", "Europe", "?"]
(c15-0 / continent
       :name (c15-1 / name
                    :op1 "Europe")
       :mod (c15-2 / amr-unknown))

# ::snt Hopefully the European dates will be announced soon also.
# ::tokens ["Hopefully", "the", "European", "dates", "will", "be", "announced", "soon", "also", "."]
# ::lemmas ["hopefully", "the", "European", "date", "will", "be", "announce", "soon", "also", "."]
(c16-2 / hope-01
       :ARG1 (c16-5 / announce-01
                    :ARG1 (c16-6 / date
                                 :mod (c16-3 / continent
                                             :name (c16-0 / name
                                                          :op1 "Europe")))
                    :time (c16-1 / soon)
                    :mod (c16-4 / also)))

# ::snt Way! Cool!
# ::tokens ["Way", "!", "Cool", "!"]
# ::lemmas ["way", "!", "cool", "!"]
(c17-2 / multi-sentence
       :snt1 (c17-0 / way)
       :snt2 (c17-1 / cool-04))

# ::snt This is awsome!
# ::tokens ["This", "is", "awsome", "!"]
# ::lemmas ["this", "be", "awsome", "!"]
(c18-1 / awsome
       :domain (c18-0 / this))

# ::snt By the way, I want share a shop,their product made in China, and often send preferential activities, and the products are of high quality.If u need you can click on this link
# ::tokens ["By", "the", "way", ",", "I", "want", "share", "a", "shop", ",", "their", "product", "made", "in", "China", ",", "and", "often", "send", "preferential", "activities", ",", "and", "the", "products", "are", "of", "high", "quality", ".", "If", "u", "need", "you", "can", "click", "on", "this", "link"]
# ::lemmas ["by", "the", "way", ",", "i", "want", "share", "a", "shop", ",", "their", "product", "make", "in", "China", ",", "and", "often", "send", "preferential", "activity", ",", "and", "the", "product", "be", "of", "high", "quality", ".", "if", "u", "need", "you", "can", "click", "on", "this", "link"]
(c19-11 / want-01
        :ARG0 (c19-13 / i)
        :ARG1 (c19-14 / and
                      :op1 (c19-6 / share-01
                                  :ARG0 (c19-3 / you)
                                  :ARG1 (c19-0 / shop
                                               :ARG0-of (c19-17 / send-01
                                                                :ARG1 (c19-15 / activity-06
                                                                              :ARG1-of (c19-9 / prefer-01))
                                                                :frequency (c19-1 / often))
                                               :ARG1-of (c19-4 / make-01
                                                               :location (c19-12 / country
                                                                                 :name (c19-5 / name
                                                                                              :op1 "China")))))
                      :op2 (c19-16 / quality
                                   :ARG1-of (c19-8 / high-02)
                                   :domain (c19-7 / product)))
        :condition (c19-10 / need-01
                           :ARG0 c19-3)
        :mod (c19-2 / by-the-way))

# ::snt That would of been hot the year ..... Now, hes a long in the tooth shot out no more good
# ::tokens ["That", "would", "of", "been", "hot", "the", "year", ".....", "Now", ",", "he", "s", "a", "long", "in", "the", "tooth", "shot", "out", "no", "more", "good"]
# ::lemmas ["that", "would", "of", "be", "hot", "the", "year", ".....", "now", ",", "he", "s", "a", "long", "in", "the", "tooth", "shoot", "out", "no", "more", "good"]
(c20-1 / multi-sentence
       :snt1 (c20-4 / hot-03
                    :ARG1 (c20-8 / that)
                    :time (c20-0 / year))
       :snt2 (c20-3 / shot-03
                    :ARG1 (c20-7 / he
                                 :part (c20-10 / tooth
                                               :ARG1-of (c20-5 / long-03)))
                    :ARG2 (c20-9 / good-02
                                 :mod (c20-6 / more)
                                 :polarity -)
                    :time (c20-2 / now)))

# ::snt For all information on Justin Timberlake's upcoming 'Man of the Woods Tour,' visit to see all tour dates, when tickets go on sale, and more.
# ::tokens ["For", "all", "information", "on", "Justin", "Timberlake", "'s", "upcoming", "'", "Man", "of", "the", "Woods", "Tour", ",", "'", "visit", "to", "see", "all", "tour", "dates", ",", "when", "tickets", "go", "on", "sale", ",", "and", "more", "."]
# ::lemmas ["for", "all", "information", "on", "Justin", "Timberlake", "'s", "upcoming", "'", "Man", "of", "the", "Woods", "Tour", ",", "'", "visit", "to", "see", "all", "tour", "date", ",", "when", "ticket", "go", "on", "sale", ",", "and", "more", "."]
(c21-6 / have-purpose-91
       :ARG2 (c21-4 / and
                    :op1 (c21-11 / information
                                 :topic (c21-12 / tour
                                                :name (c21-1 / name
                                                             :op1 "Man"
                                                             :op2 "of"
                                                             :op3 "the"
                                                             :op4 "Woods"
                                                             :op5 "Tour")
                                                :poss (c21-7 / person
                                                             :name (c21-8 / name
                                                                          :op1 "Justin"
                                                                          :op2 "Timberlake"))
                                                :ARG1-of (c21-9 / come-up-13))
                                 :mod (c21-13 / all))
                    :op2 (c21-5 / visit-01
                                :ARG1 (c21-14 / date
                                              :mod (c21-16 / tour)
                                              :mod (c21-10 / all)))
                    :op3 (c21-3 / see-01
                                :ARG1 c21-14)
                    :op4 (c21-0 / sell-01
                                :ARG1 (c21-15 / ticket))
                    :op5 (c21-2 / more)))

# ::snt This sounds hot...and country
# ::tokens ["This", "sounds", "hot", "...", "and", "country"]
# ::lemmas ["this", "sound", "hot", "...", "and", "country"]
(c22-0 / sound-01
       :ARG1 (c22-3 / this)
       :ARG2 (c22-4 / and
                    :op1 (c22-1 / hot-05)
                    :op2 (c22-2 / country)))

# ::snt We will be buying tickets for the entire family for the show in May
# ::tokens ["We", "will", "be", "buying", "tickets", "for", "the", "entire", "family", "for", "the", "show", "in", "May"]
# ::lemmas ["we", "will", "be", "buy", "ticket", "for", "the", "entire", "family", "for", "the", "show", "in", "May"]
(c23-1 / buy-01
       :ARG0 (c23-4 / we)
       :ARG1 (c23-5 / ticket)
       :ARG4 (c23-0 / family
                    :mod (c23-3 / entire))
       :purpose (c23-2 / show-04)
       :time (c23-6 / date-entity
                    :month 5))

# ::snt But I wonder how much tickets are?
# ::tokens ["But", "I", "wonder", "how", "much", "tickets", "are", "?"]
# ::lemmas ["but", "i", "wonder", "how", "much", "ticket", "be", "?"]
(c25-1 / contrast-01
       :ARG2 (c25-2 / wonder-01
                    :ARG0 (c25-3 / i)
                    :ARG1 (c25-0 / monetary-quantity
                                 :ARG2-of (c25-5 / cost-01
                                                 :ARG1 (c25-4 / ticket)))))

# ::snt Who cares
# ::tokens ["Who", "cares"]
# ::lemmas ["who", "care"]
(c26-0 / care-01
       :ARG0 (c26-1 / amr-unknown))

# ::snt Girl I saw! He'll be in DC march !! I'm getting front row, f the haters!
# ::tokens ["Girl", "I", "saw", "!", "He", "'ll", "be", "in", "DC", "march", "!", "!", "I", "'m", "getting", "front", "row", ",", "f", "the", "haters", "!"]
# ::lemmas ["girl", "i", "see", "!", "he", "'ll", "be", "in", "DC", "march", "!", "!", "i", "be", "get", "front", "row", ",", "f", "the", "hater", "!"]
(c28-2 / multi-sentence
       :snt1 (c28-4 / see-01
                    :ARG0 (c28-12 / i)
                    :ARG1 (c28-14 / girl))
       :snt2 (c28-1 / be-located-at-91
                    :ARG1 (c28-7 / he)
                    :ARG2 (c28-8 / march-01
                                 :location (c28-10 / city
                                                   :name (c28-3 / name
                                                                :op1 "DC")))
                    :mode expressive)
       :snt3 (c28-13 / get-03
                     :ARG1 (c28-5 / i)
                     :ARG2 (c28-6 / row
                                  :mod (c28-0 / front))
                     :ARG1-of (c28-15 / cause-01
                                      :ARG0 (c28-9 / person
                                                   :ARG0-of (c28-11 / hate-01)))))

# ::snt Yesss, Good idea as long as you get to go, thats all that matters lol
# ::tokens ["Yesss", ",", "Good", "idea", "as", "long", "as", "you", "get", "to", "go", ",", "that", "s", "all", "that", "matters", "lol"]
# ::lemmas ["yesss", ",", "good", "idea", "as", "long", "as", "you", "get", "to", "go", ",", "that", "s", "all", "that", "matter", "lol"]
(c30-3 / and
       :op1 (c30-9 / idea
                   :ARG1-of (c30-8 / good-02)
                   :condition (c30-7 / as-long-as
                                     :op1 (c30-6 / get-22
                                                 :ARG0 (c30-0 / you)
                                                 :ARG1 (c30-11 / go-02
                                                               :ARG0 c30-0))))
       :op2 (c30-1 / matter-01
                   :ARG1 c30-9
                   :mod (c30-5 / all)
                   :ARG2-of (c30-4 / laugh-01
                                   :ARG0 (c30-2 / i)
                                   :manner (c30-10 / loud)
                                   :mode expressive)))

# ::snt Wow its starting really soon I didnt realize! You can make a trip out of it that would be so fun, unless you want to see him in Cali and visit there too?? Hes playing in cool places like NY, DC and Nashville I feel like thatd be so fun!!
# ::tokens ["Wow", "its", "starting", "really", "soon", "I", "did", "nt", "realize", "!", "You", "can", "make", "a", "trip", "out", "of", "it", "that", "would", "be", "so", "fun", ",", "unless", "you", "want", "to", "see", "him", "in", "Cali", "and", "visit", "there", "too", "?", "?", "He", "s", "playing", "in", "cool", "places", "like", "NY", ",", "DC", "and", "Nashville", "I", "feel", "like", "that", "d", "be", "so", "fun", "!", "!"]
# ::lemmas ["wow", "its", "start", "really", "soon", "i", "do", "not", "realize", "!", "you", "can", "make", "a", "trip", "out", "of", "it", "that", "would", "be", "so", "fun", ",", "unless", "you", "want", "to", "see", "he", "in", "Cali", "and", "visit", "there", "too", "?", "?", "he", "s", "play", "in", "cool", "place", "like", "NY", ",", "DC", "and", "Nashville", "i", "feel", "like", "that", "d", "be", "so", "fun", "!", "!"]
(c31-18 / multi-sentence
        :snt1 (c31-0 / start-01
                     :ARG0 (c31-33 / it)
                     :time (c31-6 / soon
                                  :ARG1-of (c31-28 / real-04)
                                  :ARG1-of (c31-4 / realize-01
                                                  :ARG0 (c31-9 / i)
                                                  :polarity -))
                     :mod (c31-31 / wow
                                  :mode expressive))
        :snt2 (c31-11 / have-condition-91
                      :ARG1 (c31-29 / possible-01
                                    :ARG1 (c31-15 / trip-03
                                                  :ARG0 (c31-8 / you)
                                                  :ARG1 (c31-16 / it)
                                                  :ARG1-of (c31-25 / fun-01
                                                                   :degree (c31-5 / so))))
                      :ARG2 (c31-14 / and
                                    :op1 (c31-1 / want-01
                                                :ARG0 c31-8
                                                :ARG1 (c31-13 / and
                                                              :op1 (c31-27 / see-01
                                                                           :ARG0 c31-8
                                                                           :ARG1 (c31-32 / he)
                                                                           :location (c31-21 / city
                                                                                             :name (c31-26 / name
                                                                                                           :op1 "Cali")))
                                                              :op2 (c31-10 / visit-01
                                                                           :ARG0 c31-8
                                                                           :ARG1 c31-21
                                                                           :mod (c31-23 / too)))
                                                :polarity -)
                                    :op2 (c31-19 / play-01
                                                 :ARG0 c31-32
                                                 :location (c31-3 / place
                                                                  :ARG1-of (c31-17 / cool-04)
                                                                  :example (c31-12 / and
                                                                                   :op1 (c31-2 / city
                                                                                               :name (c31-20 / name
                                                                                                             :op1 "NY"))
                                                                                   :op2 (c31-24 / city
                                                                                                :name (c31-30 / name
                                                                                                              :op1 "DC"))
                                                                                   :op3 (c31-7 / city
                                                                                               :name (c31-22 / name
                                                                                                             :op1 "Nashville")))))
                                    :polarity (c31-34 / amr-unknown))))

# ::snt better get your tix to see ya man
# ::tokens ["better", "get", "your", "tix", "to", "see", "ya", "man"]
# ::lemmas ["well", "get", "your", "tix", "to", "see", "ya", "man"]
(c32-3 / recommend-01
       :ARG1 (c32-5 / get-01
                    :ARG0 (c32-0 / you
                                 :mod (c32-1 / man))
                    :ARG1 (c32-4 / tix)
                    :purpose (c32-2 / see-01
                                    :ARG0 c32-0))
       :ARG2 c32-0)

# ::snt Glad he isn't coming. Not feeling his new song. Sorry JT.
# ::tokens ["Glad", "he", "is", "n't", "coming", ".", "Not", "feeling", "his", "new", "song", ".", "Sorry", "JT", "."]
# ::lemmas ["Glad", "he", "be", "not", "come", ".", "not", "feel", "his", "new", "song", ".", "Sorry", "JT", "."]
(c33-2 / multi-sentence
       :snt1 (c33-12 / glad-02
                     :ARG0 (c33-9 / come-01
                                  :ARG1 (c33-6 / he)
                                  :polarity -)
                     :ARG1 (c33-11 / i))
       :snt2 (c33-0 / feel-01
                    :ARG0 (c33-5 / i)
                    :ARG1 (c33-4 / song
                                 :poss (c33-10 / he)
                                 :ARG1-of (c33-3 / new-01))
                    :polarity -)
       :snt3 (c33-1 / sorry-01
                    :ARG1 (c33-13 / i)
                    :ARG2 (c33-7 / person
                                 :name (c33-8 / name
                                              :op1 "JT"))))

# ::snt Even better!!!!
# ::tokens ["Even", "better", "!", "!", "!", "!"]
# ::lemmas ["even", "well", "!", "!", "!", "!"]
(c34-2 / have-degree-91
       :ARG2 (c34-0 / good-02)
       :ARG3 (c34-3 / more
                    :mod (c34-1 / even))
       :mode expressive)

# ::snt girl he is in Dallas on /27!
# ::tokens ["girl", "he", "is", "in", "Dallas", "on", "/27", "!"]
# ::lemmas ["girl", "he", "be", "in", "Dallas", "on", "/27", "!"]
(c35-0 / be-located-at-91
       :ARG1 (c35-2 / he)
       :ARG2 (c35-3 / city
                    :name (c35-1 / name
                                 :op1 "Dallas"))
       :time (c35-5 / date-entity
                    :month 7
                    :day 27)
       :mod (c35-4 / girl)
       :mode expressive)

# ::snt !!!!!!!
# ::tokens ["!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["!", "!", "!", "!", "!", "!", "!"]
(c36-0 / thing
       :mode expressive)

# ::snt Filthy!
# ::tokens ["Filthy", "!"]
# ::lemmas ["filthy", "!"]
(c37-0 / filthy)

# ::snt I truly believe your believing is remarkable.
# ::tokens ["I", "truly", "believe", "your", "believing", "is", "remarkable", "."]
# ::lemmas ["i", "truly", "believe", "your", "believing", "be", "remarkable", "."]
(c38-0 / believe-01
       :ARG0 (c38-4 / i)
       :ARG1 (c38-2 / remarkable-02
                    :ARG1 (c38-3 / believe-01
                                 :ARG0 (c38-1 / you)))
       :ARG1-of (c38-5 / true-01))

# ::snt The link is t working for me?!
# ::tokens ["The", "link", "is", "t", "working", "for", "me", "?", "!"]
# ::lemmas ["the", "link", "be", "t", "work", "for", "i", "?", "!"]
(c39-0 / work-09
       :ARG1 (c39-1 / link)
       :ARG2 (c39-2 / i)
       :polarity (c39-3 / amr-unknown)
       :polarity -)

# ::snt Superbowl show was awful. Not a good advert.
# ::tokens ["Superbowl", "show", "was", "awful", ".", "Not", "a", "good", "advert", "."]
# ::lemmas ["superbowl", "show", "be", "awful", ".", "not", "a", "good", "advert", "."]
(c40-1 / multi-sentence
       :snt1 (c40-4 / awful
                    :domain (c40-2 / show
                                   :mod (c40-5 / game
                                               :name (c40-0 / name
                                                            :op1 "Superbowl"))))
       :snt2 (c40-3 / advert
                    :ARG1-of (c40-6 / good-02
                                    :polarity -)))

# ::snt Oh Bank of Timberlake please fill up fast!
# ::tokens ["Oh", "Bank", "of", "Timberlake", "please", "fill", "up", "fast", "!"]
# ::lemmas ["oh", "Bank", "of", "Timberlake", "please", "fill", "up", "fast", "!"]
(c41-0 / fill-up-02
       :ARG0 (c41-4 / company
                    :name (c41-2 / name
                                 :op1 "Bank"
                                 :op2 "of"
                                 :op3 "Timberlake"))
       :ARG1-of (c41-3 / fast-02)
       :mod (c41-1 / oh
                   :mode expressive)
       :mode imperative
       :polite +)

# ::snt Let me figure out these coins!
# ::tokens ["Let", "me", "figure", "out", "these", "coins", "!"]
# ::lemmas ["let", "i", "figure", "out", "these", "coin", "!"]
(c42-2 / let-01
       :ARG0 (c42-1 / you)
       :ARG1 (c42-0 / figure-out-05
                    :ARG0 (c42-4 / i)
                    :ARG1 (c42-3 / coin
                                 :mod (c42-5 / this)))
       :mode imperative)

# ::snt I know youre going, lol
# ::tokens ["I", "know", "you", "re", "going", ",", "lol"]
# ::lemmas ["i", "know", "you", "re", "go", ",", "lol"]
(c43-2 / know-01
       :ARG0 (c43-3 / i)
       :ARG1 (c43-4 / go-02
                    :ARG0 (c43-0 / you))
       :ARG2-of (c43-1 / laugh-01
                       :ARG0 c43-3
                       :manner (c43-5 / loud)
                       :mode expressive))
