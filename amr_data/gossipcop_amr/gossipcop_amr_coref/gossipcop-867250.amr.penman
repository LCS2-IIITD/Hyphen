# ::snt Dude looks like shit. Which is sad because he was sooo hot
# ::tokens ["Dude", "looks", "like", "shit", ".", "Which", "is", "sad", "because", "he", "was", "sooo", "hot"]
# ::lemmas ["dude", "look", "like", "shit", ".", "which", "be", "sad", "because", "he", "be", "sooo", "hot"]
(c2-1 / multi-sentence
      :snt1 (c2-4 / look-02
                  :ARG0 (c2-6 / dude)
                  :ARG1 (c2-2 / shit))
      :snt2 (c2-0 / sad-02
                  :ARG1-of (c2-5 / cause-01
                                 :ARG0 (c2-3 / hot-03
                                             :ARG1 c2-6
                                             :degree (c2-7 / so)))))

# ::snt Pathetic!
# ::tokens ["Pathetic", "!"]
# ::lemmas ["pathetic", "!"]
(c3-0 / pathetic)

# ::snt GURL that is not a pretty look on you!!
# ::tokens ["GURL", "that", "is", "not", "a", "pretty", "look", "on", "you", "!", "!"]
# ::lemmas ["GURL", "that", "be", "not", "a", "pretty", "look", "on", "you", "!", "!"]
(c4-2 / say-01
      :ARG0 (c4-5 / i)
      :ARG1 (c4-4 / look-01
                  :ARG0 (c4-3 / person
                              :name (c4-0 / name
                                          :op1 "GURL"))
                  :ARG1 (c4-6 / that)
                  :mod (c4-1 / pretty)
                  :polarity -)
      :ARG2 c4-3)

# ::snt Lauren is Nick's Wife NOT his sister.
# ::tokens ["Lauren", "is", "Nick", "'s", "Wife", "NOT", "his", "sister", "."]
# ::lemmas ["Lauren", "be", "Nick", "'s", "Wife", "not", "his", "sister", "."]
(c5-3 / have-rel-role-91
      :ARG0 (c5-4 / person
                  :name (c5-0 / name
                              :op1 "Lauren"))
      :ARG1 (c5-1 / person
                  :name (c5-5 / name
                              :op1 "Nick"))
      :ARG2 (c5-6 / wife)
      :ARG1-of (c5-7 / contrast-01
                     :ARG2 (c5-8 / have-rel-role-91
                                 :ARG0 c5-4
                                 :ARG1 c5-1
                                 :ARG2 (c5-2 / sister)
                                 :polarity -)))

# ::snt Targeted?!?!? Did he take a look at his mug shot?!?
# ::tokens ["Targeted", "?", "!", "?", "!", "?", "Did", "he", "take", "a", "look", "at", "his", "mug", "shot", "?", "!", "?"]
# ::lemmas ["target", "?", "!", "?", "!", "?", "do", "he", "take", "a", "look", "at", "his", "mug", "shot", "?", "!", "?"]
(c6-0 / multi-sentence
      :snt1 (c6-6 / target-01
                  :polarity (c6-8 / amr-unknown)
                  :ARG1 (c6-2 / he))
      :snt2 (c6-3 / look-01
                  :ARG0 (c6-5 / he)
                  :ARG1 (c6-1 / shot
                              :mod (c6-4 / mug)
                              :poss c6-5)
                  :polarity (c6-7 / amr-unknown)))

# ::snt Whose game? His brother?
# ::tokens ["Whose", "game", "?", "His", "brother", "?"]
# ::lemmas ["whose", "game", "?", "his", "brother", "?"]
(c7-1 / multi-sentence
      :snt1 (c7-7 / game
                  :mod (c7-6 / amr-unknown))
      :snt2 (c7-3 / person
                  :ARG0-of (c7-2 / have-rel-role-91
                                 :ARG1 (c7-4 / he)
                                 :ARG2 (c7-0 / brother))
                  :polarity (c7-5 / amr-unknown)))

# ::snt well aaron i love you gonna contuine to make mistakes . but dui should not drive drunk behind the wheel . i love u and your brother
# ::tokens ["well", "aaron", "i", "love", "you", "gon", "na", "contuine", "to", "make", "mistakes", ".", "but", "dui", "should", "not", "drive", "drunk", "behind", "the", "wheel", ".", "i", "love", "u", "and", "your", "brother"]
# ::lemmas ["well", "aaron", "i", "love", "you", "going", "to", "contuine", "to", "make", "mistake", ".", "but", "dui", "should", "not", "drive", "drunk", "behind", "the", "wheel", ".", "i", "love", "u", "and", "your", "brother"]
(c8-12 / multi-sentence
       :snt1 (c8-0 / say-01
                   :ARG0 (c8-21 / i)
                   :ARG1 (c8-2 / love-01
                               :ARG0 c8-21
                               :ARG1 (c8-19 / person
                                            :name (c8-17 / name
                                                         :op1 "aron")
                                            :ARG2-of c8-0))
                   :mod (c8-20 / well))
       :snt2 (c8-15 / contrast-01
                    :ARG1 (c8-13 / probable
                                 :domain (c8-7 / mistake-02
                                               :ARG0 c8-19))
                    :ARG2 (c8-18 / recommend-01
                                 :ARG1 (c8-22 / drive-01
                                              :ARG0 (c8-16 / dui)
                                              :manner (c8-14 / drunk)
                                              :location (c8-11 / behind
                                                               :op1 (c8-3 / wheel))
                                              :polarity -)))
       :snt3 (c8-10 / love-01
                    :ARG0 (c8-6 / i)
                    :ARG1 (c8-9 / and
                                :op1 (c8-5 / you)
                                :op2 (c8-4 / person
                                           :ARG0-of (c8-8 / have-rel-role-91
                                                          :ARG1 c8-5
                                                          :ARG2 (c8-1 / brother))))))

# ::snt His brother should have reached out to him in a more private way
# ::tokens ["His", "brother", "should", "have", "reached", "out", "to", "him", "in", "a", "more", "private", "way"]
# ::lemmas ["his", "brother", "should", "have", "reach", "out", "to", "he", "in", "a", "more", "private", "way"]
(c9-3 / recommend-01
      :ARG1 (c9-8 / reach-03
                  :ARG0 (c9-6 / person
                              :ARG0-of (c9-5 / have-rel-role-91
                                             :ARG1 (c9-7 / he)
                                             :ARG2 (c9-0 / brother)))
                  :ARG1 c9-7
                  :manner (c9-2 / private-02
                                :ARG2-of (c9-4 / have-degree-91
                                               :ARG1 c9-8
                                               :ARG3 (c9-1 / more)))))

# ::snt Lauren is Nick's wife not his sister
# ::tokens ["Lauren", "is", "Nick", "'s", "wife", "not", "his", "sister"]
# ::lemmas ["Lauren", "be", "Nick", "'s", "wife", "not", "his", "sister"]
(c10-8 / and
       :op1 (c10-4 / person
                   :name (c10-0 / name
                                :op1 "Lauren")
                   :ARG0-of (c10-3 / have-rel-role-91
                                   :ARG1 (c10-1 / person
                                                :name (c10-5 / name
                                                             :op1 "Nick"))
                                   :ARG2 (c10-6 / wife)))
       :op2 (c10-9 / person
                   :ARG0-of (c10-7 / have-rel-role-91
                                   :ARG1 c10-1
                                   :ARG2 (c10-2 / sister))
                   :domain c10-4
                   :polarity -))

# ::snt What was that?? Fame you say?? Really?!?! Are you sure it wasn't because you were driving drunk?
# ::tokens ["What", "was", "that", "?", "?", "Fame", "you", "say", "?", "?", "Really", "?", "!", "?", "!", "Are", "you", "sure", "it", "was", "n't", "because", "you", "were", "driving", "drunk", "?"]
# ::lemmas ["what", "be", "that", "?", "?", "fame", "you", "say", "?", "?", "really", "?", "!", "?", "!", "be", "you", "sure", "it", "be", "not", "because", "you", "be", "drive", "drunk", "?"]
(c11-2 / multi-sentence
       :snt1 (c11-8 / that
                    :polarity (c11-10 / amr-unknown))
       :snt2 (c11-3 / say-01
                    :ARG0 (c11-1 / you)
                    :ARG1 (c11-9 / amr-unknown))
       :snt3 (c11-4 / real-04
                    :polarity (c11-6 / amr-unknown)
                    :ARG1 (c11-0 / sure-02
                                 :ARG0 (c11-11 / you)
                                 :ARG1 (c11-5 / cause-01
                                              :ARG0 (c11-12 / drive-01
                                                            :ARG0 c11-11
                                                            :manner (c11-7 / drunk))
                                              :ARG1 (c11-13 / it)
                                              :polarity -))))

# ::snt Fame made me drink and drive..
# ::tokens ["Fame", "made", "me", "drink", "and", "drive", ".."]
# ::lemmas ["Fame", "make", "i", "drink", "and", "drive", ".."]
(c12-1 / make-02
       :ARG0 c12-1
       :ARG0 (c12-2 / person
                    :name (c12-0 / name
                                 :op1 "Fame"))
       :ARG1 (c12-5 / and
                    :op1 (c12-6 / drink-01
                                :ARG0 (c12-4 / i))
                    :op2 (c12-3 / drive-01
                                :ARG0 c12-4)))

# ::snt Bit of Monday fun, type . Find out what plus line item you need!
# ::tokens ["Bit", "of", "Monday", "fun", ",", "type", ".", "Find", "out", "what", "plus", "line", "item", "you", "need", "!"]
# ::lemmas ["bit", "of", "Monday", "fun", ",", "type", ".", "find", "out", "what", "plus", "line", "item", "you", "need", "!"]
(c13-3 / multi-sentence
       :snt1 (c13-0 / fun-01
                    :time (c13-11 / date-entity
                                  :weekday (c13-5 / monday)
                                  :degree (c13-1 / bit)))
       :snt2 (c13-10 / type-01
                     :ARG0 (c13-2 / you)
                     :mode imperative)
       :snt3 (c13-7 / find-out-03
                    :ARG0 c13-2
                    :ARG1 (c13-6 / plus
                                 :op1 (c13-9 / item
                                             :mod (c13-8 / line)
                                             :ARG1-of (c13-4 / need-01
                                                             :ARG0 c13-2)))
                    :mode imperative))

# ::snt That's what most addicts &amp; alcoholics do blame everyone &amp; thing else for their problem. He's a hot mess &amp; that fame part is highly doubtful.
# ::tokens ["That", "'s", "what", "most", "addicts", "&", "amp", ";", "alcoholics", "do", "blame", "everyone", "&", "amp", ";", "thing", "else", "for", "their", "problem", ".", "He", "'s", "a", "hot", "mess", "&", "amp", ";", "that", "fame", "part", "is", "highly", "doubtful", "."]
# ::lemmas ["that", "be", "what", "most", "addict", "&", "amp", ";", "alcoholic", "do", "blame", "everyone", "&", "amp", ";", "thing", "else", "for", "their", "problem", ".", "he", "be", "a", "hot", "mess", "&", "amp", ";", "that", "fame", "part", "be", "highly", "doubtful", "."]
(c14-11 / multi-sentence
        :snt1 (c14-8 / and
                     :op1 (c14-10 / blame-01
                                  :ARG0 (c14-18 / person
                                                :ARG1-of (c14-6 / addict-01)
                                                :quant (c14-3 / most))
                                  :ARG1 (c14-5 / and
                                               :op1 (c14-17 / everyone)
                                               :op2 (c14-13 / alcoholics))
                                  :ARG2 (c14-12 / problem
                                                :poss c14-18))
                     :op2 (c14-0 / blame-01
                                 :ARG0 (c14-7 / thing
                                              :mod (c14-9 / else))
                                 :ARG1 c14-17
                                 :ARG2 c14-12))
        :snt2 (c14-19 / and
                      :op1 (c14-15 / mess
                                   :ARG1-of (c14-4 / hot-05)
                                   :domain (c14-20 / he))
                      :op2 (c14-21 / doubt-01
                                   :ARG1 (c14-1 / part
                                                :topic (c14-16 / fame-01)
                                                :mod (c14-14 / that))
                                   :degree (c14-2 / high-02)
                                   :polarity -)))

# ::snt Can someone tell this Eric Carter he's not famous?! Police are too busy racial profiling to be targeting him.
# ::tokens ["Can", "someone", "tell", "this", "Eric", "Carter", "he", "'s", "not", "famous", "?", "!", "Police", "are", "too", "busy", "racial", "profiling", "to", "be", "targeting", "him", "."]
# ::lemmas ["can", "someone", "tell", "this", "Eric", "Carter", "he", "be", "not", "famous", "?", "!", "police", "be", "too", "busy", "racial", "profiling", "to", "be", "target", "he", "."]
(c15-2 / multi-sentence
       :snt1 (c15-10 / possible-01
                     :ARG1 (c15-13 / tell-01
                                   :ARG0 (c15-4 / someone)
                                   :ARG1 (c15-0 / fame-01
                                                :ARG1 (c15-3 / person
                                                             :name (c15-5 / name
                                                                          :op1 "Eric"
                                                                          :op2 "Carter"))
                                                :polarity -)
                                   :ARG2 (c15-15 / this))
                     :polarity (c15-6 / amr-unknown))
       :snt2 (c15-9 / have-degree-91
                    :ARG1 (c15-14 / police)
                    :ARG2 (c15-1 / busy-01
                                 :ARG1 c15-14
                                 :ARG2 (c15-11 / profile-01
                                               :mod (c15-7 / race)))
                    :ARG3 (c15-12 / too)
                    :ARG6 (c15-8 / target-01
                                 :ARG0 c15-14
                                 :ARG1 c15-3)))

# ::snt That dude needs medical help - ASAP!
# ::tokens ["That", "dude", "needs", "medical", "help", "-", "ASAP", "!"]
# ::lemmas ["that", "dude", "need", "medical", "help", "-", "asap", "!"]
(c16-1 / need-01
       :ARG0 (c16-5 / dude
                    :mod (c16-4 / that))
       :ARG1 (c16-3 / help-01
                    :ARG1 c16-5
                    :mod (c16-0 / medicine))
       :time (c16-2 / ASAP))

# ::snt "Fame"
# ::tokens ["\"", "Fame", "\""]
# ::lemmas ["\"", "Fame", "\""]
(c18-0 / blame-01)

# ::snt Bum
# ::tokens ["Bum"]
# ::lemmas ["Bum"]
(c20-0 / bum
       :mode expressive)

# ::snt His what?
# ::tokens ["His", "what", "?"]
# ::lemmas ["his", "what", "?"]
(c21-1 / amr-unknown
       :polarity c21-1
       :domain (c21-0 / he))

# ::snt I didn't know he was famous.
# ::tokens ["I", "did", "n't", "know", "he", "was", "famous", "."]
# ::lemmas ["i", "do", "not", "know", "he", "be", "famous", "."]
(c22-2 / know-01
       :ARG0 (c22-3 / i)
       :ARG1 (c22-0 / fame-01
                    :ARG1 (c22-1 / he))
       :polarity -)

# ::snt Fame? Who is he again?
# ::tokens ["Fame", "?", "Who", "is", "he", "again", "?"]
# ::lemmas ["Fame", "?", "who", "be", "he", "again", "?"]
(c23-2 / multi-sentence
       :snt1 (c23-0 / blame-01
                    :ARG1 (c23-1 / you))
       :snt2 (c23-5 / amr-unknown
                    :domain (c23-3 / he)
                    :mod (c23-4 / again)))

# ::snt man buddy if you think that tweet was a kick in the crotch...you do need help
# ::tokens ["man", "buddy", "if", "you", "think", "that", "tweet", "was", "a", "kick", "in", "the", "crotch", "...", "you", "do", "need", "help"]
# ::lemmas ["man", "buddy", "if", "you", "think", "that", "tweet", "be", "a", "kick", "in", "the", "crotch", "...", "you", "do", "need", "help"]
(c24-2 / say-01
       :ARG0 (c24-9 / i)
       :ARG1 (c24-1 / need-01
                    :ARG0 (c24-5 / person
                                 :ARG0-of (c24-4 / have-rel-role-91
                                                 :ARG1 c24-9
                                                 :ARG2 (c24-0 / buddy)))
                    :ARG1 (c24-8 / help-01
                                 :ARG1 c24-5)
                    :condition (c24-10 / think-01
                                       :ARG0 c24-5
                                       :ARG1 (c24-6 / kick-01
                                                    :ARG0 (c24-12 / thing
                                                                  :ARG1-of (c24-11 / tweet-01)
                                                                  :mod (c24-3 / that))
                                                    :ARG1 (c24-7 / crotch))))
       :ARG2 c24-5)

# ::snt Only years old? He looks like a poster for Meth addicts...this is what it does to you.
# ::tokens ["Only", "years", "old", "?", "He", "looks", "like", "a", "poster", "for", "Meth", "addicts", "...", "this", "is", "what", "it", "does", "to", "you", "."]
# ::lemmas ["Only", "years", "old", "?", "he", "look", "like", "a", "poster", "for", "Meth", "addict", "...", "this", "be", "what", "it", "do", "to", "you", "."]
(c25-2 / multi-sentence
       :snt1 (c25-4 / age-01
                    :polarity (c25-10 / amr-unknown)
                    :ARG1 (c25-6 / he)
                    :ARG2 (c25-11 / temporal-quantity
                                  :unit (c25-1 / year)
                                  :mod (c25-0 / only)
                                  :quant 1))
       :snt2 (c25-5 / resemble-01
                    :ARG1 c25-6
                    :ARG2 (c25-7 / person
                                 :ARG0-of (c25-3 / post-01
                                                 :ARG2 (c25-15 / person
                                                               :ARG1-of (c25-9 / addict-01
                                                                               :ARG2 (c25-8 / methamphetamine))))))
       :snt3 (c25-13 / do-02
                     :ARG0 (c25-12 / it)
                     :ARG1 (c25-16 / this)
                     :ARG2 (c25-14 / you)))

# ::snt Who?
# ::tokens ["Who", "?"]
# ::lemmas ["who", "?"]
(c26-0 / amr-unknown)

# ::snt He still thinks he's famous , he's more fucked up than I thought !
# ::tokens ["He", "still", "thinks", "he", "'s", "famous", ",", "he", "'s", "more", "fucked", "up", "than", "I", "thought", "!"]
# ::lemmas ["he", "still", "think", "he", "be", "famous", ",", "he", "be", "more", "fuck", "up", "than", "i", "think", "!"]
(c27-3 / and
       :op1 (c27-8 / think-01
                   :ARG0 (c27-4 / he)
                   :ARG1 (c27-0 / fame-01
                                :ARG1 c27-4)
                   :mod (c27-2 / still))
       :op2 (c27-5 / fuck-up-02
                   :ARG1 c27-4
                   :ARG2-of (c27-6 / have-degree-91
                                   :ARG1 c27-4
                                   :ARG3 (c27-1 / more)
                                   :ARG4 (c27-9 / think-01
                                                :ARG0 (c27-7 / i)))))

# ::snt Aaron doesn't need to slam his brother Nick Carter or the police, Aaron is the one that got caught not no one else!
# ::tokens ["Aaron", "does", "n't", "need", "to", "slam", "his", "brother", "Nick", "Carter", "or", "the", "police", ",", "Aaron", "is", "the", "one", "that", "got", "caught", "not", "no", "one", "else", "!"]
# ::lemmas ["Aaron", "do", "not", "need", "to", "slam", "his", "brother", "Nick", "Carter", "or", "the", "police", ",", "Aaron", "be", "the", "one", "that", "got", "catch", "not", "no", "one", "else", "!"]
(c28-12 / and
        :op1 (c28-2 / need-01
                    :ARG0 (c28-7 / person
                                 :name (c28-6 / name
                                              :op1 "Aaron"))
                    :ARG1 (c28-4 / slam-02
                                 :ARG0 c28-7
                                 :ARG1 (c28-0 / or
                                              :op1 (c28-3 / person
                                                          :name (c28-8 / name
                                                                       :op1 "Nick"
                                                                       :op2 "Carter")
                                                          :ARG0-of (c28-9 / have-rel-role-91
                                                                          :ARG1 c28-7
                                                                          :ARG2 (c28-1 / brother)))
                                              :op2 (c28-13 / police)))
                    :polarity -)
        :op2 (c28-10 / catch-02
                     :ARG1 c28-7
                     :ARG1-of (c28-14 / contrast-01
                                      :ARG2 (c28-11 / no-one
                                                    :mod (c28-5 / else)))))

# ::snt He needs to take responsibility for his own actions, and stop blaming everyone else.
# ::tokens ["He", "needs", "to", "take", "responsibility", "for", "his", "own", "actions", ",", "and", "stop", "blaming", "everyone", "else", "."]
# ::lemmas ["he", "need", "to", "take", "responsibility", "for", "his", "own", "action", ",", "and", "stop", "blame", "everyone", "else", "."]
(c29-1 / need-01
       :ARG0 (c29-5 / he)
       :ARG1 (c29-7 / and
                    :op1 (c29-3 / responsible-01
                                :ARG0 c29-5
                                :ARG1 (c29-6 / act-02
                                             :ARG0 c29-5))
                    :op2 (c29-2 / stop-01
                                :ARG0 c29-5
                                :ARG1 (c29-0 / blame-01
                                             :ARG0 c29-5
                                             :ARG1 (c29-4 / everyone
                                                          :mod (c29-8 / else))))))

# ::snt It's not job to save . Aaron needs to save himself! Nick can only do so much!
# ::tokens ["It", "'s", "not", "job", "to", "save", ".", "Aaron", "needs", "to", "save", "himself", "!", "Nick", "can", "only", "do", "so", "much", "!"]
# ::lemmas ["it", "be", "not", "job", "to", "save", ".", "Aaron", "need", "to", "save", "himself", "!", "Nick", "can", "only", "do", "so", "much", "!"]
(c30-3 / multi-sentence
       :snt1 (c30-10 / job
                     :domain (c30-4 / save-02)
                     :polarity -)
       :snt2 (c30-2 / need-01
                    :ARG0 (c30-7 / person
                                 :name (c30-6 / name
                                              :op1 "Aaron"))
                    :ARG1 (c30-0 / save-02
                                 :ARG0 c30-7
                                 :ARG1 c30-7))
       :snt3 (c30-5 / possible-01
                    :ARG1 (c30-12 / do-02
                                  :ARG0 (c30-11 / person
                                                :name (c30-8 / name
                                                             :op1 "Nick"))
                                  :ARG1 (c30-9 / much
                                               :degree (c30-13 / so))
                                  :mod (c30-1 / only))))

# ::snt Targeted you due to fame? Who are you?
# ::tokens ["Targeted", "you", "due", "to", "fame", "?", "Who", "are", "you", "?"]
# ::lemmas ["target", "you", "due", "to", "fame", "?", "who", "be", "you", "?"]
(c31-2 / multi-sentence
       :snt1 (c31-5 / target-01
                    :ARG1 (c31-1 / you)
                    :ARG1-of (c31-4 / cause-01
                                    :ARG0 (c31-0 / fame-01
                                                 :ARG1 c31-1)))
       :snt2 (c31-6 / you
                    :domain (c31-3 / amr-unknown)))

# ::snt And possibly the fact that you look stoned out of your mind?
# ::tokens ["And", "possibly", "the", "fact", "that", "you", "look", "stoned", "out", "of", "your", "mind", "?"]
# ::lemmas ["and", "possibly", "the", "fact", "that", "you", "look", "stone", "out", "of", "your", "mind", "?"]
(c32-7 / and
       :op2 (c32-4 / possible-01
                   :ARG1 (c32-5 / look-02
                                :ARG0 (c32-1 / you
                                             :part (c32-2 / mind))
                                :ARG1 (c32-3 / stone-03
                                             :ARG1 c32-1
                                             :direction (c32-0 / out
                                                               :op1 c32-2)))
                   :polarity (c32-6 / amr-unknown)))

# ::snt Or special treatment
# ::tokens ["Or", "special", "treatment"]
# ::lemmas ["or", "special", "treatment"]
(c33-1 / or
       :op2 (c33-2 / treat-03
                   :ARG1-of (c33-0 / special-02)))

# ::snt There's no excuse
# ::tokens ["There", "'s", "no", "excuse"]
# ::lemmas ["there", "be", "no", "excuse"]
(c34-0 / excuse-02
       :polarity -)

# ::snt People don't remember who you are. The police were just doing their jobs with a drunk driver. Take responsibility dude
# ::tokens ["People", "do", "n't", "remember", "who", "you", "are", ".", "The", "police", "were", "just", "doing", "their", "jobs", "with", "a", "drunk", "driver", ".", "Take", "responsibility", "dude"]
# ::lemmas ["people", "do", "not", "remember", "who", "you", "be", ".", "the", "police", "be", "just", "do", "their", "job", "with", "a", "drunk", "driver", ".", "take", "responsibility", "dude"]
(c35-1 / multi-sentence
       :snt1 (c35-4 / remember-01
                    :ARG0 (c35-6 / person)
                    :ARG1 (c35-2 / person
                                 :domain (c35-0 / you))
                    :polarity -)
       :snt2 (c35-13 / do-02
                     :ARG0 (c35-12 / police)
                     :ARG1 (c35-10 / job
                                   :poss c35-12)
                     :ARG3 (c35-8 / person
                                  :ARG0-of (c35-9 / drive-01
                                                  :manner (c35-7 / drunk)))
                     :mod (c35-15 / just))
       :snt3 (c35-3 / say-01
                    :ARG1 (c35-11 / take-01
                                  :ARG0 (c35-5 / dude)
                                  :ARG1 (c35-14 / responsible-03)
                                  :mode imperative)
                    :ARG2 c35-5))

# ::snt ? Looks
# ::tokens ["?", "Looks"]
# ::lemmas ["?", "look"]
(c36-0 / look-01
       :polarity (c36-1 / amr-unknown))
