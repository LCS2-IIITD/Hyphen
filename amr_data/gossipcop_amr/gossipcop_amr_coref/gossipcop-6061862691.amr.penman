# ::snt If u read proper news u wud know hes still fighting for his life. But yeah - gossipcop is the right place to get yr news.
# ::tokens ["If", "u", "read", "proper", "news", "u", "wud", "know", "he", "s", "still", "fighting", "for", "his", "life", ".", "But", "yeah", "-", "gossipcop", "is", "the", "right", "place", "to", "get", "yr", "news", "."]
# ::lemmas ["if", "u", "read", "proper", "news", "u", "wud", "know", "he", "s", "still", "fight", "for", "his", "life", ".", "but", "yeah", "-", "gossipcop", "be", "the", "right", "place", "to", "get", "yr", "news", "."]
(c1-10 / multi-sentence
       :snt1 (c1-6 / know-01
                   :ARG0 (c1-4 / you)
                   :ARG1 (c1-14 / fight-01
                                :ARG0 (c1-5 / he)
                                :ARG2 (c1-1 / life
                                            :poss c1-5)
                                :mod (c1-0 / still))
                   :condition (c1-16 / read-01
                                     :ARG0 c1-4
                                     :ARG1 (c1-15 / news
                                                  :mod (c1-17 / proper)))
                   :polarity -)
       :snt2 (c1-13 / contrast-01
                    :ARG2 (c1-11 / place
                                 :ARG1-of (c1-2 / right-03
                                                :ARG2 (c1-8 / get-01
                                                            :ARG0 (c1-7 / you)
                                                            :ARG1 (c1-12 / news
                                                                         :poss c1-7)))
                                 :mod (c1-3 / yeah
                                            :mode expressive)
                                 :domain (c1-9 / company
                                               :name (c1-18 / name
                                                            :op1 " gossipcop")))))

# ::snt RIP
# ::tokens ["RIP"]
# ::lemmas ["RIP"]
(c2-0 / rest-01
      :ARG1 (c2-1 / you)
      :manner (c2-2 / peace))

# ::snt Worked with Tom a few years back. Phenomenal guy. RIP sir
# ::tokens ["Worked", "with", "Tom", "a", "few", "years", "back", ".", "Phenomenal", "guy", ".", "RIP", "sir"]
# ::lemmas ["work", "with", "Tom", "a", "few", "years", "back", ".", "phenomenal", "guy", ".", "RIP", "sir"]
(c3-4 / multi-sentence
      :snt1 (c3-11 / work-01
                   :ARG3 (c3-9 / person
                               :name (c3-3 / name
                                           :op1 "Tom"))
                   :time (c3-1 / before
                               :op1 (c3-8 / now)
                               :quant (c3-0 / few
                                            :op1 (c3-12 / temporal-quantity
                                                        :unit (c3-2 / year)
                                                        :quant 1))))
      :snt2 (c3-13 / guy
                   :mod (c3-5 / phenomenal))
      :snt3 (c3-10 / wish-01
                   :ARG1 (c3-7 / rest-01
                               :ARG1 (c3-6 / sir))))

# ::snt Tom petty was the Best
# ::tokens ["Tom", "petty", "was", "the", "Best"]
# ::lemmas ["Tom", "petty", "be", "the", "good"]
(c4-2 / have-degree-91
      :ARG1 (c4-3 / person
                  :name (c4-0 / name
                              :op1 "Tom"
                              :op2 " petty"))
      :ARG2 (c4-4 / good-02
                  :ARG1 c4-3)
      :ARG3 (c4-1 / most))

# ::snt God Bless the USA
# ::tokens ["God", "Bless", "the", "USA"]
# ::lemmas ["God", "Bless", "the", "USA"]
(c5-0 / bless-01
      :ARG0 (c5-3 / person
                  :name (c5-1 / name
                              :op1 "God"))
      :ARG1 (c5-4 / country
                  :name (c5-2 / name
                              :op1 "USA")))

# ::snt Dear Fox. If you don't care about what celebrities think, stop selling what celebrities think
# ::tokens ["Dear", "Fox", ".", "If", "you", "do", "n't", "care", "about", "what", "celebrities", "think", ",", "stop", "selling", "what", "celebrities", "think"]
# ::lemmas ["Dear", "Fox", ".", "if", "you", "do", "not", "care", "about", "what", "celebrity", "think", ",", "stop", "sell", "what", "celebrity", "think"]
(c6-3 / multi-sentence
      :snt1 (c6-8 / dear
                  :domain (c6-1 / broadcast-program
                                :name (c6-4 / name
                                            :op1 "Fox")))
      :snt2 (c6-5 / stop-01
                  :ARG0 (c6-2 / you)
                  :ARG1 (c6-0 / sell-01
                              :ARG0 c6-2
                              :ARG1 (c6-7 / thing
                                          :ARG1-of (c6-10 / think-01
                                                          :ARG0 (c6-6 / celebrity))))
                  :condition (c6-9 / care-01
                                   :ARG0 c6-2
                                   :ARG1 c6-7
                                   :polarity -)
                  :mode imperative))

# ::snt Is a great lost for us
# ::tokens ["Is", "a", "great", "lost", "for", "us"]
# ::lemmas ["be", "a", "great", "lost", "for", "we"]
(c8-2 / lose-02
      :ARG1 (c8-0 / great)
      :beneficiary (c8-1 / we)
      :polarity (c8-3 / amr-unknown))

# ::snt RIP Tom Petty. Nobody will ever replace your music
# ::tokens ["RIP", "Tom", "Petty", ".", "Nobody", "will", "ever", "replace", "your", "music"]
# ::lemmas ["RIP", "Tom", "Petty", ".", "nobody", "will", "ever", "replace", "your", "music"]
(c9-2 / multi-sentence
      :snt1 (c9-9 / wish-01
                  :ARG1 (c9-4 / rest-01
                              :ARG1 (c9-7 / person
                                          :name (c9-1 / name
                                                      :op1 "Tom"
                                                      :op2 "Petty"))
                              :manner (c9-3 / peace)))
      :snt2 (c9-10 / replace-01
                   :ARG0 (c9-6 / nobody)
                   :ARG1 (c9-8 / music
                               :poss (c9-0 / you))
                   :time (c9-5 / ever)))

# ::snt I am still not sure about this...
# ::tokens ["I", "am", "still", "not", "sure", "about", "this", "..."]
# ::lemmas ["i", "be", "still", "not", "sure", "about", "this", "..."]
(c10-3 / sure-02
       :ARG0 (c10-2 / i)
       :ARG1 (c10-1 / this)
       :mod (c10-0 / still)
       :polarity -)

# ::snt If not the, one of the greatest songwriters and bands in the history of Rock&amp;Roll
# ::tokens ["If", "not", "the", ",", "one", "of", "the", "greatest", "songwriters", "and", "bands", "in", "the", "history", "of", "Rock&amp;Roll"]
# ::lemmas ["if", "not", "the", ",", "one", "of", "the", "great", "songwriter", "and", "band", "in", "the", "history", "of", "Rock&amp;Roll"]
(c12-11 / include-91
        :ARG1 (c12-0 / one)
        :ARG2 (c12-12 / and
                      :op1 (c12-8 / person
                                  :ARG0-of (c12-9 / write-01
                                                  :ARG1 (c12-5 / song)))
                      :op2 (c12-2 / band)
                      :ARG1-of (c12-7 / have-degree-91
                                      :ARG2 (c12-13 / great)
                                      :ARG3 (c12-3 / most)
                                      :ARG5 (c12-10 / history
                                                    :poss (c12-1 / organization
                                                                 :name (c12-4 / name
                                                                              :op1 "Rock&amp")))))
        :condition (c12-6 / have-polarity-91
                          :ARG2 -))

# ::snt The music world just lost another LegendSing with the angels, Tom
# ::tokens ["The", "music", "world", "just", "lost", "another", "LegendSing", "with", "the", "angels", ",", "Tom"]
# ::lemmas ["the", "music", "world", "just", "lose", "another", "LegendSing", "with", "the", "angel", ",", "Tom"]
(c13-2 / say-01
       :ARG0 (c13-7 / i)
       :ARG1 (c13-3 / lose-02
                    :ARG0 (c13-5 / world
                                 :mod (c13-0 / music))
                    :ARG1 (c13-9 / legend
                                 :mod (c13-8 / another))
                    :time (c13-6 / just))
       :ARG2 (c13-4 / person
                    :name (c13-1 / name
                                 :op1 "Tom")))

# ::snt Is he really dead this time? The news can't even get that right anymore.
# ::tokens ["Is", "he", "really", "dead", "this", "time", "?", "The", "news", "ca", "n't", "even", "get", "that", "right", "anymore", "."]
# ::lemmas ["be", "he", "really", "dead", "this", "time", "?", "the", "news", "can", "not", "even", "get", "that", "right", "anymore", "."]
(c14-0 / multi-sentence
       :snt1 (c14-10 / die-01
                     :polarity (c14-8 / amr-unknown)
                     :ARG1 (c14-4 / he)
                     :ARG1-of (c14-2 / real-04)
                     :time (c14-6 / time
                                  :mod (c14-13 / this)))
       :snt2 (c14-5 / possible-01
                    :ARG1 (c14-9 / get-04
                                 :ARG0 (c14-1 / news)
                                 :ARG1 (c14-11 / right-06
                                               :ARG1 (c14-7 / that))
                                 :mod (c14-3 / even)
                                 :time (c14-12 / anymore))
                    :polarity -))

# ::snt RIP to a wonderful musician and entertainer.
# ::tokens ["RIP", "to", "a", "wonderful", "musician", "and", "entertainer", "."]
# ::lemmas ["RIP", "to", "a", "wonderful", "musician", "and", "entertainer", "."]
(c15-6 / wish-01
       :ARG1 (c15-2 / rest-01
                    :ARG1 (c15-4 / person
                                 :ARG1-of (c15-5 / wonderful-03
                                                 :ARG2 (c15-7 / and
                                                              :op1 (c15-0 / musician)
                                                              :op2 (c15-3 / entertainer))))
                    :manner (c15-1 / peace)))

# ::snt have no words except lost too young.don't back down.
# ::tokens ["have", "no", "words", "except", "lost", "too", "young.don't", "back", "down", "."]
# ::lemmas ["have", "no", "word", "except", "lose", "too", "young.don't", "back", "down", "."]
(c16-2 / multi-sentence
       :snt1 (c16-4 / have-03
                    :ARG1 (c16-7 / word
                                 :ARG2-of (c16-3 / except-01
                                                 :ARG1 (c16-5 / lose-02
                                                              :ARG1 (c16-6 / person
                                                                           :ARG1-of (c16-8 / have-degree-91
                                                                                           :ARG2 (c16-1 / young)
                                                                                           :ARG3 (c16-9 / too)))))
                                 :polarity -))
       :snt2 (c16-0 / back-down-11
                    :ARG0 (c16-10 / you)
                    :mode imperative
                    :polarity -))

# ::snt Rest In Peace Tom.
# ::tokens ["Rest", "In", "Peace", "Tom", "."]
# ::lemmas ["rest", "in", "Peace", "Tom", "."]
(c17-2 / say-01
       :ARG1 (c17-3 / rest-01
                    :manner (c17-4 / peace))
       :ARG2 (c17-1 / person
                    :name (c17-0 / name
                                 :op1 "Tom")))

# ::snt Loved your music!!! RIP
# ::tokens ["Loved", "your", "music", "!", "!", "!", "RIP"]
# ::lemmas ["love", "your", "music", "!", "!", "!", "RIP"]
(c18-1 / multi-sentence
       :snt1 (c18-4 / love-01
                    :ARG1 (c18-3 / music
                                 :poss (c18-0 / you)))
       :snt2 (c18-2 / rest-01
                    :ARG1 (c18-6 / you)
                    :manner (c18-5 / peace)))

# ::snt Tom was a great liberal
# ::tokens ["Tom", "was", "a", "great", "liberal"]
# ::lemmas ["Tom", "be", "a", "great", "liberal"]
(c19-3 / liberal-02
       :ARG1 (c19-1 / person
                    :name (c19-2 / name
                                 :op1 "Tom"))
       :degree (c19-0 / great))

# ::snt Ovetdose cocaine an had MI?
# ::tokens ["Ovetdose", "cocaine", "an", "had", "MI", "?"]
# ::lemmas ["Ovetdose", "cocaine", "an", "had", "mi", "?"]
(c20-0 / opine-01
       :polarity (c20-4 / amr-unknown)
       :ARG0 (c20-1 / you)
       :ARG1 (c20-3 / have-03
                    :ARG0 c20-1
                    :ARG1 (c20-5 / government-organization
                                 :name (c20-2 / name
                                              :op1 "MI"))))

# ::snt We are sure now?
# ::tokens ["We", "are", "sure", "now", "?"]
# ::lemmas ["we", "be", "sure", "now", "?"]
(c21-3 / sure-02
       :polarity (c21-0 / amr-unknown)
       :ARG0 (c21-2 / we)
       :time (c21-1 / now))

# ::snt Rip loved every song u ever sang
# ::tokens ["Rip", "loved", "every", "song", "u", "ever", "sang"]
# ::lemmas ["Rip", "love", "every", "song", "u", "ever", "sing"]
(c22-6 / love-01
       :ARG0 (c22-5 / person
                    :name (c22-2 / name
                                 :op1 "Rip"))
       :ARG1 (c22-3 / song
                    :mod (c22-4 / every)
                    :ARG1-of (c22-0 / sing-01
                                    :ARG0 (c22-1 / you)
                                    :time (c22-7 / ever))))

# ::snt Sad, he is definitely one of my favorite rockers
# ::tokens ["Sad", ",", "he", "is", "definitely", "one", "of", "my", "favorite", "rockers"]
# ::lemmas ["Sad", ",", "he", "be", "definitely", "one", "of", "my", "favorite", "rocker"]
(c23-1 / sad-02
       :ARG0 (c23-6 / include-91
                    :ARG1 (c23-4 / he)
                    :ARG2 (c23-5 / person
                                 :mod (c23-3 / rocker)
                                 :ARG1-of (c23-0 / favor-01
                                                 :ARG0 (c23-2 / i)))
                    :mod (c23-7 / definite)))

# ::snt R.I.P
# ::tokens ["R.I.P"]
# ::lemmas ["R.I.P"]
(c24-1 / person
       :name (c24-0 / name
                    :op1 "R.I.P."))

# ::snt Like I care about what ticks and furniture have to say about this.
# ::tokens ["Like", "I", "care", "about", "what", "ticks", "and", "furniture", "have", "to", "say", "about", "this", "."]
# ::lemmas ["like", "i", "care", "about", "what", "tick", "and", "furniture", "have", "to", "say", "about", "this", "."]
(c25-2 / resemble-01
       :ARG2 (c25-3 / care-01
                    :ARG0 (c25-5 / i)
                    :ARG1 (c25-1 / say-01
                                 :ARG0 (c25-6 / and
                                              :op1 (c25-4 / tick)
                                              :op2 (c25-0 / furniture))
                                 :ARG1 (c25-8 / thing)
                                 :ARG3 (c25-7 / this))))

# ::snt My bucket list will now never be finished
# ::tokens ["My", "bucket", "list", "will", "now", "never", "be", "finished"]
# ::lemmas ["my", "bucket", "list", "will", "now", "never", "be", "finish"]
(c26-0 / finish-01
       :ARG1 (c26-4 / list
                    :mod (c26-1 / bucket)
                    :poss (c26-5 / i))
       :time (c26-2 / now)
       :time (c26-3 / ever)
       :polarity -)

# ::snt Condolences to family and friends. Loved his music.
# ::tokens ["Condolences", "to", "family", "and", "friends", ".", "Loved", "his", "music", "."]
# ::lemmas ["condolence", "to", "family", "and", "friend", ".", "love", "his", "music", "."]
(c28-1 / multi-sentence
       :snt1 (c28-7 / condolence
                    :beneficiary (c28-9 / and
                                        :op1 (c28-0 / family)
                                        :op2 (c28-3 / person
                                                    :ARG0-of (c28-2 / have-rel-role-91
                                                                    :ARG2 (c28-4 / friend)))))
       :snt2 (c28-5 / love-01
                    :ARG1 (c28-6 / music
                                 :poss (c28-8 / he))))

# ::snt R I P Tom
# ::tokens ["R", "I", "P", "Tom"]
# ::lemmas ["r", "i", "p", "Tom"]
(c29-1 / person
       :name (c29-0 / name
                    :op1 "Tom"))

# ::snt Forever in our
# ::tokens ["Forever", "in", "our"]
# ::lemmas ["forever", "in", "our"]
(c30-1 / be-located-at-91
       :ARG2 (c30-0 / we)
       :time (c30-2 / forever))

# ::snt It took a long time for media to tell us all. Botched reporting!!
# ::tokens ["It", "took", "a", "long", "time", "for", "media", "to", "tell", "us", "all", ".", "Botched", "reporting", "!", "!"]
# ::lemmas ["it", "take", "a", "long", "time", "for", "medium", "to", "tell", "we", "all", ".", "botched", "report", "!", "!"]
(c31-1 / multi-sentence
       :snt1 (c31-7 / take-10
                    :ARG0 (c31-9 / tell-01
                                 :ARG0 (c31-4 / media)
                                 :ARG2 (c31-6 / we
                                              :mod (c31-2 / all)))
                    :ARG1 (c31-8 / time
                                 :ARG1-of (c31-5 / long-03)))
       :snt2 (c31-3 / report-01
                    :ARG1-of (c31-0 / botch-01)))

# ::snt Fake news
# ::tokens ["Fake", "news"]
# ::lemmas ["fake", "news"]
(c32-1 / news
       :ARG1-of (c32-0 / fake-02))

# ::snt So sad,by Tom. May God rest your soul..
# ::tokens ["So", "sad", ",", "by", "Tom", ".", "May", "God", "rest", "your", "soul", ".."]
# ::lemmas ["so", "sad", ",", "by", "Tom", ".", "may", "God", "rest", "your", "soul", ".."]
(c33-2 / multi-sentence
       :snt1 (c33-4 / say-01
                    :ARG1 (c33-0 / sad-02
                                 :degree (c33-11 / so))
                    :ARG2 (c33-9 / person
                                 :name (c33-3 / name
                                              :op1 "Tom")))
       :snt2 (c33-10 / wish-01
                     :ARG1 (c33-6 / rest-01
                                  :ARG0 (c33-5 / person
                                               :name (c33-8 / name
                                                            :op1 "God"))
                                  :ARG1 (c33-7 / soul
                                               :part-of (c33-1 / you)))
                     :ARG2 c33-5))

# ::snt Let's just hear from musicians. Celebrities can go jump in a lake.
# ::tokens ["Let", "'s", "just", "hear", "from", "musicians", ".", "Celebrities", "can", "go", "jump", "in", "a", "lake", "."]
# ::lemmas ["let", "us", "just", "hear", "from", "musician", ".", "celebrity", "can", "go", "jump", "in", "a", "lake", "."]
(c34-0 / multi-sentence
       :snt1 (c34-2 / hear-01
                    :ARG0 (c34-5 / we)
                    :ARG2 (c34-1 / musician)
                    :mod (c34-7 / just)
                    :mode imperative)
       :snt2 (c34-3 / possible-01
                    :ARG1 (c34-8 / go-03
                                 :ARG0 (c34-6 / celebrity)
                                 :ARG1 (c34-9 / jump-03
                                              :ARG0 c34-6
                                              :destination (c34-4 / lake)))))

# ::snt "You can stand me up at the gates of hell but I won't back down"...
# ::tokens ["\"", "You", "can", "stand", "me", "up", "at", "the", "gates", "of", "hell", "but", "I", "wo", "n't", "back", "down", "\"", "..."]
# ::lemmas ["\"", "you", "can", "stand", "i", "up", "at", "the", "gate", "of", "hell", "but", "i", "will", "not", "back", "down", "\"", "..."]
(c35-5 / contrast-01
       :ARG1 (c35-4 / possible-01
                    :ARG1 (c35-2 / stand-01
                                 :ARG0 (c35-1 / you)
                                 :ARG1 (c35-6 / i)
                                 :ARG2 (c35-7 / gate
                                              :mod (c35-3 / hell))))
       :ARG2 (c35-0 / back-down-11
                    :ARG0 c35-6
                    :polarity -))

# ::snt My alarm clock went off this morning.Running Down a Dream was playing. That's encouragement for my day.
# ::tokens ["My", "alarm", "clock", "went", "off", "this", "morning", ".", "Running", "Down", "a", "Dream", "was", "playing", ".", "That", "'s", "encouragement", "for", "my", "day", "."]
# ::lemmas ["my", "alarm", "clock", "go", "off", "this", "morning", ".", "run", "down", "a", "dream", "be", "play", ".", "that", "be", "encouragement", "for", "my", "day", "."]
(c36-0 / multi-sentence
       :snt1 (c36-11 / go-off-16
                     :ARG1 (c36-6 / clock
                                  :instrument-of (c36-10 / alarm-01
                                                         :ARG1 (c36-9 / i)))
                     :time (c36-12 / date-entity
                                   :dayperiod (c36-4 / morning)
                                   :mod (c36-8 / today)))
       :snt2 (c36-5 / play-11
                    :ARG1 (c36-13 / music
                                  :name (c36-1 / name
                                               :op1 "Running"
                                               :op2 "Down"
                                               :op3 "A"
                                               :op4 "Dream")))
       :snt3 (c36-3 / encourage-01
                    :ARG0 (c36-14 / that)
                    :ARG1 (c36-7 / day
                                 :poss (c36-2 / i))))

# ::snt What a talent god bless
# ::tokens ["What", "a", "talent", "god", "bless"]
# ::lemmas ["what", "a", "talent", "god", "bless"]
(c37-2 / say-01
       :ARG0 (c37-4 / i)
       :ARG1 (c37-5 / talent
                    :degree (c37-0 / so))
       :ARG2 (c37-3 / person
                    :name (c37-1 / name
                                 :op1 "God")))

# ::snt I am so sorry, my condolences to family
# ::tokens ["I", "am", "so", "sorry", ",", "my", "condolences", "to", "family"]
# ::lemmas ["i", "be", "so", "sorry", ",", "my", "condolence", "to", "family"]
(c38-6 / and
       :op1 (c38-3 / sorry-01
                   :ARG1 (c38-5 / i)
                   :degree (c38-0 / so))
       :op2 (c38-1 / offer-01
                   :ARG0 c38-5
                   :ARG1 (c38-4 / condolence)
                   :ARG3 (c38-2 / family)))

# ::snt Rip
# ::tokens ["Rip"]
# ::lemmas ["Rip"]
(c39-1 / person
       :name (c39-0 / name
                    :op1 "Rip"))

# ::snt Great musician so sad
# ::tokens ["Great", "musician", "so", "sad"]
# ::lemmas ["great", "musician", "so", "sad"]
(c41-3 / sad-02
       :ARG1 (c41-2 / musician
                    :mod (c41-0 / great))
       :degree (c41-1 / so))

# ::snt RIP
# ::tokens ["RIP"]
# ::lemmas ["RIP"]
(c42-0 / rest-01
       :ARG1 (c42-1 / you)
       :manner (c42-2 / peace))
