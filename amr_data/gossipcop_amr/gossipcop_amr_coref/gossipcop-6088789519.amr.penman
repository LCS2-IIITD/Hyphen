# ::snt So difficult to know what's true..... but a believable story given the petty way he behaves.
# ::tokens ["So", "difficult", "to", "know", "what", "'s", "true", ".....", "but", "a", "believable", "story", "given", "the", "petty", "way", "he", "behaves", "."]
# ::lemmas ["so", "difficult", "to", "know", "what", "be", "true", ".....", "but", "a", "believable", "story", "give", "the", "petty", "way", "he", "behave", "."]
(c1-8 / contrast-01
      :ARG1 (c1-11 / difficult
                   :domain (c1-5 / know-01
                                 :ARG1 (c1-9 / thing
                                             :ARG1-of (c1-10 / true-01)))
                   :degree (c1-3 / so))
      :ARG2 (c1-6 / possible-01
                  :ARG1 (c1-1 / believe-01
                              :ARG1 (c1-0 / story)
                              :ARG1-of (c1-12 / cause-01
                                              :ARG0 (c1-4 / behave-01
                                                          :ARG0 (c1-7 / he)
                                                          :manner (c1-2 / petty))))))

# ::snt lol OneD just went up in my estimation. Doubt they have much say which hotel they stay in. Thats what a mgmt is for..
# ::tokens ["lol", "OneD", "just", "went", "up", "in", "my", "estimation", ".", "Doubt", "they", "have", "much", "say", "which", "hotel", "they", "stay", "in", ".", "That", "s", "what", "a", "mgmt", "is", "for", ".."]
# ::lemmas ["lol", "OneD", "just", "go", "up", "in", "my", "estimation", ".", "doubt", "they", "have", "much", "say", "which", "hotel", "they", "stay", "in", ".", "that", "s", "what", "a", "mgmt", "be", "for", ".."]
(c2-2 / multi-sentence
      :snt1 (c2-13 / go-01
                   :ARG1 (c2-12 / thing
                                :name (c2-1 / name
                                            :op1 "OneD"))
                   :ARG2 (c2-16 / up-02
                                :ARG1 c2-12)
                   :mod (c2-10 / just)
                   :ARG1-of (c2-4 / estimate-01
                                  :ARG0 (c2-11 / i)))
      :snt2 (c2-14 / doubt-01
                   :ARG1 (c2-5 / have-03
                               :ARG0 (c2-17 / they)
                               :ARG1 (c2-3 / say-01
                                           :ARG0 c2-17
                                           :ARG1 (c2-9 / hotel
                                                       :ARG4-of (c2-0 / stay-01
                                                                      :ARG1 c2-17))
                                           :quant (c2-6 / much))))
      :snt3 (c2-7 / have-purpose-91
                  :ARG1 (c2-15 / thing
                               :name c2-1
                               :op1 "MGmt"))
      :ARG2 (c2-8 / that))

# ::snt lol good for them!
# ::tokens ["lol", "good", "for", "them", "!"]
# ::lemmas ["lol", "good", "for", "they", "!"]
(c4-0 / good-04
      :ARG2 (c4-2 / they)
      :manner (c4-1 / loud))

# ::snt I don't know what element I like more about this story
# ::tokens ["I", "do", "n't", "know", "what", "element", "I", "like", "more", "about", "this", "story"]
# ::lemmas ["i", "do", "not", "know", "what", "element", "i", "like", "more", "about", "this", "story"]
(c5-5 / know-01
      :ARG0 (c5-6 / i)
      :ARG1 (c5-2 / element
                  :ARG1-of (c5-4 / like-01
                                 :ARG0 c5-6
                                 :ARG2-of (c5-3 / have-degree-91
                                                :ARG1 c5-6
                                                :ARG3 (c5-0 / more)))
                  :topic (c5-1 / story
                               :mod (c5-7 / this)))
      :polarity -)

# ::snt Keith Richards once kicked Donald Trump out of a Stones gig, Keith's an astute judge of character
# ::tokens ["Keith", "Richards", "once", "kicked", "Donald", "Trump", "out", "of", "a", "Stones", "gig", ",", "Keith", "'s", "an", "astute", "judge", "of", "character"]
# ::lemmas ["Keith", "Richards", "once", "kick", "Donald", "Trump", "out", "of", "a", "Stones", "gig", ",", "Keith", "'s", "an", "astute", "judge", "of", "character"]
(c6-11 / and
       :op1 (c6-6 / kick-out-05
                  :ARG0 (c6-5 / person
                              :name (c6-2 / name
                                          :op1 "Keith"
                                          :op2 "Richards"))
                  :ARG1 (c6-3 / person
                              :name (c6-4 / name
                                          :op1 "Donald"
                                          :op2 "Trump"))
                  :ARG2 (c6-12 / gig
                               :mod (c6-1 / band
                                          :name (c6-7 / name
                                                      :op1 "The"
                                                      :op2 "Stone")))
                  :time (c6-0 / once))
       :op2 (c6-13 / person
                   :ARG0-of (c6-9 / judge-01
                                  :ARG3 (c6-8 / character)
                                  :mod (c6-10 / astute))
                   :domain c6-5))

# ::snt let's not let him handle any peace negotiations...
# ::tokens ["let", "'s", "not", "let", "him", "handle", "any", "peace", "negotiations", "..."]
# ::lemmas ["let", "us", "not", "let", "he", "handle", "any", "peace", "negotiation", "..."]
(c7-2 / let-01
      :ARG0 (c7-4 / we)
      :ARG1 (c7-1 / handle-01
                  :ARG0 (c7-5 / he)
                  :ARG1 (c7-0 / negotiate-01
                              :ARG2 (c7-3 / peace)
                              :mod (c7-6 / any)))
      :polarity -
      :mode imperative)

# ::snt HA HA HA!!
# ::tokens ["HA", "HA", "HA", "!", "!"]
# ::lemmas ["ha", "ha", "ha", "!", "!"]
(c8-0 / ha
      :mode expressive)

# ::snt ...so? He has the right to accept or refuse anyone he wants in his hotels.
# ::tokens ["...", "so", "?", "He", "has", "the", "right", "to", "accept", "or", "refuse", "anyone", "he", "wants", "in", "his", "hotels", "."]
# ::lemmas ["...", "so", "?", "he", "have", "the", "right", "to", "accept", "or", "refuse", "anyone", "he", "want", "in", "his", "hotel", "."]
(c9-1 / multi-sentence
      :snt1 (c9-2 / so
                  :polarity (c9-9 / amr-unknown))
      :snt2 (c9-3 / right-05
                  :ARG1 (c9-4 / he)
                  :ARG2 (c9-0 / or
                              :op1 (c9-8 / accept-01
                                         :ARG0 c9-4
                                         :ARG1 (c9-6 / anyone
                                                     :ARG1-of (c9-5 / want-01
                                                                    :ARG0 c9-4))
                                         :location (c9-7 / hotel
                                                         :poss c9-4))
                              :op2 (c9-10 / refuse-01
                                          :ARG0 c9-4
                                          :ARG1 c9-6
                                          :location c9-7))))

# ::snt because Trump is rich he can do what he wants for his spoiled daughter one direction should sue Trump
# ::tokens ["because", "Trump", "is", "rich", "he", "can", "do", "what", "he", "wants", "for", "his", "spoiled", "daughter", "one", "direction", "should", "sue", "Trump"]
# ::lemmas ["because", "Trump", "be", "rich", "he", "can", "do", "what", "he", "want", "for", "his", "spoiled", "daughter", "one", "direction", "should", "sue", "Trump"]
(c10-7 / cause-01
       :ARG0 (c10-4 / rich
                    :domain (c10-6 / person
                                   :name (c10-1 / name
                                                :op1 "Trump")))
       :ARG1 (c10-2 / possible-01
                    :ARG1 (c10-11 / do-02
                                  :ARG0 c10-6
                                  :ARG1 (c10-10 / thing
                                                :ARG1-of (c10-8 / want-01
                                                                :ARG0 c10-6))
                                  :ARG2 (c10-13 / person
                                                :ARG0-of (c10-5 / have-rel-role-91
                                                                :ARG1 c10-6
                                                                :ARG2 (c10-9 / daughter))
                                                :ARG1-of (c10-3 / spoil-01)))
                    :ARG0-of c10-7
                    :ARG1 (c10-12 / recommend-01
                                  :ARG1 (c10-0 / sue-02
                                               :ARG0 c10-6
                                               :ARG1 c10-6))))

# ::snt I blame the band for being so stupid. There's loads of other hotels that don't support that crook and his family.
# ::tokens ["I", "blame", "the", "band", "for", "being", "so", "stupid", ".", "There", "'s", "loads", "of", "other", "hotels", "that", "do", "n't", "support", "that", "crook", "and", "his", "family", "."]
# ::lemmas ["i", "blame", "the", "band", "for", "be", "so", "stupid", ".", "there", "be", "load", "of", "other", "hotel", "that", "do", "not", "support", "that", "crook", "and", "his", "family", "."]
(c11-4 / multi-sentence
       :snt1 (c11-2 / blame-01
                    :ARG0 (c11-11 / i)
                    :ARG1 (c11-6 / band)
                    :ARG2 (c11-5 / stupid
                                 :domain c11-6
                                 :degree (c11-0 / so)))
       :snt2 (c11-13 / support-01
                     :ARG0 (c11-7 / hotel
                                  :quant (c11-8 / load)
                                  :mod (c11-1 / other))
                     :ARG1 (c11-12 / and
                                   :op1 (c11-9 / crook
                                               :mod (c11-10 / that))
                                   :op2 (c11-3 / family
                                               :poss c11-9))))

# ::snt Emotional development of an y/o.
# ::tokens ["Emotional", "development", "of", "an", "y", "/", "o."]
# ::lemmas ["emotional", "development", "of", "an", "y", "/", "o."]
(c12-0 / develop-02
       :ARG1 (c12-2 / you)
       :ARG2 (c12-1 / emotion))

# ::snt what an idiot
# ::tokens ["what", "an", "idiot"]
# ::lemmas ["what", "an", "idiot"]
(c13-0 / idiot
       :degree (c13-1 / so))

# ::snt Good
# ::tokens ["Good"]
# ::lemmas ["good"]
(c14-0 / good-02)

# ::snt just another reason to hate Trump
# ::tokens ["just", "another", "reason", "to", "hate", "Trump"]
# ::lemmas ["just", "another", "reason", "to", "hate", "Trump"]
(c15-1 / reason
       :mod (c15-5 / another)
       :mod (c15-4 / just)
       :purpose (c15-2 / hate-01
                       :ARG1 (c15-3 / person
                                    :name (c15-0 / name
                                                 :op1 "Trump"))))

# ::snt he is egoist dumb fuck
# ::tokens ["he", "is", "egoist", "dumb", "fuck"]
# ::lemmas ["he", "be", "egoist", "dumb", "fuck"]
(c16-0 / fuck
       :mod (c16-3 / dumb)
       :domain (c16-2 / he)
       :mod (c16-1 / egoist))

# ::snt President Trump is a lost cause!!!
# ::tokens ["President", "Trump", "is", "a", "lost", "cause", "!", "!", "!"]
# ::lemmas ["President", "Trump", "be", "a", "lost", "cause", "!", "!", "!"]
(c18-5 / cause
       :ARG1-of (c18-3 / lose-02)
       :domain (c18-4 / person
                      :name (c18-0 / name
                                   :op1 "Trump")
                      :ARG0-of (c18-2 / have-org-role-91
                                      :ARG2 (c18-1 / president))))

# ::snt I fully support his policy of kicking One Direction
# ::tokens ["I", "fully", "support", "his", "policy", "of", "kicking", "One", "Direction"]
# ::lemmas ["i", "fully", "support", "his", "policy", "of", "kick", "One", "direction"]
(c19-3 / support-01
       :ARG0 (c19-7 / i)
       :ARG1 (c19-6 / policy-01
                    :ARG0 (c19-4 / he)
                    :ARG1 (c19-5 / kick-01
                                 :ARG0 c19-4
                                 :ARG1 (c19-0 / organization
                                              :name (c19-2 / name
                                                           :op1 "One"
                                                           :op2 "Direction"))))
       :degree (c19-1 / full))

# ::snt I'm getting on in years but I've suddenly become a One Direction fan.
# ::tokens ["I", "'m", "getting", "on", "in", "years", "but", "I", "'ve", "suddenly", "become", "a", "One", "Direction", "fan", "."]
# ::lemmas ["i", "be", "get", "on", "in", "years", "but", "i", "'ve", "suddenly", "become", "a", "One", "Direction", "fan", "."]
(c20-10 / get-on-21
        :ARG0 (c20-8 / i)
        :time (c20-6 / after
                     :quant (c20-3 / multiple
                                   :op1 (c20-9 / temporal-quantity
                                               :unit (c20-2 / year)
                                               :quant 1)))
        :concession-of (c20-1 / become-01
                              :ARG1 c20-8
                              :ARG2 (c20-0 / fan
                                           :mod (c20-7 / music
                                                       :name (c20-4 / name
                                                                    :op1 "One"
                                                                    :op2 "Direction")))
                              :manner (c20-5 / sudden)))

# ::snt lol
# ::tokens ["lol"]
# ::lemmas ["lol"]
(c21-1 / laugh-01
       :manner (c21-0 / loud)
       :mode expressive)

# ::snt laughable
# ::tokens ["laughable"]
# ::lemmas ["laughable"]
(c22-0 / possible-01
       :ARG1 (c22-1 / laugh-01))

# ::snt "After refusing to meet his grown-up daughter"
# ::tokens ["\"", "After", "refusing", "to", "meet", "his", "grown", "-", "up", "daughter", "\""]
# ::lemmas ["\"", "after", "refuse", "to", "meet", "his", "grow", "-", "up", "daughter", "\""]
(c23-0 / be-temporally-at-91
       :ARG2 (c23-6 / after
                    :op1 (c23-2 / refuse-01
                                :ARG0 (c23-3 / he)
                                :ARG1 (c23-1 / meet-03
                                             :ARG0 c23-3
                                             :ARG1 (c23-4 / person
                                                          :ARG0-of (c23-5 / have-rel-role-91
                                                                          :ARG1 c23-3
                                                                          :ARG2 (c23-8 / daughter))
                                                          :ARG1-of (c23-7 / grown-up))))))

# ::snt Does this officially start the rd war of independence?
# ::tokens ["Does", "this", "officially", "start", "the", "rd", "war", "of", "independence", "?"]
# ::lemmas ["do", "this", "officially", "start", "the", "rd", "war", "of", "independence", "?"]
(c24-2 / start-01
       :ARG0 (c24-6 / this)
       :ARG1 (c24-4 / war-01
                    :ARG1 (c24-7 / depend-01
                                 :polarity -)
                    :mod (c24-5 / country
                                :name (c24-1 / name
                                             :op1 "Russia")))
       :mod (c24-0 / official)
       :polarity (c24-3 / amr-unknown))

# ::snt This man is an adult. An actual, grown ass man.
# ::tokens ["This", "man", "is", "an", "adult", ".", "An", "actual", ",", "grown", "ass", "man", "."]
# ::lemmas ["this", "man", "be", "an", "adult", ".", "an", "actual", ",", "grow", "ass", "man", "."]
(c25-0 / multi-sentence
       :snt1 (c25-1 / adult
                    :domain (c25-2 / man
                                   :mod (c25-5 / this)))
       :snt2 (c25-7 / man
                    :mod (c25-4 / ass
                                :ARG1-of (c25-3 / actual-02))
                    :ARG1-of (c25-6 / grow-03)))

# ::snt If they were thrown out the door on to the ruthless streets would this have not been news then??????
# ::tokens ["If", "they", "were", "thrown", "out", "the", "door", "on", "to", "the", "ruthless", "streets", "would", "this", "have", "not", "been", "news", "then", "?", "?", "?", "?", "?", "?"]
# ::lemmas ["if", "they", "be", "throw", "out", "the", "door", "on", "to", "the", "ruthless", "street", "would", "this", "have", "not", "be", "news", "then", "?", "?", "?", "?", "?", "?"]
(c26-0 / news
       :domain (c26-4 / this)
       :polarity (c26-6 / amr-unknown)
       :time (c26-8 / then)
       :condition (c26-5 / throw-out-06
                         :ARG1 (c26-3 / they)
                         :location (c26-7 / door)
                         :destination (c26-1 / street
                                             :mod (c26-2 / ruthless)))
       :polarity -)

# ::snt Trump is a loony......
# ::tokens ["Trump", "is", "a", "loony", "......"]
# ::lemmas ["Trump", "be", "a", "loony", "......"]
(c27-2 / loony
       :domain (c27-0 / person
                      :name (c27-1 / name
                                   :op1 "Trump")))

# ::snt Definitely an ego shrinker for King Don. Can't handle rejection from a boy band, wait until Kim Jung Un does it!
# ::tokens ["Definitely", "an", "ego", "shrinker", "for", "King", "Don", ".", "Ca", "n't", "handle", "rejection", "from", "a", "boy", "band", ",", "wait", "until", "Kim", "Jung", "Un", "does", "it", "!"]
# ::lemmas ["definitely", "an", "ego", "shrinker", "for", "King", "Don", ".", "can", "not", "handle", "rejection", "from", "a", "boy", "band", ",", "wait", "until", "Kim", "Jung", "Un", "do", "it", "!"]
(c28-7 / multi-sentence
       :snt1 (c28-0 / shrink-01
                    :ARG0 (c28-15 / person
                                  :name (c28-12 / name
                                                :op1 "Don")
                                  :ARG0-of (c28-3 / have-org-role-91
                                                  :ARG2 (c28-4 / king)))
                    :ARG1 (c28-14 / ego)
                    :mod (c28-19 / definite))
       :snt2 (c28-5 / and
                    :op1 (c28-8 / possible-01
                                :ARG1 (c28-17 / handle-01
                                              :ARG0 (c28-18 / i)
                                              :ARG1 (c28-13 / reject-01
                                                            :ARG0 (c28-6 / band
                                                                         :mod (c28-1 / boy))
                                                            :ARG1 c28-18))
                                :polarity -)
                    :op2 (c28-16 / wait-01
                                 :ARG1 c28-18
                                 :time (c28-11 / until
                                               :op1 (c28-10 / do-02
                                                            :ARG0 (c28-2 / person
                                                                         :name (c28-9 / name
                                                                                      :op1 "Kim"
                                                                                      :op2 "Jung"
                                                                                      :op3 "Un"))
                                                            :ARG1 c28-13))
                                 :mode imperative)))

# ::snt it's an important character study
# ::tokens ["it", "'s", "an", "important", "character", "study"]
# ::lemmas ["it", "be", "an", "important", "character", "study"]
(c29-3 / study-01
       :ARG1 (c29-1 / character)
       :ARG1-of (c29-2 / important-01)
       :domain (c29-0 / it))

# ::snt maybe started his Muslim Ban because of Zayn?
# ::tokens ["maybe", "started", "his", "Muslim", "Ban", "because", "of", "Zayn", "?"]
# ::lemmas ["maybe", "start", "his", "Muslim", "Ban", "because", "of", "Zayn", "?"]
(c30-6 / possible-01
       :ARG1 (c30-3 / start-01
                    :ARG0 (c30-5 / he)
                    :ARG1 (c30-0 / ban-01
                                 :ARG0 c30-5
                                 :mod (c30-4 / religious-group
                                             :name (c30-1 / name
                                                          :op1 "Muslim")))
                    :ARG1-of (c30-8 / cause-01
                                    :ARG0 (c30-2 / person
                                                 :name (c30-7 / name
                                                              :op1 "Zayn"))))
       :polarity (c30-9 / amr-unknown))

# ::snt you might like this dark comedy about life in the trump era.
# ::tokens ["you", "might", "like", "this", "dark", "comedy", "about", "life", "in", "the", "trump", "era", "."]
# ::lemmas ["you", "might", "like", "this", "dark", "comedy", "about", "life", "in", "the", "trump", "era", "."]
(c31-4 / possible-01
       :ARG1 (c31-5 / like-01
                    :ARG0 (c31-0 / you)
                    :ARG1 (c31-6 / comedy
                                 :mod (c31-8 / dark)
                                 :topic (c31-9 / life
                                               :time (c31-3 / era
                                                            :mod (c31-2 / person
                                                                        :name (c31-1 / name
                                                                                     :op1 " trump"))))
                                 :mod (c31-7 / this))))

# ::snt Toddler-In-Chief strikes again!
# ::tokens ["Toddler", "-", "In", "-", "Chief", "strikes", "again", "!"]
# ::lemmas ["toddler", "-", "in", "-", "chief", "strike", "again", "!"]
(c32-3 / strike-01
       :ARG0 (c32-2 / person
                    :name (c32-1 / name
                                 :op1 "Toddler-In-Chief"))
       :mod (c32-0 / again)
       :mode expressive)

# ::snt I'm not having that
# ::tokens ["I", "'m", "not", "having", "that"]
# ::lemmas ["i", "be", "not", "have", "that"]
(c33-0 / have-03
       :ARG0 (c33-1 / i)
       :ARG1 (c33-2 / that)
       :polarity -)

# ::snt His pettiness knows no bounds.
# ::tokens ["His", "pettiness", "knows", "no", "bounds", "."]
# ::lemmas ["his", "pettiness", "know", "no", "bound", "."]
(c34-3 / know-02
       :ARG0 (c34-0 / pettiness
                    :poss (c34-2 / he))
       :ARG1 (c34-1 / bound-09
                    :polarity -))

# ::snt good for him
# ::tokens ["good", "for", "him"]
# ::lemmas ["good", "for", "he"]
(c35-0 / good-04
       :ARG2 (c35-1 / he))

# ::snt "Behead the foole, for he hath insulted the Princess!!"
# ::tokens ["\"", "Behead", "the", "foole", ",", "for", "he", "hath", "insulted", "the", "Princess", "!", "!", "\""]
# ::lemmas ["\"", "behead", "the", "foole", ",", "for", "he", "hath", "insult", "the", "Princess", "!", "!", "\""]
(c36-2 / head-01
       :ARG0 (c36-1 / you)
       :ARG1 (c36-0 / foole)
       :ARG1-of (c36-4 / cause-01
                       :ARG0 (c36-5 / insult-01
                                    :ARG0 c36-0
                                    :ARG1 (c36-3 / princess)))
       :mode imperative)

# ::snt lol see they r smart guys
# ::tokens ["lol", "see", "they", "r", "smart", "guys"]
# ::lemmas ["lol", "see", "they", "r", "smart", "guy"]
(c37-1 / see-01
       :ARG0 (c37-3 / i)
       :ARG1 (c37-5 / guy
                    :ARG1-of (c37-0 / smart-06)
                    :domain (c37-4 / they))
       :manner (c37-2 / laugh-01
                      :ARG0 c37-3
                      :manner (c37-6 / loud)
                      :mode expressive))

# ::snt : Donald Trump once kicked One Direction out of his hotel for refusing to meet his daughter
# ::tokens [":", "Donald", "Trump", "once", "kicked", "One", "Direction", "out", "of", "his", "hotel", "for", "refusing", "to", "meet", "his", "daughter"]
# ::lemmas [":", "Donald", "Trump", "once", "kick", "One", "Direction", "out", "of", "his", "hotel", "for", "refuse", "to", "meet", "his", "daughter"]
(c39-8 / kick-out-05
       :ARG0 (c39-7 / person
                    :name (c39-2 / name
                                 :op1 "Donald"
                                 :op2 "Trump"))
       :ARG1 (c39-0 / organization
                    :name (c39-6 / name
                                 :op1 "One"
                                 :op2 "Direction"))
       :ARG2 (c39-9 / hotel
                    :poss c39-7)
       :ARG1-of (c39-10 / cause-01
                        :ARG0 (c39-5 / refuse-01
                                     :ARG0 c39-7
                                     :ARG1 (c39-3 / meet-03
                                                  :ARG0 c39-7
                                                  :ARG1 (c39-4 / person
                                                               :ARG0-of (c39-11 / have-rel-role-91
                                                                                :ARG1 c39-7
                                                                                :ARG2 (c39-12 / daughter))))))
       :time (c39-1 / once))

# ::snt Kick him out of the White House for refusing to release his taxes. Among other things...
# ::tokens ["Kick", "him", "out", "of", "the", "White", "House", "for", "refusing", "to", "release", "his", "taxes", ".", "Among", "other", "things", "..."]
# ::lemmas ["Kick", "he", "out", "of", "the", "White", "House", "for", "refuse", "to", "release", "his", "taxis", ".", "among", "other", "thing", "..."]
(c40-6 / kick-out-05
       :ARG0 (c40-1 / you)
       :ARG1 (c40-5 / he)
       :ARG2 (c40-10 / government-organization
                     :name (c40-2 / name
                                  :op1 "White"
                                  :op2 "House"))
       :ARG1-of (c40-7 / cause-01
                       :ARG0 (c40-4 / refuse-01
                                    :ARG0 c40-5
                                    :ARG1 (c40-11 / release-01
                                                  :ARG0 c40-5
                                                  :ARG1 (c40-3 / monetary-quantity
                                                               :ARG1-of (c40-9 / tax-01
                                                                               :ARG2 c40-5)))))
       :ARG1-of (c40-8 / include-91
                       :ARG2 (c40-12 / thing
                                     :mod (c40-0 / other)))
       :mode imperative)

# ::snt lol
# ::tokens ["lol"]
# ::lemmas ["lol"]
(c41-1 / laugh-01
       :manner (c41-0 / loud)
       :mode expressive)

# ::snt In One Direction's defense, it was Tiffany Trump...
# ::tokens ["In", "One", "Direction", "'s", "defense", ",", "it", "was", "Tiffany", "Trump", "..."]
# ::lemmas ["in", "One", "Direction", "'s", "defense", ",", "it", "be", "Tiffany", "Trump", "..."]
(c42-4 / defend-01
       :ARG0 (c42-3 / person
                    :name (c42-0 / name
                                 :op1 "Tiffany"
                                 :op2 "Trump"))
       :ARG1 (c42-1 / show
                    :name (c42-2 / name
                                 :op1 "One"
                                 :op2 "Direction")))

# ::snt What a pathetic individual he is.
# ::tokens ["What", "a", "pathetic", "individual", "he", "is", "."]
# ::lemmas ["what", "a", "pathetic", "individual", "he", "be", "."]
(c43-2 / individual
       :degree (c43-1 / pathetic
                      :degree (c43-3 / so)
                      :domain (c43-0 / he)))

# ::snt why were they staying there to begin with was there no room at the other inns
# ::tokens ["why", "were", "they", "staying", "there", "to", "begin", "with", "was", "there", "no", "room", "at", "the", "other", "inns"]
# ::lemmas ["why", "be", "they", "stay", "there", "to", "begin", "with", "be", "there", "no", "room", "at", "the", "other", "inn"]
(c44-5 / cause-01
       :ARG0 (c44-3 / amr-unknown)
       :ARG1 (c44-2 / stay-01
                    :ARG1 (c44-7 / they)
                    :ARG3 (c44-8 / there)
                    :purpose (c44-1 / begin-01))
       :ARG1 c44-5
       :ARG0 (c44-4 / room
                    :location (c44-6 / inn
                                     :mod (c44-0 / other))
                    :polarity -))

# ::snt What? They were sleeping. Why should they (or anyone) be at any hotel owner's beck and call?
# ::tokens ["What", "?", "They", "were", "sleeping", ".", "Why", "should", "they", "(", "or", "anyone", ")", "be", "at", "any", "hotel", "owner", "'s", "beck", "and", "call", "?"]
# ::lemmas ["what", "?", "they", "be", "sleep", ".", "why", "should", "they", "(", "or", "anyone", ")", "be", "at", "any", "hotel", "owner", "'s", "beck", "and", "call", "?"]
(c45-3 / multi-sentence
       :snt1 (c45-5 / amr-unknown)
       :snt2 (c45-4 / sleep-01
                    :ARG0 (c45-13 / they))
       :snt3 (c45-10 / cause-01
                     :ARG0 c45-5)
       :ARG1 (c45-6 / recommend-01
                    :ARG1 (c45-12 / and
                                  :op1 (c45-2 / be-located-at-91
                                              :ARG1 (c45-0 / or
                                                           :op1 (c45-15 / they)
                                                           :op2 (c45-11 / anyone))
                                              :ARG2 (c45-7 / beckon-01
                                                           :ARG0 (c45-8 / person
                                                                        :ARG0-of (c45-1 / own-01
                                                                                        :ARG1 (c45-9 / hotel)))
                                                           :ARG1 c45-0))
                                  :op2 (c45-14 / call-02
                                               :ARG0 c45-0))))

# ::snt unbelievable! Waiting for him the worst
# ::tokens ["unbelievable", "!", "Waiting", "for", "him", "the", "worst"]
# ::lemmas ["unbelievable", "!", "wait", "for", "he", "the", "bad"]
(c46-1 / multi-sentence
       :snt1 (c46-3 / possible-01
                    :ARG1 (c46-0 / believe-01)
                    :polarity -)
       :snt2 (c46-6 / wait-01
                    :ARG1 (c46-2 / he)
                    :ARG1-of (c46-4 / bad-07
                                    :ARG2-of (c46-7 / have-degree-91
                                                    :ARG1 c46-6
                                                    :ARG3 (c46-5 / most)))))

# ::snt - good call lads!
# ::tokens ["-", "good", "call", "lads", "!"]
# ::lemmas ["-", "good", "call", "lad", "!"]
(c47-3 / say-01
       :ARG1 (c47-0 / good-02
                    :ARG1 (c47-2 / lad
                                 :ARG0-of (c47-1 / call-02)
                                 :ARG2-of c47-3)))

# ::snt Double standards. Why they stay their if they have issue with Trump?
# ::tokens ["Double", "standards", ".", "Why", "they", "stay", "their", "if", "they", "have", "issue", "with", "Trump", "?"]
# ::lemmas ["double", "standard", ".", "why", "they", "stay", "their", "if", "they", "have", "issue", "with", "Trump", "?"]
(c48-1 / multi-sentence
       :snt1 (c48-3 / standard
                    :mod (c48-10 / double))
       :snt2 (c48-6 / cause-01
                    :ARG0 (c48-9 / amr-unknown)
                    :ARG1 (c48-0 / stay-01
                                 :ARG1 (c48-7 / they)
                                 :condition (c48-4 / have-03
                                                   :ARG0 c48-7
                                                   :ARG1 (c48-8 / issue-02
                                                                :ARG0 (c48-5 / person
                                                                             :name (c48-2 / name
                                                                                          :op1 "Trump"))
                                                                :ARG1 c48-7)))))

# ::snt WTF
# ::tokens ["WTF"]
# ::lemmas ["WTF"]
(c49-1 / amr-unknown
       :mod (c49-0 / fuck
                   :mode expressive))

# ::snt it's my ball syndrome.
# ::tokens ["it", "'s", "my", "ball", "syndrome", "."]
# ::lemmas ["it", "be", "my", "ball", "syndrome", "."]
(c50-2 / syndrome
       :mod (c50-0 / ball)
       :poss (c50-1 / i))
