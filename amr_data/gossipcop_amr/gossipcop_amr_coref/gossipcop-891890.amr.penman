# ::snt Check out how the Brits killed off Francis Urquhart.. and why.
# ::tokens ["Check", "out", "how", "the", "Brits", "killed", "off", "Francis", "Urquhart", "..", "and", "why", "."]
# ::lemmas ["check", "out", "how", "the", "Brits", "kill", "off", "Francis", "Urquhart", "..", "and", "why", "."]
(c1-7 / check-out-05
      :ARG0 (c1-0 / you)
      :ARG1 (c1-3 / and
                  :op1 (c1-9 / thing
                             :manner-of (c1-5 / kill-off-02
                                              :ARG0 (c1-6 / person
                                                          :mod (c1-11 / country
                                                                      :name (c1-1 / name
                                                                                  :op1 "Britain")))
                                              :ARG1 (c1-2 / person
                                                          :name (c1-4 / name
                                                                      :op1 "Francis"
                                                                      :op2 "Urquhart"))))
                  :op2 (c1-10 / thing
                              :ARG0-of (c1-8 / cause-01
                                             :ARG1 c1-5)))
      :mode imperative)

# ::snt He is being framed
# ::tokens ["He", "is", "being", "framed"]
# ::lemmas ["he", "be", "be", "frame"]
(c2-0 / frame-06
      :ARG1 (c2-1 / he))

# ::snt If they kill frank then there's no show. We didn't start to watch because of Claire
# ::tokens ["If", "they", "kill", "frank", "then", "there", "'s", "no", "show", ".", "We", "did", "n't", "start", "to", "watch", "because", "of", "Claire"]
# ::lemmas ["if", "they", "kill", "frank", "then", "there", "be", "no", "show", ".", "we", "do", "not", "start", "to", "watch", "because", "of", "Claire"]
(c3-1 / multi-sentence
      :snt1 (c3-3 / show-04
                  :condition (c3-6 / kill-01
                                   :ARG0 (c3-11 / they)
                                   :ARG1 (c3-7 / person
                                               :name (c3-2 / name
                                                           :op1 "Frank")))
                  :polarity -)
      :snt2 (c3-0 / start-01
                  :ARG0 (c3-9 / we)
                  :ARG1 (c3-8 / watch-01
                              :ARG0 c3-9)
                  :ARG1-of (c3-10 / cause-01
                                  :ARG0 (c3-4 / person
                                              :name (c3-5 / name
                                                          :op1 "Claire")))
                  :polarity -))

# ::snt Might as well, his acting career is officially over now
# ::tokens ["Might", "as", "well", ",", "his", "acting", "career", "is", "officially", "over", "now"]
# ::lemmas ["might", "as", "well", ",", "his", "act", "career", "be", "officially", "over", "now"]
(c4-2 / mean-01
      :ARG2 (c4-0 / over-01
                  :ARG1 (c4-5 / career
                              :topic (c4-7 / act-01
                                           :ARG0 (c4-4 / he)))
                  :time (c4-3 / now)
                  :mod (c4-1 / official))
      :mod (c4-6 / as-well))

# ::snt Why spoil this though...?
# ::tokens ["Why", "spoil", "this", "though", "...", "?"]
# ::lemmas ["why", "spoil", "this", "though", "...", "?"]
(c8-0 / spoil-01
      :ARG1 (c8-3 / this)
      :ARG1-of (c8-2 / cause-01
                     :ARG0 (c8-4 / amr-unknown))
      :ARG1-of (c8-1 / have-concession-91))

# ::snt No fucking way!!! He is the show!!
# ::tokens ["No", "fucking", "way", "!", "!", "!", "He", "is", "the", "show", "!", "!"]
# ::lemmas ["no", "fucking", "way", "!", "!", "!", "he", "be", "the", "show", "!", "!"]
(c10-1 / multi-sentence
       :snt1 (c10-4 / way
                    :mod (c10-0 / fucking
                                :mode expressive)
                    :polarity -)
       :snt2 (c10-2 / show-04
                    :ARG1 (c10-3 / he)))

# ::snt Yeah and then we can get to replace him
# ::tokens ["Yeah", "and", "then", "we", "can", "get", "to", "replace", "him"]
# ::lemmas ["yeah", "and", "then", "we", "can", "get", "to", "replace", "he"]
(c13-5 / and
       :op2 (c13-2 / possible-01
                   :ARG1 (c13-6 / get-04
                                :ARG0 (c13-3 / we)
                                :ARG1 (c13-0 / replace-01
                                             :ARG0 c13-3
                                             :ARG1 (c13-1 / he))
                                :time (c13-4 / then))))

# ::snt SOUNDS LEGIT CAST IT UP
# ::tokens ["SOUNDS", "LEGIT", "CAST", "IT", "UP"]
# ::lemmas ["sound", "LEGIT", "cast", "IT", "UP"]
(c14-0 / cut-up-11
       :ARG0 (c14-2 / it
                    :ARG1-of c14-0)
       :mod (c14-1 / law))

# ::snt Kill off the show. It wont be anything without the savagery of Frank
# ::tokens ["Kill", "off", "the", "show", ".", "It", "wo", "nt", "be", "anything", "without", "the", "savagery", "of", "Frank"]
# ::lemmas ["kill", "off", "the", "show", ".", "it", "will", "not", "be", "anything", "without", "the", "savagery", "of", "Frank"]
(c16-2 / multi-sentence
       :snt1 (c16-5 / kill-off-02
                    :ARG0 (c16-1 / you)
                    :ARG1 (c16-4 / show-04)
                    :mode imperative)
       :snt2 (c16-7 / anything
                    :condition (c16-0 / savagery
                                      :poss (c16-6 / person
                                                   :name (c16-3 / name
                                                                :op1 "Frank"))
                                      :polarity -)
                    :polarity -))

# ::snt You can clip Kevin Spacey at this point
# ::tokens ["You", "can", "clip", "Kevin", "Spacey", "at", "this", "point"]
# ::lemmas ["you", "can", "clip", "Kevin", "Spacey", "at", "this", "point"]
(c17-3 / possible-01
       :ARG1 (c17-4 / clip-01
                    :ARG0 (c17-0 / you)
                    :ARG1 (c17-2 / person
                                 :name (c17-1 / name
                                              :op1 "Kevin"
                                              :op2 "Spacey"))
                    :time (c17-6 / point
                                 :mod (c17-5 / this))))

# ::snt Pretty sure Anthony Rapp already did
# ::tokens ["Pretty", "sure", "Anthony", "Rapp", "already", "did"]
# ::lemmas ["pretty", "sure", "Anthony", "Rapp", "already", "do"]
(c18-2 / sure-02
       :ARG1 (c18-5 / do-02
                    :ARG0 (c18-3 / person
                                 :name (c18-0 / name
                                              :op1 "Anthony"
                                              :op2 "Rapp"))
                    :time (c18-4 / already))
       :degree (c18-1 / pretty))

# ::snt Why make the rest of the cast suffer, kill him off and continue
# ::tokens ["Why", "make", "the", "rest", "of", "the", "cast", "suffer", ",", "kill", "him", "off", "and", "continue"]
# ::lemmas ["why", "make", "the", "rest", "of", "the", "cast", "suffer", ",", "kill", "he", "off", "and", "continue"]
(c19-6 / cause-01
       :ARG0 (c19-9 / amr-unknown)
       :ARG1 (c19-0 / make-02
                    :ARG1 (c19-8 / and
                                 :op1 (c19-1 / suffer-01
                                             :ARG0 (c19-4 / person
                                                          :ARG1-of (c19-10 / include-91
                                                                           :ARG2 (c19-11 / cast)
                                                                           :ARG3 (c19-2 / rest))))
                                 :op2 (c19-5 / kill-off-02
                                             :ARG0 c19-4
                                             :ARG1 (c19-3 / he))
                                 :op3 (c19-7 / continue-01
                                             :ARG0 c19-4))))

# ::snt Do it!!!! Robin Wright is the best thing about the show
# ::tokens ["Do", "it", "!", "!", "!", "!", "Robin", "Wright", "is", "the", "best", "thing", "about", "the", "show"]
# ::lemmas ["do", "it", "!", "!", "!", "!", "Robin", "Wright", "be", "the", "good", "thing", "about", "the", "show"]
(c20-1 / multi-sentence
       :snt1 (c20-10 / do-02
                     :ARG0 (c20-0 / you)
                     :ARG1 (c20-7 / it)
                     :mode imperative)
       :snt2 (c20-4 / have-degree-91
                    :ARG1 (c20-5 / person
                                 :name (c20-2 / name
                                              :op1 "Robin"
                                              :op2 "Wright"))
                    :ARG2 (c20-9 / good-02
                                 :ARG1 (c20-8 / thing
                                              :topic (c20-3 / show-04)))
                    :ARG3 (c20-6 / most)
                    :mode expressive))

# ::snt Just be gay after and you won't get charged for murder
# ::tokens ["Just", "be", "gay", "after", "and", "you", "wo", "n't", "get", "charged", "for", "murder"]
# ::lemmas ["just", "be", "gay", "after", "and", "you", "will", "not", "get", "charge", "for", "murder"]
(c21-5 / and
       :op1 (c21-6 / gay-01
                   :ARG0 (c21-0 / you)
                   :mod (c21-3 / just)
                   :time (c21-4 / after)
                   :mode imperative)
       :op2 (c21-2 / charge-05
                   :ARG1 c21-0
                   :ARG2 (c21-1 / murder-01
                                :ARG0 c21-0)
                   :polarity -))

# ::snt Do it!
# ::tokens ["Do", "it", "!"]
# ::lemmas ["do", "it", "!"]
(c23-0 / do-02
       :ARG0 (c23-1 / you)
       :ARG1 (c23-2 / it)
       :mode imperative)

# ::snt shows over. last season was a underwhelming and now this? good while it lasted.
# ::tokens ["shows", "over", ".", "last", "season", "was", "a", "underwhelming", "and", "now", "this", "?", "good", "while", "it", "lasted", "."]
# ::lemmas ["show", "over", ".", "last", "season", "be", "a", "underwhelming", "and", "now", "this", "?", "good", "while", "it", "last", "."]
(c24-2 / multi-sentence
       :snt1 (c24-0 / over-01
                    :ARG1 (c24-4 / show))
       :snt2 (c24-8 / and
                    :op1 (c24-11 / underwhelm-00
                                 :ARG1 (c24-1 / season
                                              :mod (c24-5 / last)))
                    :op2 (c24-9 / good-02
                                :ARG1 (c24-6 / this)
                                :time (c24-3 / now)
                                :time (c24-10 / last-01
                                              :ARG1 c24-1)
                                :polarity (c24-7 / amr-unknown))))

# ::snt Lock him up
# ::tokens ["Lock", "him", "up"]
# ::lemmas ["lock", "he", "up"]
(c25-1 / lock-up-03
       :ARG0 (c25-0 / you)
       :ARG1 (c25-2 / he)
       :mode imperative)

# ::snt Ive watched it all. Still worth it but I agree. Not the same
# ::tokens ["I", "ve", "watched", "it", "all", ".", "Still", "worth", "it", "but", "I", "agree", ".", "Not", "the", "same"]
# ::lemmas ["i", "ve", "watch", "it", "all", ".", "still", "worth", "it", "but", "i", "agree", ".", "not", "the", "same"]
(c27-2 / multi-sentence
       :snt1 (c27-6 / watch-01
                    :ARG0 (c27-8 / i)
                    :ARG1 (c27-4 / it
                                 :mod (c27-9 / all)))
       :snt2 (c27-7 / contrast-01
                    :ARG1 (c27-5 / worth-02
                                 :ARG1 (c27-11 / it)
                                 :mod (c27-3 / still))
                    :ARG2 (c27-10 / agree-01
                                  :ARG0 (c27-0 / i)))
       :snt3 (c27-1 / same-01
                    :ARG1 (c27-12 / i)
                    :polarity -))

# ::snt Watched the first two last night, so underwhelmed, hope it picks up a bit
# ::tokens ["Watched", "the", "first", "two", "last", "night", ",", "so", "underwhelmed", ",", "hope", "it", "picks", "up", "a", "bit"]
# ::lemmas ["watch", "the", "first", "two", "last", "night", ",", "so", "underwhelme", ",", "hope", "it", "pick", "up", "a", "bit"]
(c28-4 / and
       :op1 (c28-7 / watch-01
                   :ARG0 (c28-9 / i)
                   :ARG1 (c28-10 / thing
                                 :ord (c28-0 / ordinal-entity
                                             :value 1)
                                 :quant 2)
                   :time (c28-11 / date-entity
                                 :dayperiod (c28-3 / night)
                                 :mod (c28-2 / yesterday))
                   :ARG0-of (c28-8 / cause-01
                                   :ARG1 (c28-12 / underwhelm-00
                                                 :ARG1 c28-9)))
       :op2 (c28-5 / hope-01
                   :ARG0 c28-9
                   :ARG1 (c28-6 / pick-up-05
                                :ARG0 c28-10
                                :degree (c28-1 / bit))))

# ::snt I % agree!! she's such a BOSS!!
# ::tokens ["I", "%", "agree", "!", "!", "she", "'s", "such", "a", "BOSS", "!", "!"]
# ::lemmas ["i", "%", "agree", "!", "!", "she", "be", "such", "a", "BOSS", "!", "!"]
(c29-2 / multi-sentence
       :snt1 (c29-6 / agree-01
                    :ARG0 (c29-5 / i)
                    :degree (c29-4 / percentage-entity
                                   :value 100))
       :snt2 (c29-1 / bitch
                    :domain (c29-3 / she)
                    :degree (c29-0 / such)
                    :mode expressive))

# ::snt Let's be honest here, she was the best part of that show for the last two seasons. I'm in!
# ::tokens ["Let", "'s", "be", "honest", "here", ",", "she", "was", "the", "best", "part", "of", "that", "show", "for", "the", "last", "two", "seasons", ".", "I", "'m", "in", "!"]
# ::lemmas ["let", "us", "be", "honest", "here", ",", "she", "be", "the", "good", "part", "of", "that", "show", "for", "the", "last", "two", "seasons", ".", "i", "be", "in", "!"]
(c30-2 / multi-sentence
       :snt1 (c30-6 / honest-01
                    :ARG0 (c30-10 / we)
                    :ARG1 (c30-11 / have-part-91
                                  :ARG1 (c30-4 / show-04
                                               :mod (c30-13 / that))
                                  :ARG2 (c30-0 / she)
                                  :ARG1-of (c30-5 / have-degree-91
                                                  :ARG2 (c30-14 / good-02
                                                                :ARG1 (c30-7 / part-91)
                                                                :ARG3 (c30-8 / most))
                                                  :time (c30-1 / before
                                                               :op1 (c30-3 / now)
                                                               :duration (c30-16 / season
                                                                                 :quant 2)))
                                  :location (c30-15 / here))
                    :snt2 (c30-9 / be-located-at-91
                                 :ARG1 (c30-12 / i))
                    :mode imperative))

# ::snt Yes, i always hated Frank Underwood. My gut was telling me something
# ::tokens ["Yes", ",", "i", "always", "hated", "Frank", "Underwood", ".", "My", "gut", "was", "telling", "me", "something"]
# ::lemmas ["yes", ",", "i", "always", "hate", "Frank", "Underwood", ".", "my", "gut", "be", "tell", "i", "something"]
(c31-1 / multi-sentence
       :snt1 (c31-4 / hate-01
                    :ARG0 (c31-7 / i)
                    :ARG1 (c31-5 / person
                                 :name (c31-0 / name
                                              :op1 "Frank"
                                              :op2 "Underwood"))
                    :time (c31-8 / always))
       :snt2 (c31-6 / tell-01
                    :ARG0 (c31-9 / gut
                                 :poss (c31-3 / i))
                    :ARG1 (c31-2 / something)
                    :ARG2 c31-3))

# ::snt Seems now his arrogant character was real life.
# ::tokens ["Seems", "now", "his", "arrogant", "character", "was", "real", "life", "."]
# ::lemmas ["seem", "now", "his", "arrogant", "character", "be", "real", "life", "."]
(c32-1 / seem-01
       :ARG1 (c32-4 / life
                    :ARG1-of (c32-2 / real-04)
                    :domain (c32-5 / character
                                   :poss (c32-3 / he)
                                   :mod (c32-6 / arrogant))
                    :time (c32-0 / now)))

# ::snt To excuse my being lost in translation, Ian Richardson played Francis Urquhart. And he too was more talented than Gove.
# ::tokens ["To", "excuse", "my", "being", "lost", "in", "translation", ",", "Ian", "Richardson", "played", "Francis", "Urquhart", ".", "And", "he", "too", "was", "more", "talented", "than", "Gove", "."]
# ::lemmas ["to", "excuse", "my", "be", "lose", "in", "translation", ",", "Ian", "Richardson", "play", "Francis", "Urquhart", ".", "and", "he", "too", "be", "more", "talented", "than", "Gove", "."]
(c33-1 / multi-sentence
       :snt1 (c33-6 / play-02
                    :ARG0 (c33-2 / person
                                 :name (c33-0 / name
                                              :op1 "Ian"
                                              :op2 "Richardson"))
                    :ARG1 (c33-15 / person
                                  :name (c33-5 / name
                                               :op1 "Francis"
                                               :op2 "Urquhart"))
                    :purpose (c33-4 / excuse-02
                                    :ARG0 c33-2
                                    :ARG1 (c33-7 / lose-03
                                                 :ARG1 (c33-14 / i)
                                                 :manner (c33-13 / translate-01))))
       :snt2 (c33-3 / and
                    :op2 (c33-8 / have-degree-91
                                :ARG1 (c33-12 / he)
                                :ARG2 (c33-17 / talent)
                                :ARG3 (c33-9 / more)
                                :ARG4 (c33-10 / person
                                              :name (c33-11 / name
                                                            :op1 "Gove"))
                                :mod (c33-16 / too))))

# ::snt I'm clearly lost in translation...
# ::tokens ["I", "'m", "clearly", "lost", "in", "translation", "..."]
# ::lemmas ["i", "be", "clearly", "lose", "in", "translation", "..."]
(c34-1 / lose-02
       :ARG1 (c34-2 / i)
       :ARG1-of (c34-0 / clear-06)
       :manner (c34-3 / translate-01))

# ::snt I thought it was Ian Richardson who played Francis Underwood?
# ::tokens ["I", "thought", "it", "was", "Ian", "Richardson", "who", "played", "Francis", "Underwood", "?"]
# ::lemmas ["i", "think", "it", "be", "Ian", "Richardson", "who", "play", "Francis", "Underwood", "?"]
(c35-6 / think-01
       :ARG0 (c35-5 / i)
       :ARG1 (c35-4 / play-01
                    :ARG0 (c35-1 / person
                                 :name (c35-0 / name
                                              :op1 "Ian"
                                              :op2 "Richardson"))
                    :ARG1 (c35-7 / person
                                 :name (c35-3 / name
                                              :op1 "Francis"
                                              :op2 "Underwood")))
       :polarity (c35-2 / amr-unknown))

# ::snt Couldnt have put it better myself.
# ::tokens ["Could", "nt", "have", "put", "it", "better", "myself", "."]
# ::lemmas ["could", "not", "have", "put", "it", "well", "myself", "."]
(c36-4 / possible-01
       :ARG1 (c36-1 / put-02
                    :ARG0 (c36-5 / i)
                    :ARG1 (c36-2 / it)
                    :ARG1-of (c36-6 / good-02
                                    :ARG2-of (c36-3 / have-degree-91
                                                    :ARG1 c36-1
                                                    :ARG3 (c36-0 / more))))
       :polarity -)

# ::snt Same, the penultimate episode was great. But other subplots like Russia, Syria, the Shepherds and Kathy still being alive honestly amounted to nothing. What was that all about? Still really liked Claire as the protagonist this season
# ::tokens ["Same", ",", "the", "penultimate", "episode", "was", "great", ".", "But", "other", "subplots", "like", "Russia", ",", "Syria", ",", "the", "Shepherds", "and", "Kathy", "still", "being", "alive", "honestly", "amounted", "to", "nothing", ".", "What", "was", "that", "all", "about", "?", "Still", "really", "liked", "Claire", "as", "the", "protagonist", "this", "season"]
# ::lemmas ["same", ",", "the", "penultimate", "episode", "be", "great", ".", "but", "other", "subplot", "like", "Russia", ",", "Syria", ",", "the", "Shepherds", "and", "Kathy", "still", "be", "alive", "honestly", "amount", "to", "nothing", ".", "what", "be", "that", "all", "about", "?", "still", "really", "like", "Claire", "as", "the", "protagonist", "this", "season"]
(c37-16 / multi-sentence
        :snt1 (c37-0 / same-01
                     :ARG1 (c37-12 / great
                                   :domain (c37-26 / episode
                                                   :ord (c37-6 / ordinal-entity
                                                               :value "-4"))))
        :snt2 (c37-19 / contrast-01
                      :ARG2 (c37-11 / amount-01
                                    :ARG1 (c37-7 / subplot
                                                 :example (c37-10 / and
                                                                  :op1 (c37-14 / country
                                                                               :name (c37-23 / name
                                                                                             :op1 "Russia"))
                                                                  :op2 (c37-3 / country
                                                                              :name (c37-18 / name
                                                                                            :op1 "Syria"))
                                                                  :op3 (c37-5 / shepherd-01)
                                                                  :op4 (c37-27 / person
                                                                               :name (c37-28 / name
                                                                                             :op1 "Kathy")))
                                                 :mod (c37-15 / other))
                                    :ARG2 (c37-20 / nothing)
                                    :ARG1-of (c37-8 / honest-01)
                                    :time (c37-24 / still)))
        :snt3 (c37-22 / concern-02
                      :ARG0 (c37-13 / that
                                    :mod (c37-9 / all))
                      :ARG1 (c37-32 / amr-unknown))
        :snt4 (c37-2 / like-01
                     :ARG0 (c37-31 / i)
                     :ARG1 (c37-17 / person
                                   :name (c37-30 / name
                                                 :op1 "Claire")
                                   :ARG0-of (c37-29 / have-org-role-91
                                                    :ARG2 (c37-4 / protagonist)))
                     :time (c37-1 / season
                                  :mod (c37-21 / this))
                     :degree (c37-25 / really)))

# ::snt I liked the way the season began. It had a strong first couple episodes, and some of the deaths were shockingly jarring and effectual. The finale was just so disappointing and as you said erupt. I have so many lingering questions. It really leaves things dangling.
# ::tokens ["I", "liked", "the", "way", "the", "season", "began", ".", "It", "had", "a", "strong", "first", "couple", "episodes", ",", "and", "some", "of", "the", "deaths", "were", "shockingly", "jarring", "and", "effectual", ".", "The", "finale", "was", "just", "so", "disappointing", "and", "as", "you", "said", "erupt", ".", "I", "have", "so", "many", "lingering", "questions", ".", "It", "really", "leaves", "things", "dangling", "."]
# ::lemmas ["i", "like", "the", "way", "the", "season", "begin", ".", "it", "have", "a", "strong", "first", "couple", "episode", ",", "and", "some", "of", "the", "death", "be", "shockingly", "jarring", "and", "effectual", ".", "the", "finale", "be", "just", "so", "disappointing", "and", "as", "you", "say", "erupt", ".", "i", "have", "so", "many", "linger", "question", ".", "it", "really", "leave", "thing", "dangle", "."]
(c38-25 / multi-sentence
        :snt1 (c38-3 / like-01
                     :ARG0 (c38-40 / i)
                     :ARG1 (c38-38 / way
                                   :manner-of (c38-23 / begin-01
                                                      :ARG1 (c38-1 / season))))
        :snt2 (c38-17 / and
                      :op1 (c38-11 / have-03
                                   :ARG0 (c38-10 / it)
                                   :ARG1 (c38-36 / episode
                                                 :quant (c38-30 / couple)
                                                 :ord (c38-5 / ordinal-entity
                                                             :value 1)
                                                 :ARG1-of (c38-6 / strong-02)))
                      :op2 (c38-16 / and
                                   :op1 (c38-4 / shock-01
                                               :ARG0 (c38-41 / die-01
                                                             :ARG1-of (c38-21 / include-91
                                                                              :ARG2 (c38-31 / die-01)
                                                                              :ARG3 (c38-34 / some)))
                                               :ARG0-of (c38-2 / shock-01
                                                               :ARG0-of (c38-24 / surprise-01
                                                                                :polarity -))
                                               :op2 (c38-14 / affect-01
                                                            :ARG0 c38-41
                                                            :ARG0-of (c38-28 / shock-01))))
                      :snt3 (c38-26 / and
                                    :op1 (c38-29 / disappoint-01
                                                 :ARG0 (c38-33 / final)
                                                 :degree (c38-9 / so)
                                                 :mod (c38-15 / just))
                                    :op2 (c38-19 / erupt-01
                                                 :ARG1-of (c38-27 / say-01
                                                                  :ARG0 (c38-8 / you))))
                      :snt4 (c38-18 / question-01
                                    :ARG0 (c38-0 / i)
                                    :ARG1-of (c38-20 / linger-01)
                                    :ARG1-of (c38-39 / have-quant-91
                                                     :ARG2 (c38-12 / many)
                                                     :ARG3 (c38-7 / so)))
                      :snt5 (c38-13 / leave-13
                                    :ARG0 (c38-32 / it)
                                    :ARG1 (c38-37 / dangling-02
                                                  :ARG1 (c38-22 / thing))
                                    :ARG1-of (c38-35 / real-04))))

# ::snt I kinda feel the same way. Definitely glad we got a conclusion for the show but that last episode was so erupt. Felt like a season finale rather than a series finale
# ::tokens ["I", "kinda", "feel", "the", "same", "way", ".", "Definitely", "glad", "we", "got", "a", "conclusion", "for", "the", "show", "but", "that", "last", "episode", "was", "so", "erupt", ".", "Felt", "like", "a", "season", "finale", "rather", "than", "a", "series", "finale"]
# ::lemmas ["i", "kinda", "feel", "the", "same", "way", ".", "definitely", "glad", "we", "get", "a", "conclusion", "for", "the", "show", "but", "that", "last", "episode", "be", "so", "erupt", ".", "feel", "like", "a", "season", "finale", "rather", "than", "a", "series", "finale"]
(c39-13 / multi-sentence
        :snt1 (c39-15 / feel-01
                      :ARG0 (c39-21 / i)
                      :ARG1 (c39-20 / way
                                    :ARG1-of (c39-0 / same-01))
                      :degree (c39-8 / kind-of))
        :snt2 (c39-10 / glad-02
                      :ARG0 (c39-4 / get-01
                                   :ARG0 (c39-3 / we)
                                   :ARG1 (c39-14 / conclude-02
                                                 :ARG1 (c39-6 / show-04))
                                   :concession-of (c39-18 / erupt-01
                                                          :ARG0 (c39-11 / episode
                                                                        :mod (c39-2 / last)
                                                                        :mod (c39-9 / that))
                                                          :degree (c39-5 / so)))
                      :mod (c39-22 / definite))
        :snt3 c39-15
        :ARG0 (c39-7 / i)
        :ARG1 (c39-17 / resemble-01
                      :ARG1 c39-7
                      :ARG2 (c39-16 / season
                                    :mod (c39-19 / final)
                                    :ARG1-of (c39-12 / instead-of-91
                                                     :ARG2 (c39-1 / series
                                                                  :mod c39-19)))))

# ::snt He and Roseanne OD'd together.
# ::tokens ["He", "and", "Roseanne", "OD'd", "together", "."]
# ::lemmas ["he", "and", "Roseanne", "OD'd", "together", "."]
(c40-0 / OD-01
       :ARG0 (c40-5 / and
                    :op1 (c40-2 / he)
                    :op2 (c40-3 / person
                                :name (c40-1 / name
                                             :op1 "Roseanne")))
       :manner (c40-4 / together))

# ::snt FUCKING SPOILERS ASSHOLE!
# ::tokens ["FUCKING", "SPOILERS", "ASSHOLE", "!"]
# ::lemmas ["FUCKING", "SPOILERS", "ASSHOLE", "!"]
(c41-3 / asshole
       :domain (c41-2 / person
                      :ARG0-of (c41-0 / spoil-01)
                      :ARG0-of (c41-1 / fuck-01)))

# ::snt Of course, everybody feels the need to accuse someone more famous ask them to say it in front of judge is the only solution.
# ::tokens ["Of", "course", ",", "everybody", "feels", "the", "need", "to", "accuse", "someone", "more", "famous", "ask", "them", "to", "say", "it", "in", "front", "of", "judge", "is", "the", "only", "solution", "."]
# ::lemmas ["of", "course", ",", "everybody", "feel", "the", "need", "to", "accuse", "someone", "more", "famous", "ask", "they", "to", "say", "it", "in", "front", "of", "judge", "be", "the", "only", "solution", "."]
(c42-6 / solve-01
       :ARG2 (c42-14 / and
                     :op1 (c42-0 / feel-01
                                 :ARG0 (c42-7 / everybody)
                                 :ARG1 (c42-4 / need-01
                                              :ARG0 c42-7
                                              :ARG1 (c42-13 / accuse-01
                                                            :ARG0 c42-7
                                                            :ARG1 (c42-1 / someone
                                                                         :ARG1-of (c42-10 / fame-01
                                                                                          :ARG2-of (c42-8 / have-degree-91
                                                                                                          :ARG1 c42-1
                                                                                                          :ARG3 (c42-5 / more)))))))
                     :op2 (c42-11 / ask-02
                                  :ARG0 c42-7
                                  :ARG1 (c42-16 / say-01
                                                :ARG0 c42-1
                                                :ARG1 c42-13
                                                :location (c42-15 / in-front-of
                                                                  :op1 (c42-9 / person
                                                                              :ARG0-of (c42-12 / judge-01))))
                                  :ARG2 c42-1))
       :mod (c42-2 / only)
       :mod (c42-3 / of-course))

# ::snt It's a shame, he isn't charged of crimes, only gossip and people as attention seekers
# ::tokens ["It", "'s", "a", "shame", ",", "he", "is", "n't", "charged", "of", "crimes", ",", "only", "gossip", "and", "people", "as", "attention", "seekers"]
# ::lemmas ["it", "be", "a", "shame", ",", "he", "be", "not", "charge", "of", "crime", ",", "only", "gossip", "and", "people", "as", "attention", "seeker"]
(c43-3 / shame-02
       :ARG0 (c43-6 / contrast-01
                    :ARG1 (c43-11 / charge-05
                                  :ARG1 (c43-4 / he)
                                  :ARG2 (c43-7 / crime-02)
                                  :polarity -)
                    :ARG2 (c43-0 / charge-05
                                 :ARG1 c43-4
                                 :ARG2 (c43-9 / and
                                              :op1 (c43-10 / gossip-01)
                                              :op2 (c43-5 / person
                                                          :ARG0-of (c43-1 / seek-01
                                                                          :ARG1 (c43-8 / attend-02))))
                                 :mod (c43-2 / only))))

# ::snt I agree
# ::tokens ["I", "agree"]
# ::lemmas ["i", "agree"]
(c44-1 / agree-01
       :ARG0 (c44-0 / i))

# ::snt Why have we not heard about him until tonight?? Good luck !!
# ::tokens ["Why", "have", "we", "not", "heard", "about", "him", "until", "tonight", "?", "?", "Good", "luck", "!", "!"]
# ::lemmas ["why", "have", "we", "not", "hear", "about", "he", "until", "tonight", "?", "?", "good", "luck", "!", "!"]
(c45-0 / multi-sentence
       :snt1 (c45-4 / cause-01
                    :ARG0 (c45-8 / amr-unknown)
                    :ARG1 (c45-2 / hear-01
                                 :ARG0 (c45-5 / we)
                                 :ARG1 (c45-6 / he)
                                 :time (c45-11 / until
                                               :op1 (c45-10 / date-entity
                                                            :dayperiod (c45-1 / night)
                                                            :mod (c45-7 / today)))
                                 :polarity -))
       :snt2 (c45-3 / luck
                    :ARG1-of (c45-9 / good-02)))

# ::snt true
# ::tokens ["true"]
# ::lemmas ["true"]
(c46-0 / true-01)

# ::snt I just watched that episode and I too had to make a tough decision to stop watching. hurts.
# ::tokens ["I", "just", "watched", "that", "episode", "and", "I", "too", "had", "to", "make", "a", "tough", "decision", "to", "stop", "watching", ".", "hurts", "."]
# ::lemmas ["i", "just", "watch", "that", "episode", "and", "i", "too", "have", "to", "make", "a", "tough", "decision", "to", "stop", "watch", ".", "hurt", "."]
(c47-1 / multi-sentence
       :snt1 (c47-10 / and
                     :op1 (c47-7 / watch-01
                                 :ARG0 (c47-9 / i)
                                 :ARG1 (c47-4 / episode
                                              :mod (c47-8 / that))
                                 :time (c47-11 / just))
                     :op2 (c47-0 / obligate-01
                                 :ARG1 (c47-3 / i
                                              :mod (c47-14 / too))
                                 :ARG2 (c47-12 / decide-01
                                               :ARG0 c47-3
                                               :ARG1 (c47-2 / stop-01
                                                            :ARG0 c47-3
                                                            :ARG1 (c47-6 / watch-01
                                                                         :ARG0 c47-3))
                                               :ARG1-of (c47-13 / tough-02))))
       :snt2 (c47-5 / hurt-01))

# ::snt Nope. Frank Underwood literally is the show.
# ::tokens ["Nope", ".", "Frank", "Underwood", "literally", "is", "the", "show", "."]
# ::lemmas ["nope", ".", "Frank", "Underwood", "literally", "be", "the", "show", "."]
(c49-1 / multi-sentence
       :snt1 (c49-0 / nope)
       :snt2 (c49-2 / show-04
                    :ARG1 (c49-4 / person
                                 :name (c49-3 / name
                                              :op1 "Frank"
                                              :op2 "Underwood"))
                    :manner (c49-5 / literal)))

# ::snt one of the best shows ever made. Season was amazing cant wait for season only months to wait.
# ::tokens ["one", "of", "the", "best", "shows", "ever", "made", ".", "Season", "was", "amazing", "ca", "nt", "wait", "for", "season", "only", "months", "to", "wait", "."]
# ::lemmas ["one", "of", "the", "good", "show", "ever", "make", ".", "Season", "be", "amazing", "can", "not", "wait", "for", "season", "only", "months", "to", "wait", "."]
(c50-2 / multi-sentence
       :snt1 (c50-3 / show
                    :ARG1-of (c50-12 / include-91
                                     :ARG2 (c50-0 / show
                                                  :ARG1-of (c50-6 / make-01
                                                                  :time (c50-5 / ever))
                                                  :ARG1-of (c50-7 / have-degree-91
                                                                  :ARG2 (c50-14 / good-02
                                                                                :ARG1 c50-0)
                                                                  :ARG3 (c50-16 / most)))))
       :snt2 (c50-13 / amaze-01
                     :ARG0 (c50-17 / season))
       :snt3 (c50-10 / wait-01
                     :ARG1 (c50-9 / wait-01
                                  :ARG2 (c50-4 / season)
                                  :duration (c50-8 / multiple
                                                   :op1 (c50-11 / temporal-quantity
                                                                :unit (c50-15 / month)
                                                                :quant 1)
                                                   :mod (c50-1 / only)))
                     :polarity -))
