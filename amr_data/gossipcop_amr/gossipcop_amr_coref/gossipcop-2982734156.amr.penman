# ::snt memory loss from drunken blackouts aren't the same as Alzheimer's David!
# ::tokens ["memory", "loss", "from", "drunken", "blackouts", "are", "n't", "the", "same", "as", "Alzheimer", "'s", "David", "!"]
# ::lemmas ["memory", "loss", "from", "drunken", "blackout", "be", "not", "the", "same", "as", "Alzheimer", "'s", "David", "!"]
(c1-3 / same-01
      :ARG1 (c1-4 / lose-02
                  :ARG1 (c1-1 / memory)
                  :ARG1-of (c1-5 / cause-01
                                 :ARG0 (c1-0 / blackout-03
                                             :manner (c1-7 / drunken))))
      :ARG2 (c1-6 / disease
                  :name (c1-2 / name
                              :op1 "Alzheimer's"
                              :op2 "David"))
      :polarity -)

# ::snt Bless his heart
# ::tokens ["Bless", "his", "heart"]
# ::lemmas ["bless", "his", "heart"]
(c2-1 / bless-01
      :ARG0 (c2-3 / i)
      :ARG1 (c2-2 / heart
                  :part-of (c2-0 / he)))

# ::snt this is from me
# ::tokens ["this", "is", "from", "me"]
# ::lemmas ["this", "be", "from", "i"]
(c3-1 / this
      :source (c3-0 / i))

# ::snt Neurofeedback Brain-training is safe and effective in the battle against memory loss
# ::tokens ["Neurofeedback", "Brain", "-", "training", "is", "safe", "and", "effective", "in", "the", "battle", "against", "memory", "loss"]
# ::lemmas ["Neurofeedback", "Brain", "-", "training", "be", "safe", "and", "effective", "in", "the", "battle", "against", "memory", "loss"]
(c4-4 / and
      :op1 (c4-3 / safe-01
                 :ARG0 (c4-8 / train-01
                             :ARG1 (c4-0 / brain)
                             :mod (c4-1 / neurofeedback)))
      :op2 (c4-5 / effective-04
                 :ARG0 c4-8
                 :ARG1 (c4-6 / battle-01
                             :ARG1 (c4-7 / lose-02
                                         :ARG1 (c4-2 / memory)))))

# ::snt oh Keith Partridge
# ::tokens ["oh", "Keith", "Partridge"]
# ::lemmas ["oh", "Keith", "Partridge"]
(c5-1 / person
      :name (c5-0 / name
                  :op1 "Keith"
                  :op2 "Partridge")
      :mod (c5-2 / oh
                 :mode expressive))

# ::snt wish you the luck David it's hard my prayers are with you
# ::tokens ["wish", "you", "the", "luck", "David", "it", "'s", "hard", "my", "prayers", "are", "with", "you"]
# ::lemmas ["wish", "you", "the", "luck", "David", "it", "be", "hard", "my", "prayer", "be", "with", "you"]
(c6-2 / say-01
      :ARG0 (c6-7 / i)
      :ARG1 (c6-8 / and
                  :op1 (c6-6 / wish-01
                             :ARG0 c6-7
                             :ARG1 (c6-4 / luck)
                             :ARG2 (c6-5 / person
                                         :name (c6-0 / name
                                                     :op1 "David")))
                  :op2 (c6-3 / hard-02
                             :ARG1 (c6-1 / pray-01
                                         :ARG0 c6-7
                                         :ARG2 c6-5)))
      :ARG2 c6-5)

# ::snt So sorry to hear this! But, he lived his adult life as a drunk. It could have been brought on by all of his drinking. Still sad news
# ::tokens ["So", "sorry", "to", "hear", "this", "!", "But", ",", "he", "lived", "his", "adult", "life", "as", "a", "drunk", ".", "It", "could", "have", "been", "brought", "on", "by", "all", "of", "his", "drinking", ".", "Still", "sad", "news"]
# ::lemmas ["so", "sorry", "to", "hear", "this", "!", "but", ",", "he", "live", "his", "adult", "life", "as", "a", "drunk", ".", "it", "could", "have", "be", "bring", "on", "you", "all", "of", "his", "drinking", ".", "still", "sad", "news"]
(c7-12 / multi-sentence
       :snt1 (c7-0 / sorry-01
                   :ARG1 (c7-19 / i)
                   :ARG2 (c7-6 / hear-01
                               :ARG0 c7-19
                               :ARG1 (c7-9 / this))
                   :degree (c7-3 / so))
       :snt2 (c7-13 / contrast-01
                    :ARG2 (c7-1 / live-01
                                :ARG0 (c7-18 / he)
                                :ARG1 (c7-10 / life
                                             :mod (c7-8 / adult)
                                             :poss c7-18)
                                :manner (c7-20 / drunk)))
       :snt3 (c7-17 / possible-01
                    :ARG1 (c7-11 / bring-on-06
                                 :ARG0 (c7-14 / drink-01
                                              :ARG0 (c7-5 / he)
                                              :mod (c7-7 / all))
                                 :ARG1 (c7-4 / it)))
       :snt4 (c7-15 / news
                    :ARG1-of (c7-2 / sad-02
                                   :mod (c7-16 / still))))

# ::snt FAKE NEWS CHANNEL local biased news network
# ::tokens ["FAKE", "NEWS", "CHANNEL", "local", "biased", "news", "network"]
# ::lemmas ["FAKE", "NEWS", "channel", "local", "biased", "news", "network"]
(c8-2 / network
      :mod (c8-3 / news)
      :ARG1-of (c8-1 / bias-01
                     :ARG2 (c8-5 / local-02))
      :mod (c8-4 / news)
      :ARG0-of (c8-0 / fake-02))

# ::snt drinks too much
# ::tokens ["drinks", "too", "much"]
# ::lemmas ["drink", "too", "much"]
(c9-0 / drink-01
      :ARG1-of (c9-1 / have-quant-91
                     :ARG2 (c9-2 / much)
                     :ARG3 (c9-3 / too)))

# ::snt FAKE NEWS CHANNEL BOYCOTT biased local media
# ::tokens ["FAKE", "NEWS", "CHANNEL", "BOYCOTT", "biased", "local", "media"]
# ::lemmas ["FAKE", "NEWS", "channel", "boycott", "bias", "local", "medium"]
(c10-1 / bias-01
       :ARG1 (c10-3 / media
                    :ARG1-of (c10-5 / local-02))
       :ARG2 (c10-4 / broadcast-program
                    :name (c10-2 / name
                                 :op1 "Fox"
                                 :op2 "News"
                                 :op3 "Channel"))
       :ARG1-of (c10-0 / fake-02))

# ::snt he needs to retire. Trying to perform on Dementia medication.. can't be very easy.
# ::tokens ["he", "needs", "to", "retire", ".", "Trying", "to", "perform", "on", "Dementia", "medication", "..", "ca", "n't", "be", "very", "easy", "."]
# ::lemmas ["he", "need", "to", "retire", ".", "try", "to", "perform", "on", "Dementia", "medication", "..", "can", "not", "be", "very", "easy", "."]
(c11-1 / multi-sentence
       :snt1 (c11-0 / need-01
                    :ARG0 (c11-6 / he)
                    :ARG1 (c11-3 / retire-01
                                 :ARG0 c11-6))
       :snt2 (c11-7 / possible-01
                    :ARG1 (c11-5 / easy-05
                                 :ARG1 (c11-10 / try-01
                                               :ARG0 (c11-9 / he)
                                               :ARG1 (c11-2 / perform-02
                                                            :ARG0 c11-9
                                                            :ARG1 (c11-8 / medication
                                                                         :mod (c11-11 / dementia))))
                                 :degree (c11-4 / very))
                    :polarity -))

# ::snt -have worked with a geriatric population and those with dementia for many years. Praying for a cure!
# ::tokens ["-have", "worked", "with", "a", "geriatric", "population", "and", "those", "with", "dementia", "for", "many", "years", ".", "Praying", "for", "a", "cure", "!"]
# ::lemmas ["-have", "work", "with", "a", "geriatric", "population", "and", "those", "with", "dementia", "for", "many", "years", ".", "pray", "for", "a", "cure", "!"]
(c12-1 / multi-sentence
       :snt1 (c12-7 / work-01
                    :ARG3 (c12-10 / and
                                  :op1 (c12-5 / population
                                              :mod (c12-11 / geriatric))
                                  :op2 (c12-2 / person
                                              :mod (c12-9 / that)
                                              :ARG0-of (c12-4 / have-03
                                                              :ARG1 (c12-12 / disease
                                                                            :name (c12-3 / name
                                                                                         :op1 "Disease")))))
                    :duration (c12-6 / many
                                     :op1 (c12-14 / temporal-quantity
                                                  :unit (c12-0 / year)
                                                  :quant 1)))
       :snt2 (c12-13 / pay-01
                     :ARG3 (c12-8 / cure-01)))

# ::snt Sure is and it really haunt's to this day! My Mother in law passed from compilations due to Dementia
# ::tokens ["Sure", "is", "and", "it", "really", "haunt", "'s", "to", "this", "day", "!", "My", "Mother", "in", "law", "passed", "from", "compilations", "due", "to", "Dementia"]
# ::lemmas ["sure", "be", "and", "it", "really", "haunt", "'s", "to", "this", "day", "!", "my", "Mother", "in", "law", "pass", "from", "compilation", "due", "to", "Dementia"]
(c13-0 / multi-sentence
       :snt1 (c13-14 / and
                     :op1 (c13-2 / sure-02)
                     :op2 (c13-6 / haunt-01
                                 :ARG0 (c13-13 / it)
                                 :ARG1 (c13-15 / day
                                               :mod (c13-12 / this))
                                 :ARG1-of (c13-4 / real-04)))
       :snt2 (c13-7 / pass-20
                    :ARG1 (c13-1 / person
                                 :ARG0-of (c13-11 / have-rel-role-91
                                                  :ARG1 (c13-3 / i)
                                                  :ARG2 (c13-8 / mother-in-law)))
                    :ARG1-of (c13-9 / cause-01
                                    :ARG0 (c13-10 / disease
                                                  :name (c13-5 / name
                                                               :op1 "Dementia")))))

# ::snt She seen me and it was like she knew who she looking at but was locked up.
# ::tokens ["She", "seen", "me", "and", "it", "was", "like", "she", "knew", "who", "she", "looking", "at", "but", "was", "locked", "up", "."]
# ::lemmas ["she", "see", "i", "and", "it", "be", "like", "she", "know", "who", "she", "look", "at", "but", "be", "lock", "up", "."]
(c14-7 / and
       :op1 (c14-1 / see-01
                   :ARG0 (c14-0 / she)
                   :ARG1 (c14-6 / i))
       :op2 (c14-2 / have-concession-91
                   :ARG1 (c14-3 / lock-up-03
                                :ARG1 c14-0)
                   :ARG2 (c14-4 / know-01
                                :ARG0 c14-0
                                :ARG1 (c14-5 / person
                                             :ARG1-of (c14-8 / look-01
                                                             :ARG0 c14-0)))))

# ::snt Oh seen that woman couple months before she passed, it haunt's me sill today, she was prisoner in her head
# ::tokens ["Oh", "seen", "that", "woman", "couple", "months", "before", "she", "passed", ",", "it", "haunt", "'s", "me", "sill", "today", ",", "she", "was", "prisoner", "in", "her", "head"]
# ::lemmas ["oh", "see", "that", "woman", "couple", "months", "before", "she", "pass", ",", "it", "haunt", "be", "i", "sill", "today", ",", "she", "be", "prisoner", "in", "her", "head"]
(c15-4 / see-01
       :ARG0 (c15-11 / i
                     :part (c15-6 / head))
       :ARG1 (c15-8 / woman
                    :mod (c15-12 / that)
                    :ARG1-of (c15-5 / imprison-01
                                    :location c15-6)
                    :part c15-6)
       :mod (c15-0 / oh
                   :mode expressive)
       :time (c15-2 / before
                    :op1 (c15-7 / pass-20
                                :ARG1 c15-8)
                    :quant (c15-9 / couple
                                  :op1 (c15-15 / temporal-quantity
                                               :unit (c15-3 / month)
                                               :quant 1)))
       :ARG0-of (c15-10 / haunt-01
                        :ARG1 c15-11
                        :mod (c15-1 / sill)
                        :time (c15-13 / today))
       :ARG1-of (c15-14 / cause-01
                        :ARG0 c15-11
                        :ARG1 c15-8)
       :ARG0-of c15-14)

# ::snt Oh No!!! years ago a lady couple houses down the street passed away from it, so sad to see
# ::tokens ["Oh", "No", "!", "!", "!", "years", "ago", "a", "lady", "couple", "houses", "down", "the", "street", "passed", "away", "from", "it", ",", "so", "sad", "to", "see"]
# ::lemmas ["oh", "no", "!", "!", "!", "years", "ago", "a", "lady", "couple", "house", "down", "the", "street", "pass", "away", "from", "it", ",", "so", "sad", "to", "see"]
(c16-4 / multi-sentence
       :snt1 (c16-0 / oh-no
                    :mode expressive)
       :snt2 (c16-10 / pass-away-16
                     :ARG1 (c16-12 / couple
                                   :mod (c16-9 / lady)
                                   :location (c16-8 / house
                                                    :location (c16-7 / relative-position
                                                                     :op1 (c16-6 / street)
                                                                     :direction (c16-14 / down))))
                     :time (c16-2 / before
                                  :op1 (c16-5 / now)
                                  :quant (c16-11 / multiple
                                                 :op1 (c16-13 / temporal-quantity
                                                              :unit (c16-3 / year)
                                                              :quant 1)))
                     :ARG1-of (c16-15 / cause-01
                                      :ARG0 (c16-1 / see-01
                                                   :ARG1 c16-10))))

# ::snt Cruel ILLNESS
# ::tokens ["Cruel", "ILLNESS"]
# ::lemmas ["Cruel", "ILLNESS"]
(c17-1 / ignorance
       :mod (c17-0 / cruel))

# ::snt Heart,Prayers with David Cassidy as he battle an incurable disease.It hit close to home, difficult and devastating.
# ::tokens ["Heart", ",", "Prayers", "with", "David", "Cassidy", "as", "he", "battle", "an", "incurable", "disease", ".", "It", "hit", "close", "to", "home", ",", "difficult", "and", "devastating", "."]
# ::lemmas ["heart", ",", "Prayers", "with", "David", "Cassidy", "as", "he", "battle", "an", "incurable", "disease", ".", "it", "hit", "close", "to", "home", ",", "difficult", "and", "devastating", "."]
(c18-2 / multi-sentence
       :snt1 (c18-6 / heart)
       :snt2 (c18-7 / pray-01
                    :accompanier (c18-3 / person
                                        :name (c18-1 / name
                                                     :op1 "David"
                                                     :op2 "Cass Cassidy"))
                    :time (c18-0 / battle-01
                                 :ARG0 c18-3
                                 :ARG1 (c18-13 / disease
                                               :mod (c18-12 / incurable))))
       :snt3 (c18-11 / hit-01
                     :ARG1 (c18-4 / it)
                     :ARG2 (c18-9 / close-10
                                  :ARG2 (c18-5 / home))
                     :mod (c18-10 / difficult)
                     :ARG0-of (c18-8 / devastate-01)))

# ::snt Just read this. Such a devastating diagnosis.
# ::tokens ["Just", "read", "this", ".", "Such", "a", "devastating", "diagnosis", "."]
# ::lemmas ["just", "read", "this", ".", "such", "a", "devastating", "diagnosis", "."]
(c19-1 / multi-sentence
       :snt1 (c19-3 / read-01
                    :ARG0 (c19-0 / you)
                    :ARG1 (c19-6 / this)
                    :mod (c19-5 / just)
                    :mode imperative)
       :snt2 (c19-7 / diagnose-01
                    :ARG0-of (c19-4 / devastate-01
                                    :degree (c19-2 / such))))

# ::snt Aren't we all?
# ::tokens ["Are", "n't", "we", "all", "?"]
# ::lemmas ["be", "not", "we", "all", "?"]
(c20-0 / we
       :mod (c20-2 / all)
       :ARG1-of (c20-1 / request-confirmation-91))

# ::snt point me in the direction of albuquerque
# ::tokens ["point", "me", "in", "the", "direction", "of", "albuquerque"]
# ::lemmas ["point", "i", "in", "the", "direction", "of", "albuquerque"]
(c21-2 / point-01
       :ARG0 (c21-0 / you)
       :ARG1 (c21-4 / i)
       :ARG2 (c21-3 / city
                    :name (c21-1 / name
                                 :op1 "Albuquerque"))
       :mode imperative)

# ::snt Don't remind him he was a Partridge.
# ::tokens ["Do", "n't", "remind", "him", "he", "was", "a", "Partridge", "."]
# ::lemmas ["do", "not", "remind", "he", "he", "be", "a", "Partridge", "."]
(c22-0 / remind-01
       :ARG0 (c22-1 / you)
       :ARG1 (c22-2 / partridge
                    :domain (c22-3 / he
                                   :ARG2-of c22-0))
       :polarity -
       :mode imperative)

# ::snt Pretty heartbreaking. Alzheimer's and dementia is terrifying.
# ::tokens ["Pretty", "heartbreaking", ".", "Alzheimer", "'s", "and", "dementia", "is", "terrifying", "."]
# ::lemmas ["pretty", "heartbreaking", ".", "Alzheimer", "'s", "and", "dementia", "be", "terrify", "."]
(c23-1 / multi-sentence
       :snt1 (c23-0 / break-heart-31
                    :degree (c23-4 / pretty))
       :snt2 (c23-6 / terrify-01
                    :ARG0 (c23-7 / and
                                 :op1 (c23-8 / disease
                                             :name (c23-2 / name
                                                          :op1 "Alzheimer's"))
                                 :op2 (c23-5 / disease
                                             :name (c23-3 / name
                                                          :op1 "Dementia")))))

# ::snt sad
# ::tokens ["sad"]
# ::lemmas ["sad"]
(c24-0 / sad-02)

# ::snt that's good Danny Bonaduce knowledge
# ::tokens ["that", "'s", "good", "Danny", "Bonaduce", "knowledge"]
# ::lemmas ["that", "be", "good", "Danny", "Bonaduce", "knowledge"]
(c25-1 / say-01
       :ARG0 (c25-3 / i)
       :ARG1 (c25-5 / good-02
                    :ARG1 (c25-4 / that))
       :ARG2 (c25-2 / person
                    :name (c25-0 / name
                                 :op1 "Danny"
                                 :op2 "Bonaduce")))

# ::snt - Yes! The show with the little redhead who would go on to beat up a transvestite, lol.
# ::tokens ["-", "Yes", "!", "The", "show", "with", "the", "little", "redhead", "who", "would", "go", "on", "to", "beat", "up", "a", "transvestite", ",", "lol", "."]
# ::lemmas ["-", "yes", "!", "the", "show", "with", "the", "little", "redhead", "who", "would", "go", "on", "to", "beat", "up", "a", "transvestite", ",", "lol", "."]
(c26-2 / multi-sentence
       :snt1 (c26-1 / yes
                    :mode expressive)
       :snt2 (c26-3 / show-04
                    :ARG1 (c26-4 / redhead
                                 :mod (c26-5 / little)
                                 :ARG0-of (c26-9 / go-on-15
                                                 :ARG1 (c26-0 / beat-up-05
                                                              :ARG0 c26-4
                                                              :ARG1 (c26-8 / transvestite))))
                    :ARG2-of (c26-10 / laugh-01
                                     :ARG0 (c26-7 / i)
                                     :manner (c26-6 / loud)
                                     :mode expressive)))

# ::snt Partridge Family
# ::tokens ["Partridge", "Family"]
# ::lemmas ["Partridge", "Family"]
(c27-0 / family
       :name (c27-1 / name
                    :op1 "Partridge"))

# ::snt - I can't remember.... what show he was on? lol. Seriously, sorry to hear he's having a rough time of it.
# ::tokens ["-", "I", "ca", "n't", "remember", "....", "what", "show", "he", "was", "on", "?", "lol", ".", "Seriously", ",", "sorry", "to", "hear", "he", "'s", "having", "a", "rough", "time", "of", "it", "."]
# ::lemmas ["-", "i", "can", "not", "remember", "....", "what", "show", "he", "be", "on", "?", "lol", ".", "seriously", ",", "sorry", "to", "hear", "he", "be", "have", "a", "rough", "time", "of", "it", "."]
(c28-1 / multi-sentence
       :snt1 (c28-8 / possible-01
                    :ARG1 (c28-4 / remember-01
                                 :ARG0 (c28-12 / i)
                                 :ARG1 (c28-2 / show
                                              :mod (c28-13 / amr-unknown)
                                              :medium-of (c28-7 / he)))
                    :ARG2-of (c28-9 / laugh-01
                                    :ARG0 (c28-3 / i
                                                 :manner (c28-14 / loud))
                                    :mode expressive)
                    :snt2 (c28-0 / sorry-01
                                 :ARG1 c28-12)
                    :ARG2 (c28-10 / hear-01
                                  :ARG0 c28-12
                                  :ARG1 (c28-5 / rough-04
                                               :ARG1 (c28-11 / time
                                                             :poss (c28-6 / he))))
                    :ARG2-of (c28-15 / serious-01)
                    :polarity -))

# ::snt Can't believe this about David Cassidy.
# ::tokens ["Ca", "n't", "believe", "this", "about", "David", "Cassidy", "."]
# ::lemmas ["can", "not", "believe", "this", "about", "David", "Cassidy", "."]
(c29-3 / possible-01
       :ARG1 (c29-0 / believe-01
                    :ARG1 (c29-4 / this
                                 :topic (c29-2 / person
                                               :name (c29-1 / name
                                                            :op1 "David"
                                                            :op2 "Cass Cassidy"))))
       :polarity -)

# ::snt ohhhh..... "I think I love You so what am I so afraid of ...."
# ::tokens ["ohhhh", ".....", "\"", "I", "think", "I", "love", "You", "so", "what", "am", "I", "so", "afraid", "of", "....", "\""]
# ::lemmas ["ohhhh", ".....", "\"", "i", "think", "i", "love", "you", "so", "what", "be", "i", "so", "afraid", "of", "....", "\""]
(c31-8 / think-01
       :ARG0 (c31-7 / i)
       :ARG1 (c31-5 / love-01
                    :ARG0 c31-7
                    :ARG1 (c31-2 / you))
       :ARG0-of (c31-6 / cause-01
                       :ARG1 (c31-0 / fear-01
                                    :ARG0 c31-7
                                    :ARG1 (c31-4 / amr-unknown)
                                    :degree (c31-3 / so)))
       :mod (c31-1 / oh
                   :mode expressive))

# ::snt God bless him and help him
# ::tokens ["God", "bless", "him", "and", "help", "him"]
# ::lemmas ["God", "bless", "he", "and", "help", "he"]
(c32-5 / and
       :op1 (c32-0 / bless-01
                   :ARG0 (c32-3 / person
                                :name (c32-1 / name
                                             :op1 "God"))
                   :ARG1 (c32-2 / he))
       :op2 (c32-4 / help-01
                   :ARG0 c32-3
                   :ARG2 c32-2))

# ::snt that's what alcoholism does
# ::tokens ["that", "'s", "what", "alcoholism", "does"]
# ::lemmas ["that", "be", "what", "alcoholism", "do"]
(c33-0 / do-02
       :ARG0 (c33-2 / alcoholism)
       :ARG1 (c33-1 / that))
