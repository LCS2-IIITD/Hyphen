# ::snt Oooh Ed
# ::tokens ["Oooh", "Ed"]
# ::lemmas ["Oooh", "Ed"]
(c1-0 / oooh
      :mod (c1-2 / person
                 :name (c1-1 / name
                             :op1 "Ed"))
      :mode expressive)

# ::snt ay siiiiii
# ::tokens ["ay", "siiiiii"]
# ::lemmas ["ay", "siiiiii"]
(c2-3 / say-01
      :ARG1 (c2-0 / ay)
      :ARG2 (c2-2 / person
                  :name (c2-1 / name
                              :op1 "Siiiiii")))

# ::snt Bruno + Ed = mi muerte
# ::tokens ["Bruno", "+", "Ed", "=", "mi", "muerte"]
# ::lemmas ["Bruno", "+", "Ed", "=", "mi", "muerte"]
(c3-4 / equal-01
      :ARG1 (c3-2 / sum-of
                  :op1 (c3-3 / runo)
                  :op2 (c3-6 / person
                             :name (c3-0 / name
                                         :op1 "Ed")))
      :ARG2 (c3-1 / person
                  :name (c3-5 / name
                              :op1 " mi"
                              :op2 "Muerte")))

# ::snt I wish would perform
# ::tokens ["I", "wish", "would", "perform"]
# ::lemmas ["i", "wish", "would", "perform"]
(c4-0 / wish-01
      :ARG0 (c4-2 / i)
      :ARG1 (c4-1 / perform-01
                  :ARG0 c4-2))
