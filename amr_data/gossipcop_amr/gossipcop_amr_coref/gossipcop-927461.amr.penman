# ::snt This guy must have a big dick....there I said what you were all thinking..
# ::tokens ["This", "guy", "must", "have", "a", "big", "dick", "....", "there", "I", "said", "what", "you", "were", "all", "thinking", ".."]
# ::lemmas ["this", "guy", "must", "have", "a", "big", "dick", "....", "there", "i", "say", "what", "you", "be", "all", "think", ".."]
(c1-2 / multi-sentence
      :snt1 (c1-8 / infer-01
                  :ARG1 (c1-7 / have-03
                              :ARG0 (c1-10 / guy
                                           :mod (c1-9 / this))
                              :ARG1 (c1-11 / dick
                                           :mod (c1-0 / big))))
      :snt2 (c1-3 / say-01
                  :ARG0 (c1-4 / i)
                  :ARG1 (c1-13 / thing
                               :ARG1-of (c1-12 / think-01
                                               :ARG0 (c1-1 / you
                                                           :mod (c1-5 / all))))
                  :location (c1-6 / there)))

# ::snt They are just friends auntie, sit down.
# ::tokens ["They", "are", "just", "friends", "auntie", ",", "sit", "down", "."]
# ::lemmas ["they", "be", "just", "friend", "auntie", ",", "sit", "down", "."]
(c2-2 / say-01
      :ARG0 (c2-8 / i)
      :ARG1 (c2-0 / sit-down-02
                  :ARG1 (c2-5 / person
                              :ARG0-of (c2-4 / have-rel-role-91
                                             :ARG1 (c2-9 / they)
                                             :ARG2 (c2-3 / aunt))
                              :ARG0-of (c2-6 / have-rel-role-91
                                             :ARG2 (c2-1 / friend)
                                             :ARG1 c2-5)
                              :mod (c2-7 / just)
                              :ARG2-of c2-2)
                  :mode imperative))

# ::snt Gross
# ::tokens ["Gross"]
# ::lemmas ["gross"]
(c3-0 / gross)

# ::snt I hope she relise he's probably the worst person to be around rn
# ::tokens ["I", "hope", "she", "relise", "he", "'s", "probably", "the", "worst", "person", "to", "be", "around", "rn"]
# ::lemmas ["i", "hope", "she", "relise", "he", "be", "probably", "the", "bad", "person", "to", "be", "around", "rn"]
(c4-7 / hope-01
      :ARG0 (c4-10 / i)
      :ARG1 (c4-4 / relise-01
                  :ARG0 (c4-3 / she)
                  :ARG1 (c4-8 / probable
                              :domain (c4-0 / bad-07
                                            :ARG1 (c4-2 / person
                                                        :domain (c4-9 / he))
                                            :ARG2-of (c4-6 / have-degree-91
                                                           :ARG1 c4-2
                                                           :ARG3 (c4-1 / most)
                                                           :ARG5 (c4-11 / person
                                                                        :location (c4-5 / around)))))))

# ::snt No sis stop right there
# ::tokens ["No", "sis", "stop", "right", "there"]
# ::lemmas ["no", "sis", "stop", "right", "there"]
(c5-3 / stop-01
      :ARG0 (c5-1 / you)
      :location (c5-2 / there
                      :mod (c5-0 / right))
      :polarity -
      :mode imperative)

# ::snt Is that why she dyed her hair pink? To satisfy his Kylie obsession?
# ::tokens ["Is", "that", "why", "she", "dyed", "her", "hair", "pink", "?", "To", "satisfy", "his", "Kylie", "obsession", "?"]
# ::lemmas ["be", "that", "why", "she", "dye", "her", "hair", "pink", "?", "to", "satisfy", "his", "Kylie", "obsession", "?"]
(c6-2 / multi-sentence
      :snt1 (c6-9 / cause-01
                  :ARG0 (c6-12 / that)
                  :ARG1 (c6-13 / dye-01
                               :ARG0 (c6-4 / she
                                           :part (c6-7 / hair
                                                       :ARG1-of c6-13))
                               :ARG2 (c6-8 / pink-04))
                  :polarity (c6-6 / amr-unknown))
      :snt2 (c6-0 / satisfy-01
                  :ARG0 (c6-10 / he)
                  :ARG1 (c6-1 / obsess-01
                              :ARG0 (c6-3 / person
                                          :name (c6-5 / name
                                                      :op1 "Kylie"))
                              :ARG1 c6-10)
                  :polarity (c6-11 / amr-unknown)))

# ::snt Nooooo......
# ::tokens ["Nooooo", "......"]
# ::lemmas ["Nooooo", "......"]
(c7-0 / no)

# ::snt Nooooooo no girl, NO!
# ::tokens ["Nooooooo", "no", "girl", ",", "NO", "!"]
# ::lemmas ["Nooooooo", "no", "girl", ",", "no", "!"]
(c8-3 / and
      :op1 (c8-0 / girl
                 :mod (c8-2 / no)
                 :polarity -)
      :op2 (c8-1 / no))

# ::snt He has a thing for butt implants
# ::tokens ["He", "has", "a", "thing", "for", "butt", "implants"]
# ::lemmas ["he", "have", "a", "thing", "for", "butt", "implant"]
(c9-1 / have-03
      :ARG0 (c9-2 / he)
      :ARG1 (c9-4 / thing
                  :topic (c9-3 / implant-01
                               :ARG1 (c9-0 / butt))))

# ::snt Who?
# ::tokens ["Who", "?"]
# ::lemmas ["who", "?"]
(c10-0 / amr-unknown)

# ::snt needs her head examined if she is going to hook up with Tyga. Haven't you learned your lesson on bad boys?
# ::tokens ["needs", "her", "head", "examined", "if", "she", "is", "going", "to", "hook", "up", "with", "Tyga", ".", "Have", "n't", "you", "learned", "your", "lesson", "on", "bad", "boys", "?"]
# ::lemmas ["need", "her", "head", "examine", "if", "she", "be", "go", "to", "hook", "up", "with", "tyga", ".", "have", "not", "you", "learn", "your", "lesson", "on", "bad", "boy", "?"]
(c13-3 / multi-sentence
       :snt1 (c13-2 / need-01
                    :ARG0 (c13-4 / she
                                 :part (c13-7 / head))
                    :ARG1 (c13-6 / examine-01
                                 :ARG1 c13-7)
                    :condition (c13-12 / hook-up-02
                                       :ARG0 c13-4
                                       :ARG1 (c13-8 / person
                                                    :name (c13-9 / name
                                                                 :op1 "Tyga"))))
       :snt2 (c13-10 / learn-01
                     :ARG0 (c13-1 / you)
                     :ARG1 (c13-13 / lesson
                                   :topic (c13-0 / boy
                                                 :ARG1-of (c13-11 / bad-07)))
                     :ARG1-of (c13-5 / request-confirmation-91)))
