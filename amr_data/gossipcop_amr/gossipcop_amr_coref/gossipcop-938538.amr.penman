# ::snt U need to quit Kevin. a month is plenty. Quit being so greedy.
# ::tokens ["U", "need", "to", "quit", "Kevin", ".", "a", "month", "is", "plenty", ".", "Quit", "being", "so", "greedy", "."]
# ::lemmas ["u", "need", "to", "quit", "Kevin", ".", "a", "month", "be", "plenty", ".", "quit", "be", "so", "greedy", "."]
(c1-2 / multi-sentence
      :snt1 (c1-1 / need-01
                  :ARG0 (c1-0 / you)
                  :ARG1 (c1-10 / quit-01
                               :ARG0 c1-0
                               :ARG1 (c1-7 / person
                                           :name (c1-6 / name
                                                       :op1 "Kevin"))))
      :snt2 (c1-3 / plenty
                  :domain (c1-11 / temporal-quantity
                                 :unit (c1-8 / month)
                                 :quant 1))
      :snt3 (c1-9 / quit-01
                  :ARG0 (c1-12 / you)
                  :ARG1 (c1-4 / greedy
                              :domain c1-12
                              :degree (c1-5 / so))
                  :mode imperative))

# ::snt Doesnt matter HOW much she has..she isnt responsible for his other and his wife.
# ::tokens ["Does", "nt", "matter", "HOW", "much", "she", "has", "..", "she", "is", "nt", "responsible", "for", "his", "other", "and", "his", "wife", "."]
# ::lemmas ["do", "not", "matter", "how", "much", "she", "have", "..", "she", "be", "not", "responsible", "for", "his", "other", "and", "his", "wife", "."]
(c2-2 / multi-sentence
      :snt1 (c2-8 / matter-01
                  :ARG1 (c2-14 / thing
                               :quant-of (c2-4 / she))
                  :polarity -)
      :snt2 (c2-5 / responsible-03
                  :ARG0 (c2-0 / she)
                  :ARG1 (c2-6 / and
                              :op1 (c2-9 / person
                                         :mod (c2-1 / other)
                                         :ARG1-of (c2-10 / have-rel-role-91
                                                         :ARG0 (c2-13 / he)
                                                         :ARG2 (c2-12 / wife)))
                              :op2 (c2-3 / person
                                         :ARG0-of (c2-7 / have-rel-role-91
                                                        :ARG1 c2-13
                                                        :ARG2 (c2-11 / wife))))
                  :polarity -))

# ::snt Her k should be spent on HER kids with him...not help support his current wife and other kids. She pays her part, not her fault he continued spawning. How many does he have? or ? She isnt responsible for the upkeep of four additional kids plus adults.
# ::tokens ["Her", "k", "should", "be", "spent", "on", "HER", "kids", "with", "him", "...", "not", "help", "support", "his", "current", "wife", "and", "other", "kids", ".", "She", "pays", "her", "part", ",", "not", "her", "fault", "he", "continued", "spawning", ".", "How", "many", "does", "he", "have", "?", "or", "?", "She", "is", "nt", "responsible", "for", "the", "upkeep", "of", "four", "additional", "kids", "plus", "adults", "."]
# ::lemmas ["her", "k", "should", "be", "spend", "on", "her", "kid", "with", "he", "...", "not", "help", "support", "his", "current", "wife", "and", "other", "kid", ".", "she", "pay", "her", "part", ",", "not", "her", "fault", "he", "continue", "spawn", ".", "how", "many", "do", "he", "have", "?", "or", "?", "she", "be", "not", "responsible", "for", "the", "upkeep", "of", "four", "additional", "kid", "plus", "adult", "."]
(c3-21 / multi-sentence
       :snt1 (c3-33 / instead-of-91
                    :ARG1 (c3-0 / spend-01
                                :ARG1 (c3-11 / k)
                                :ARG3 (c3-30 / person
                                             :ARG0-of (c3-10 / have-rel-role-91
                                                             :ARG1 (c3-7 / she)
                                                             :ARG2 (c3-25 / kid))
                                             :accompanier (c3-32 / he)))
                    :ARG2 (c3-6 / spend-01
                                :ARG1 c3-11
                                :ARG3 (c3-9 / help-01
                                            :ARG1 (c3-28 / support-01
                                                         :ARG1 (c3-16 / and
                                                                      :op1 (c3-22 / person
                                                                                  :ARG0-of (c3-26 / have-rel-role-91
                                                                                                  :ARG1 (c3-12 / he)
                                                                                                  :ARG2 (c3-31 / wife))
                                                                                  :time (c3-24 / current))
                                                                      :op2 (c3-5 / kid
                                                                                 :mod (c3-8 / other)))))
                                :polarity -)
                    :snt2 (c3-17 / contrast-01
                                 :ARG1 (c3-4 / pay-01
                                             :ARG0 (c3-1 / she)
                                             :ARG1 (c3-2 / part))
                                 :ARG2 (c3-27 / fault-01
                                              :ARG1 c3-1
                                              :ARG2 (c3-3 / continue-01
                                                          :ARG0 c3-12
                                                          :ARG1 (c3-20 / spawn-01
                                                                       :ARG0 c3-12))
                                              :polarity -))
                    :snt3 (c3-18 / or
                                 :op2 (c3-29 / responsible-01
                                             :ARG0 (c3-23 / she)
                                             :ARG1 (c3-13 / maintain-01
                                                          :ARG1 (c3-19 / kid
                                                                       :mod (c3-15 / additional)
                                                                       :ARG2-of (c3-14 / add-02
                                                                                       :ARG1 (c3-34 / adult))
                                                                       :quant 4))
                                             :polarity -))))

# ::snt Kevin could move in with that -year old dude still living in his parents house.
# ::tokens ["Kevin", "could", "move", "in", "with", "that", "-year", "old", "dude", "still", "living", "in", "his", "parents", "house", "."]
# ::lemmas ["Kevin", "could", "move", "in", "with", "that", "-year", "old", "dude", "still", "live", "in", "his", "parent", "house", "."]
(c4-6 / possible-01
      :ARG1 (c4-1 / move-01
                  :ARG1 (c4-3 / person
                              :name (c4-2 / name
                                          :op1 "Kevin"))
                  :ARG2 (c4-5 / house
                              :poss (c4-11 / person
                                           :ARG0-of (c4-9 / have-rel-role-91
                                                          :ARG1 c4-3
                                                          :ARG2 (c4-8 / parent))))
                  :accompanier (c4-12 / dude
                                      :age (c4-10 / temporal-quantity
                                                  :unit (c4-0 / year)
                                                  :quant 1)
                                      :ARG0-of (c4-7 / live-01
                                                     :location c4-5
                                                     :mod (c4-4 / still))
                                      :mod (c4-13 / that))))

# ::snt TRASH! Drag him for filth
# ::tokens ["TRASH", "!", "Drag", "him", "for", "filth"]
# ::lemmas ["trash", "!", "drag", "he", "for", "filth"]
(c5-2 / multi-sentence
      :snt1 (c5-5 / trash-01)
      :snt2 (c5-6 / drag-01
                  :ARG0 (c5-1 / you)
                  :ARG1 (c5-3 / he)
                  :ARG1-of (c5-4 / cause-01
                                 :ARG0 (c5-0 / filth))
                  :mode imperative))

# ::snt shoot, I'd glady live off a month. That's what i make in months. (beofre taxes). Stop being greedy.
# ::tokens ["shoot", ",", "I", "'d", "glady", "live", "off", "a", "month", ".", "That", "'s", "what", "i", "make", "in", "months", ".", "(", "beofre", "taxes", ")", ".", "Stop", "being", "greedy", "."]
# ::lemmas ["shoot", ",", "i", "would", "glady", "live", "off", "a", "month", ".", "that", "be", "what", "i", "make", "in", "months", ".", "(", "beofre", "taxis", ")", ".", "stop", "be", "greedy", "."]
(c6-10 / multi-sentence
       :snt1 (c6-2 / live-off-04
                   :ARG0 (c6-17 / i)
                   :duration (c6-7 / temporal-quantity
                                   :unit (c6-5 / month)
                                   :quant 1)
                   :mod (c6-6 / hey
                              :mode expressive))
       :snt2 (c6-14 / make-05
                    :ARG0 (c6-4 / i)
                    :ARG1 (c6-12 / thing
                                 :mod (c6-18 / that))
                    :duration (c6-11 / multiple
                                     :op1 (c6-1 / temporal-quantity
                                                :unit (c6-13 / month)
                                                :quant 1))
                    :ARG1-of (c6-15 / mean-01
                                    :ARG2 (c6-8 / tax-01
                                                :ARG1-of (c6-16 / reasonable-02))))
       :snt3 (c6-0 / stop-01
                   :ARG0 (c6-3 / you)
                   :ARG1 (c6-9 / greedy
                               :domain c6-3)
                   :mode imperative))

# ::snt Damn homie relax
# ::tokens ["Damn", "homie", "relax"]
# ::lemmas ["Damn", "homie", "relax"]
(c7-0 / relax-01
      :ARG1 (c7-1 / homie)
      :mod (c7-2 / damn))

# ::snt Good for him.
# ::tokens ["Good", "for", "him", "."]
# ::lemmas ["good", "for", "he", "."]
(c8-0 / good-04
      :ARG2 (c8-1 / he))

# ::snt Get a job!
# ::tokens ["Get", "a", "job", "!"]
# ::lemmas ["get", "a", "job", "!"]
(c9-0 / get-01
      :ARG0 (c9-1 / you)
      :ARG1 (c9-2 / job)
      :mode imperative)

# ::snt Playing the game
# ::tokens ["Playing", "the", "game"]
# ::lemmas ["play", "the", "game"]
(c10-1 / play-01
       :ARG1 (c10-0 / game))

# ::snt Yaaaaasssss king!
# ::tokens ["Yaaaaasssss", "king", "!"]
# ::lemmas ["Yaaaaasssss", "king", "!"]
(c11-1 / person
       :ARG0-of (c11-0 / have-org-role-91
                       :ARG2 (c11-3 / king))
       :mod (c11-2 / yaaaaass
                   :mode expressive)
       :mode expressive)

# ::snt This is stealing
# ::tokens ["This", "is", "stealing"]
# ::lemmas ["this", "be", "steal"]
(c12-1 / steal-01
       :ARG1 (c12-0 / this))

# ::snt Ill bet he does, get a job!! He wants her to take care of the rest of his kids &amp; party money for His Vegas Trips.
# ::tokens ["Ill", "bet", "he", "does", ",", "get", "a", "job", "!", "!", "He", "wants", "her", "to", "take", "care", "of", "the", "rest", "of", "his", "kids", "&", "amp", ";", "party", "money", "for", "His", "Vegas", "Trips", "."]
# ::lemmas ["Ill", "bet", "he", "do", ",", "get", "a", "job", "!", "!", "he", "want", "she", "to", "take", "care", "of", "the", "rest", "of", "his", "kid", "&", "amp", ";", "party", "money", "for", "his", "Vegas", "Trips", "."]
(c13-14 / multi-sentence
        :snt1 (c13-13 / bet-01
                      :ARG0 (c13-23 / i)
                      :ARG2 (c13-10 / get-01
                                    :ARG0 (c13-3 / he)
                                    :ARG1 (c13-7 / job)))
        :snt2 (c13-21 / want-01
                      :ARG0 (c13-22 / he)
                      :ARG1 (c13-9 / and
                                   :op1 (c13-16 / care-03
                                                :ARG0 (c13-0 / she)
                                                :ARG1 (c13-8 / and
                                                             :op1 (c13-20 / person
                                                                          :ARG0-of (c13-2 / have-rel-role-91
                                                                                          :ARG1 c13-22
                                                                                          :ARG2 (c13-4 / kid)))
                                                             :op2 (c13-15 / person
                                                                          :ARG0-of (c13-17 / have-rel-role-91
                                                                                           :ARG1 c13-22
                                                                                           :ARG2 (c13-6 / amp)))
                                                             :mod (c13-19 / rest)))
                                   :op2 (c13-5 / money
                                               :purpose (c13-11 / trip-03
                                                                :ARG0 c13-22
                                                                :location (c13-12 / city
                                                                                  :name (c13-18 / name
                                                                                                :op1 "Vegas")))
                                               :mod (c13-1 / party)))))

# ::snt Really Kevin, why don't u just make ur own money. I just think ur being greedy.
# ::tokens ["Really", "Kevin", ",", "why", "do", "n't", "u", "just", "make", "ur", "own", "money", ".", "I", "just", "think", "ur", "being", "greedy", "."]
# ::lemmas ["really", "Kevin", ",", "why", "do", "not", "u", "just", "make", "ur", "own", "money", ".", "i", "just", "think", "ur", "be", "greedy", "."]
(c14-1 / multi-sentence
       :snt1 (c14-3 / say-01
                    :ARG0 (c14-12 / i)
                    :ARG1 (c14-10 / cause-01
                                  :ARG0 (c14-13 / amr-unknown)
                                  :ARG1 (c14-7 / make-05
                                               :ARG0 (c14-8 / person
                                                            :name (c14-2 / name
                                                                         :op1 "Kevin"))
                                               :ARG1 (c14-15 / money
                                                             :poss c14-8)
                                               :mod (c14-11 / just)
                                               :polarity -)
                                  :ARG1-of (c14-5 / real-04))
                    :ARG2 c14-8)
       :snt2 (c14-14 / think-01
                     :ARG0 (c14-4 / i)
                     :ARG1 (c14-6 / greedy
                                  :domain (c14-0 / you))
                     :mod (c14-9 / just)))
