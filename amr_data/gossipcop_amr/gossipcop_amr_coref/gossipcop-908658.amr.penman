# ::snt Cheaters are trash. He should feel miserable. As for his ex, I wish her nothing but the absolute best! She does deserve so much better than that
# ::tokens ["Cheaters", "are", "trash", ".", "He", "should", "feel", "miserable", ".", "As", "for", "his", "ex", ",", "I", "wish", "her", "nothing", "but", "the", "absolute", "best", "!", "She", "does", "deserve", "so", "much", "better", "than", "that"]
# ::lemmas ["cheater", "be", "trash", ".", "he", "should", "feel", "miserable", ".", "as", "for", "his", "ex", ",", "i", "wish", "she", "nothing", "but", "the", "absolute", "good", "!", "she", "do", "deserve", "so", "much", "well", "than", "that"]
(c1-10 / multi-sentence
       :snt1 (c1-8 / trash
                   :domain (c1-22 / person
                                  :ARG0-of (c1-13 / cheat-01)))
       :snt2 (c1-20 / recommend-01
                    :ARG1 (c1-18 / feel-01
                                 :ARG0 (c1-4 / he)
                                 :ARG1 (c1-5 / miserable)))
       :snt3 (c1-23 / wish-01
                    :ARG0 (c1-25 / i)
                    :ARG1 (c1-14 / thing
                                 :ARG1-of (c1-24 / have-degree-91
                                                 :ARG2 (c1-9 / good-02
                                                             :ARG1 c1-14)
                                                 :ARG3 (c1-16 / most
                                                              :mod (c1-7 / absolute))))
                    :ARG2 (c1-11 / person
                                 :ARG0-of (c1-3 / have-rel-role-91
                                                :ARG1 (c1-0 / she)
                                                :ARG2 (c1-2 / significant-other)
                                                :time (c1-21 / ex)))
                    :mod (c1-19 / nothing-but)
                    :ARG1-of (c1-15 / have-degree-91
                                    :ARG2 c1-9
                                    :ARG1 c1-14)
                    :ARG3 c1-16)
       :snt4 (c1-27 / deserve-01
                    :ARG0 c1-0
                    :ARG1 c1-14
                    :ARG1-of (c1-6 / have-degree-91
                                   :ARG2 c1-9
                                   :ARG3 (c1-12 / more
                                                :quant (c1-17 / much
                                                              :degree (c1-1 / so)))
                                   :ARG4 (c1-26 / that))))

# ::snt Good. Karma is a bitch huh?
# ::tokens ["Good", ".", "Karma", "is", "a", "bitch", "huh", "?"]
# ::lemmas ["good", ".", "Karma", "be", "a", "bitch", "huh", "?"]
(c2-1 / multi-sentence
      :snt1 (c2-5 / good-02)
      :snt2 (c2-0 / bitch
                  :domain (c2-4 / person
                                :name (c2-2 / name
                                            :op1 "Karma"))
                  :ARG1-of (c2-3 / request-confirmation-91)))

# ::snt He's only miserable because he got called out. He doesn't like the backlash.
# ::tokens ["He", "'s", "only", "miserable", "because", "he", "got", "called", "out", ".", "He", "does", "n't", "like", "the", "backlash", "."]
# ::lemmas ["he", "be", "only", "miserable", "because", "he", "got", "call", "out", ".", "he", "do", "not", "like", "the", "backlash", "."]
(c3-2 / multi-sentence
      :snt1 (c3-3 / miserable
                  :domain (c3-4 / he)
                  :mod (c3-0 / only)
                  :ARG1-of (c3-5 / cause-01
                                 :ARG0 (c3-8 / call-out-15
                                             :ARG1 c3-4)))
      :snt2 (c3-7 / dislike-01
                  :ARG0 (c3-6 / he)
                  :ARG1 (c3-1 / backlash-01)))

# ::snt Good
# ::tokens ["Good"]
# ::lemmas ["good"]
(c4-0 / good-02)

# ::snt Good should he feel any other way, I THINK NOT
# ::tokens ["Good", "should", "he", "feel", "any", "other", "way", ",", "I", "THINK", "NOT"]
# ::lemmas ["good", "should", "he", "feel", "any", "other", "way", ",", "i", "think", "not"]
(c5-7 / think-01
      :ARG0 (c5-6 / i)
      :ARG1 (c5-3 / have-polarity-91
                  :ARG1-of c5-7
                  :ARG0 c5-6
                  :ARG2 -)
      :condition (c5-0 / feel-01
                       :ARG0 (c5-5 / he)
                       :ARG1 (c5-4 / way
                                   :mod (c5-2 / any)
                                   :mod (c5-1 / other))))

# ::snt Cancell Your Cable and Get MORE with channels of live TV with all Premium Movie Channels,ALL NBA,NHL,NFL,MLB,Sport Pkgs and On Demand NEW Movies+TV shows! Get WWE,MMA PPV events included for only $20 month/No Contract!! Follow our link and get Free Trial and join Millions!!
# ::tokens ["Cancell", "Your", "Cable", "and", "Get", "MORE", "with", "channels", "of", "live", "TV", "with", "all", "Premium", "Movie", "Channels", ",", "ALL", "NBA", ",", "NHL", ",", "NFL", ",", "MLB", ",", "Sport", "Pkgs", "and", "On", "Demand", "NEW", "Movies+TV", "shows", "!", "Get", "WWE", ",", "MMA", "PPV", "events", "included", "for", "only", "$", "20", "month", "/", "No", "Contract", "!", "!", "Follow", "our", "link", "and", "get", "Free", "Trial", "and", "join", "Millions", "!", "!"]
# ::lemmas ["Cancell", "Your", "Cable", "and", "get", "more", "with", "channel", "of", "live", "tv", "with", "all", "Premium", "Movie", "Channels", ",", "all", "NBA", ",", "NHL", ",", "NFL", ",", "MLB", ",", "Sport", "Pkgs", "and", "on", "demand", "NEW", "Movies+TV", "show", "!", "get", "WWE", ",", "MMA", "PPV", "event", "include", "for", "only", "$", "20", "month", "/", "no", "Contract", "!", "!", "follow", "our", "link", "and", "get", "Free", "Trial", "and", "join", "Millions", "!", "!"]
(c6-25 / multi-sentence
       :snt1 (c6-20 / and
                    :op1 (c6-45 / downgrade-02
                                :ARG0 (c6-12 / you)
                                :ARG1 (c6-28 / cable
                                             :poss c6-12)
                                :mode imperative)
                    :op2 (c6-21 / get-01
                                :ARG0 c6-12
                                :ARG1 (c6-13 / more)
                                :ARG3 (c6-24 / channel
                                             :mod (c6-19 / television
                                                         :mod (c6-4 / live))
                                             :ARG0-of (c6-14 / have-03
                                                             :ARG1 (c6-18 / and
                                                                          :op1 (c6-6 / channel
                                                                                     :mod (c6-39 / premium)
                                                                                     :mod (c6-34 / movie))
                                                                          :op2 (c6-35 / channel
                                                                                      :mod (c6-22 / league
                                                                                                  :name (c6-37 / name
                                                                                                               :op1 "NBA")))
                                                                          :op3 (c6-10 / channel
                                                                                      :mod (c6-15 / league
                                                                                                  :name (c6-26 / name
                                                                                                               :op1 "NHL")))
                                                                          :op4 (c6-31 / league
                                                                                      :name (c6-40 / name
                                                                                                   :op1 "NFL"))
                                                                          :op5 (c6-8 / league
                                                                                     :name (c6-30 / name
                                                                                                  :op1 "MLB"))
                                                                          :op6 (c6-0 / sport
                                                                                     :name (c6-43 / name
                                                                                                  :op1 "Pkgs"))
                                                                          :op7 (c6-2 / league
                                                                                     :name (c6-38 / name
                                                                                                  :op1 "MLB"))
                                                                          :op8 c6-0
                                                                          :name (c6-3 / name
                                                                                      :op1 "Pkgs"))
                                                             :op9 (c6-9 / show-04
                                                                        :mod (c6-32 / television)
                                                                        :ARG1-of (c6-1 / new-01)
                                                                        :mod (c6-11 / on-Demand))))
                                :mode imperative))
       :snt2 (c6-16 / and
                    :op1 (c6-36 / follow-02
                                :ARG0 (c6-23 / you)
                                :ARG1 (c6-5 / link
                                            :poss (c6-42 / we))
                                :mode imperative)
                    :op2 (c6-7 / get-01
                               :ARG0 c6-23
                               :ARG1 (c6-44 / trial
                                            :ARG1-of (c6-41 / free-03))
                               :mode imperative)
                    :op3 (c6-17 / join-04
                                :ARG0 c6-23
                                :ARG1 (c6-27 / multiple
                                             :op1 (c6-33 / monetary-quantity
                                                         :unit (c6-29 / dollar)
                                                         :quant 20))
                                :mode imperative)))

# ::snt It was recorded
# ::tokens ["It", "was", "recorded"]
# ::lemmas ["it", "be", "record"]
(c8-0 / record-01
      :ARG1 (c8-1 / it))

# ::snt Suck it.
# ::tokens ["Suck", "it", "."]
# ::lemmas ["suck", "it", "."]
(c9-2 / suck-01
      :ARG0 (c9-0 / you)
      :ARG1 (c9-1 / it)
      :mode imperative)

# ::snt Oh boohoo. Dont cheat!
# ::tokens ["Oh", "boohoo", ".", "Do", "nt", "cheat", "!"]
# ::lemmas ["oh", "boohoo", ".", "do", "not", "cheat", "!"]
(c10-3 / multi-sentence
       :snt1 (c10-1 / boohoo
                    :mode expressive)
       :snt2 (c10-0 / cheat-03
                    :ARG0 (c10-2 / you)
                    :polarity -
                    :mode imperative))

# ::snt Shouldnt have cheated then.
# ::tokens ["Should", "nt", "have", "cheated", "then", "."]
# ::lemmas ["should", "not", "have", "cheat", "then", "."]
(c11-0 / recommend-01
       :ARG1 (c11-1 / cheat-03
                    :ARG0 (c11-2 / i)
                    :polarity -)
       :mod (c11-3 / then))

# ::snt I did let him come back but he really gaff to prove himself, i didn't meet the child until like months later and now i could imagine my life without him he is now years old, he is so respectful and he does call me mom.
# ::tokens ["I", "did", "let", "him", "come", "back", "but", "he", "really", "gaff", "to", "prove", "himself", ",", "i", "did", "n't", "meet", "the", "child", "until", "like", "months", "later", "and", "now", "i", "could", "imagine", "my", "life", "without", "him", "he", "is", "now", "years", "old", ",", "he", "is", "so", "respectful", "and", "he", "does", "call", "me", "mom", "."]
# ::lemmas ["i", "do", "let", "he", "come", "back", "but", "he", "really", "gaff", "to", "prove", "himself", ",", "i", "do", "not", "meet", "the", "child", "until", "like", "month", "later", "and", "now", "i", "could", "imagine", "my", "life", "without", "he", "he", "be", "now", "years", "old", ",", "he", "be", "so", "respectful", "and", "he", "do", "call", "i", "mom", "."]
(c12-21 / multi-sentence
        :snt1 (c12-25 / contrast-01
                      :ARG1 (c12-2 / let-01
                                   :ARG0 (c12-37 / i)
                                   :ARG1 (c12-19 / come-01
                                                 :ARG1 (c12-9 / he)
                                                 :ARG4 (c12-20 / back)))
                      :ARG2 (c12-16 / gaffe
                                    :degree (c12-33 / really)
                                    :domain c12-9
                                    :purpose (c12-34 / prove-01
                                                     :ARG0 c12-9
                                                     :ARG1 c12-9)))
        :snt2 (c12-15 / and
                      :op1 (c12-10 / meet-02
                                   :ARG0 (c12-7 / i)
                                   :ARG1 (c12-3 / child)
                                   :time (c12-29 / until
                                                 :op1 (c12-13 / after
                                                              :quant (c12-17 / like
                                                                             :op1 (c12-28 / multiple
                                                                                          :op1 (c12-14 / temporal-quantity
                                                                                                       :unit (c12-24 / month)
                                                                                                       :quant 1)))))
                                   :op2 (c12-22 / possible-01
                                                :ARG1 (c12-18 / imagine-01
                                                              :ARG0 c12-7
                                                              :ARG1 (c12-11 / life
                                                                            :poss c12-7
                                                                            :manner (c12-12 / accompany-01
                                                                                            :ARG0 (c12-36 / he)
                                                                                            :ARG1 c12-7
                                                                                            :polarity -)))
                                                :time (c12-32 / now))
                                   :polarity -)
                      :snt3 (c12-38 / age-01
                                    :ARG1 (c12-8 / he)
                                    :ARG2 (c12-26 / temporal-quantity
                                                  :unit (c12-6 / year)
                                                  :quant 1)
                                    :time (c12-23 / now))
                      :snt4 (c12-35 / and
                                    :op1 (c12-5 / respect-01
                                                :ARG0 c12-8
                                                :degree (c12-1 / so))
                                    :op2 (c12-31 / call-01
                                                 :ARG0 c12-8
                                                 :ARG1 (c12-0 / i)
                                                 :ARG2 (c12-4 / person
                                                              :ARG0-of (c12-27 / have-rel-role-91
                                                                               :ARG1 c12-0
                                                                               :ARG2 (c12-30 / mom)))))))

# ::snt My husband cheated on me, he's says he didn't because we were (separated)But we're still married w weren't divorced so i say it was cheating any how he had a child with this person. We then stayed separated for more months, after months he asked to come back into pout home
# ::tokens ["My", "husband", "cheated", "on", "me", ",", "he", "'s", "says", "he", "did", "n't", "because", "we", "were", "(", "separated)But", "we", "'re", "still", "married", "w", "were", "n't", "divorced", "so", "i", "say", "it", "was", "cheating", "any", "how", "he", "had", "a", "child", "with", "this", "person", ".", "We", "then", "stayed", "separated", "for", "more", "months", ",", "after", "months", "he", "asked", "to", "come", "back", "into", "pout", "home"]
# ::lemmas ["my", "husband", "cheat", "on", "i", ",", "he", "be", "say", "he", "do", "not", "because", "we", "be", "(", "separated)but", "we", "be", "still", "marry", "w", "be", "not", "divorce", "so", "i", "say", "it", "be", "cheat", "any", "how", "he", "have", "a", "child", "with", "this", "person", ".", "we", "then", "stay", "separate", "for", "more", "months", ",", "after", "months", "he", "ask", "to", "come", "back", "into", "pout", "home"]
(c13-23 / multi-sentence
        :snt1 (c13-27 / cheat-03
                      :ARG0 (c13-36 / person
                                    :ARG0-of (c13-11 / have-rel-role-91
                                                     :ARG1 (c13-39 / i)
                                                     :ARG2 (c13-38 / husband)))
                      :ARG1 c13-39
                      :concession (c13-0 / say-01
                                         :ARG0 c13-36
                                         :ARG1 (c13-20 / cheat-03
                                                       :ARG0 c13-36
                                                       :ARG1 c13-39
                                                       :ARG1-of (c13-3 / cause-01
                                                                       :ARG0 (c13-7 / separate-01
                                                                                    :ARG1 c13-39
                                                                                    :ARG2 c13-36))
                                                       :polarity -)))
        :snt2 (c13-34 / contrast-01
                      :ARG1 (c13-12 / marry-01
                                    :ARG1 (c13-37 / we)
                                    :mod (c13-6 / still))
                      :ARG2 (c13-41 / divorce-01
                                    :ARG0 (c13-9 / i)
                                    :ARG0-of (c13-8 / cause-01
                                                    :ARG1 (c13-35 / say-01
                                                                  :ARG0 c13-9
                                                                  :ARG1 (c13-28 / cheat-03
                                                                                :ARG0 (c13-10 / he)
                                                                                :ARG1 (c13-24 / person
                                                                                              :ARG0-of (c13-30 / have-rel-role-91
                                                                                                               :ARG1 c13-10
                                                                                                               :ARG2 (c13-17 / child))
                                                                                              :accompanier (c13-4 / person
                                                                                                                  :mod (c13-18 / this))))))
                                    :polarity -))
        :snt3 (c13-19 / and
                      :op1 (c13-1 / stay-01
                                  :ARG1 (c13-22 / separate-01
                                                :ARG1 (c13-2 / we))
                                  :duration (c13-31 / multiple
                                                    :op1 (c13-29 / temporal-quantity
                                                                 :unit (c13-26 / month)
                                                                 :quant 1)
                                                    :mod (c13-32 / more)))
                      :op2 (c13-16 / ask-02
                                   :ARG0 (c13-13 / he)
                                   :ARG1 (c13-5 / come-01
                                                :ARG1 c13-13
                                                :ARG4 (c13-14 / home)
                                                :direction (c13-21 / back))
                                   :time (c13-15 / after
                                                 :op1 (c13-33 / multiple
                                                              :op1 (c13-40 / temporal-quantity
                                                                           :unit (c13-25 / month)
                                                                           :quant 1))))))

# ::snt Don't care if they are miserable or not, just so long as they are gone!
# ::tokens ["Do", "n't", "care", "if", "they", "are", "miserable", "or", "not", ",", "just", "so", "long", "as", "they", "are", "gone", "!"]
# ::lemmas ["do", "not", "care", "if", "they", "be", "miserable", "or", "not", ",", "just", "so", "long", "as", "they", "be", "go", "!"]
(c14-3 / care-01
       :ARG0 (c14-5 / i)
       :ARG1 (c14-0 / or
                    :op1 (c14-1 / miserable
                                :domain (c14-6 / they))
                    :op2 (c14-2 / miserable
                                :domain c14-6
                                :polarity -))
       :condition (c14-7 / go-02
                         :ARG0 c14-6)
       :mod (c14-4 / just)
       :polarity -)

# ::snt Yeap
# ::tokens ["Yeap"]
# ::lemmas ["yeap"]
(c15-0 / yap
       :mode expressive)

# ::snt i have had my ex cheated on me i dont want him to be miserable but i wouldnt want to be around him either i wish him all the happiness but just wont be with me
# ::tokens ["i", "have", "had", "my", "ex", "cheated", "on", "me", "i", "do", "nt", "want", "him", "to", "be", "miserable", "but", "i", "would", "nt", "want", "to", "be", "around", "him", "either", "i", "wish", "him", "all", "the", "happiness", "but", "just", "wo", "nt", "be", "with", "me"]
# ::lemmas ["i", "have", "have", "my", "ex", "cheat", "on", "i", "i", "do", "not", "want", "he", "to", "be", "miserable", "but", "i", "would", "not", "want", "to", "be", "around", "he", "either", "i", "wish", "he", "all", "the", "happiness", "but", "just", "will", "not", "be", "with", "i"]
(c16-14 / multi-sentence
        :snt1 (c16-15 / cheat-03
                      :ARG0 (c16-18 / person
                                    :ARG0-of (c16-6 / have-rel-role-91
                                                    :ARG1 (c16-21 / i)
                                                    :ARG2 (c16-0 / significant-other)
                                                    :time (c16-17 / ex)))
                      :ARG1 c16-21)
        :snt2 (c16-12 / contrast-01
                      :ARG1 (c16-19 / want-01
                                    :ARG0 (c16-4 / i)
                                    :ARG1 (c16-7 / miserable
                                                 :domain (c16-20 / he))
                                    :polarity -)
                      :ARG2 (c16-2 / want-01
                                   :ARG0 c16-4
                                   :ARG1 (c16-13 / be-located-at-91
                                                 :ARG1 c16-4
                                                 :ARG2 (c16-10 / around
                                                               :op1 c16-20))
                                   :polarity -))
        :snt3 (c16-3 / contrast-01
                     :ARG1 (c16-16 / wish-01
                                   :ARG0 (c16-11 / i)
                                   :ARG1 (c16-5 / happiness
                                                :mod (c16-9 / all))
                                   :ARG2 c16-20)
                     :ARG2 (c16-1 / be-with-10
                                  :ARG0 c16-20
                                  :ARG1 c16-11
                                  :mod (c16-8 / just)
                                  :polarity -)))

# ::snt By calling women hos and bitches if your MAN cheated on you, arent you giving men a pass as they arent to blame. What happened to and making men accontable for their acctions.
# ::tokens ["By", "calling", "women", "hos", "and", "bitches", "if", "your", "MAN", "cheated", "on", "you", ",", "are", "nt", "you", "giving", "men", "a", "pass", "as", "they", "are", "nt", "to", "blame", ".", "What", "happened", "to", "and", "making", "men", "accontable", "for", "their", "acctions", "."]
# ::lemmas ["by", "call", "woman", "hos", "and", "bitch", "if", "your", "man", "cheat", "on", "you", ",", "be", "not", "you", "give", "man", "a", "pass", "as", "they", "be", "not", "to", "blame", ".", "what", "happen", "to", "and", "make", "man", "accontable", "for", "their", "acction", "."]
(c17-11 / multi-sentence
        :snt1 (c17-14 / cause-01
                      :ARG0 (c17-9 / call-01
                                   :ARG0 (c17-2 / you)
                                   :ARG1 (c17-20 / woman)
                                   :ARG2 (c17-7 / and
                                                :op1 (c17-3 / hoo)
                                                :op2 (c17-10 / bitch))
                                   :condition (c17-1 / cheat-03
                                                     :ARG0 (c17-4 / man
                                                                  :poss c17-2)
                                                     :ARG1 c17-2))
                      :ARG1 (c17-8 / give-01
                                   :ARG0 c17-2
                                   :ARG1 (c17-19 / pass)
                                   :ARG2 (c17-16 / man)
                                   :ARG1-of (c17-17 / cause-01
                                                    :ARG0 (c17-0 / blame-01
                                                                 :ARG1 c17-16
                                                                 :polarity -))
                                   :polarity -))
        :snt2 (c17-6 / and
                     :op1 (c17-18 / event
                                  :mod (c17-5 / amr-unknown))
                     :op2 (c17-13 / make-02
                                  :ARG1 (c17-12 / possible-01
                                                :ARG1 (c17-22 / avoid-01
                                                              :ARG0 (c17-15 / man)
                                                              :ARG1 (c17-21 / action
                                                                            :poss c17-15))
                                                :polarity -))))

# ::snt No Adventures they're going to do something stupid, to somebody else the same way.
# ::tokens ["No", "Adventures", "they", "'re", "going", "to", "do", "something", "stupid", ",", "to", "somebody", "else", "the", "same", "way", "."]
# ::lemmas ["no", "adventure", "they", "be", "go", "to", "do", "something", "stupid", ",", "to", "somebody", "else", "the", "same", "way", "."]
(c18-7 / do-02
       :ARG0 (c18-6 / they)
       :ARG1 (c18-1 / something
                    :mod (c18-0 / stupid))
       :ARG3 (c18-8 / somebody
                    :mod (c18-4 / else))
       :manner (c18-5 / way
                      :ARG1-of (c18-2 / same-01))
       :time (c18-3 / adventure
                    :polarity -))

# ::snt People Do What They Can Live With...My Success would be the Best Revenge
# ::tokens ["People", "Do", "What", "They", "Can", "Live", "With", "...", "My", "Success", "would", "be", "the", "Best", "Revenge"]
# ::lemmas ["people", "do", "what", "they", "can", "live", "with", "...", "my", "Success", "would", "be", "the", "Best", "Revenge"]
(c19-0 / multi-sentence
       :snt1 (c19-11 / do-02
                     :ARG0 (c19-6 / person)
                     :ARG1 (c19-9 / thing
                                  :ARG1-of (c19-5 / live-02
                                                  :ARG0 c19-6
                                                  :ARG1-of (c19-1 / possible-01))))
       :snt2 (c19-3 / revenge
                    :domain (c19-2 / succeed-01
                                   :ARG0 (c19-8 / i))
                    :ARG1-of (c19-4 / have-degree-91
                                    :ARG2 (c19-10 / good-02
                                                  :ARG1 c19-3)
                                    :ARG3 (c19-7 / most))))

# ::snt Is not up to us to make anyone miserable
# ::tokens ["Is", "not", "up", "to", "us", "to", "make", "anyone", "miserable"]
# ::lemmas ["be", "not", "up", "to", "we", "to", "make", "anyone", "miserable"]
(c20-4 / depend-01
       :ARG0 (c20-0 / make-02
                    :ARG0 (c20-2 / we)
                    :ARG1 (c20-1 / miserable
                                 :domain (c20-3 / anyone)))
       :ARG1 c20-2
       :polarity -)

# ::snt Hell Yes, feel as bad as I do so you will understand my pain.
# ::tokens ["Hell", "Yes", ",", "feel", "as", "bad", "as", "I", "do", "so", "you", "will", "understand", "my", "pain", "."]
# ::lemmas ["hell", "yes", ",", "feel", "as", "bad", "as", "i", "do", "so", "you", "will", "understand", "my", "pain", "."]
(c21-0 / feel-01
       :ARG0 (c21-2 / you)
       :ARG1 (c21-1 / bad-07
                    :ARG2-of (c21-4 / have-degree-91
                                    :ARG1 c21-2
                                    :ARG3 (c21-3 / equal)
                                    :ARG4 (c21-6 / feel-01
                                                 :ARG0 (c21-9 / i))))
       :ARG0-of (c21-7 / cause-01
                       :ARG1 (c21-10 / understand-01
                                     :ARG0 c21-2
                                     :ARG1 (c21-5 / pain-01
                                                  :ARG1 c21-9)))
       :mod (c21-8 / hell
                   :mode expressive)
       :mode imperative)

# ::snt Yes but only for as long as I am miserable and hurt. lol. I would eventually hope they would find happiness while at the same time realizing what they have lost.
# ::tokens ["Yes", "but", "only", "for", "as", "long", "as", "I", "am", "miserable", "and", "hurt", ".", "lol", ".", "I", "would", "eventually", "hope", "they", "would", "find", "happiness", "while", "at", "the", "same", "time", "realizing", "what", "they", "have", "lost", "."]
# ::lemmas ["yes", "but", "only", "for", "as", "long", "as", "i", "be", "miserable", "and", "hurt", ".", "lol", ".", "i", "would", "eventually", "hope", "they", "would", "find", "happiness", "while", "at", "the", "same", "time", "realize", "what", "they", "have", "lose", "."]
(c22-12 / multi-sentence
        :snt1 (c22-13 / contrast-01
                      :ARG1 (c22-3 / yes)
                      :ARG2 (c22-5 / have-condition-91
                                   :ARG2 (c22-10 / as-long-as
                                                 :op1 (c22-8 / and
                                                             :op1 (c22-6 / miserable
                                                                         :domain (c22-20 / i))
                                                             :op2 (c22-19 / hurt-01
                                                                          :ARG1 c22-20)))
                                   :mod (c22-2 / only)))
        :snt2 (c22-4 / hope-01
                     :ARG0 c22-20)
        :ARG1 (c22-16 / find-01
                      :ARG0 (c22-9 / they)
                      :ARG1 (c22-15 / happy-01)
                      :time (c22-18 / eventual)
                      :time (c22-17 / realize-01
                                    :ARG0 c22-9
                                    :ARG1 (c22-14 / thing
                                                  :ARG1-of (c22-1 / lose-02
                                                                  :ARG0 c22-9))
                                    :time (c22-21 / time
                                                  :ARG1-of (c22-0 / same-01))))
        :ARG2-of (c22-11 / laugh-01
                         :ARG0 c22-20
                         :manner (c22-7 / loud)
                         :mode expressive))

# ::snt Yes! He wasnt concerned about making his girlfriend miserable! He only cares about himself
# ::tokens ["Yes", "!", "He", "was", "nt", "concerned", "about", "making", "his", "girlfriend", "miserable", "!", "He", "only", "cares", "about", "himself"]
# ::lemmas ["yes", "!", "he", "be", "not", "concerned", "about", "make", "his", "girlfriend", "miserable", "!", "he", "only", "care", "about", "himself"]
(c23-2 / multi-sentence
       :snt1 (c23-1 / yes
                    :mode expressive)
       :snt2 (c23-7 / concern-01
                    :ARG0 (c23-4 / make-02
                                 :ARG0 (c23-5 / he)
                                 :ARG1 (c23-10 / miserable
                                               :domain (c23-6 / person
                                                              :ARG0-of (c23-8 / have-rel-role-91
                                                                              :ARG1 c23-5
                                                                              :ARG2 (c23-9 / girlfriend)))))
                    :ARG1 c23-5
                    :polarity -)
       :snt3 (c23-11 / care-01
                     :ARG0 (c23-3 / he
                                  :ARG1-of c23-11)
                     :mod (c23-0 / only)))

# ::snt I dont want to make them miserable. I want them to accept responsibility for their actions
# ::tokens ["I", "do", "nt", "want", "to", "make", "them", "miserable", ".", "I", "want", "them", "to", "accept", "responsibility", "for", "their", "actions"]
# ::lemmas ["i", "do", "not", "want", "to", "make", "they", "miserable", ".", "i", "want", "they", "to", "accept", "responsibility", "for", "their", "action"]
(c24-0 / multi-sentence
       :snt1 (c24-6 / want-01
                    :ARG0 (c24-7 / i)
                    :ARG1 (c24-4 / make-02
                                 :ARG0 c24-7
                                 :ARG1 (c24-10 / miserable
                                               :domain (c24-8 / they)))
                    :polarity -)
       :snt2 (c24-5 / want-01
                    :ARG0 (c24-1 / i)
                    :ARG1 (c24-2 / accept-01
                                 :ARG0 (c24-11 / they)
                                 :ARG1 (c24-3 / responsible-01
                                              :ARG0 c24-11
                                              :ARG1 (c24-9 / act-02
                                                           :ARG0 c24-11)))))

# ::snt Cheaters are already miserable, so no difference for them.
# ::tokens ["Cheaters", "are", "already", "miserable", ",", "so", "no", "difference", "for", "them", "."]
# ::lemmas ["cheater", "be", "already", "miserable", ",", "so", "no", "difference", "for", "they", "."]
(c25-2 / cause-01
       :ARG0 (c25-0 / miserable
                    :domain (c25-1 / person
                                   :ARG0-of (c25-5 / cheat-01))
                    :time (c25-3 / already))
       :ARG1 (c25-4 / differ-02
                    :beneficiary c25-1
                    :polarity -))

# ::snt I would want that person out of my life, no second chances, I would have no respect for them
# ::tokens ["I", "would", "want", "that", "person", "out", "of", "my", "life", ",", "no", "second", "chances", ",", "I", "would", "have", "no", "respect", "for", "them"]
# ::lemmas ["i", "would", "want", "that", "person", "out", "of", "my", "life", ",", "no", "second", "chance", ",", "i", "would", "have", "no", "respect", "for", "they"]
(c26-9 / and
       :op1 (c26-5 / want-01
                   :ARG0 (c26-8 / i)
                   :ARG1 (c26-0 / out-06
                                :ARG1 (c26-3 / person
                                             :mod (c26-7 / that))
                                :ARG2 (c26-4 / life
                                             :poss c26-8)))
       :op2 (c26-6 / chance-02
                   :ord (c26-1 / ordinal-entity
                               :value 2)
                   :polarity -)
       :op3 (c26-2 / respect-01
                   :ARG0 c26-8
                   :ARG1 c26-3
                   :polarity -))

# ::snt YUP!
# ::tokens ["YUP", "!"]
# ::lemmas ["yup", "!"]
(c27-0 / yup
       :mode expressive)

# ::snt Having trust issues, I would find it hard to forgive. If the person is important to me, I would work to forgive. Stating your miserable is something the individual has to work on. Cant make the other feel guilty and be quick to forgive.
# ::tokens ["Having", "trust", "issues", ",", "I", "would", "find", "it", "hard", "to", "forgive", ".", "If", "the", "person", "is", "important", "to", "me", ",", "I", "would", "work", "to", "forgive", ".", "Stating", "your", "miserable", "is", "something", "the", "individual", "has", "to", "work", "on", ".", "Ca", "nt", "make", "the", "other", "feel", "guilty", "and", "be", "quick", "to", "forgive", "."]
# ::lemmas ["have", "trust", "issue", ",", "i", "would", "find", "it", "hard", "to", "forgive", ".", "if", "the", "person", "be", "important", "to", "i", ",", "i", "would", "work", "to", "forgive", ".", "state", "your", "miserable", "be", "something", "the", "individual", "have", "to", "work", "on", ".", "can", "not", "make", "the", "other", "feel", "guilty", "and", "be", "quick", "to", "forgive", "."]
(c28-14 / multi-sentence
        :snt1 (c28-20 / find-01
                      :ARG0 (c28-25 / i)
                      :ARG1 (c28-6 / hard-02
                                   :ARG1 (c28-22 / forgive-01
                                                 :ARG0 c28-25))
                      :ARG1-of (c28-17 / cause-01
                                       :ARG0 (c28-5 / issue-02
                                                    :ARG0 (c28-10 / trust-01
                                                                  :ARG0 c28-25))))
        :snt2 (c28-24 / work-01
                      :ARG0 (c28-12 / i)
                      :ARG1 (c28-23 / forgive-01
                                    :ARG0 c28-12)
                      :condition (c28-0 / important-01
                                        :ARG1 (c28-21 / person)
                                        :ARG2 c28-12))
        :snt3 (c28-3 / obligate-01
                     :ARG1 (c28-19 / individual)
                     :ARG2 (c28-2 / work-01
                                  :ARG0 c28-19
                                  :ARG1 (c28-1 / something)))
        :snt4 (c28-15 / possible-01
                      :ARG1 (c28-9 / and
                                   :op1 (c28-7 / make-02
                                               :ARG0 (c28-4 / you)
                                               :ARG1 (c28-18 / feel-01
                                                             :ARG0 (c28-13 / other)
                                                             :ARG1 (c28-11 / guilty-01
                                                                           :ARG1 c28-13)))
                                   :op2 (c28-8 / quick-02
                                               :ARG1 (c28-16 / forgive-01
                                                             :ARG0 c28-13)))
                      :polarity -))

# ::snt I'd want them to take responsibility for their actions and then talk it out. When she outed him, that took reconciliation off the table.
# ::tokens ["I", "'d", "want", "them", "to", "take", "responsibility", "for", "their", "actions", "and", "then", "talk", "it", "out", ".", "When", "she", "outed", "him", ",", "that", "took", "reconciliation", "off", "the", "table", "."]
# ::lemmas ["i", "would", "want", "they", "to", "take", "responsibility", "for", "their", "action", "and", "then", "talk", "it", "out", ".", "when", "she", "out", "he", ",", "that", "take", "reconciliation", "off", "the", "table", "."]
(c29-1 / multi-sentence
       :snt1 (c29-7 / want-01
                    :ARG0 (c29-9 / i)
                    :ARG1 (c29-10 / and
                                  :op1 (c29-4 / responsible-01
                                              :ARG0 (c29-8 / they)
                                              :ARG1 (c29-11 / act-02
                                                            :ARG0 c29-8))
                                  :op2 (c29-14 / talk-out-03
                                               :ARG0 c29-8
                                               :ARG1 c29-11
                                               :time (c29-12 / then))))
       :snt2 (c29-5 / take-01
                    :ARG0 (c29-0 / out-01
                                 :ARG0 (c29-3 / she)
                                 :ARG1 (c29-6 / he))
                    :ARG1 (c29-13 / reconcile-01)
                    :ARG3 (c29-2 / table)))

# ::snt Yes, it's only fair that person made you miserable.
# ::tokens ["Yes", ",", "it", "'s", "only", "fair", "that", "person", "made", "you", "miserable", "."]
# ::lemmas ["yes", ",", "it", "be", "only", "fair", "that", "person", "make", "you", "miserable", "."]
(c30-0 / fair-01
       :ARG1 (c30-3 / make-02
                    :ARG0 (c30-5 / person
                                 :mod (c30-6 / that))
                    :ARG1 (c30-4 / miserable
                                 :domain (c30-2 / you)))
       :mod (c30-1 / only))
