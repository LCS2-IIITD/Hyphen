# ::snt I'd rather keep banging squares and breaking hearts if I'm being real Caprice
# ::tokens ["I", "'d", "rather", "keep", "banging", "squares", "and", "breaking", "hearts", "if", "I", "'m", "being", "real", "Caprice"]
# ::lemmas ["i", "would", "rather", "keep", "bang", "square", "and", "break", "heart", "if", "i", "be", "be", "real", "Caprice"]
(c1-6 / prefer-01
      :ARG0 (c1-8 / i)
      :ARG1 (c1-7 / keep-02
                  :ARG0 c1-8
                  :ARG1 (c1-9 / and
                              :op1 (c1-0 / bang-04
                                         :ARG0 c1-8
                                         :ARG1 (c1-3 / square))
                              :op2 (c1-5 / break-heart-31
                                         :ARG0 c1-8))
                  :condition (c1-2 / person
                                   :name (c1-1 / name
                                               :op1 "Caprice")
                                   :domain c1-8
                                   :ARG1-of (c1-4 / real-04))))

# ::snt So and
# ::tokens ["So", "and"]
# ::lemmas ["so", "and"]
(c3-0 / infer-01)

# ::snt same
# ::tokens ["same"]
# ::lemmas ["same"]
(c4-0 / same-01)

# ::snt Hope so my gal I can't wait this long distance relationship is trying
# ::tokens ["Hope", "so", "my", "gal", "I", "ca", "n't", "wait", "this", "long", "distance", "relationship", "is", "trying"]
# ::lemmas ["hope", "so", "my", "gal", "i", "can", "not", "wait", "this", "long", "distance", "relationship", "be", "try"]
(c5-1 / hope-01
      :ARG0 (c5-6 / i)
      :ARG1 (c5-4 / cause-01
                  :ARG1 (c5-2 / possible-01
                              :ARG1 (c5-5 / wait-01
                                          :ARG1 c5-6
                                          :ARG2 (c5-7 / try-01
                                                      :ARG0 c5-6
                                                      :ARG1 (c5-0 / relation-03
                                                                  :ARG0 c5-6
                                                                  :ARG2 (c5-8 / gal
                                                                              :poss c5-6)
                                                                  :mod (c5-9 / distance
                                                                             :ARG1-of (c5-3 / long-03))
                                                                  :mod (c5-10 / this))))
                              :polarity -)))

# ::snt You dont have to be lonely if you got me in your life
# ::tokens ["You", "do", "nt", "have", "to", "be", "lonely", "if", "you", "got", "me", "in", "your", "life"]
# ::lemmas ["you", "do", "not", "have", "to", "be", "lonely", "if", "you", "get", "i", "in", "your", "life"]
(c6-0 / obligate-01
      :ARG1 (c6-1 / you)
      :ARG2 (c6-3 / lonely
                  :domain c6-1)
      :condition (c6-2 / have-03
                       :ARG0 c6-1
                       :ARG1 (c6-4 / i
                                   :location (c6-5 / life
                                                   :poss c6-1)))
      :polarity -)

# ::snt you need to get ready for chola initiation.
# ::tokens ["you", "need", "to", "get", "ready", "for", "chola", "initiation", "."]
# ::lemmas ["you", "need", "to", "get", "ready", "for", "chola", "initiation", "."]
(c7-1 / need-01
      :ARG0 (c7-0 / you)
      :ARG1 (c7-2 / ready-02
                  :ARG0 c7-0
                  :ARG1 c7-0
                  :ARG2 (c7-4 / initiate-01
                              :ARG1 c7-0
                              :ARG2 (c7-3 / chola))))

# ::snt Well, it's because it's such a bloody good listen. I listen to it myself again too! Love you woman xx
# ::tokens ["Well", ",", "it", "'s", "because", "it", "'s", "such", "a", "bloody", "good", "listen", ".", "I", "listen", "to", "it", "myself", "again", "too", "!", "Love", "you", "woman", "xx"]
# ::lemmas ["well", ",", "it", "be", "because", "it", "be", "such", "a", "bloody", "good", "listen", ".", "i", "listen", "to", "it", "myself", "again", "too", "!", "Love", "you", "woman", "xx"]
(c9-3 / multi-sentence
      :snt1 (c9-9 / cause-01
                  :ARG0 (c9-6 / listen-01
                              :ARG1 (c9-12 / it)
                              :ARG1-of (c9-14 / good-02
                                              :mod (c9-1 / bloody)
                                              :degree (c9-4 / such)))
                  :ARG1 (c9-5 / it)
                  :mod (c9-10 / well))
      :snt2 (c9-15 / listen-01
                   :ARG0 (c9-16 / i)
                   :ARG1 (c9-0 / it)
                   :mod (c9-13 / again)
                   :mod (c9-11 / too))
      :snt3 (c9-7 / love-01
                  :ARG1 (c9-8 / woman
                              :mod (c9-2 / you))
                  :mode expressive))

# ::snt I know! I'll soon have her back!
# ::tokens ["I", "know", "!", "I", "'ll", "soon", "have", "her", "back", "!"]
# ::lemmas ["i", "know", "!", "i", "'ll", "soon", "have", "she", "back", "!"]
(c10-2 / multi-sentence
       :snt1 (c10-6 / know-01
                    :ARG0 (c10-7 / i))
       :snt2 (c10-5 / have-03
                    :ARG0 (c10-4 / i)
                    :ARG1 (c10-3 / she)
                    :time (c10-0 / soon)
                    :direction (c10-1 / back)))

# ::snt that accent tho
# ::tokens ["that", "accent", "tho"]
# ::lemmas ["that", "accent", "tho"]
(c11-0 / have-concession-91
       :ARG2 (c11-2 / accent
                    :mod (c11-1 / that)))

# ::snt ily more
# ::tokens ["ily", "more"]
# ::lemmas ["ily", "more"]
(c12-1 / more
       :mod (c12-0 / easy))

# ::snt AWWWWWW ILYSM
# ::tokens ["AWWWWWW", "ILYSM"]
# ::lemmas ["AWWWWWW", "ILYSM"]
(c13-1 / person
       :name (c13-0 / name
                    :op1 "IlySM"))

# ::snt DUH. Look at me
# ::tokens ["DUH", ".", "Look", "at", "me"]
# ::lemmas ["DUH", ".", "look", "at", "i"]
(c15-1 / multi-sentence
       :snt1 (c15-4 / duh
                    :mode expressive)
       :snt2 (c15-2 / look-01
                    :ARG0 (c15-0 / you)
                    :ARG1 (c15-3 / i)
                    :mode imperative))

# ::snt hey I love you more than life.
# ::tokens ["hey", "I", "love", "you", "more", "than", "life", "."]
# ::lemmas ["hey", "i", "love", "you", "more", "than", "life", "."]
(c18-3 / love-01
       :ARG0 (c18-5 / i)
       :ARG1 (c18-0 / you)
       :ARG1-of (c18-2 / have-quant-91
                       :ARG3 (c18-1 / more)
                       :ARG4 (c18-6 / life))
       :mod (c18-4 / hey
                   :mode expressive))

# ::snt me to a T
# ::tokens ["me", "to", "a", "T"]
# ::lemmas ["i", "to", "a", "t"]
(c19-0 / i
       :destination (c19-1 / string-entity
                           :value "T"))

# ::snt Ab m hu hi itni great .....Thank youThank you
# ::tokens ["Ab", "m", "hu", "hi", "itni", "great", ".....", "Thank", "youThank", "you"]
# ::lemmas ["ab", "m", "hu", "hi", "itni", "great", ".....", "thank", "youthank", "you"]
(c20-2 / multi-sentence
       :snt1 (c20-3 / say-01
                    :ARG1 (c20-4 / hi)
                    :ARG2 (c20-5 / person
                                 :name (c20-1 / name
                                              :op1 "Ab"
                                              :op2 "Hu"))
                    :mod (c20-7 / great))
       :snt2 (c20-6 / thank-01
                    :ARG1 (c20-0 / you))
       :snt3 (c20-8 / thank-01
                    :ARG1 c20-0))

# ::snt : oh no...... Youre going to be up all night, bored &amp; alone I know, bright side I'll ace my exam.. But really tf
# ::tokens [":", "oh", "no", "......", "You", "re", "going", "to", "be", "up", "all", "night", ",", "bored", "&", "amp", ";", "alone", "I", "know", ",", "bright", "side", "I", "'ll", "ace", "my", "exam", "..", "But", "really", "tf"]
# ::lemmas [":", "oh", "no", "......", "you", "re", "go", "to", "be", "up", "all", "night", ",", "bored", "&", "amp", ";", "alone", "i", "know", ",", "bright", "side", "i", "'ll", "ace", "my", "exam", "..", "but", "really", "tf"]
(c22-3 / multi-sentence
       :snt1 (c22-0 / oh-no
                    :mode expressive)
       :snt2 (c22-14 / and
                     :op1 (c22-13 / and
                                  :op1 (c22-1 / bore-02
                                              :ARG1 (c22-2 / you))
                                  :op2 (c22-11 / amp))
                     :op2 (c22-8 / know-01
                                 :ARG0 (c22-15 / i)
                                 :ARG1 (c22-16 / ace-01
                                               :ARG0 c22-15
                                               :ARG1 (c22-6 / exam
                                                            :poss c22-15)
                                               :mod (c22-4 / side
                                                           :ARG1-of (c22-7 / bright-02)))
                                 :mod (c22-10 / alone)))
       :snt3 (c22-12 / contrast-01
                     :ARG2 (c22-9 / have-polarity-91
                                  :degree (c22-5 / really)
                                  :ARG2 -)))

# ::snt I miss you sooooo much
# ::tokens ["I", "miss", "you", "sooooo", "much"]
# ::lemmas ["i", "miss", "you", "sooooo", "much"]
(c23-1 / miss-01
       :ARG0 (c23-4 / i)
       :ARG1 (c23-0 / you)
       :degree (c23-3 / much
                      :degree (c23-2 / so)))

# ::snt YEET
# ::tokens ["YEET"]
# ::lemmas ["YEET"]
(c24-0 / yep)

# ::snt honorary family member
# ::tokens ["honorary", "family", "member"]
# ::lemmas ["honorary", "family", "member"]
(c25-3 / person
       :ARG0-of (c25-2 / have-org-role-91
                       :ARG1 (c25-0 / family)
                       :ARG2 (c25-1 / member
                                    :ARG1-of (c25-4 / honor-01))))

# ::snt would I be considered friend or family?
# ::tokens ["would", "I", "be", "considered", "friend", "or", "family", "?"]
# ::lemmas ["would", "i", "be", "consider", "friend", "or", "family", "?"]
(c26-3 / consider-02
       :ARG1 (c26-6 / amr-choice
                    :op1 (c26-1 / have-rel-role-91
                                :ARG0 (c26-5 / i)
                                :ARG2 (c26-0 / friend))
                    :op2 (c26-4 / have-rel-role-91
                                :ARG0 c26-5
                                :ARG2 (c26-2 / family))))

# ::snt Welcome to my twitter drafts
# ::tokens ["Welcome", "to", "my", "twitter", "drafts"]
# ::lemmas ["welcome", "to", "my", "twitter", "draft"]
(c27-3 / welcome-01
       :ARG1 (c27-0 / you)
       :ARG2 (c27-5 / thing
                    :ARG1-of (c27-6 / draft-01
                                    :ARG0 (c27-4 / i)
                                    :medium (c27-2 / publication
                                                   :name (c27-1 / name
                                                                :op1 "Twitter")))))

# ::snt but
# ::tokens ["but"]
# ::lemmas ["but"]
(c28-0 / contrast-01)
