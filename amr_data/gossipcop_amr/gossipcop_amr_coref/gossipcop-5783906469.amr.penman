# ::snt best movie ever
# ::tokens ["best", "movie", "ever"]
# ::lemmas ["good", "movie", "ever"]
(c1-0 / movie
      :time (c1-1 / ever)
      :ARG1-of (c1-3 / have-degree-91
                     :ARG2 (c1-4 / good-02
                                 :ARG1 c1-0)
                     :ARG3 (c1-2 / most)))

# ::snt caprio daha byk gsteriyo ama tam tersi
# ::tokens ["caprio", "daha", "byk", "gsteriyo", "ama", "tam", "tersi"]
# ::lemmas ["caprio", "daha", "byk", "gsteriyo", "ama", "tam", "tersi"]
(c2-2 / say-01
      :ARG0 (c2-1 / i)
      :ARG1 (c2-0 / amr-unintelligible
                  :value "caprio"
                  :mod " ) ) :ARG2 ( person :name ( name :op1 "))

# ::snt Great use of Seal's 'Crazy' if I remember well, it's been years since I saw it
# ::tokens ["Great", "use", "of", "Seal", "'s", "'", "Crazy", "'", "if", "I", "remember", "well", ",", "it", "'s", "been", "years", "since", "I", "saw", "it"]
# ::lemmas ["great", "use", "of", "Seal", "'s", "'", "Crazy", "'", "if", "i", "remember", "well", ",", "it", "be", "be", "years", "since", "i", "see", "it"]
(c3-14 / use-01
       :ARG1 (c3-3 / music
                   :name (c3-2 / name
                               :op1 "Crazy")
                   :source (c3-9 / company
                                 :name (c3-6 / name
                                             :op1 "Seal")))
       :mod (c3-13 / great)
       :condition (c3-5 / remember-01
                        :ARG0 (c3-11 / i)
                        :ARG1 (c3-7 / pass-03
                                    :ARG1 (c3-8 / multiple
                                                :op1 (c3-12 / temporal-quantity
                                                            :unit (c3-1 / year)
                                                            :quant 1))
                                    :time (c3-4 / since
                                                :op1 (c3-0 / see-01
                                                           :ARG0 c3-11
                                                           :ARG1 c3-3)))
                        :mod (c3-10 / well)))

# ::snt it's one of my favourite films.
# ::tokens ["it", "'s", "one", "of", "my", "favourite", "films", "."]
# ::lemmas ["it", "be", "one", "of", "my", "favourite", "film", "."]
(c4-3 / include-91
      :ARG1 (c4-1 / it)
      :ARG2 (c4-0 / film
                  :ARG1-of (c4-2 / favor-01
                                 :ARG0 (c4-4 / i))))

# ::snt But I can handle it, I guess
# ::tokens ["But", "I", "can", "handle", "it", ",", "I", "guess"]
# ::lemmas ["but", "i", "can", "handle", "it", ",", "i", "guess"]
(c5-3 / contrast-01
      :ARG2 (c5-5 / guess-01
                  :ARG0 (c5-4 / i)
                  :ARG1 (c5-2 / possible-01
                              :ARG1 (c5-1 / handle-01
                                          :ARG0 c5-4
                                          :ARG1 (c5-0 / it)))))

# ::snt the quote that you need.
# ::tokens ["the", "quote", "that", "you", "need", "."]
# ::lemmas ["the", "quote", "that", "you", "need", "."]
(c6-2 / quote-01
      :ARG1-of (c6-1 / need-01
                     :ARG0 (c6-0 / you)))

# ::snt My nigga be knowing : The Basketball Diaries (1995).
# ::tokens ["My", "nigga", "be", "knowing", ":", "The", "Basketball", "Diaries", "(", "1995", ")", "."]
# ::lemmas ["my", "nigga", "be", "know", ":", "The", "Basketball", "Diaries", "(", "1995", ")", "."]
(c9-3 / know-01
      :ARG0 (c9-1 / nigger
                  :poss (c9-4 / i))
      :ARG1 (c9-0 / book
                  :name (c9-2 / name
                              :op1 "The"
                              :op2 "Basketball"
                              :op3 "Diaries")
                  :time (c9-5 / date-entity
                              :year 1995)))

# ::snt yung Leo
# ::tokens ["yung", "Leo"]
# ::lemmas ["yung", "Leo"]
(c10-2 / person
       :name (c10-0 / name
                    :op1 "Leo")
       :mod (c10-1 / yung))

# ::snt Fucking Classic.
# ::tokens ["Fucking", "Classic", "."]
# ::lemmas ["Fucking", "Classic", "."]
(c11-0 / classic
       :mod (c11-1 / fucking))

# ::snt son!
# ::tokens ["son", "!"]
# ::lemmas ["son", "!"]
(c12-0 / son
       :mode expressive)

# ::snt That's a fantastic scene yeah some of it is a little too melodramatic but that scene was very emotional
# ::tokens ["That", "'s", "a", "fantastic", "scene", "yeah", "some", "of", "it", "is", "a", "little", "too", "melodramatic", "but", "that", "scene", "was", "very", "emotional"]
# ::lemmas ["that", "be", "a", "fantastic", "scene", "yeah", "some", "of", "it", "be", "a", "little", "too", "melodramatic", "but", "that", "scene", "be", "very", "emotional"]
(c22-8 / contrast-01
       :ARG1 (c22-3 / scene
                    :ARG1-of (c22-0 / fantastic-02)
                    :domain (c22-10 / that))
       :ARG2 (c22-6 / have-degree-91
                    :ARG1 (c22-1 / some
                                 :ARG1-of (c22-9 / include-91
                                                 :ARG2 c22-3))
                    :ARG2 (c22-2 / melodramatic)
                    :ARG3 (c22-11 / too
                                  :mod (c22-7 / little)))
       :ARG1 c22-8
       :ARG2 (c22-5 / emotional-02
                    :ARG1 c22-3
                    :degree (c22-4 / very)))

# ::snt damn that scene where Leo begs his mom played by Loraine Bracco to let him back in the apt. Gold. You could tell he had IT
# ::tokens ["damn", "that", "scene", "where", "Leo", "begs", "his", "mom", "played", "by", "Loraine", "Bracco", "to", "let", "him", "back", "in", "the", "apt", ".", "Gold", ".", "You", "could", "tell", "he", "had", "IT"]
# ::lemmas ["damn", "that", "scene", "where", "Leo", "beg", "his", "mom", "play", "by", "Loraine", "Bracco", "to", "let", "he", "back", "in", "the", "apt", ".", "gold", ".", "you", "could", "tell", "he", "have", "IT"]
(c23-14 / multi-sentence
        :snt1 (c23-22 / damn-01
                      :ARG1 (c23-0 / scene
                                   :mod (c23-11 / that)
                                   :subevent (c23-13 / beg-01
                                                     :ARG0 (c23-19 / person
                                                                   :name (c23-18 / name
                                                                                 :op1 "Leo"))
                                                     :ARG1 (c23-15 / person
                                                                   :ARG0-of (c23-7 / have-rel-role-91
                                                                                   :ARG1 c23-19
                                                                                   :ARG2 (c23-8 / mom))
                                                                   :ARG1-of (c23-4 / play-02
                                                                                   :ARG0 (c23-3 / person
                                                                                                :name (c23-16 / name
                                                                                                              :op1 "Loraine"
                                                                                                              :op2 "Bracco"))))
                                                     :ARG2 (c23-2 / let-01
                                                                  :ARG0 c23-15
                                                                  :ARG1 (c23-1 / back-02
                                                                               :ARG1 c23-19
                                                                               :destination (c23-10 / apt.
                                                                                                    :mod (c23-12 / gold))))))
                      :mode expressive)
        :snt2 (c23-9 / possible-01
                     :ARG1 (c23-17 / tell-01
                                   :ARG0 (c23-5 / you)
                                   :ARG1 (c23-20 / have-03
                                                 :ARG0 (c23-6 / he)
                                                 :ARG1 (c23-21 / it)))))

# ::snt Ah ok yeah I could maybe see that...it's a tough role for two young actors they played druggies
# ::tokens ["Ah", "ok", "yeah", "I", "could", "maybe", "see", "that", "...", "it", "'s", "a", "tough", "role", "for", "two", "young", "actors", "they", "played", "druggies"]
# ::lemmas ["ah", "ok", "yeah", "i", "could", "maybe", "see", "that", "...", "it", "be", "a", "tough", "role", "for", "two", "young", "actor", "they", "play", "druggie"]
(c24-2 / multi-sentence
       :snt1 (c24-8 / possible-01
                    :ARG1 (c24-4 / see-01
                                 :ARG0 (c24-10 / i)
                                 :ARG1 (c24-11 / that)))
       :snt2 (c24-16 / tough-02
                     :ARG1 (c24-6 / role
                                  :domain (c24-5 / it))
                     :ARG1-of (c24-9 / cause-01
                                     :ARG0 (c24-3 / play-02
                                                  :ARG0 (c24-15 / person
                                                                :ARG0-of (c24-7 / act-01)
                                                                :mod (c24-1 / young)
                                                                :ARG1-of c24-3
                                                                :ARG0 (c24-12 / they)
                                                                :ARG2 (c24-13 / druggie)
                                                                :quant 2))))
       :snt3 (c24-0 / okay-01
                    :mod (c24-14 / yeah
                                 :mode expressive)))

# ::snt it was something along the lines of that. Young and immature.... it was mentioned in the commentary on the Departed
# ::tokens ["it", "was", "something", "along", "the", "lines", "of", "that", ".", "Young", "and", "immature", "....", "it", "was", "mentioned", "in", "the", "commentary", "on", "the", "Departed"]
# ::lemmas ["it", "be", "something", "along", "the", "line", "of", "that", ".", "young", "and", "immature", "....", "it", "be", "mention", "in", "the", "commentary", "on", "the", "Departed"]
(c25-2 / multi-sentence
       :snt1 (c25-4 / something
                    :ARG1-of (c25-5 / resemble-01
                                    :ARG2 (c25-8 / that)))
       :snt2 (c25-10 / and
                     :op1 (c25-1 / young)
                     :op2 (c25-6 / mature-02
                                 :polarity -)
                     :domain (c25-9 / it))
       :snt3 (c25-11 / mention-01
                     :ARG1 c25-9
                     :location (c25-7 / commentary
                                      :topic (c25-0 / book
                                                    :name (c25-3 / name
                                                                 :op1 "Departed")))))

# ::snt I'm not sure from what I heard they got along but they were way younger then
# ::tokens ["I", "'m", "not", "sure", "from", "what", "I", "heard", "they", "got", "along", "but", "they", "were", "way", "younger", "then"]
# ::lemmas ["i", "be", "not", "sure", "from", "what", "i", "hear", "they", "get", "along", "but", "they", "be", "way", "young", "then"]
(c26-4 / contrast-01
       :ARG1 (c26-2 / sure-02
                    :ARG0 (c26-7 / i)
                    :source (c26-8 / thing
                                   :ARG1-of (c26-3 / hear-01
                                                   :ARG0 c26-7))
                    :polarity -)
       :ARG2 (c26-6 / have-degree-91
                    :ARG1 (c26-10 / they)
                    :ARG2 (c26-0 / young)
                    :ARG3 (c26-1 / more
                                 :quant (c26-5 / way))
                    :ARG4 (c26-9 / then)))

# ::snt great flick. But what was the back story, didn't they have a mutual dislike of eachother? didn't patch it up till Departed
# ::tokens ["great", "flick", ".", "But", "what", "was", "the", "back", "story", ",", "did", "n't", "they", "have", "a", "mutual", "dislike", "of", "eachother", "?", "did", "n't", "patch", "it", "up", "till", "Departed"]
# ::lemmas ["great", "flick", ".", "but", "what", "be", "the", "back", "story", ",", "do", "not", "they", "have", "a", "mutual", "dislike", "of", "eachother", "?", "do", "not", "patch", "it", "up", "till", "Departed"]
(c27-2 / multi-sentence
       :snt1 (c27-0 / flick
                    :mod (c27-13 / great))
       :snt2 (c27-8 / contrast-01
                    :ARG2 (c27-12 / and
                                  :op1 (c27-4 / story
                                              :mod (c27-1 / back)
                                              :domain (c27-11 / amr-unknown))
                                  :op2 (c27-14 / dislike-01
                                               :ARG0 (c27-10 / they
                                                             :ARG1-of c27-14)
                                               :manner (c27-5 / mutual)
                                               :polarity (c27-9 / amr-unknown))
                                  :op3 (c27-6 / patch-up-02
                                              :ARG1 (c27-15 / it)
                                              :time (c27-16 / until
                                                            :op1 (c27-7 / film
                                                                        :name (c27-3 / name
                                                                                     :op1 "Departed")))
                                              :polarity -))))

# ::snt *
# ::tokens ["*"]
# ::lemmas ["*"]
(c29-0 / amr-empty)

# ::snt tommy lee
# ::tokens ["tommy", "lee"]
# ::lemmas ["tommy", "lee"]
(c31-0 / lee
       :mod (c31-1 / tommy))

# ::snt what's eating gilbert grape
# ::tokens ["what", "'s", "eating", "gilbert", "grape"]
# ::lemmas ["what", "be", "eat", "gilbert", "grape"]
(c32-1 / eat-01
       :ARG0 (c32-3 / amr-unknown)
       :ARG1 (c32-4 / grape
                    :source (c32-2 / person
                                   :name (c32-0 / name
                                                :op1 "Gilbert"))))

# ::snt Shakti ek baar "Out BC" tweet kar de please.
# ::tokens ["Shakti", "ek", "baar", "\"", "Out", "BC", "\"", "tweet", "kar", "de", "please", "."]
# ::lemmas ["shakti", "ek", "baar", "\"", "Out", "BC", "\"", "tweet", "kar", "de", "please", "."]
(c34-6 / tweet-02
       :ARG0 (c34-4 / person
                    :name (c34-1 / name
                                 :op1 "Shakti"
                                 :op2 "Ek"
                                 :op3 "Baar"))
       :ARG1 (c34-0 / out-06
                    :ARG2 (c34-2 / province
                                 :name (c34-3 / name
                                              :op1 "British"
                                              :op2 "Columbia")))
       :ARG1-of (c34-5 / call-01
                       :ARG2 (c34-7 / please-01)))

# ::snt it's fine. Not his best work. He's great in it, of course, but the movie is just ok.
# ::tokens ["it", "'s", "fine", ".", "Not", "his", "best", "work", ".", "He", "'s", "great", "in", "it", ",", "of", "course", ",", "but", "the", "movie", "is", "just", "ok", "."]
# ::lemmas ["it", "be", "fine", ".", "not", "his", "good", "work", ".", "he", "be", "great", "in", "it", ",", "of", "course", ",", "but", "the", "movie", "be", "just", "ok", "."]
(c36-3 / multi-sentence
       :snt1 (c36-0 / fine-04
                    :ARG1 (c36-12 / it))
       :snt2 (c36-8 / work-01
                    :ARG0 (c36-6 / he)
                    :ARG1-of (c36-10 / have-degree-91
                                     :ARG2 (c36-14 / good-03
                                                   :ARG1 c36-8)
                                     :ARG3 (c36-7 / most))
                    :polarity -)
       :snt3 (c36-9 / contrast-01
                    :ARG1 (c36-13 / great
                                  :domain (c36-5 / he)
                                  :location (c36-4 / it)
                                  :mod (c36-1 / of-course))
                    :ARG2 (c36-2 / okay-04
                                 :ARG1 (c36-15 / movie)
                                 :mod (c36-11 / just))))

# ::snt I've never seen the basketball diaries surprisingly, should I watch it rn?
# ::tokens ["I", "'ve", "never", "seen", "the", "basketball", "diaries", "surprisingly", ",", "should", "I", "watch", "it", "rn", "?"]
# ::lemmas ["i", "'ve", "never", "see", "the", "basketball", "diary", "surprisingly", ",", "should", "i", "watch", "it", "rn", "?"]
(c37-7 / and
       :op1 (c37-2 / see-01
                   :ARG0 (c37-6 / i)
                   :ARG1 (c37-9 / diary
                                :topic (c37-1 / basketball))
                   :time (c37-4 / ever)
                   :ARG0-of (c37-0 / surprise-01)
                   :polarity -)
       :op2 (c37-3 / recommend-01
                   :ARG1 (c37-5 / watch-01
                                :ARG0 c37-6
                                :ARG1 c37-9)
                   :polarity (c37-8 / amr-unknown)))

# ::snt One of my all-time favorite movies!!!
# ::tokens ["One", "of", "my", "all", "-", "time", "favorite", "movies", "!", "!", "!"]
# ::lemmas ["One", "of", "you", "all", "-", "time", "favorite", "movie", "!", "!", "!"]
(c38-5 / include-91
       :ARG1 (c38-1 / movie)
       :ARG2 (c38-4 / movie
                    :ARG1-of (c38-0 / favor-01
                                    :ARG0 (c38-2 / i)
                                    :time (c38-6 / time
                                                 :mod (c38-3 / all)))))

# ::snt honey, youre in for a ride
# ::tokens ["honey", ",", "you", "re", "in", "for", "a", "ride"]
# ::lemmas ["honey", ",", "you", "re", "in", "for", "a", "ride"]
(c39-0 / ride-01
       :ARG0 (c39-1 / you)
       :mod (c39-2 / honey
                   :mode expressive)
       :mode expressive)

# ::snt I saw it in theaters!! *is old* it's one of my favorite movies.
# ::tokens ["I", "saw", "it", "in", "theaters", "!", "!", "*", "is", "old", "*", "it", "'s", "one", "of", "my", "favorite", "movies", "."]
# ::lemmas ["i", "see", "it", "in", "theater", "!", "!", "*", "be", "old", "*", "it", "be", "one", "of", "my", "favorite", "movie", "."]
(c40-3 / multi-sentence
       :snt1 (c40-4 / see-01
                    :ARG0 (c40-8 / i)
                    :ARG1 (c40-5 / it)
                    :location (c40-9 / theater))
       :snt2 (c40-0 / old
                    :domain (c40-10 / it))
       :snt3 (c40-1 / include-91
                    :ARG1 (c40-11 / it)
                    :ARG2 (c40-7 / movie
                                 :ARG1-of (c40-2 / favor-01
                                                 :ARG0 (c40-6 / i)))))

# ::snt omg lmk how that is!! its been on my watchlist forever
# ::tokens ["omg", "lmk", "how", "that", "is", "!", "!", "its", "been", "on", "my", "watchlist", "forever"]
# ::lemmas ["omg", "lmk", "how", "that", "be", "!", "!", "its", "be", "on", "my", "watchlist", "forever"]
(c41-2 / multi-sentence
       :snt1 (c41-0 / oh-my-god
                    :manner-of (c41-6 / that)
                    :mode expressive)
       :snt2 (c41-4 / list-01
                    :ARG0 (c41-5 / i)
                    :ARG1 (c41-3 / it)
                    :duration (c41-1 / forever)))

# ::snt I'm saying that it's possible. Never underestimate the state's intentions when it comes to grabbing guns. Making a false flag event seems to have become commonplace.
# ::tokens ["I", "'m", "saying", "that", "it", "'s", "possible", ".", "Never", "underestimate", "the", "state", "'s", "intentions", "when", "it", "comes", "to", "grabbing", "guns", ".", "Making", "a", "false", "flag", "event", "seems", "to", "have", "become", "commonplace", "."]
# ::lemmas ["i", "be", "say", "that", "it", "be", "possible", ".", "never", "underestimate", "the", "state", "'s", "intention", "when", "it", "come", "to", "grab", "gun", ".", "make", "a", "false", "flag", "event", "seem", "to", "have", "become", "commonplace", "."]
(c42-11 / multi-sentence
        :snt1 (c42-0 / say-01
                     :ARG0 (c42-18 / i)
                     :ARG1 (c42-16 / possible-01
                                   :ARG1 (c42-5 / it)))
        :snt2 (c42-13 / underestimate-01
                      :ARG0 (c42-4 / you)
                      :ARG1 (c42-9 / intend-01
                                   :ARG0 (c42-3 / state)
                                   :topic (c42-7 / grab-01
                                                 :ARG1 (c42-1 / gun)))
                      :time (c42-15 / ever)
                      :polarity -
                      :mode imperative)
        :snt3 (c42-2 / seem-01
                     :ARG1 (c42-10 / become-01
                                   :ARG1 (c42-6 / make-02
                                                :ARG1 (c42-8 / event
                                                             :mod (c42-14 / flag
                                                                          :mod (c42-17 / false))))
                                   :ARG2 (c42-12 / commonplace))))

# ::snt given great conceptions from our best-selling recipes
# ::tokens ["given", "great", "conceptions", "from", "our", "best", "-", "selling", "recipes"]
# ::lemmas ["give", "great", "conception", "from", "our", "good", "-", "sell", "recipe"]
(c43-7 / give-01
       :ARG1 (c43-4 / conceive-01
                    :mod (c43-6 / great)
                    :source (c43-2 / recipe
                                   :ARG0-of (c43-1 / sell-01
                                                   :ARG1-of (c43-3 / have-degree-91
                                                                   :ARG2 (c43-8 / good-02
                                                                                :ARG1 c43-1)
                                                                   :ARG3 (c43-0 / most)))
                                   :poss (c43-5 / we))))

# ::snt dazed and confused gets my vote
# ::tokens ["dazed", "and", "confused", "gets", "my", "vote"]
# ::lemmas ["daze", "and", "confuse", "get", "my", "vote"]
(c44-4 / get-01
       :ARG0 (c44-3 / and
                    :op1 (c44-2 / azed-02)
                    :op2 (c44-1 / confuse-01))
       :ARG1 (c44-0 / vote-01
                    :ARG0 (c44-5 / i
                                 :ARG1-of c44-0)))

# ::snt dazed and confused
# ::tokens ["dazed", "and", "confused"]
# ::lemmas ["daze", "and", "confuse"]
(c45-3 / and
       :op1 (c45-2 / aze-01
                   :ARG1 (c45-1 / i))
       :op2 (c45-0 / confuse-01
                   :ARG1 c45-1))

# ::snt Those are people that died, died.
# ::tokens ["Those", "are", "people", "that", "died", ",", "died", "."]
# ::lemmas ["those", "be", "people", "that", "die", ",", "die", "."]
(c46-1 / person
       :ARG1-of (c46-0 / die-01)
       :domain (c46-2 / that))

# ::snt fave
# ::tokens ["fave"]
# ::lemmas ["fave"]
(c48-0 / thank-01)

# ::snt Ooh drugs too, this is starting to look familiar.
# ::tokens ["Ooh", "drugs", "too", ",", "this", "is", "starting", "to", "look", "familiar", "."]
# ::lemmas ["Ooh", "drug", "too", ",", "this", "be", "start", "to", "look", "familiar", "."]
(c49-3 / and
       :op1 (c49-6 / drug
                   :mod (c49-0 / oh
                               :mode expressive)
                   :mod (c49-5 / too))
       :op2 (c49-2 / start-01
                   :ARG1 (c49-4 / look-02
                                :ARG0 (c49-7 / this)
                                :ARG1 (c49-1 / familiarize-01
                                             :ARG2 c49-7))))

# ::snt Just like The Wolf of Wall Street, &amp; both are set in Manhattan.
# ::tokens ["Just", "like", "The", "Wolf", "of", "Wall", "Street", ",", "&", "amp", ";", "both", "are", "set", "in", "Manhattan", "."]
# ::lemmas ["just", "like", "The", "Wolf", "of", "Wall", "Street", ",", "&", "amp", ";", "both", "be", "set", "in", "Manhattan", "."]
(c50-2 / multi-sentence
       :snt1 (c50-4 / resemble-01
                    :ARG2 (c50-10 / and
                                  :op1 (c50-0 / book
                                              :name (c50-1 / name
                                                           :op1 "The"
                                                           :op2 "Wolf"
                                                           :op3 "of"
                                                           :op4 "Wall"
                                                           :op5 "Street"))
                                  :op2 (c50-5 / book
                                              :name (c50-6 / name
                                                           :op1 "&amp")))
                    :mod (c50-9 / just))
       :snt2 (c50-3 / set-01
                    :ARG1 (c50-11 / both)
                    :ARG2 (c50-8 / city-district
                                 :name (c50-7 / name
                                              :op1 "Manhattan"))))
