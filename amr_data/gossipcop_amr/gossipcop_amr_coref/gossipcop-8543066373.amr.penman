# ::snt Raunchy?
# ::tokens ["Raunchy", "?"]
# ::lemmas ["Raunchy", "?"]
(c1-0 / raunchy
      :polarity (c1-1 / amr-unknown))

# ::snt you need to chill
# ::tokens ["you", "need", "to", "chill"]
# ::lemmas ["you", "need", "to", "chill"]
(c2-2 / need-01
      :ARG0 (c2-1 / you)
      :ARG1 (c2-0 / chill-01
                  :ARG1 c2-1))

# ::snt pq ela faz isso neh?
# ::tokens ["pq", "ela", "faz", "isso", "neh", "?"]
# ::lemmas ["pq", "ela", "faz", "isso", "neh", "?"]
(c3-1 / amr-unintelligible
      :polarity (c3-0 / amr-unknown)
      :value "Ela faz isso neh")

# ::snt esse tambem me faz querer morrer, boa noite
# ::tokens ["esse", "tambem", "me", "faz", "querer", "morrer", ",", "boa", "noite"]
# ::lemmas ["esse", "tambem", "i", "faz", "querer", "morrer", ",", "boa", "noite"]
(c4-4 / cause-01
      :ARG0 (c4-2 / have-mod-91
                  :ARG1 (c4-0 / you)
                  :ARG2 (c4-3 / person
                              :ARG0-of (c4-5 / querer-01)
                              :mod (c4-6 / amr-unintelligible
                                         :value "Faz")))
      :ARG1 (c4-1 / noite))

# ::snt eu tinha achado o q mostra por tras, dps mando
# ::tokens ["eu", "tinha", "achado", "o", "q", "mostra", "por", "tras", ",", "dps", "mando"]
# ::lemmas ["eu", "tinha", "achado", "o", "q", "mostra", "por", "tras", ",", "dps", "mando"]
(c5-1 / multi-sentence
      :snt1 (c5-2 / have-polarity-91
                  :ARG1-of (c5-4 / cause-01
                                 :ARG0 (c5-5 / have-mod-91
                                             :ARG1 (c5-0 / you)
                                             :ARG2 (c5-6 / achado)
                                             :snt2-of c5-1))
                  :ARG2 -)
      :ARG1 (c5-7 / you)
      :ARG2 (c5-3 / post-scriptum))

# ::snt olha como ela treme essa bunda jurando que funkeira
# ::tokens ["olha", "como", "ela", "treme", "essa", "bunda", "jurando", "que", "funkeira"]
# ::lemmas ["olha", "como", "ela", "treme", "essa", "bunda", "jurando", "que", "funkeira"]
(c6-1 / multi-sentence
      :snt1 (c6-7 / laugh-01
                  :ARG0 (c6-9 / i)
                  :manner (c6-11 / loud)
                  :mode expressive)
      :snt2 (c6-3 / say-01
                  :ARG0 (c6-4 / i)
                  :ARG1 (c6-5 / essa
                              :mod (c6-0 / bunda)
                              :ARG1-of (c6-6 / mean-01
                                             :ARG2 (c6-10 / amr-unknown)))
                  :ARG2 (c6-8 / person
                              :name (c6-2 / name
                                          :op1 "funkeira"))))

# ::snt esse angulo eu n vejo nada migo,amostra o cu
# ::tokens ["esse", "angulo", "eu", "n", "vejo", "nada", "migo", ",", "amostra", "o", "cu"]
# ::lemmas ["esse", "angulo", "eu", "n", "vejo", "nada", "migo", ",", "amostra", "o", "cu"]
(c7-6 / and
      :op1 (c7-3 / sense-01
                 :ARG0 (c7-1 / you)
                 :ARG1 (c7-5 / eu))
      :op2 (c7-4 / vejo
                 :polarity -)
      :op3 (c7-2 / nada
                 :mode expressive)
      :op4 (c7-0 / ostra-00
                 :ARG0 c7-1))

# ::snt ESSE ANGULO
# ::tokens ["ESSE", "ANGULO"]
# ::lemmas ["ESSE", "angulo"]
(c8-1 / exchange-01
      :ARG0 (c8-3 / i)
      :ARG2 (c8-2 / person
                  :name (c8-0 / name
                              :op1 "Esse"
                              :op2 "Angola")))

# ::snt Damn, she looks horrifying.
# ::tokens ["Damn", ",", "she", "looks", "horrifying", "."]
# ::lemmas ["damn", ",", "she", "look", "horrify", "."]
(c9-2 / look-02
      :ARG0 (c9-3 / she)
      :ARG1 (c9-1 / horrify-01)
      :mod (c9-0 / damn
                 :mode expressive))

# ::snt Damn she is so gorgeous...i can stare at her all day...as long as she doesnt say anything of course...or try to sing
# ::tokens ["Damn", "she", "is", "so", "gorgeous", "...", "i", "can", "stare", "at", "her", "all", "day", "...", "as", "long", "as", "she", "does", "nt", "say", "anything", "of", "course", "...", "or", "try", "to", "sing"]
# ::lemmas ["damn", "she", "be", "so", "gorgeous", "...", "i", "can", "stare", "at", "she", "all", "day", "...", "as", "long", "as", "she", "do", "not", "say", "anything", "of", "course", "...", "or", "try", "to", "sing"]
(c10-11 / and
        :op1 (c10-12 / gorgeous
                     :domain (c10-3 / she)
                     :degree (c10-0 / so))
        :op2 (c10-6 / possible-01
                    :ARG1 (c10-15 / stare-01
                                  :ARG0 (c10-10 / i)
                                  :ARG1 c10-3
                                  :duration (c10-13 / day
                                                    :mod (c10-14 / all)))
                    :condition (c10-7 / as-long-as
                                      :op1 (c10-4 / say-01
                                                  :ARG0 c10-3
                                                  :ARG1 (c10-2 / anything)
                                                  :mod (c10-1 / of-course)
                                                  :polarity -)))
        :op3 (c10-9 / try-01
                    :ARG0 c10-3
                    :ARG1 (c10-5 / sing-01
                                 :ARG0 c10-3))
        :mod (c10-8 / damn
                    :mode expressive))

# ::snt And to think she grew up in good Christian family..I believe her dad is a minister..
# ::tokens ["And", "to", "think", "she", "grew", "up", "in", "good", "Christian", "family", "..", "I", "believe", "her", "dad", "is", "a", "minister", ".."]
# ::lemmas ["and", "to", "think", "she", "grow", "up", "in", "good", "Christian", "family", "..", "i", "believe", "her", "dad", "be", "a", "minister", ".."]
(c11-5 / and
       :op1 (c11-12 / think-01
                    :ARG0 (c11-11 / i)
                    :ARG1 (c11-13 / grow-up-04
                                  :ARG1 (c11-4 / she)
                                  :location (c11-0 / family
                                                   :mod (c11-6 / religious-group
                                                               :name (c11-2 / name
                                                                            :op1 "Christian"))
                                                   :ARG1-of (c11-14 / good-02))))
       :op2 (c11-1 / believe-01
                   :ARG0 c11-11
                   :ARG1 (c11-8 / have-org-role-91
                                :ARG0 (c11-9 / person
                                             :ARG0-of (c11-10 / have-rel-role-91
                                                              :ARG1 c11-4
                                                              :ARG2 (c11-7 / dad)))
                                :ARG2 (c11-3 / minister))))

# ::snt Looks like total dog shit, just like Miley
# ::tokens ["Looks", "like", "total", "dog", "shit", ",", "just", "like", "Miley"]
# ::lemmas ["look", "like", "total", "dog", "shit", ",", "just", "like", "Miley"]
(c12-3 / look-02
       :ARG1 (c12-1 / shit
                    :mod (c12-7 / dog)
                    :degree (c12-6 / total))
       :ARG1-of (c12-2 / resemble-01
                       :ARG2 (c12-8 / look-02
                                    :ARG1 (c12-4 / person
                                                 :name (c12-0 / name
                                                              :op1 "Miley"))
                                    :mod (c12-5 / just))))

# ::snt Bunch of garbage .
# ::tokens ["Bunch", "of", "garbage", "."]
# ::lemmas ["bunch", "of", "garbage", "."]
(c13-0 / garbage
       :quant (c13-1 / bunch))

# ::snt That's so hot ": Katy has sure been feeling extra raunchy lately. "
# ::tokens ["That", "'s", "so", "hot", "\"", ":", "Katy", "has", "sure", "been", "feeling", "extra", "raunchy", "lately", ".", "\""]
# ::lemmas ["that", "be", "so", "hot", "\"", ":", "Katy", "have", "sure", "be", "feel", "extra", "raunchy", "lately", ".", "\""]
(c14-2 / multi-sentence
       :snt1 (c14-7 / hot-03
                    :ARG1 (c14-10 / that)
                    :degree (c14-4 / so))
       :snt2 (c14-0 / feel-01
                    :ARG0 (c14-8 / person
                                 :name (c14-3 / name
                                              :op1 "Katy"))
                    :ARG1 (c14-5 / raunchy
                                 :degree (c14-6 / extra))
                    :ARG1-of (c14-1 / sure-02)
                    :time (c14-9 / lately)))

# ::snt : Katy has sure been feeling extra raunchy lately.
# ::tokens [":", "Katy", "has", "sure", "been", "feeling", "extra", "raunchy", "lately", "."]
# ::lemmas [":", "Katy", "have", "sure", "be", "feel", "extra", "raunchy", "lately", "."]
(c15-0 / feel-01
       :ARG0 (c15-5 / person
                    :name (c15-1 / name
                                 :op1 "Katy"))
       :ARG1 (c15-3 / raunchy
                    :degree (c15-4 / extra))
       :ARG1-of (c15-2 / sure-02)
       :time (c15-6 / lately))

# ::snt thats what happens when ur back with john mayer.
# ::tokens ["that", "s", "what", "happens", "when", "ur", "back", "with", "john", "mayer", "."]
# ::lemmas ["that", "s", "what", "happen", "when", "ur", "back", "with", "john", "mayer", "."]
(c16-3 / event
       :domain (c16-5 / that)
       :time (c16-0 / back-02
                    :ARG1 (c16-1 / you)
                    :accompanier (c16-4 / person
                                        :name (c16-2 / name
                                                     :op1 "John"
                                                     :op2 "Mayer"))))

# ::snt AGREE!!!!
# ::tokens ["AGREE", "!", "!", "!", "!"]
# ::lemmas ["agree", "!", "!", "!", "!"]
(c17-0 / agree-01
       :mode expressive)

# ::snt Seems a little hypocritical of her if I do say so myself. She doesnt wear pants either. But I agree
# ::tokens ["Seems", "a", "little", "hypocritical", "of", "her", "if", "I", "do", "say", "so", "myself", ".", "She", "does", "nt", "wear", "pants", "either", ".", "But", "I", "agree"]
# ::lemmas ["seem", "a", "little", "hypocritical", "of", "she", "if", "i", "do", "say", "so", "myself", ".", "she", "do", "not", "wear", "pant", "either", ".", "but", "i", "agree"]
(c18-1 / multi-sentence
       :snt1 (c18-2 / seem-01
                    :ARG1 (c18-6 / hypocritical
                                 :domain (c18-0 / she)
                                 :degree (c18-7 / little))
                    :condition (c18-14 / say-01
                                       :ARG0 (c18-12 / i)
                                       :ARG1 (c18-3 / so)))
       :snt2 (c18-10 / wear-01
                     :ARG0 (c18-5 / she)
                     :ARG1 (c18-8 / pant)
                     :mod (c18-9 / either)
                     :polarity -)
       :snt3 (c18-11 / contrast-01
                     :ARG2 (c18-13 / agree-01
                                   :ARG0 (c18-4 / i))))

# ::snt agree, there's a difference between skanky and sexy
# ::tokens ["agree", ",", "there", "'s", "a", "difference", "between", "skanky", "and", "sexy"]
# ::lemmas ["agree", ",", "there", "be", "a", "difference", "between", "skanky", "and", "sexy"]
(c19-3 / agree-01
       :ARG0 (c19-2 / i)
       :ARG1 (c19-4 / differ-02
                    :ARG1 (c19-1 / skanky)
                    :ARG2 (c19-0 / sexy)))

# ::snt agree!
# ::tokens ["agree", "!"]
# ::lemmas ["agree", "!"]
(c20-0 / agree-01
       :mode expressive)

# ::snt I so agree!!!!!!!!!!
# ::tokens ["I", "so", "agree", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["i", "so", "agree", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
(c21-2 / agree-01
       :ARG0 (c21-1 / i)
       :degree (c21-0 / so)
       :mode expressive)

# ::snt including her
# ::tokens ["including", "her"]
# ::lemmas ["include", "she"]
(c22-0 / include-01
       :ARG1 (c22-1 / she))

# ::snt Janet said that about minutes ago!!!
# ::tokens ["Janet", "said", "that", "about", "minutes", "ago", "!", "!", "!"]
# ::lemmas ["Janet", "say", "that", "about", "minutes", "ago", "!", "!", "!"]
(c23-3 / say-01
       :ARG0 (c23-6 / person
                    :name (c23-1 / name
                                 :op1 "Janet"))
       :ARG1 (c23-7 / that)
       :time (c23-0 / before
                    :op1 (c23-5 / now)
                    :quant (c23-4 / about
                                  :op1 (c23-8 / temporal-quantity
                                              :unit (c23-2 / minute)
                                              :quant 1))))

# ::snt How original.
# ::tokens ["How", "original", "."]
# ::lemmas ["how", "original", "."]
(c24-0 / original
       :degree (c24-1 / so))

# ::snt Shes the best part of the show.
# ::tokens ["She", "s", "the", "best", "part", "of", "the", "show", "."]
# ::lemmas ["she", "s", "the", "good", "part", "of", "the", "show", "."]
(c25-2 / have-degree-91
       :ARG1 (c25-3 / part
                    :part-of (c25-1 / show-04))
       :ARG2 (c25-4 / good-02
                    :ARG1 c25-3)
       :ARG3 (c25-0 / most))

# ::snt Yup
# ::tokens ["Yup"]
# ::lemmas ["yup"]
(c26-0 / yup)

# ::snt They were my very first ever concert, at some big baptist church in Dallas.
# ::tokens ["They", "were", "my", "very", "first", "ever", "concert", ",", "at", "some", "big", "baptist", "church", "in", "Dallas", "."]
# ::lemmas ["they", "be", "my", "very", "first", "ever", "concert", ",", "at", "some", "big", "baptist", "church", "in", "Dallas", "."]
(c27-6 / concert
       :ord (c27-0 / ordinal-entity
                   :degree (c27-4 / very)
                   :value 1)
       :poss (c27-8 / i)
       :location (c27-10 / church
                         :mod (c27-1 / baptist)
                         :mod (c27-5 / big)
                         :mod (c27-3 / some)
                         :location (c27-7 / city
                                          :name (c27-2 / name
                                                       :op1 "Dallas")))
       :domain (c27-9 / they))

# ::snt I LOVED THAT SONG! that whole album!
# ::tokens ["I", "LOVED", "THAT", "SONG", "!", "that", "whole", "album", "!"]
# ::lemmas ["i", "love", "THAT", "SONG", "!", "that", "whole", "album", "!"]
(c28-1 / love-01
       :ARG0 (c28-4 / i)
       :ARG1 (c28-0 / song
                    :mod (c28-3 / that))
       :accompanier (c28-5 / album
                           :mod (c28-6 / that)
                           :mod (c28-2 / whole))
       :mode expressive)

# ::snt Omg Avalon. Remember Testify to Love? I do. Also relevant: "I kissed...the lord?...and I liked it."
# ::tokens ["Omg", "Avalon", ".", "Remember", "Testify", "to", "Love", "?", "I", "do", ".", "Also", "relevant", ":", "\"", "I", "kissed", "...", "the", "lord?", "...", "and", "I", "liked", "it", ".", "\""]
# ::lemmas ["Omg", "Avalon", ".", "remember", "testify", "to", "Love", "?", "i", "do", ".", "also", "relevant", ":", "\"", "i", "kiss", "...", "the", "lord?", "...", "and", "i", "like", "it", ".", "\""]
(c29-12 / multi-sentence
        :snt1 (c29-15 / person
                      :name (c29-13 / name
                                    :op1 "Avalon")
                      :mod (c29-3 / oh-my-god
                                  :mode expressive))
        :snt2 (c29-14 / remember-01
                      :ARG0 (c29-17 / i)
                      :ARG1 (c29-10 / testify-01
                                    :ARG2 (c29-1 / love-01))
                      :polarity (c29-9 / amr-unknown)
                      :polarity (c29-8 / amr-unknown))
        :snt3 (c29-2 / relevant-01
                     :ARG1 (c29-0 / say-01
                                  :ARG1 (c29-7 / and
                                               :op1 (c29-5 / kiss-01
                                                           :ARG0 (c29-4 / i)
                                                           :ARG1 (c29-11 / lord)
                                                           :polarity (c29-18 / amr-unknown))
                                               :op2 (c29-6 / like-01
                                                           :ARG0 c29-4
                                                           :ARG1 c29-5)))
                     :mod (c29-16 / also)))

# ::snt &lt;youth group's praise band. It always really irritated me
# ::tokens ["&", "lt;youth", "group", "'s", "praise", "band", ".", "It", "always", "really", "irritated", "me"]
# ::lemmas ["&", "lt;youth", "group", "'s", "praise", "band", ".", "it", "always", "really", "irritate", "i"]
(c30-2 / multi-sentence
       :snt1 (c30-0 / band
                    :ARG0-of (c30-5 / praise-01)
                    :poss (c30-1 / youth))
       :snt2 (c30-6 / irritate-01
                    :ARG0 (c30-3 / it)
                    :ARG1 (c30-8 / i)
                    :time (c30-7 / always)
                    :degree (c30-4 / really)))

# ::snt I hate how she always sounds like she's singing with her tongue sticking out. She reminds me of this girl that actually did that in my&gt;
# ::tokens ["I", "hate", "how", "she", "always", "sounds", "like", "she", "'s", "singing", "with", "her", "tongue", "sticking", "out", ".", "She", "reminds", "me", "of", "this", "girl", "that", "actually", "did", "that", "in", "my&gt", ";"]
# ::lemmas ["i", "hate", "how", "she", "always", "sound", "like", "she", "be", "singe", "with", "her", "tongue", "stick", "out", ".", "she", "remind", "i", "of", "this", "girl", "that", "actually", "do", "that", "in", "my&gt", ";"]
(c31-13 / multi-sentence
        :snt1 (c31-6 / hate-01
                     :ARG0 (c31-17 / i)
                     :ARG1 (c31-0 / sound-01
                                  :ARG1 (c31-4 / she
                                               :part (c31-10 / tongue))
                                  :ARG2 (c31-3 / sing-01
                                               :ARG0 c31-4
                                               :manner (c31-15 / stick-out-02
                                                               :ARG1 c31-10))
                                  :time (c31-9 / always)))
        :snt2 (c31-16 / remind-01
                      :ARG0 (c31-1 / she)
                      :ARG1 (c31-11 / girl
                                    :mod (c31-14 / this)
                                    :ARG0-of (c31-19 / do-02
                                                     :ARG1 (c31-18 / that)
                                                     :location (c31-8 / and
                                                                      :op1 (c31-5 / i)
                                                                      :op2 (c31-2 / gt))
                                                     :ARG1-of (c31-7 / actual-02)))
                      :ARG2 (c31-12 / i)))

# ::snt THAT SONG. I hate it, &amp; people are always like "that one isn't raunchy!" Um, has anyone listened to the chorus, and how she vocalizes?
# ::tokens ["THAT", "SONG", ".", "I", "hate", "it", ",", "&", "amp", ";", "people", "are", "always", "like", "\"", "that", "one", "is", "n't", "raunchy", "!", "\"", "Um", ",", "has", "anyone", "listened", "to", "the", "chorus", ",", "and", "how", "she", "vocalizes", "?"]
# ::lemmas ["that", "SONG", ".", "i", "hate", "it", ",", "&", "amp", ";", "people", "be", "always", "like", "\"", "that", "one", "be", "not", "raunchy", "!", "\"", "um", ",", "have", "anyone", "listen", "to", "the", "chorus", ",", "and", "how", "she", "vocalize", "?"]
(c32-11 / multi-sentence
        :snt1 (c32-18 / wrong-02
                      :ARG1 (c32-9 / that))
        :snt2 (c32-10 / and
                      :op1 (c32-6 / hate-01
                                  :ARG0 (c32-20 / i)
                                  :ARG1 (c32-4 / it))
                      :op2 (c32-8 / and
                                  :op1 c32-6
                                  :op2 (c32-16 / resemble-01
                                               :ARG1 (c32-17 / person)
                                               :ARG2 (c32-2 / raunchy
                                                            :domain (c32-3 / one
                                                                           :mod (c32-13 / that))
                                                            :polarity -)
                                               :time (c32-7 / always))))
        :snt3 (c32-1 / listen-01
                     :ARG0 (c32-22 / anyone)
                     :ARG1 (c32-19 / and
                                   :op1 (c32-12 / chorus)
                                   :op2 (c32-21 / thing
                                                :manner-of (c32-5 / vocalize-01
                                                                  :ARG0 (c32-0 / she))))
                     :polarity (c32-14 / amr-unknown)
                     :mod (c32-15 / um
                                  :mode expressive)))

# ::snt YUP. I vaguely remember her. She didn't do very well in the Christian music industry so she wasn't around long.
# ::tokens ["YUP", ".", "I", "vaguely", "remember", "her", ".", "She", "did", "n't", "do", "very", "well", "in", "the", "Christian", "music", "industry", "so", "she", "was", "n't", "around", "long", "."]
# ::lemmas ["yup", ".", "i", "vaguely", "remember", "she", ".", "she", "do", "not", "do", "very", "well", "in", "the", "Christian", "music", "industry", "so", "she", "be", "not", "around", "long", "."]
(c33-3 / multi-sentence
       :snt1 (c33-2 / yup
                    :mode expressive)
       :snt2 (c33-7 / remember-01
                    :ARG0 (c33-14 / i)
                    :ARG1 (c33-5 / she)
                    :manner (c33-8 / vague))
       :snt3 (c33-11 / cause-01
                     :ARG0 (c33-16 / do-02
                                   :ARG0 (c33-0 / she)
                                   :ARG1 (c33-12 / well-09
                                                 :degree (c33-13 / very))
                                   :ARG2 (c33-6 / industry
                                                :mod (c33-9 / music
                                                            :mod (c33-17 / religious-group
                                                                         :name (c33-4 / name
                                                                                      :op1 "Christian"))))
                                   :polarity -)
                     :ARG1 (c33-1 / be-located-at-91
                                  :ARG1 c33-0
                                  :ARG2 (c33-15 / around)
                                  :ARG1-of (c33-10 / long-03
                                                   :polarity -))))

# ::snt You can really tell her formative years were spent in that whole crowd.
# ::tokens ["You", "can", "really", "tell", "her", "formative", "years", "were", "spent", "in", "that", "whole", "crowd", "."]
# ::lemmas ["you", "can", "really", "tell", "she", "formative", "year", "be", "spend", "in", "that", "whole", "crowd", "."]
(c34-6 / possible-01
       :ARG1 (c34-9 / tell-01
                    :ARG0 (c34-3 / you)
                    :ARG1 (c34-4 / spend-02
                                 :ARG1 (c34-10 / year
                                               :mod (c34-0 / formative)
                                               :poss (c34-1 / she))
                                 :ARG2 (c34-2 / be-located-at-91
                                              :ARG1 c34-10
                                              :ARG2 (c34-7 / crowd
                                                           :mod (c34-8 / whole)
                                                           :mod (c34-11 / that))))
                    :ARG1-of (c34-5 / real-04)))

# ::snt &lt;I would have believed you
# ::tokens ["&", "lt;I", "would", "have", "believed", "you"]
# ::lemmas ["&", "lt;I", "would", "have", "believe", "you"]
(c35-0 / believe-01
       :ARG0 (c35-2 / i)
       :ARG1 (c35-1 / you))

# ::snt 'do you ever feel/like a plastic bag/floating through the wind/wanting to start again'If you had told me this was an Avalon song&gt;
# ::tokens ["'", "do", "you", "ever", "feel", "/", "like", "a", "plastic", "bag", "/", "floating", "through", "the", "wind", "/", "wanting", "to", "start", "again'If", "you", "had", "told", "me", "this", "was", "an", "Avalon", "song&gt", ";"]
# ::lemmas ["'", "do", "you", "ever", "feel", "/", "like", "a", "plastic", "bag", "/", "float", "through", "the", "wind", "/", "want", "to", "start", "again'if", "you", "have", "tell", "i", "this", "be", "an", "Avalon", "song&gt", ";"]
(c36-7 / have-condition-91
       :ARG1 (c36-5 / slash
                    :op1 (c36-0 / feel-01
                                :ARG0 (c36-3 / you)
                                :ARG1 (c36-2 / bag
                                             :consist-of (c36-8 / plastic)))
                    :op2 (c36-9 / float-01
                                :ARG1 c36-3
                                :path (c36-11 / wind))
                    :op3 (c36-10 / want-01
                                 :ARG0 c36-3
                                 :ARG1 (c36-1 / start-01
                                              :ARG0 c36-3
                                              :mod (c36-14 / again)))
                    :time (c36-6 / ever))
       :ARG2 (c36-12 / tell-01
                     :ARG0 c36-3
                     :ARG1 (c36-16 / song
                                   :name (c36-4 / name
                                                :op1 "Avalon")
                                   :domain (c36-15 / this))
                     :ARG2 (c36-13 / i)))

# ::snt i laughed loll
# ::tokens ["i", "laughed", "loll"]
# ::lemmas ["i", "laugh", "loll"]
(c37-1 / laugh-01
       :ARG0 (c37-2 / i)
       :manner (c37-0 / loud))

# ::snt think ? naaaaaa i KNOW !
# ::tokens ["think", "?", "naaaaaa", "i", "KNOW", "!"]
# ::lemmas ["think", "?", "naaaaaa", "i", "KNOW", "!"]
(c38-1 / multi-sentence
       :snt1 (c38-4 / think-01
                    :ARG0 (c38-0 / you)
                    :mode imperative)
       :snt2 (c38-2 / know-01
                    :ARG0 (c38-3 / i)
                    :mode expressive))

# ::snt you're delusional
# ::tokens ["you", "'re", "delusional"]
# ::lemmas ["you", "be", "delusional"]
(c39-0 / delusional
       :domain (c39-1 / you))

# ::snt .. Get real nigga you don't know her. Lol
# ::tokens ["..", "Get", "real", "nigga", "you", "do", "n't", "know", "her", ".", "Lol"]
# ::lemmas ["..", "get", "real", "nigga", "you", "do", "not", "know", "she", ".", "Lol"]
(c40-1 / multi-sentence
       :snt1 (c40-6 / get-03
                    :ARG1 (c40-0 / you)
                    :ARG2 (c40-3 / real-04
                                 :ARG1 c40-0)
                    :mode imperative)
       :snt2 (c40-4 / know-02
                    :ARG0 (c40-7 / you)
                    :ARG1 (c40-2 / she)
                    :ARG2-of (c40-5 / laugh-01
                                    :manner (c40-8 / loud)
                                    :mode expressive)
                    :polarity -))
