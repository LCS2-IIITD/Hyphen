# ::snt Steve...Steve...Steve. I know you and have prayed that you get help. I enjoy your show and love Marjorie. Karma is something isn't it?
# ::tokens ["Steve", "...", "Steve", "...", "Steve", ".", "I", "know", "you", "and", "have", "prayed", "that", "you", "get", "help", ".", "I", "enjoy", "your", "show", "and", "love", "Marjorie", ".", "Karma", "is", "something", "is", "n't", "it", "?"]
# ::lemmas ["Steve", "...", "Steve", "...", "Steve", ".", "i", "know", "you", "and", "have", "pray", "that", "you", "get", "help", ".", "i", "enjoy", "your", "show", "and", "love", "Marjorie", ".", "Karma", "be", "something", "be", "not", "it", "?"]
(c1-11 / multi-sentence
       :snt1 (c1-18 / person
                    :name (c1-15 / name
                                 :op1 "Steve"))
       :snt2 (c1-9 / and
                   :op1 (c1-7 / know-02
                              :ARG0 (c1-19 / i)
                              :ARG1 (c1-4 / you))
                   :op2 (c1-12 / pray-01
                               :ARG0 c1-19
                               :ARG1 (c1-6 / help-01
                                           :ARG1 c1-4)))
       :snt3 (c1-8 / and
                   :op1 (c1-17 / enjoy-01
                               :ARG0 (c1-5 / i)
                               :ARG1 (c1-0 / show-04
                                           :ARG0 (c1-10 / you)))
                   :op2 (c1-1 / love-01
                              :ARG0 c1-5
                              :ARG1 (c1-2 / person
                                          :name (c1-13 / name
                                                       :op1 "Marjorie")))
                   :snt4 (c1-3 / something
                               :domain (c1-14 / Karma)
                               :ARG1-of (c1-16 / request-confirmation-91))))

# ::snt Hes a coon for the oppressors, who cares. One luv
# ::tokens ["He", "s", "a", "coon", "for", "the", "oppressors", ",", "who", "cares", ".", "One", "luv"]
# ::lemmas ["he", "s", "a", "coon", "for", "the", "oppressor", ",", "who", "care", ".", "One", "luv"]
(c2-2 / multi-sentence
      :snt1 (c2-7 / coon
                  :beneficiary (c2-5 / person
                                     :ARG0-of (c2-0 / oppress-01))
                  :domain (c2-4 / he)
                  :ARG0-of (c2-10 / care-01
                                  :ARG1 (c2-3 / person
                                              :ARG0-of (c2-1 / oppress-01))))
      :snt2 (c2-6 / laugh-01
                  :ARG0 (c2-8 / i)
                  :manner (c2-9 / loud)))

# ::snt I guess if he can afford $400 million, it ain't no big deal, to each their own.
# ::tokens ["I", "guess", "if", "he", "can", "afford", "$", "400", "million", ",", "it", "ai", "n't", "no", "big", "deal", ",", "to", "each", "their", "own", "."]
# ::lemmas ["i", "guess", "if", "he", "can", "afford", "$", "400", "million", ",", "it", "be", "not", "no", "big", "deal", ",", "to", "each", "their", "own", "."]
(c3-10 / guess-01
       :ARG0 (c3-8 / i)
       :ARG1 (c3-11 / deal-03
                    :ARG1 (c3-2 / it)
                    :mod (c3-0 / big)
                    :beneficiary (c3-4 / each
                                       :mod (c3-9 / they))
                    :condition (c3-6 / possible-01
                                     :ARG1 (c3-3 / afford-01
                                                 :ARG0 (c3-5 / he)
                                                 :ARG1 (c3-1 / monetary-quantity
                                                             :unit (c3-7 / dollar)
                                                             :quant 400000000)))
                    :polarity -))

# ::snt I dont care what my wife is doing Im not leaving her ever if its gonna cost me mill
# ::tokens ["I", "do", "nt", "care", "what", "my", "wife", "is", "doing", "I", "m", "not", "leaving", "her", "ever", "if", "its", "gon", "na", "cost", "me", "mill"]
# ::lemmas ["i", "do", "not", "care", "what", "my", "wife", "be", "do", "i", "m", "not", "leave", "she", "ever", "if", "its", "going", "to", "cost", "i", "mill"]
(c4-1 / and
      :op1 (c4-6 / care-01
                 :ARG0 (c4-9 / i)
                 :ARG1 (c4-10 / thing
                              :ARG1-of (c4-11 / do-02
                                              :ARG0 (c4-4 / person
                                                          :ARG0-of (c4-3 / have-rel-role-91
                                                                         :ARG1 c4-9
                                                                         :ARG2 (c4-7 / wife)))))
                 :polarity -)
      :op2 (c4-5 / leave-11
                 :ARG0 c4-9
                 :ARG1 c4-4
                 :time (c4-2 / ever)
                 :condition (c4-12 / cost-01
                                   :ARG2 (c4-0 / monetary-quantity
                                               :unit (c4-8 / dollar)
                                               :quant 1000000)
                                   :ARG3 c4-9)
                 :ARG1-of c4-12
                 :polarity -))
