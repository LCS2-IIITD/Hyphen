# ::snt Of course!
# ::tokens ["Of", "course", "!"]
# ::lemmas ["of", "course", "!"]
(c1-0 / of-course
      :mode expressive)

# ::snt Awwwh I bet Diana is smiling from heaven right now
# ::tokens ["Awwwh", "I", "bet", "Diana", "is", "smiling", "from", "heaven", "right", "now"]
# ::lemmas ["Awwwh", "i", "bet", "Diana", "be", "smile", "from", "heaven", "right", "now"]
(c2-0 / bet-01
      :ARG0 (c2-7 / i)
      :ARG2 (c2-2 / smile-01
                  :ARG0 (c2-5 / person
                              :name (c2-1 / name
                                          :op1 "Diana"))
                  :source (c2-4 / heaven)
                  :time (c2-6 / now
                              :mod (c2-3 / right)))
      :mod (c2-8 / aw
                 :mode expressive))

# ::snt Am I the only one who thought this was a given? Was there competition?
# ::tokens ["Am", "I", "the", "only", "one", "who", "thought", "this", "was", "a", "given", "?", "Was", "there", "competition", "?"]
# ::lemmas ["be", "i", "the", "only", "one", "who", "think", "this", "be", "a", "give", "?", "be", "there", "competition", "?"]
(c3-1 / multi-sentence
      :snt1 (c3-3 / person
                  :polarity (c3-7 / amr-unknown)
                  :mod (c3-0 / only)
                  :domain (c3-6 / i)
                  :ARG0-of (c3-5 / think-01
                                 :ARG1 (c3-9 / thing
                                             :domain (c3-8 / this)
                                             :ARG1-of (c3-2 / give-01))))
      :snt2 (c3-4 / compete-01
                  :polarity c3-7))

# ::snt Kala ko si Harry Roque amp
# ::tokens ["Kala", "ko", "si", "Harry", "Roque", "amp"]
# ::lemmas ["Kala", "ko", "si", "Harry", "Roque", "amp"]
(c4-2 / kala
      :mod (c4-0 / person
                 :name (c4-1 / name
                             :op1 "Harry"
                             :op2 "Roque")
                 :ARG0-of (c4-3 / amp-01))
      :mode expressive)

# ::snt Hah
# ::tokens ["Hah"]
# ::lemmas ["hah"]
(c5-0 / ha
      :mode expressive)

# ::snt Id say he could send the spare but hes the one getting hitched
# ::tokens ["I", "d", "say", "he", "could", "send", "the", "spare", "but", "he", "s", "the", "one", "getting", "hitched"]
# ::lemmas ["i", "d", "say", "he", "could", "send", "the", "spare", "but", "he", "s", "the", "one", "getting", "hitch"]
(c6-4 / contrast-01
      :ARG1 (c6-1 / say-01
                  :ARG0 (c6-6 / i)
                  :ARG1 (c6-3 / possible-01
                              :ARG1 (c6-0 / send-01
                                          :ARG0 (c6-2 / he)
                                          :ARG1 (c6-7 / spare))))
      :ARG2 (c6-5 / hitch-01
                  :ARG1 c6-2))

# ::snt William is the representative &amp; gives the medals!
# ::tokens ["William", "is", "the", "representative", "&", "amp", ";", "gives", "the", "medals", "!"]
# ::lemmas ["William", "be", "the", "representative", "&", "amp", ";", "give", "the", "medal", "!"]
(c7-4 / and
      :op1 (c7-2 / represent-01
                 :ARG0 (c7-3 / person
                             :name (c7-0 / name
                                         :op1 "William")))
      :op2 (c7-5 / give-01
                 :ARG0 c7-3
                 :ARG1 (c7-1 / medal)))

# ::snt Neither support United or Chelsea so they might be ok
# ::tokens ["Neither", "support", "United", "or", "Chelsea", "so", "they", "might", "be", "ok"]
# ::lemmas ["neither", "support", "United", "or", "Chelsea", "so", "they", "might", "be", "ok"]
(c8-4 / support-01
      :ARG0 (c8-2 / you)
      :ARG1 (c8-0 / or
                  :op1 (c8-8 / team
                             :name (c8-3 / name
                                         :op1 "United"))
                  :op2 (c8-9 / team
                             :name (c8-5 / name
                                         :op1 "Chelsea")))
      :ARG0-of (c8-7 / cause-01
                     :ARG1 (c8-6 / possible-01
                                 :ARG1 (c8-1 / okay-04
                                             :ARG1 c8-0)))
      :polarity -)

# ::snt She wasn't invited, so if she's going she is going in a suitcase.
# ::tokens ["She", "was", "n't", "invited", ",", "so", "if", "she", "'s", "going", "she", "is", "going", "in", "a", "suitcase", "."]
# ::lemmas ["she", "be", "not", "invite", ",", "so", "if", "she", "be", "go", "she", "be", "go", "in", "a", "suitcase", "."]
(c9-4 / invite-01
      :ARG1 (c9-1 / she)
      :ARG0-of (c9-3 / cause-01
                     :ARG1 (c9-2 / have-condition-91
                                 :ARG1 (c9-6 / go-01
                                             :ARG1 c9-1
                                             :manner (c9-0 / suitcase))
                                 :ARG2 (c9-5 / go-01
                                             :ARG1 c9-1)))
      :polarity -)

# ::snt Whoredom, more appropriate. Bought and paid for by globalists/ communists. Look how they are playing G-d REFUSING medical assistance first to and now to .
# ::tokens ["Whoredom", ",", "more", "appropriate", ".", "Bought", "and", "paid", "for", "by", "globalists/", "communists", ".", "Look", "how", "they", "are", "playing", "G", "-", "d", "REFUSING", "medical", "assistance", "first", "to", "and", "now", "to", "."]
# ::lemmas ["Whoredom", ",", "more", "appropriate", ".", "buy", "and", "pay", "for", "by", "globalists/", "communist", ".", "look", "how", "they", "be", "play", "G", "-", "d", "REFUSING", "medical", "assistance", "first", "to", "and", "now", "to", "."]
(c10-13 / multi-sentence
        :snt1 (c10-5 / have-degree-91
                     :ARG1 (c10-21 / whoredom)
                     :ARG2 (c10-9 / appropriate-02
                                  :ARG1 c10-21)
                     :ARG3 (c10-4 / more))
        :snt2 (c10-7 / and
                     :op1 (c10-12 / buy-01
                                  :ARG0 (c10-2 / or
                                               :op1 (c10-10 / globalist)
                                               :op2 (c10-20 / political-movement
                                                            :name (c10-18 / name
                                                                          :op1 "communism")))
                                  :ARG1 c10-21)
                     :op2 (c10-14 / pay-01
                                  :ARG0 c10-2
                                  :ARG3 c10-21))
        :snt3 (c10-0 / look-01
                     :ARG0 (c10-3 / you)
                     :ARG1 (c10-8 / thing
                                  :manner-of (c10-1 / play-01
                                                    :ARG0 (c10-16 / they)
                                                    :ARG1 (c10-19 / refuse-01
                                                                  :ARG0 c10-16
                                                                  :ARG1 (c10-6 / assist-01
                                                                               :mod (c10-17 / medicine)))
                                                    :time (c10-23 / and
                                                                  :op1 (c10-22 / to
                                                                               :ord (c10-11 / ordinal-entity
                                                                                            :value 1))
                                                                  :op2 (c10-15 / now))))
                     :mode imperative))

# ::snt How many times you going to tweet you do not care
# ::tokens ["How", "many", "times", "you", "going", "to", "tweet", "you", "do", "not", "care"]
# ::lemmas ["how", "many", "time", "you", "go", "to", "tweet", "you", "do", "not", "care"]
(c12-0 / care-01
       :ARG0 (c12-1 / you)
       :ARG1 (c12-3 / tweet-02
                    :ARG0 c12-1
                    :frequency (c12-2 / amr-unknown))
       :polarity -)

# ::snt Hey Prince how about helping Alfie you know that child citizen of your country that your mesical system is killing!!!!
# ::tokens ["Hey", "Prince", "how", "about", "helping", "Alfie", "you", "know", "that", "child", "citizen", "of", "your", "country", "that", "your", "mesical", "system", "is", "killing", "!", "!", "!", "!"]
# ::lemmas ["hey", "Prince", "how", "about", "help", "Alfie", "you", "know", "that", "child", "citizen", "of", "your", "country", "that", "your", "mesical", "system", "be", "kill", "!", "!", "!", "!"]
(c13-3 / say-01
       :ARG0 (c13-10 / i)
       :ARG1 (c13-0 / suggest-01
                    :ARG0 c13-10
                    :ARG1 (c13-4 / help-01
                                 :ARG0 c13-10
                                 :ARG1 (c13-5 / know-01
                                              :ARG0 (c13-6 / person
                                                           :name (c13-1 / name
                                                                        :op1 "Alfie"))
                                              :ARG1 (c13-7 / citizen
                                                           :mod (c13-12 / child)
                                                           :mod (c13-8 / country
                                                                       :poss c13-6)
                                                           :ARG1-of (c13-11 / kill-01
                                                                            :ARG0 (c13-13 / system
                                                                                          :mod (c13-2 / mesical)
                                                                                          :poss c13-6))))
                                 :ARG2 c13-6)
                    :ARG2 c13-6)
       :ARG2 c13-6
       :mod (c13-9 / hey
                   :mode expressive))

# ::snt Wow what a shocker!
# ::tokens ["Wow", "what", "a", "shocker", "!"]
# ::lemmas ["wow", "what", "a", "shocker", "!"]
(c14-2 / thing
       :ARG0-of (c14-0 / shock-01
                       :degree (c14-1 / so))
       :mode expressive)

# ::snt News
# ::tokens ["News"]
# ::lemmas ["news"]
(c15-0 / news)

# ::snt Let me guess, you guys are against everything progressive and good in this world?
# ::tokens ["Let", "me", "guess", ",", "you", "guys", "are", "against", "everything", "progressive", "and", "good", "in", "this", "world", "?"]
# ::lemmas ["let", "i", "guess", ",", "you", "guy", "be", "against", "everything", "progressive", "and", "good", "in", "this", "world", "?"]
(c16-4 / let-01
       :ARG0 (c16-1 / you
                    :mod (c16-10 / guy))
       :ARG1 (c16-9 / guess-01
                    :ARG0 (c16-8 / i)
                    :ARG1 (c16-0 / oppose-01
                                 :ARG0 c16-1
                                 :ARG1 (c16-3 / everything
                                              :ARG1-of (c16-5 / progressive-02)
                                              :ARG1-of (c16-11 / good-02))
                                 :location (c16-6 / world
                                                  :mod (c16-7 / this))))
       :polarity (c16-2 / amr-unknown))

# ::snt Oops! Cancel that plan. Surely his big brother, seeing Scripture and the example of damage from adultery with their parents, would NOT take pleasure in (support in any way) his brother marrying another man's wife. See Mark :12
# ::tokens ["Oops", "!", "Cancel", "that", "plan", ".", "Surely", "his", "big", "brother", ",", "seeing", "Scripture", "and", "the", "example", "of", "damage", "from", "adultery", "with", "their", "parents", ",", "would", "NOT", "take", "pleasure", "in", "(", "support", "in", "any", "way", ")", "his", "brother", "marrying", "another", "man", "'s", "wife", ".", "See", "Mark", ":", "12"]
# ::lemmas ["oop", "!", "cancel", "that", "plan", ".", "surely", "his", "big", "brother", ",", "see", "scripture", "and", "the", "example", "of", "damage", "from", "adultery", "with", "their", "parent", ",", "would", "not", "take", "pleasure", "in", "(", "support", "in", "any", "way", ")", "his", "brother", "marry", "another", "man", "'s", "wife", ".", "see", "Mark", ":", "12"]
(c17-21 / multi-sentence
        :snt1 (c17-6 / oops
                     :mode expressive)
        :snt2 (c17-24 / cancel-01
                      :ARG0 (c17-8 / you)
                      :ARG1 (c17-32 / plan-01
                                    :mod (c17-17 / that))
                      :mode imperative)
        :snt3 (c17-25 / take-01
                      :ARG0 (c17-22 / person
                                    :ARG0-of (c17-11 / have-rel-role-91
                                                     :ARG1 (c17-34 / he)
                                                     :ARG2 (c17-20 / brother))
                                    :mod (c17-1 / big)
                                    :ARG0-of (c17-0 / see-01
                                                    :ARG1 (c17-16 / and
                                                                  :op1 (c17-7 / Scripture)
                                                                  :op2 (c17-31 / exemplify-01
                                                                               :ARG0 (c17-35 / damage-01
                                                                                             :ARG0 (c17-15 / adultery
                                                                                                           :prep-with (c17-3 / person
                                                                                                                             :ARG0-of (c17-10 / have-rel-role-91
                                                                                                                                              :ARG1 c17-22
                                                                                                                                              :ARG2 (c17-2 / parent)))))))))
                      :ARG1 (c17-18 / pleasure)
                      :ARG2 (c17-12 / marry-01
                                    :ARG1 (c17-36 / person
                                                  :ARG0-of (c17-26 / have-rel-role-91
                                                                   :ARG1 c17-22
                                                                   :ARG2 (c17-4 / brother)))
                                    :ARG2 (c17-28 / person
                                                  :ARG0-of (c17-13 / have-rel-role-91
                                                                   :ARG1 (c17-27 / man
                                                                                 :mod (c17-14 / another))
                                                                   :ARG2 (c17-33 / wife))))
                      :ARG1-of (c17-5 / support-01
                                      :manner (c17-23 / any))
                      :polarity -)
        :snt4 (c17-30 / see-01
                      :ARG1 (c17-9 / verse
                                   :part-of (c17-19 / book
                                                    :name (c17-29 / name
                                                                  :op1 "Mark"))
                                   :mod 12)))

# ::snt Don't do it William. Don't be a part of this marriage because when it fails and Meghan cleans out Harry's bank account you don't want Harry to say, WHY DIDN'T YOU STOP ME WILLIAM!!!!???
# ::tokens ["Do", "n't", "do", "it", "William", ".", "Do", "n't", "be", "a", "part", "of", "this", "marriage", "because", "when", "it", "fails", "and", "Meghan", "cleans", "out", "Harry", "'s", "bank", "account", "you", "do", "n't", "want", "Harry", "to", "say", ",", "WHY", "DIDN'T", "YOU", "STOP", "ME", "WILLIAM", "!", "!", "!", "!", "?", "?", "?"]
# ::lemmas ["do", "not", "do", "it", "William", ".", "do", "not", "be", "a", "part", "of", "this", "marriage", "because", "when", "it", "fail", "and", "Meghan", "clean", "out", "Harry", "'s", "bank", "account", "you", "do", "not", "want", "Harry", "to", "say", ",", "why", "didn't", "you", "stop", "ME", "WILLIAM", "!", "!", "!", "!", "?", "?", "?"]
(c19-15 / multi-sentence
        :snt1 (c19-0 / say-01
                     :ARG0 (c19-24 / i)
                     :ARG1 (c19-25 / do-02
                                   :ARG0 (c19-21 / person
                                                 :name (c19-20 / name
                                                               :op1 "William"))
                                   :ARG1 (c19-6 / it)
                                   :polarity -
                                   :mode imperative)
                     :ARG2 c19-21)
        :snt2 (c19-23 / want-01
                      :ARG0 (c19-5 / you)
                      :ARG1 (c19-4 / say-01
                                   :ARG0 (c19-16 / person
                                                 :name (c19-17 / name
                                                               :op1 "Harry"))
                                   :ARG1 (c19-10 / amr-unknown
                                                 :ARG0-of (c19-18 / cause-01
                                                                  :ARG1 (c19-3 / stop-01
                                                                               :ARG0 c19-10
                                                                               :polarity -)
                                                                  :ARG1 (c19-12 / i)))
                                   :time (c19-9 / and
                                                :op1 (c19-19 / fail-01
                                                             :ARG1 (c19-7 / marry-01
                                                                          :mod (c19-11 / this)))
                                                :op2 (c19-13 / clean-out-03
                                                             :ARG0 (c19-2 / person
                                                                          :name (c19-22 / name
                                                                                        :op1 "Meghan"))
                                                             :ARG1 (c19-8 / account
                                                                          :mod (c19-14 / bank)
                                                                          :poss c19-16))))
                      :ARG2 c19-16
                      :ARG1-of (c19-1 / cause-01
                                      :ARG0 c19-9
                                      :op1 c19-19
                                      :op2 c19-13)
                      :polarity -))

# ::snt All these people saying they "do not care" make me laugh if you do not care why tweet about it then
# ::tokens ["All", "these", "people", "saying", "they", "\"", "do", "not", "care", "\"", "make", "me", "laugh", "if", "you", "do", "not", "care", "why", "tweet", "about", "it", "then"]
# ::lemmas ["all", "these", "people", "say", "they", "\"", "do", "not", "care", "\"", "make", "i", "laugh", "if", "you", "do", "not", "care", "why", "tweet", "about", "it", "then"]
(c20-2 / make-02
       :ARG0 (c20-6 / person
                    :mod (c20-5 / all)
                    :mod (c20-11 / this)
                    :ARG0-of (c20-3 / say-01
                                    :ARG1 (c20-8 / care-01
                                                 :ARG0 c20-6
                                                 :polarity -)))
       :ARG1 (c20-7 / laugh-01
                    :ARG0 (c20-10 / i))
       :condition (c20-14 / care-01
                          :ARG0 (c20-1 / you)
                          :polarity -)
       :ARG0-of (c20-9 / cause-01
                       :ARG1 (c20-13 / tweet-01
                                     :ARG0 c20-1
                                     :topic (c20-4 / it)
                                     :ARG1-of (c20-0 / cause-01
                                                     :ARG0 (c20-12 / amr-unknown)))))

# ::snt All these people saying they "do not care" fair enough if you do not care why tweet about it
# ::tokens ["All", "these", "people", "saying", "they", "\"", "do", "not", "care", "\"", "fair", "enough", "if", "you", "do", "not", "care", "why", "tweet", "about", "it"]
# ::lemmas ["all", "these", "people", "say", "they", "\"", "do", "not", "care", "\"", "fair", "enough", "if", "you", "do", "not", "care", "why", "tweet", "about", "it"]
(c21-3 / have-condition-91
       :ARG1 (c21-1 / say-01
                    :ARG0 (c21-4 / person
                                 :mod (c21-9 / all)
                                 :mod (c21-7 / this))
                    :ARG1 (c21-5 / care-01
                                 :ARG0 c21-4
                                 :ARG2-of (c21-6 / have-degree-91
                                                 :ARG1 c21-4
                                                 :ARG3 (c21-2 / enough))
                                 :polarity -))
       :ARG2 (c21-11 / care-01
                     :ARG0 (c21-0 / you)
                     :ARG1-of (c21-8 / cause-01
                                     :ARG0 (c21-10 / amr-unknown))
                     :polarity -))

# ::snt Because they have actualy seen active service in iraq &amp; afghanistan when was the last president who did that
# ::tokens ["Because", "they", "have", "actualy", "seen", "active", "service", "in", "iraq", "&", "amp", ";", "afghanistan", "when", "was", "the", "last", "president", "who", "did", "that"]
# ::lemmas ["because", "they", "have", "actualy", "see", "active", "service", "in", "iraq", "&", "amp", ";", "afghanistan", "when", "be", "the", "last", "president", "who", "do", "that"]
(c22-9 / cause-01
       :ARG0 (c22-3 / see-01
                    :ARG0 (c22-12 / they)
                    :ARG1 (c22-1 / serve-01
                                 :ARG1-of (c22-14 / activity-06)
                                 :location (c22-13 / and
                                                   :op1 (c22-16 / country
                                                                :name (c22-2 / name
                                                                             :op1 "Iraq"))
                                                   :op2 (c22-11 / country
                                                                :name (c22-4 / name
                                                                             :op1 "amp"))))
                    :ARG1-of (c22-10 / actual-02))
       :ARG1 (c22-0 / country
                    :name (c22-5 / name
                                 :op1 "Afghanistan")
                    :ARG0-of (c22-6 / have-org-role-91
                                    :ARG2 (c22-7 / president)
                                    :mod (c22-8 / last))
                    :time (c22-15 / amr-unknown)))

# ::snt You must do if you tweeted that if you do not care why tweet about it just ignore it
# ::tokens ["You", "must", "do", "if", "you", "tweeted", "that", "if", "you", "do", "not", "care", "why", "tweet", "about", "it", "just", "ignore", "it"]
# ::lemmas ["you", "must", "do", "if", "you", "tweet", "that", "if", "you", "do", "not", "care", "why", "tweet", "about", "it", "just", "ignore", "it"]
(c23-0 / obligate-01
       :ARG1 (c23-1 / you)
       :ARG2 (c23-7 / do-02
                    :ARG0 c23-1
                    :condition (c23-6 / tweet-01
                                      :ARG0 c23-1
                                      :ARG1 (c23-5 / ignore-01
                                                   :ARG0 c23-1
                                                   :ARG1 (c23-2 / it)
                                                   :mod (c23-4 / just)
                                                   :condition (c23-3 / care-01
                                                                     :ARG0 c23-1
                                                                     :polarity -)
                                                   :mode imperative)))
       :condition (c23-8 / tweet-01
                         :ARG0 c23-1
                         :ARG1 c23-5))

# ::snt Why tweet about it then if you do not care
# ::tokens ["Why", "tweet", "about", "it", "then", "if", "you", "do", "not", "care"]
# ::lemmas ["why", "tweet", "about", "it", "then", "if", "you", "do", "not", "care"]
(c24-2 / have-condition-91
       :ARG1 (c24-5 / tweet-01
                    :ARG0 (c24-0 / you)
                    :topic (c24-4 / it)
                    :ARG1-of (c24-3 / cause-01
                                    :ARG0 (c24-1 / amr-unknown))
                    :mode imperative)
       :ARG2 (c24-6 / care-01
                    :ARG0 c24-0
                    :polarity -))

# ::snt I swore he was going to ask Ellen to be his best man!
# ::tokens ["I", "swore", "he", "was", "going", "to", "ask", "Ellen", "to", "be", "his", "best", "man", "!"]
# ::lemmas ["i", "swear", "he", "be", "go", "to", "ask", "Ellen", "to", "be", "his", "good", "man", "!"]
(c26-2 / swear-01
       :ARG0 (c26-7 / i)
       :ARG1 (c26-8 / ask-02
                    :ARG0 (c26-3 / he)
                    :ARG1 (c26-6 / have-degree-91
                                 :ARG1 (c26-0 / man
                                              :domain (c26-4 / person
                                                             :name (c26-1 / name
                                                                          :op1 "Ellen")))
                                 :ARG2 (c26-9 / good-02
                                              :ARG1 c26-0)
                                 :ARG3 (c26-5 / most))
                    :ARG2 c26-4))

# ::snt Dont mind them. Help Us Save Alfie
# ::tokens ["Do", "nt", "mind", "them", ".", "Help", "Us", "Save", "Alfie"]
# ::lemmas ["do", "not", "mind", "they", ".", "help", "Us", "Save", "Alfie"]
(c27-1 / multi-sentence
       :snt1 (c27-5 / mind-15
                    :ARG0 (c27-0 / you)
                    :ARG1 (c27-8 / they)
                    :polarity -
                    :mode imperative)
       :snt2 (c27-4 / help-01
                    :ARG0 (c27-9 / you)
                    :ARG1 (c27-3 / save-02
                                 :ARG0 (c27-7 / we)
                                 :ARG1 (c27-6 / person
                                              :name (c27-2 / name
                                                           :op1 "Alfie")))
                    :ARG2 c27-7
                    :mode imperative))

# ::snt unfortunately, our president won't even be invited because he is such a disgrace.
# ::tokens ["unfortunately", ",", "our", "president", "wo", "n't", "even", "be", "invited", "because", "he", "is", "such", "a", "disgrace", "."]
# ::lemmas ["unfortunately", ",", "our", "president", "will", "not", "even", "be", "invite", "because", "he", "be", "such", "a", "disgrace", "."]
(c28-8 / invite-01
       :ARG1 (c28-5 / person
                    :ARG0-of (c28-4 / have-org-role-91
                                    :ARG2 (c28-1 / president))
                    :poss (c28-6 / we))
       :mod (c28-3 / even)
       :ARG1-of (c28-7 / cause-01
                       :ARG0 (c28-9 / disgrace-01
                                    :ARG0 c28-5
                                    :degree (c28-2 / such)))
       :ARG2-of (c28-0 / fortunate-01
                       :polarity -)
       :polarity -)

# ::snt WHY THE DRESS LIKE THE DICTATORS FROM VENEZUELA...
# ::tokens ["WHY", "THE", "DRESS", "LIKE", "THE", "DICTATORS", "FROM", "VENEZUELA", "..."]
# ::lemmas ["why", "the", "dress", "like", "the", "dictators", "from", "VENEZUELA", "..."]
(c30-5 / cause-01
       :ARG0 (c30-6 / amr-unknown)
       :ARG1 (c30-3 / resemble-01
                    :ARG1 (c30-4 / person
                                 :ARG0-of (c30-1 / prostitute-01))
                    :ARG2 (c30-7 / person
                                 :ARG0-of (c30-8 / crime-02)
                                 :source (c30-2 / state
                                                :name (c30-0 / name
                                                             :op1 "Venezuela")))))

# ::snt Welcome to socialized medicine
# ::tokens ["Welcome", "to", "socialized", "medicine"]
# ::lemmas ["welcome", "to", "socialize", "medicine"]
(c31-0 / welcome-01
       :ARG2 (c31-1 / medicine
                    :ARG1-of (c31-2 / socialize-02)))

# ::snt %
# ::tokens ["%"]
# ::lemmas ["%"]
(c32-0 / percentage-entity
       :value 25)

# ::snt Wow ! Guy asks his brother to be best man at his wedding! Faux news youre hilarious
# ::tokens ["Wow", "!", "Guy", "asks", "his", "brother", "to", "be", "best", "man", "at", "his", "wedding", "!", "Faux", "news", "you", "re", "hilarious"]
# ::lemmas ["wow", "!", "Guy", "ask", "his", "brother", "to", "be", "good", "man", "at", "his", "wedding", "!", "faux", "news", "you", "re", "hilarious"]
(c33-2 / multi-sentence
       :snt1 (c33-9 / wow-01
                    :mode expressive)
       :snt2 (c33-12 / ask-02
                     :ARG0 (c33-13 / guy)
                     :ARG1 (c33-5 / man
                                  :ARG1-of (c33-6 / have-degree-91
                                                  :ARG2 (c33-11 / good-02
                                                                :ARG1 c33-5)
                                                  :ARG3 (c33-14 / most))
                                  :domain (c33-7 / person
                                                 :ARG0-of (c33-10 / have-rel-role-91
                                                                  :ARG1 c33-13
                                                                  :ARG2 (c33-1 / brother)))
                                  :time (c33-8 / wed-01
                                               :ARG1 c33-13))
                     :ARG2 c33-7)
       :snt3 (c33-4 / hilarious
                    :domain (c33-3 / news
                                   :mod (c33-0 / faux))))

# ::snt Thanks for letting me know! I am just speechless...
# ::tokens ["Thanks", "for", "letting", "me", "know", "!", "I", "am", "just", "speechless", "..."]
# ::lemmas ["thank", "for", "let", "i", "know", "!", "i", "be", "just", "speechless", "..."]
(c34-1 / multi-sentence
       :snt1 (c34-7 / thank-01
                    :ARG0 (c34-6 / i)
                    :ARG1 (c34-0 / you)
                    :ARG2 (c34-4 / let-know-07
                                 :ARG0 c34-0
                                 :ARG1 c34-6))
       :snt2 (c34-2 / speechless
                    :domain (c34-3 / i)
                    :mod (c34-5 / just)))

# ::snt Bow down to your noble lords and ladies. Some bow down to this families of royalty in the UK, others bow down to those in the Aristocracy in America, either way, you are nothing more than serfs to them.
# ::tokens ["Bow", "down", "to", "your", "noble", "lords", "and", "ladies", ".", "Some", "bow", "down", "to", "this", "families", "of", "royalty", "in", "the", "UK", ",", "others", "bow", "down", "to", "those", "in", "the", "Aristocracy", "in", "America", ",", "either", "way", ",", "you", "are", "nothing", "more", "than", "serfs", "to", "them", "."]
# ::lemmas ["bow", "down", "to", "your", "noble", "lord", "and", "lady", ".", "some", "bow", "down", "to", "this", "family", "of", "royalty", "in", "the", "UK", ",", "other", "bow", "down", "to", "those", "in", "the", "Aristocracy", "in", "America", ",", "either", "way", ",", "you", "be", "nothing", "more", "than", "serfs", "to", "they", "."]
(c35-16 / multi-sentence
        :snt1 (c35-15 / bow-01
                      :ARG0 (c35-6 / you)
                      :ARG2 (c35-11 / and
                                    :op1 (c35-2 / lord
                                                :mod (c35-23 / noble)
                                                :poss c35-6)
                                    :op2 (c35-13 / lady
                                                 :mod (c35-18 / noble)
                                                 :poss c35-6))
                      :direction (c35-29 / down)
                      :mode imperative)
        :snt2 (c35-9 / and
                     :op1 (c35-1 / bow-01
                                 :ARG0 (c35-26 / person
                                               :quant (c35-0 / some))
                                 :ARG2 (c35-22 / family
                                               :mod (c35-24 / royalty)
                                               :mod (c35-10 / this)
                                               :location (c35-19 / country
                                                                 :name (c35-27 / name
                                                                               :op1 "UK"))))
                     :op2 (c35-3 / bow-01
                                 :ARG0 (c35-17 / person
                                               :mod (c35-4 / other))
                                 :ARG2 c35-22
                                 :mod c35-24)
                     :location (c35-14 / country
                                       :name (c35-20 / name
                                                     :op1 "America"))
                     :mod c35-10)
        :snt3 (c35-7 / have-mod-91
                     :ARG1 (c35-12 / you)
                     :ARG2 (c35-5 / serf
                                  :beneficiary (c35-21 / they)
                                  :mod (c35-8 / more
                                              :polarity -))
                     :mod (c35-28 / way
                                  :mod (c35-25 / either))))

# ::snt what life? even Italy say they cant save him. you cant regrow a brain
# ::tokens ["what", "life", "?", "even", "Italy", "say", "they", "ca", "nt", "save", "him", ".", "you", "ca", "nt", "regrow", "a", "brain"]
# ::lemmas ["what", "life", "?", "even", "Italy", "say", "they", "can", "not", "save", "he", ".", "you", "can", "not", "regrow", "a", "brain"]
(c36-3 / multi-sentence
       :snt1 (c36-10 / life
                     :mod (c36-14 / amr-unknown))
       :snt2 (c36-5 / say-01
                    :ARG0 (c36-12 / country
                                  :name (c36-4 / name
                                               :op1 "Italy")
                                  :mod (c36-8 / even))
                    :ARG1 (c36-13 / and
                                  :op1 (c36-11 / possible-01
                                               :ARG1 (c36-0 / save-02
                                                            :ARG0 c36-12
                                                            :ARG1 (c36-9 / he))
                                               :polarity -)
                                  :op2 (c36-6 / possible-01
                                              :ARG1 (c36-7 / regrow-01
                                                           :ARG0 (c36-2 / you)
                                                           :ARG1 (c36-1 / brain))
                                              :polarity -))))

# ::snt I'd like to see Prince Harry ask for help with Alfie Evans.
# ::tokens ["I", "'d", "like", "to", "see", "Prince", "Harry", "ask", "for", "help", "with", "Alfie", "Evans", "."]
# ::lemmas ["i", "would", "like", "to", "see", "Prince", "Harry", "ask", "for", "help", "with", "Alfie", "Evans", "."]
(c37-5 / like-02
       :ARG0 (c37-7 / i)
       :ARG1 (c37-2 / see-01
                    :ARG0 c37-7
                    :ARG1 (c37-8 / ask-02
                                 :ARG0 (c37-4 / person
                                              :name (c37-0 / name
                                                           :op1 "Prince"
                                                           :op2 "Harry"))
                                 :ARG1 (c37-3 / help-01
                                              :ARG0 c37-4
                                              :ARG2 (c37-1 / person
                                                           :name (c37-6 / name
                                                                        :op1 "Alfie"
                                                                        :op2 "Evans")))
                                 :ARG2 c37-4)))

# ::snt If you dont care about this story, why are you taking the time to tell us? Just keep scrolling.
# ::tokens ["If", "you", "do", "nt", "care", "about", "this", "story", ",", "why", "are", "you", "taking", "the", "time", "to", "tell", "us", "?", "Just", "keep", "scrolling", "."]
# ::lemmas ["if", "you", "do", "not", "care", "about", "this", "story", ",", "why", "be", "you", "take", "the", "time", "to", "tell", "we", "?", "just", "keep", "scroll", "."]
(c39-2 / multi-sentence
       :snt1 (c39-9 / take-01
                    :ARG0 (c39-1 / you)
                    :ARG1 (c39-11 / time)
                    :purpose (c39-10 / tell-01
                                     :ARG0 c39-1
                                     :ARG2 (c39-7 / we))
                    :ARG1-of (c39-8 / cause-01
                                    :ARG0 (c39-4 / amr-unknown))
                    :condition (c39-14 / care-01
                                       :ARG0 c39-1
                                       :ARG1 (c39-3 / story
                                                    :mod (c39-5 / this))
                                       :polarity -))
       :snt2 (c39-6 / keep-02
                    :ARG0 (c39-12 / you)
                    :ARG1 (c39-0 / scroll-01
                                 :ARG0 c39-12)
                    :mod (c39-13 / just)))

# ::snt Too bad your Orange Fearless Leader is not invited.
# ::tokens ["Too", "bad", "your", "Orange", "Fearless", "Leader", "is", "not", "invited", "."]
# ::lemmas ["too", "bad", "your", "Orange", "Fearless", "Leader", "be", "not", "invite", "."]
(c40-5 / have-degree-91
       :ARG1 (c40-8 / invite-01
                    :ARG1 (c40-7 / person
                                 :ARG0-of (c40-6 / lead-02
                                                 :ARG1 (c40-3 / you))
                                 :mod (c40-0 / fearless)
                                 :mod (c40-1 / organization
                                             :name (c40-4 / name
                                                          :op1 "Society"
                                                          :op2 "of"
                                                          :op3 "Orange"
                                                          :op4 "Fearless")))
                    :polarity -)
       :ARG2 (c40-2 / bad-07
                    :ARG1 c40-8)
       :ARG3 (c40-9 / too))

# ::snt Who gives a shit
# ::tokens ["Who", "gives", "a", "shit"]
# ::lemmas ["who", "give", "a", "shit"]
(c41-0 / give-16
       :ARG0 (c41-2 / amr-unknown)
       :ARG1 (c41-1 / shit))

# ::snt What a News station fox is
# ::tokens ["What", "a", "News", "station", "fox", "is"]
# ::lemmas ["what", "a", "News", "station", "fox", "be"]
(c42-0 / fox
       :mod (c42-3 / station
                   :name (c42-2 / name
                                :op1 "News"
                                :op2 "Station"))
       :degree (c42-1 / so))

# ::snt I don't care about the Royals anymore period
# ::tokens ["I", "do", "n't", "care", "about", "the", "Royals", "anymore", "period"]
# ::lemmas ["i", "do", "not", "care", "about", "the", "Royals", "anymore", "period"]
(c44-5 / and
       :op1 (c44-3 / care-01
                   :ARG0 (c44-4 / i)
                   :ARG1 (c44-0 / family
                                :name (c44-1 / name
                                             :op1 "Royal"))
                   :mod (c44-6 / anymore)
                   :polarity -)
       :op2 (c44-2 / period))

# ::snt I would hope so
# ::tokens ["I", "would", "hope", "so"]
# ::lemmas ["i", "would", "hope", "so"]
(c45-0 / hope-01
       :ARG0 (c45-1 / i)
       :ARG1 (c45-2 / so))

# ::snt This news story gets a big DUH
# ::tokens ["This", "news", "story", "gets", "a", "big", "DUH"]
# ::lemmas ["this", "news", "story", "get", "a", "big", "DUH"]
(c46-4 / get-02
       :ARG0 (c46-2 / story
                    :mod (c46-1 / news)
                    :mod (c46-3 / this))
       :ARG1 (c46-5 / DUH
                    :mod (c46-0 / big)))

# ::snt who is going to be best man when William goes to get hair plugs
# ::tokens ["who", "is", "going", "to", "be", "best", "man", "when", "William", "goes", "to", "get", "hair", "plugs"]
# ::lemmas ["who", "be", "go", "to", "be", "good", "man", "when", "William", "go", "to", "get", "hair", "plug"]
(c47-3 / have-degree-91
       :ARG1 (c47-7 / amr-unknown)
       :ARG2 (c47-8 / good-02
                    :ARG1 c47-7)
       :ARG3 (c47-0 / most)
       :time (c47-6 / go-02
                    :ARG0 (c47-4 / person
                                 :name (c47-1 / name
                                              :op1 "William"))
                    :ARG4 (c47-9 / get-01
                                 :ARG0 c47-4
                                 :ARG1 (c47-2 / plug-01
                                              :ARG1 (c47-5 / hair)))))

# ::snt Uh ok??? Yes such big news????
# ::tokens ["Uh", "ok", "?", "?", "?", "Yes", "such", "big", "news", "?", "?", "?", "?"]
# ::lemmas ["uh", "ok", "?", "?", "?", "yes", "such", "big", "news", "?", "?", "?", "?"]
(c48-4 / multi-sentence
       :snt1 (c48-0 / okay-01
                    :mod (c48-7 / uh
                                :mode expressive))
       :snt2 (c48-3 / news
                    :mod (c48-1 / big)
                    :mod (c48-5 / such)
                    :mod (c48-2 / yes)
                    :polarity (c48-6 / amr-unknown)))

# ::snt what a shocker never wud have guessed
# ::tokens ["what", "a", "shocker", "never", "wud", "have", "guessed"]
# ::lemmas ["what", "a", "shocker", "never", "wud", "have", "guess"]
(c50-4 / thing
       :ARG0-of (c50-1 / shock-01
                       :degree (c50-0 / so))
       :ARG1-of (c50-5 / guess-01
                       :ARG0 (c50-3 / wud)
                       :time (c50-2 / ever)
                       :polarity -))
