# ::snt And we care why?
# ::tokens ["And", "we", "care", "why", "?"]
# ::lemmas ["and", "we", "care", "why", "?"]
(c1-3 / and
      :op2 (c1-0 / care-01
                 :ARG0 (c1-1 / we)
                 :ARG1 (c1-2 / amr-unknown
                             :ARG0-of (c1-4 / cause-01))))

# ::snt Am I the only one shocked this was still even happening?
# ::tokens ["Am", "I", "the", "only", "one", "shocked", "this", "was", "still", "even", "happening", "?"]
# ::lemmas ["be", "i", "the", "only", "one", "shock", "this", "be", "still", "even", "happen", "?"]
(c2-2 / shock-01
      :polarity (c2-6 / amr-unknown)
      :ARG0 (c2-3 / event
                  :mod (c2-7 / even)
                  :mod (c2-4 / this)
                  :mod (c2-0 / still))
      :ARG1 (c2-5 / i
                  :mod (c2-1 / only)))

# ::snt RIP gone, but not forgotten.
# ::tokens ["RIP", "gone", ",", "but", "not", "forgotten", "."]
# ::lemmas ["RIP", "go", ",", "but", "not", "forget", "."]
(c3-1 / contrast-01
      :ARG1 (c3-0 / go-02
                  :ARG0 (c3-3 / you))
      :ARG2 (c3-2 / forget-01
                  :ARG1 c3-3
                  :polarity -))

# ::snt GET NEW IPHONE HERE
# ::tokens ["GET", "NEW", "IPHONE", "HERE"]
# ::lemmas ["get", "new", "iphone", "here"]
(c4-4 / get-01
      :ARG0 (c4-0 / you)
      :ARG1 (c4-3 / internet)
      :location (c4-2 / here)
      :ARG1-of (c4-1 / new-01)
      :mode imperative)

# ::snt you called it Doug! Who's the next one to go??
# ::tokens ["you", "called", "it", "Doug", "!", "Who", "'s", "the", "next", "one", "to", "go", "?", "?"]
# ::lemmas ["you", "call", "it", "Doug", "!", "who", "be", "the", "next", "one", "to", "go", "?", "?"]
(c5-1 / multi-sentence
      :snt1 (c5-5 / call-01
                  :ARG0 (c5-0 / you)
                  :ARG1 (c5-6 / it)
                  :ARG2 (c5-4 / person
                              :name (c5-2 / name
                                          :op1 "Doug")))
      :snt2 (c5-8 / go-01
                  :ARG1 (c5-7 / amr-unknown
                              :mod (c5-3 / next))))

# ::snt Excellent journalism
# ::tokens ["Excellent", "journalism"]
# ::lemmas ["excellent", "journalism"]
(c6-1 / journalism
      :ARG1-of (c6-0 / excellent-02))

# ::snt Next celebrity suicide?
# ::tokens ["Next", "celebrity", "suicide", "?"]
# ::lemmas ["next", "celebrity", "suicide", "?"]
(c7-3 / suicide
      :polarity (c7-0 / amr-unknown)
      :mod (c7-1 / celebrity)
      :mod (c7-2 / next))

# ::snt He failed to realize the purpose.
# ::tokens ["He", "failed", "to", "realize", "the", "purpose", "."]
# ::lemmas ["he", "fail", "to", "realize", "the", "purpose", "."]
(c8-0 / fail-01
      :ARG1 (c8-2 / he)
      :ARG2 (c8-1 / realize-01
                  :ARG0 c8-2
                  :ARG1 (c8-4 / thing
                              :ARG0-of (c8-3 / cause-01))))

# ::snt Richard come on,I had Linkin Park tickets last week.Bought Beieber for the GF &amp; son for their birthday. Now what can I get them
# ::tokens ["Richard", "come", "on", ",", "I", "had", "Linkin", "Park", "tickets", "last", "week", ".", "Bought", "Beieber", "for", "the", "GF", "&", "amp", ";", "son", "for", "their", "birthday", ".", "Now", "what", "can", "I", "get", "them"]
# ::lemmas ["Richard", "come", "on", ",", "i", "have", "Linkin", "Park", "ticket", "last", "week", ".", "Bought", "Beieber", "for", "the", "GF", "&", "amp", ";", "son", "for", "their", "birthday", ".", "now", "what", "can", "i", "get", "they"]
(c9-16 / multi-sentence
       :snt1 (c9-19 / come-on-25
                    :ARG1 (c9-24 / person
                                 :name (c9-23 / name
                                              :op1 "Richard")))
       :snt2 (c9-8 / have-03
                   :ARG0 (c9-29 / i)
                   :ARG1 (c9-11 / ticket
                                :destination (c9-17 / park
                                                    :name (c9-18 / name
                                                                 :op1 "Linkin"
                                                                 :op2 "Park")))
                   :time (c9-26 / week
                                :mod (c9-2 / last)))
       :snt3 (c9-10 / and
                    :op1 (c9-15 / buy-01
                                :ARG0 (c9-6 / i)
                                :ARG1 (c9-5 / product
                                            :name (c9-25 / name
                                                         :op1 "Beieber"))
                                :ARG4 c9-10
                                :op1 (c9-3 / person
                                           :ARG0-of (c9-27 / have-rel-role-91
                                                           :ARG1 (c9-9 / person
                                                                       :name (c9-20 / name
                                                                                    :op1 "GF"))
                                                           :ARG2 (c9-12 / girlfriend)))
                                :op2 (c9-30 / person
                                            :ARG0-of (c9-7 / have-rel-role-91
                                                           :ARG2 (c9-0 / son)
                                                           :ARG1 c9-30))
                                :purpose (c9-1 / birthday
                                               :poss c9-10)))
       :snt4 (c9-22 / possible-01
                    :ARG1 (c9-4 / get-01
                                :ARG0 (c9-14 / i)
                                :ARG1 (c9-21 / they)
                                :ARG2 (c9-13 / amr-unknown)
                                :time (c9-28 / now))))

# ::snt He cancels so many concerts! Hopefully, not at the last minute, though.
# ::tokens ["He", "cancels", "so", "many", "concerts", "!", "Hopefully", ",", "not", "at", "the", "last", "minute", ",", "though", "."]
# ::lemmas ["he", "cancel", "so", "many", "concert", "!", "hopefully", ",", "not", "at", "the", "last", "minute", ",", "though", "."]
(c10-1 / multi-sentence
       :snt1 (c10-7 / cancel-01
                    :ARG0 (c10-4 / he)
                    :ARG1 (c10-11 / concert
                                  :ARG1-of (c10-8 / have-quant-91
                                                  :ARG2 (c10-5 / many)
                                                  :ARG3 (c10-2 / so))))
       :snt2 (c10-3 / hope-01
                    :ARG1 (c10-0 / be-temporally-at-91
                                 :ARG2 (c10-10 / minute
                                               :mod (c10-6 / last))
                                 :polarity -)
                    :ARG1-of (c10-9 / have-concession-91)))

# ::snt Why do people listen or even follow his fool. Guess They have money to spend.
# ::tokens ["Why", "do", "people", "listen", "or", "even", "follow", "his", "fool", ".", "Guess", "They", "have", "money", "to", "spend", "."]
# ::lemmas ["why", "do", "people", "listen", "or", "even", "follow", "his", "fool", ".", "guess", "they", "have", "money", "to", "spend", "."]
(c11-2 / multi-sentence
       :snt1 (c11-0 / or
                    :op1 (c11-7 / listen-01
                                :ARG0 (c11-6 / person))
                    :op2 (c11-1 / follow-02
                                :ARG0 c11-6
                                :ARG1 (c11-8 / fool
                                             :poss (c11-5 / he))
                                :mod (c11-4 / even))
                    :ARG1-of (c11-10 / cause-01
                                     :ARG0 (c11-14 / amr-unknown)))
       :snt2 (c11-15 / guess-01
                     :ARG0 (c11-13 / i)
                     :ARG1 (c11-11 / have-03
                                   :ARG0 (c11-12 / they)
                                   :ARG1 (c11-9 / money
                                                :ARG3-of (c11-3 / spend-01
                                                                :ARG0 c11-12)))))

# ::snt In all seriousness. What happens to the booked venue and tickets sold?
# ::tokens ["In", "all", "seriousness", ".", "What", "happens", "to", "the", "booked", "venue", "and", "tickets", "sold", "?"]
# ::lemmas ["in", "all", "seriousness", ".", "what", "happen", "to", "the", "booked", "venue", "and", "ticket", "sell", "?"]
(c12-2 / multi-sentence
       :snt1 (c12-6 / have-manner-91
                    :ARG2 (c12-3 / serious-01
                                 :mod (c12-10 / all)))
       :snt2 (c12-5 / event
                    :mod (c12-9 / amr-unknown)
                    :topic (c12-7 / and
                                  :op1 (c12-4 / venue
                                              :ARG1-of (c12-1 / book-03))
                                  :op2 (c12-8 / ticket
                                              :ARG1-of (c12-0 / sell-01)))))

# ::snt You think it was on purpose he purposely cancelled purpose? Gosh I really hope it wasn't on purpose. Wait. What's the purpose of this again?
# ::tokens ["You", "think", "it", "was", "on", "purpose", "he", "purposely", "cancelled", "purpose", "?", "Gosh", "I", "really", "hope", "it", "was", "n't", "on", "purpose", ".", "Wait", ".", "What", "'s", "the", "purpose", "of", "this", "again", "?"]
# ::lemmas ["you", "think", "it", "be", "on", "purpose", "he", "purposely", "cancel", "purpose", "?", "gosh", "i", "really", "hope", "it", "be", "not", "on", "purpose", ".", "wait", ".", "what", "be", "the", "purpose", "of", "this", "again", "?"]
(c13-1 / multi-sentence
       :snt1 c13-1
       :snt2 (c13-6 / hope-01
                    :ARG0 (c13-10 / i)
                    :ARG1 (c13-9 / have-purpose-91
                                 :ARG1 (c13-2 / it)
                                 :ARG2 (c13-7 / purpose)
                                 :polarity -)
                    :degree (c13-3 / really)
                    :mod (c13-12 / gosh
                                 :mode expressive))
       :snt3 (c13-5 / have-purpose-91
                    :ARG1 (c13-11 / this)
                    :ARG2 (c13-4 / amr-unknown)
                    :mod (c13-13 / again))
       :snt4 (c13-8 / wait-01
                    :ARG1 (c13-0 / you)
                    :mode imperative))

# ::snt WHAT THE HELL
# ::tokens ["WHAT", "THE", "HELL"]
# ::lemmas ["what", "the", "hell"]
(c14-1 / amr-unknown
       :mod (c14-0 / hell
                   :mode expressive))

# ::snt but also......well done
# ::tokens ["but", "also", "......", "well", "done"]
# ::lemmas ["but", "also", "......", "well", "do"]
(c15-0 / contrast-01
       :ARG2 (c15-2 / do-02
                    :ARG1-of (c15-3 / well-09)
                    :mod (c15-1 / also)))

# ::snt he's fucking right
# ::tokens ["he", "'s", "fucking", "right"]
# ::lemmas ["he", "be", "fuck", "right"]
(c16-0 / right-06
       :ARG1 (c16-2 / he)
       :mod (c16-1 / fucking))

# ::snt Really???? Need to get my money back?!
# ::tokens ["Really", "?", "?", "?", "?", "Need", "to", "get", "my", "money", "back", "?", "!"]
# ::lemmas ["really", "?", "?", "?", "?", "need", "to", "get", "my", "money", "back", "?", "!"]
(c17-1 / multi-sentence
       :snt1 (c17-2 / real-04
                    :polarity (c17-5 / amr-unknown))
       :snt2 (c17-0 / need-01
                    :ARG0 (c17-4 / i)
                    :ARG1 (c17-6 / get-back-09
                                 :ARG0 c17-4
                                 :ARG1 (c17-3 / money
                                              :poss c17-4))))

# ::snt His tour is now called "Cancelled on Purpose."
# ::tokens ["His", "tour", "is", "now", "called", "\"", "Cancelled", "on", "Purpose", ".", "\""]
# ::lemmas ["his", "tour", "be", "now", "call", "\"", "cancel", "on", "Purpose", ".", "\""]
(c18-4 / call-01
       :ARG1 (c18-5 / tour-01
                    :ARG0 (c18-2 / he))
       :ARG2 (c18-1 / music
                    :name (c18-0 / name
                                 :op1 "Cancelled"
                                 :op2 "on"
                                 :op3 "purpose"))
       :time (c18-3 / now))

# ::snt And nobody cares!!!
# ::tokens ["And", "nobody", "cares", "!", "!", "!"]
# ::lemmas ["and", "nobody", "care", "!", "!", "!"]
(c19-2 / and
       :op2 (c19-0 / care-01
                   :ARG0 (c19-1 / nobody)))

# ::snt Why ?Did you have your wish fullfelment have a nice walk with Jesus christ the savior in Jerusalem If not don't worry we can make it here
# ::tokens ["Why", "?", "Did", "you", "have", "your", "wish", "fullfelment", "have", "a", "nice", "walk", "with", "Jesus", "christ", "the", "savior", "in", "Jerusalem", "If", "not", "do", "n't", "worry", "we", "can", "make", "it", "here"]
# ::lemmas ["why", "?", "do", "you", "have", "your", "wish", "fullfelment", "have", "a", "nice", "walk", "with", "Jesus", "christ", "the", "savior", "in", "Jerusalem", "if", "not", "do", "not", "worry", "we", "can", "make", "it", "here"]
(c20-9 / multi-sentence
       :snt1 (c20-12 / cause-01
                     :ARG0 (c20-7 / amr-unknown))
       :snt2 (c20-5 / have-condition-91
                    :ARG1 (c20-20 / have-03
                                  :ARG0 (c20-3 / you)
                                  :ARG1 (c20-19 / wish-01
                                                :ARG0 c20-3
                                                :ARG1 (c20-2 / walk-01
                                                             :ARG0 (c20-15 / fullhearted
                                                                           :poss c20-3)
                                                             :ARG1-of (c20-16 / nice-01)
                                                             :accompanier (c20-17 / person
                                                                                  :name (c20-11 / name
                                                                                                :op1 "Jesus"
                                                                                                :op2 "Christ")
                                                                                  :ARG0-of (c20-1 / savior-01))
                                                             :location (c20-8 / city
                                                                              :name (c20-18 / name
                                                                                            :op1 "Jerusalem")))))
                    :ARG2 (c20-4 / have-03
                                 :ARG0 c20-3
                                 :ARG1 c20-19
                                 :polarity -))
       :snt3 (c20-14 / worry-01
                     :ARG0 (c20-0 / we)
                     :ARG1 (c20-10 / possible-01
                                   :ARG1 (c20-6 / make-it-14
                                                :ARG0 c20-0
                                                :ARG1 (c20-13 / here)))
                     :polarity -
                     :mode imperative))

# ::snt Oh the Humani... Who cares.
# ::tokens ["Oh", "the", "Humani", "...", "Who", "cares", "."]
# ::lemmas ["oh", "the", "Humani", "...", "who", "care", "."]
(c21-3 / care-01
       :ARG0 (c21-4 / amr-unknown)
       :ARG1 (c21-2 / person
                    :mod (c21-5 / country
                                :name (c21-1 / name
                                             :op1 "Humani")))
       :mod (c21-0 / oh
                   :mode expressive))

# ::snt Well I hope he cancelled them on purpose. It be bad if it was an accident
# ::tokens ["Well", "I", "hope", "he", "cancelled", "them", "on", "purpose", ".", "It", "be", "bad", "if", "it", "was", "an", "accident"]
# ::lemmas ["well", "i", "hope", "he", "cancel", "they", "on", "purpose", ".", "it", "be", "bad", "if", "it", "be", "an", "accident"]
(c22-1 / multi-sentence
       :snt1 (c22-5 / hope-01
                    :ARG0 (c22-9 / i)
                    :ARG1 (c22-6 / cancel-01
                                 :ARG0 (c22-8 / he)
                                 :ARG1 (c22-10 / they)
                                 :ARG1-of (c22-4 / have-purpose-91))
                    :mod (c22-7 / well))
       :snt2 (c22-0 / bad-07
                    :ARG1 (c22-2 / it)
                    :condition (c22-3 / accident
                                      :domain (c22-11 / it))))

# ::snt Get free iphone7 with various free gifts of $10000
# ::tokens ["Get", "free", "iphone7", "with", "various", "free", "gifts", "of", "$", "10000"]
# ::lemmas ["get", "free", "iphone7", "with", "various", "free", "gift", "of", "$", "10000"]
(c23-9 / get-01
       :ARG0 (c23-1 / you)
       :ARG1 (c23-5 / product
                    :name (c23-2 / name
                                 :op1 "iiphone7")
                    :ARG1-of (c23-0 / free-03))
       :ARG3 (c23-8 / gift-01
                    :quant (c23-4 / various)
                    :ARG1-of (c23-6 / free-03)
                    :ARG1-of (c23-7 / cost-01
                                    :ARG2 (c23-3 / monetary-quantity
                                                 :unit (c23-10 / dollar)
                                                 :quant 10000)))
       :mode imperative)

# ::snt :Get free iphone7 with various free gifts
# ::tokens [":", "Get", "free", "iphone7", "with", "various", "free", "gifts"]
# ::lemmas [":", "get", "free", "iphone7", "with", "various", "free", "gift"]
(c24-7 / get-01
       :ARG0 (c24-1 / you)
       :ARG1 (c24-4 / product
                    :name (c24-2 / name
                                 :op1 "iiphone7")
                    :ARG1-of (c24-0 / free-03))
       :ARG3 (c24-6 / gift
                    :ARG1-of (c24-5 / free-03)
                    :mod (c24-3 / various))
       :mode imperative)

# ::snt :Thankgod
# ::tokens [":", "Thankgod"]
# ::lemmas [":", "thankgod"]
(c25-2 / thank-01
       :ARG1 (c25-1 / person
                    :name (c25-0 / name
                                 :op1 "God")))

# ::snt Won free iphone with one click
# ::tokens ["Won", "free", "iphone", "with", "one", "click"]
# ::lemmas ["won", "free", "iphone", "with", "one", "click"]
(c27-3 / win-01
       :ARG0 (c27-1 / you)
       :ARG1 (c27-4 / iphone
                    :ARG1-of (c27-0 / free-03))
       :manner (c27-2 / click-01
                      :quant 1)
       :mode imperative)

# ::snt :Do you still have that arm band on?
# ::tokens [":", "Do", "you", "still", "have", "that", "arm", "band", "on", "?"]
# ::lemmas [":", "do", "you", "still", "have", "that", "arm", "band", "on", "?"]
(c28-3 / have-03
       :polarity (c28-6 / amr-unknown)
       :ARG0 (c28-1 / you)
       :ARG1 (c28-0 / band
                    :mod (c28-5 / arm)
                    :mod (c28-4 / that))
       :mod (c28-2 / still))

# ::snt Get free iPhone S and other free gifts click here
# ::tokens ["Get", "free", "iPhone", "S", "and", "other", "free", "gifts", "click", "here"]
# ::lemmas ["get", "free", "iPhone", "S", "and", "other", "free", "gift", "click", "here"]
(c29-7 / click-01
       :ARG0 (c29-2 / you)
       :location (c29-4 / here)
       :purpose (c29-10 / get-01
                        :ARG0 c29-2
                        :ARG1 (c29-9 / and
                                     :op1 (c29-5 / product
                                                 :name (c29-3 / name
                                                              :op1 "iPhone"
                                                              :op2 "S")
                                                 :ARG1-of (c29-0 / free-03))
                                     :op2 (c29-8 / gift
                                                 :ARG1-of (c29-6 / free-03)
                                                 :mod (c29-1 / other))))
       :mode imperative)

# ::snt Ur the most ungrateful entertainer I've ever seen. Cxl shows just b/c or u don't feel appreciated by fans. Maybe just retire back to Canada.
# ::tokens ["Ur", "the", "most", "ungrateful", "entertainer", "I", "'ve", "ever", "seen", ".", "Cxl", "shows", "just", "b", "/", "c", "or", "u", "do", "n't", "feel", "appreciated", "by", "fans", ".", "Maybe", "just", "retire", "back", "to", "Canada", "."]
# ::lemmas ["ur", "the", "most", "ungrateful", "entertainer", "i", "'ve", "ever", "see", ".", "Cxl", "show", "just", "b", "/", "c", "or", "u", "do", "not", "feel", "appreciate", "by", "fan", ".", "maybe", "just", "retire", "back", "to", "Canada", "."]
(c30-15 / multi-sentence
        :snt1 (c30-7 / have-degree-91
                     :ARG1 (c30-5 / you)
                     :ARG2 (c30-10 / grateful
                                   :polarity -)
                     :ARG3 (c30-6 / most)
                     :ARG5 (c30-24 / person
                                   :ARG0-of (c30-23 / entertain-01)
                                   :ARG1-of (c30-0 / see-01
                                                   :ARG0 (c30-27 / i)
                                                   :time (c30-11 / ever))))
        :snt2 (c30-3 / or
                     :op1 (c30-4 / show-04
                                 :ARG0 (c30-16 / person
                                               :name (c30-21 / name
                                                             :op1 "CxL"))
                                 :mod (c30-8 / just)
                                 :ARG1-of (c30-18 / cause-01
                                                  :ARG0 (c30-14 / broadcast-program
                                                                :name (c30-17 / name
                                                                              :op1 "CBC"))))
                     :op2 (c30-20 / feel-01
                                  :ARG0 (c30-12 / you)
                                  :ARG1 (c30-9 / appreciate-02
                                               :ARG0 (c30-25 / fan)
                                               :ARG1 c30-12)
                                  :polarity -))
        :snt3 (c30-1 / possible-01
                     :ARG1 (c30-22 / retire-01
                                   :ARG0 (c30-2 / you)
                                   :ARG2 (c30-13 / country
                                                 :name (c30-26 / name
                                                               :op1 "Canada"))
                                   :mod (c30-19 / just))))

# ::snt get $ free gift card
# ::tokens ["get", "$", "free", "gift", "card"]
# ::lemmas ["get", "$", "free", "gift", "card"]
(c31-4 / get-01
       :ARG0 (c31-1 / you)
       :ARG1 (c31-2 / card
                    :ARG1-of (c31-3 / gift-01)
                    :ARG1-of (c31-0 / free-03))
       :mode imperative)

# ::snt get $ free gift card
# ::tokens ["get", "$", "free", "gift", "card"]
# ::lemmas ["get", "$", "free", "gift", "card"]
(c32-4 / get-01
       :ARG0 (c32-1 / you)
       :ARG1 (c32-2 / card
                    :ARG1-of (c32-3 / gift-01)
                    :ARG1-of (c32-0 / free-03))
       :mode imperative)

# ::snt no
# ::tokens ["no"]
# ::lemmas ["no"]
(c33-0 / no)

# ::snt WHAT DO YOU MEAN?
# ::tokens ["WHAT", "DO", "YOU", "MEAN", "?"]
# ::lemmas ["what", "do", "you", "mean", "?"]
(c36-1 / mean-01
       :ARG0 (c36-0 / you)
       :ARG2 (c36-2 / amr-unknown))

# ::snt Oh noes.....
# ::tokens ["Oh", "noes", "....."]
# ::lemmas ["oh", "noe", "....."]
(c37-0 / oh-no
       :mode expressive)

# ::snt Yeah poor justin he do straight nightshift keeping an eye on patients all night oh wait its me
# ::tokens ["Yeah", "poor", "justin", "he", "do", "straight", "nightshift", "keeping", "an", "eye", "on", "patients", "all", "night", "oh", "wait", "its", "me"]
# ::lemmas ["yeah", "poor", "justin", "he", "do", "straight", "nightshift", "keep", "an", "eye", "on", "patient", "all", "night", "oh", "wait", "its", "i"]
(c38-2 / multi-sentence
       :snt1 (c38-14 / do-02
                     :ARG0 (c38-6 / he
                                  :mod (c38-7 / poor)
                                  :ARG0-of (c38-8 / keep-eye-on-05
                                                  :ARG1 (c38-3 / patient)
                                                  :duration (c38-4 / night
                                                                   :mod (c38-12 / all))))
                     :ARG1 (c38-5 / shift
                                  :ARG1-of (c38-0 / straight-04)
                                  :mod (c38-9 / night))
                     :mod (c38-1 / yeah))
       :snt2 (c38-10 / wait-01
                     :ARG1 (c38-13 / you)
                     :mod (c38-11 / i)
                     :mode imperative))

# ::snt YES!
# ::tokens ["YES", "!"]
# ::lemmas ["yes", "!"]
(c39-0 / yes)

# ::snt Cause he won't sing --a song he took credit for in the (cause he doesn't know .)
# ::tokens ["Cause", "he", "wo", "n't", "sing", "--a", "song", "he", "took", "credit", "for", "in", "the", "(", "cause", "he", "does", "n't", "know", ".", ")"]
# ::lemmas ["cause", "he", "will", "not", "sing", "--a", "song", "he", "take", "credit", "for", "in", "the", "(", "cause", "he", "do", "not", "know", ".", ")"]
(c40-4 / cause-01
       :ARG0 (c40-1 / sing-01
                    :ARG0 (c40-2 / he)
                    :ARG1 (c40-0 / song
                                 :ARG2-of (c40-6 / credit-01
                                                 :ARG1 c40-2
                                                 :ARG1-of (c40-5 / cause-01
                                                                 :ARG0 (c40-3 / know-01
                                                                              :ARG0 c40-2
                                                                              :polarity -))))
                    :polarity -))

# ::snt does this surprise you
# ::tokens ["does", "this", "surprise", "you"]
# ::lemmas ["do", "this", "surprise", "you"]
(c41-3 / surprise-01
       :polarity (c41-0 / amr-unknown)
       :ARG0 (c41-2 / this)
       :ARG1 (c41-1 / you))

# ::snt I hope it's to find a new stylist
# ::tokens ["I", "hope", "it", "'s", "to", "find", "a", "new", "stylist"]
# ::lemmas ["i", "hope", "it", "be", "to", "find", "a", "new", "stylist"]
(c42-3 / hope-01
       :ARG0 (c42-5 / i)
       :ARG1 (c42-0 / find-01
                    :ARG1 (c42-4 / person
                                 :ARG0-of (c42-2 / style-01)
                                 :ARG1-of (c42-1 / new-01))))

# ::snt Well done China
# ::tokens ["Well", "done", "China"]
# ::lemmas ["well", "do", "China"]
(c43-1 / say-01
       :ARG1 (c43-4 / do-02
                    :ARG1-of (c43-3 / well-09))
       :ARG2 (c43-2 / country
                    :name (c43-0 / name
                                 :op1 "China")))

# ::snt Maybe he finally realized that he sucks.
# ::tokens ["Maybe", "he", "finally", "realized", "that", "he", "sucks", "."]
# ::lemmas ["maybe", "he", "finally", "realize", "that", "he", "suck", "."]
(c44-4 / possible-01
       :ARG1 (c44-2 / realize-01
                    :ARG0 (c44-3 / he)
                    :ARG1 (c44-1 / suck-03
                                 :ARG0 c44-3)
                    :time (c44-0 / final)))

# ::snt You're not missing anything. He was arrogant and mimed for most of his act in Birmingham. Oh, and late.
# ::tokens ["You", "'re", "not", "missing", "anything", ".", "He", "was", "arrogant", "and", "mimed", "for", "most", "of", "his", "act", "in", "Birmingham", ".", "Oh", ",", "and", "late", "."]
# ::lemmas ["you", "be", "not", "miss", "anything", ".", "he", "be", "arrogant", "and", "mime", "for", "most", "of", "his", "act", "in", "Birmingham", ".", "oh", ",", "and", "late", "."]
(c46-2 / multi-sentence
       :snt1 (c46-4 / miss-01
                    :ARG0 (c46-1 / you)
                    :ARG1 (c46-11 / anything)
                    :polarity -)
       :snt2 (c46-10 / and
                     :op1 (c46-8 / arrogant
                                 :domain (c46-5 / he))
                     :op2 (c46-12 / imitate-01
                                  :ARG1 c46-5
                                  :duration (c46-13 / act-01
                                                    :ARG0 c46-5
                                                    :quant (c46-14 / most)
                                                    :location (c46-7 / city
                                                                     :name (c46-3 / name
                                                                                  :op1 "Birmingham")))))
       :snt3 (c46-9 / and
                    :op1 (c46-0 / oh
                                :mode expressive)
                    :op2 (c46-6 / late
                                :mode expressive)))

# ::snt Time to rest
# ::tokens ["Time", "to", "rest"]
# ::lemmas ["time", "to", "rest"]
(c48-1 / time
       :time-of (c48-0 / rest-01))

# ::snt Justin Bieber has been doing Purpose Tour for nearly years and has done over shows he deserves a break guys his health
# ::tokens ["Justin", "Bieber", "has", "been", "doing", "Purpose", "Tour", "for", "nearly", "years", "and", "has", "done", "over", "shows", "he", "deserves", "a", "break", "guys", "his", "health"]
# ::lemmas ["Justin", "Bieber", "have", "be", "do", "Purpose", "Tour", "for", "nearly", "years", "and", "have", "do", "over", "show", "he", "deserve", "a", "break", "guy", "his", "health"]
(c49-5 / and
       :op1 (c49-13 / do-02
                    :ARG0 (c49-7 / person
                                 :name (c49-3 / name
                                              :op1 "Justin"
                                              :op2 "Bieber"))
                    :ARG1 (c49-12 / tour
                                  :name (c49-6 / name
                                               :op1 "The"
                                               :op2 "Purpose"
                                               :op3 "Tour"))
                    :duration (c49-8 / nearly
                                     :op1 (c49-14 / temporal-quantity
                                                  :unit (c49-2 / year)
                                                  :quant 1)))
       :op2 (c49-11 / do-02
                    :ARG0 c49-7
                    :ARG1 (c49-4 / show-04
                                 :ARG1 (c49-9 / deserve-01
                                              :ARG0 c49-7
                                              :ARG1 (c49-1 / break-19
                                                           :ARG1 c49-7)
                                              :ARG2 (c49-10 / healthy
                                                            :domain c49-7)))
                    :mod (c49-0 / over)))

# ::snt It's just the way he comes across
# ::tokens ["It", "'s", "just", "the", "way", "he", "comes", "across"]
# ::lemmas ["it", "be", "just", "the", "way", "he", "come", "across"]
(c50-1 / way
       :manner-of (c50-2 / come-across-15
                         :ARG1 (c50-0 / he))
       :mod (c50-3 / just)
       :domain (c50-4 / it))
