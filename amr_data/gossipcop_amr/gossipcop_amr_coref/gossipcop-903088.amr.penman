# ::snt Im legit excited about this album, he always knows how to impress
# ::tokens ["I", "m", "legit", "excited", "about", "this", "album", ",", "he", "always", "knows", "how", "to", "impress"]
# ::lemmas ["i", "m", "legit", "excited", "about", "this", "album", ",", "he", "always", "know", "how", "to", "impress"]
(c1-2 / excite-01
      :ARG0 (c1-1 / album
                  :mod (c1-8 / this))
      :ARG1 (c1-7 / i)
      :degree (c1-4 / legit)
      :ARG1-of (c1-6 / cause-01
                     :ARG0 (c1-5 / know-03
                                 :ARG0 (c1-3 / he)
                                 :ARG1 (c1-10 / thing
                                              :manner-of (c1-0 / impress-01
                                                               :ARG0 c1-3))
                                 :time (c1-9 / always))))

# ::snt Watch the official U.S Remix of Anggun's hit single "What We Remember" / Billboard Dance Charts single
# ::tokens ["Watch", "the", "official", "U.S", "Remix", "of", "Anggun", "'s", "hit", "single", "\"", "What", "We", "Remember", "\"", "/", "Billboard", "Dance", "Charts", "single"]
# ::lemmas ["watch", "the", "official", "U.S", "Remix", "of", "Anggun", "'s", "hit", "single", "\"", "what", "we", "remember", "\"", "/", "Billboard", "Dance", "Charts", "single"]
(c3-11 / watch-01
       :ARG0 (c3-2 / you)
       :ARG1 (c3-6 / edit-01
                   :ARG0 (c3-12 / country
                                :name (c3-3 / name
                                            :op1 "U.S."))
                   :ARG1 (c3-4 / single
                               :name (c3-7 / name
                                           :op1 "What"
                                           :op2 "We"
                                           :op3 "Remember")
                               :ARG1-of (c3-8 / hit-02
                                              :ARG0 (c3-9 / person
                                                          :name (c3-10 / name
                                                                       :op1 "Anggun")))
                               :mod (c3-0 / slash
                                          :op1 (c3-15 / single
                                                      :name (c3-13 / name
                                                                   :op1 "What"
                                                                   :op2 "We"
                                                                   :op3 "Remember"))
                                          :op2 (c3-5 / single
                                                     :name (c3-14 / name
                                                                  :op1 "Billions"
                                                                  :op2 "Dance"
                                                                  :op3 "Charts"))))
                   :mod (c3-1 / official))
       :mode imperative)

# ::snt Listen to star 's new single out now Stream the single, "NightTime" here:iTunes: : Play
# ::tokens ["Listen", "to", "star", "'s", "new", "single", "out", "now", "Stream", "the", "single", ",", "\"", "NightTime", "\"", "here", ":", "iTunes", ":", ":", "Play"]
# ::lemmas ["listen", "to", "star", "'s", "new", "single", "out", "now", "Stream", "the", "single", ",", "\"", "NightTime", "\"", "here", ":", "itune", ":", ":", "play"]
(c5-13 / and
       :op1 (c5-8 / listen-01
                  :ARG0 (c5-2 / you)
                  :ARG1 (c5-5 / single
                              :ARG1-of (c5-3 / new-01)
                              :poss (c5-0 / star))
                  :ARG1-of (c5-1 / out-01
                                 :time (c5-7 / now))
                  :mode imperative)
       :op2 (c5-14 / stream-03
                   :ARG0 c5-2
                   :ARG1 (c5-6 / single
                               :name (c5-9 / name
                                           :op1 "NightTime"))
                   :location (c5-10 / here
                                    :medium (c5-11 / product
                                                   :name (c5-12 / name
                                                                :op1 "iTunes")))
                   :manner (c5-4 / play-11
                                 :ARG0 c5-2
                                 :mode imperative)
                   :mode imperative))

# ::snt :It sounds awful and a lot like bon iver, I first read
# ::tokens [":", "It", "sounds", "awful", "and", "a", "lot", "like", "bon", "iver", ",", "I", "first", "read"]
# ::lemmas [":", "it", "sound", "awful", "and", "a", "lot", "like", "bon", "iver", ",", "i", "first", "read"]
(c6-6 / and
      :op1 (c6-3 / sound-01
                 :ARG1 (c6-9 / it)
                 :ARG2 (c6-8 / awful))
      :op2 (c6-5 / resemble-01
                 :ARG1 c6-9
                 :ARG2 (c6-1 / music
                             :name (c6-2 / name
                                         :op1 "Bon"
                                         :op2 "Iver"))
                 :degree (c6-7 / lot))
      :ARG1-of (c6-10 / read-01
                      :ARG0 (c6-4 / i)
                      :ord (c6-0 / ordinal-entity
                                 :value 1)))

# ::snt JT's music is good, not the kind I buy but he's good and a very good entertainer, I would like to see him live one day, after I catch a Disturbed concert.
# ::tokens ["JT", "'s", "music", "is", "good", ",", "not", "the", "kind", "I", "buy", "but", "he", "'s", "good", "and", "a", "very", "good", "entertainer", ",", "I", "would", "like", "to", "see", "him", "live", "one", "day", ",", "after", "I", "catch", "a", "Disturbed", "concert", "."]
# ::lemmas ["JT", "'s", "music", "be", "good", ",", "not", "the", "kind", "i", "buy", "but", "he", "be", "good", "and", "a", "very", "good", "entertainer", ",", "i", "would", "like", "to", "see", "he", "live", "one", "day", ",", "after", "i", "catch", "a", "Disturbed", "concert", "."]
(c7-15 / multi-sentence
       :snt1 (c7-17 / contrast-01
                    :ARG1 (c7-11 / good-02
                                 :ARG1 (c7-7 / music
                                             :poss (c7-20 / person
                                                          :name (c7-18 / name
                                                                       :op1 "JT"))
                                             :mod (c7-8 / kind
                                                        :ARG1-of (c7-14 / buy-01
                                                                        :ARG0 (c7-21 / i))
                                                        :polarity -)))
                    :ARG2 (c7-10 / and
                                 :op1 (c7-3 / good-02
                                            :ARG1 c7-20)
                                 :op2 (c7-19 / entertain-01
                                             :ARG0 c7-20
                                             :ARG1-of (c7-4 / good-02
                                                            :degree (c7-6 / very)))))
       :snt2 (c7-1 / like-02
                   :ARG0 (c7-5 / i)
                   :ARG1 (c7-0 / see-01
                               :ARG0 c7-5
                               :ARG1 c7-20
                               :manner (c7-12 / live)
                               :time (c7-9 / after
                                           :op1 (c7-13 / catch-01
                                                       :ARG0 c7-5
                                                       :ARG1 (c7-2 / concert
                                                                   :name (c7-16 / name
                                                                                :op1 "Disturbed")))))))

# ::snt your dream album
# ::tokens ["your", "dream", "album"]
# ::lemmas ["your", "dream", "album"]
(c8-2 / album
      :ARG1-of (c8-0 / dream-01
                     :ARG0 (c8-1 / you)))

# ::snt why is bon iver the dad from family ties
# ::tokens ["why", "is", "bon", "iver", "the", "dad", "from", "family", "ties"]
# ::lemmas ["why", "be", "bon", "iver", "the", "dad", "from", "family", "tie"]
(c9-4 / cause-01
      :ARG0 (c9-6 / amr-unknown)
      :ARG1 (c9-3 / person
                  :ARG0-of (c9-2 / have-rel-role-91
                                 :ARG2 (c9-7 / dad))
                  :ARG1-of (c9-5 / tie-01
                                 :ARG2 (c9-0 / family))
                  :mod (c9-1 / either)))

# ::snt o twitter n mostra todos seus belos tweets infelizmente grande falha
# ::tokens ["o", "twitter", "n", "mostra", "todos", "seus", "belos", "tweets", "infelizmente", "grande", "falha"]
# ::lemmas ["o", "twitter", "n", "mostra", "todo", "seus", "belos", "tweets", "infelizmente", "grande", "falha"]
(c10-7 / and
       :op1 (c10-4 / publication
                   :name (c10-0 / name
                                :op1 "Twitter"))
       :op2 (c10-3 / have-quant-91
                   :ARG1 (c10-1 / publication
                                :name (c10-5 / name
                                             :op1 "Facebook"))
                   :ARG3 (c10-2 / most)
                   :ARG5 c10-1)
       :op3 (c10-8 / publication
                   :name (c10-6 / name
                                :op1 "Infelizmente"
                                :op2 "Grande"
                                :op3 "Falha")))

# ::snt vc n me nota nunca mesmo n
# ::tokens ["vc", "n", "me", "nota", "nunca", "mesmo", "n"]
# ::lemmas ["vc", "n", "i", "nota", "nunca", "mesmo", "n"]
(c11-5 / and
       :op1 (c11-2 / vc)
       :op2 (c11-3 / have-03
                   :ARG0 (c11-4 / i)
                   :ARG1 (c11-0 / n
                                :mod (c11-1 / mesmo))
                   :polarity -))

# ::snt His woods is likely a nicely landscaped backyard with some trees &amp; man made ponds &amp; streams
# ::tokens ["His", "woods", "is", "likely", "a", "nicely", "landscaped", "backyard", "with", "some", "trees", "&", "amp", ";", "man", "made", "ponds", "&", "amp", ";", "streams"]
# ::lemmas ["his", "wood", "be", "likely", "a", "nicely", "landscape", "backyard", "with", "some", "tree", "&", "amp", ";", "man", "make", "pond", "&", "amp", ";", "stream"]
(c13-6 / likely-01
       :ARG1 (c13-1 / backyard
                    :ARG1-of (c13-12 / landscape-01
                                     :ARG1-of (c13-2 / nice-01))
                    :poss (c13-5 / he)
                    :consist-of (c13-11 / and
                                        :op1 (c13-9 / tree
                                                    :quant (c13-4 / some))
                                        :op2 (c13-10 / amp))
                    :op3 (c13-7 / pond
                                :ARG1-of (c13-3 / make-01
                                                :ARG0 (c13-8 / man)))
                    :op4 (c13-0 / stream)))

# ::snt Why JT look like he about to spit straight flames
# ::tokens ["Why", "JT", "look", "like", "he", "about", "to", "spit", "straight", "flames"]
# ::lemmas ["why", "JT", "look", "like", "he", "about", "to", "spit", "straight", "flame"]
(c14-6 / cause-01
       :ARG0 (c14-8 / amr-unknown)
       :ARG1 (c14-4 / look-02
                    :ARG0 (c14-5 / person
                                 :name (c14-2 / name
                                              :op1 "JT"))
                    :ARG1 (c14-3 / spit-01
                                 :ARG0 c14-5
                                 :ARG1 (c14-0 / flame
                                              :ARG1-of (c14-1 / straight-04))
                                 :time (c14-7 / about-to))))

# ::snt Me either. But he better not let us down.
# ::tokens ["Me", "either", ".", "But", "he", "better", "not", "let", "us", "down", "."]
# ::lemmas ["i", "either", ".", "but", "he", "well", "not", "let", "we", "down", "."]
(c15-0 / multi-sentence
       :snt1 (c15-6 / i)
       :snt2 (c15-4 / contrast-01
                    :ARG2 (c15-1 / recommend-01
                                 :ARG1 (c15-3 / let-down-04
                                              :ARG0 (c15-2 / he)
                                              :ARG1 (c15-5 / we)
                                              :polarity -))))

# ::snt This name is making me nervous tho. Wtf he got going on?!
# ::tokens ["This", "name", "is", "making", "me", "nervous", "tho", ".", "Wtf", "he", "got", "going", "on", "?", "!"]
# ::lemmas ["this", "name", "be", "make", "i", "nervous", "tho", ".", "Wtf", "he", "got", "go", "on", "?", "!"]
(c16-2 / multi-sentence
       :snt1 (c16-5 / have-concession-91
                    :ARG1 (c16-4 / make-02
                                 :ARG0 (c16-1 / name
                                              :mod (c16-9 / this))
                                 :ARG1 (c16-6 / nervous-01
                                              :ARG0 (c16-8 / i))))
       :snt2 (c16-10 / go-on-15
                     :ARG1 (c16-7 / he)
                     :mod (c16-0 / fuck
                                 :mode expressive)
                     :mod (c16-3 / amr-unknown)))

# ::snt Hi, I think you will like this item....
# ::tokens ["Hi", ",", "I", "think", "you", "will", "like", "this", "item", "...."]
# ::lemmas ["hi", ",", "i", "think", "you", "will", "like", "this", "item", "...."]
(c17-1 / multi-sentence
       :snt1 (c17-3 / hi)
       :snt2 (c17-6 / think-01
                    :ARG0 (c17-5 / i)
                    :ARG1 (c17-4 / like-01
                                 :ARG0 (c17-0 / you)
                                 :ARG1 (c17-2 / item
                                              :mod (c17-7 / this)))))

# ::snt : Justin Timberlake - INTRODUCING MAN OF THE WOODS
# ::tokens [":", "Justin", "Timberlake", "-", "INTRODUCING", "MAN", "OF", "THE", "WOODS"]
# ::lemmas [":", "Justin", "Timberlake", "-", "INTRODUCING", "MAN", "OF", "the", "WOODS"]
(c18-4 / introduce-02
       :ARG0 (c18-3 / person
                    :name (c18-1 / name
                                 :op1 "Justin"
                                 :op2 "Timberlake"))
       :ARG1 (c18-0 / man
                    :mod (c18-2 / swamp)))

# ::snt Stay pressed
# ::tokens ["Stay", "pressed"]
# ::lemmas ["stay", "pressed"]
(c20-2 / stay-01
       :ARG1 (c20-0 / you)
       :ARG3 (c20-1 / press-01
                    :ARG1 c20-0)
       :mode imperative)

# ::snt The /20 experienxe was the best selling album in USA . Debuted almost M copies in a week. Cant stop the feeling was the best selling song of and still charting on iTunes. This man can still sell records.
# ::tokens ["The", "/20", "experienxe", "was", "the", "best", "selling", "album", "in", "USA", ".", "Debuted", "almost", "M", "copies", "in", "a", "week", ".", "Ca", "nt", "stop", "the", "feeling", "was", "the", "best", "selling", "song", "of", "and", "still", "charting", "on", "iTunes", ".", "This", "man", "can", "still", "sell", "records", "."]
# ::lemmas ["the", "/20", "experienxe", "be", "the", "good", "selling", "album", "in", "USA", ".", "debut", "almost", "M", "copy", "in", "a", "week", ".", "can", "not", "stop", "the", "feeling", "be", "the", "good", "selling", "song", "of", "and", "still", "chart", "on", "iTunes", ".", "this", "man", "can", "still", "sell", "record", "."]
(c21-16 / multi-sentence
        :snt1 (c21-7 / have-degree-91
                     :ARG1 (c21-12 / album
                                   :name (c21-27 / name
                                                 :op1 "The"
                                                 :op2 20
                                                 :op3 "Eurasxe"))
                     :ARG2 (c21-13 / good-02
                                   :ARG1 c21-12)
                     :ARG3 (c21-8 / most)
                     :ARG5 (c21-10 / album
                                   :location (c21-20 / country
                                                     :name (c21-18 / name
                                                                   :op1 "USA"))))
        :snt2 (c21-0 / sell-01
                     :ARG1 (c21-11 / thing
                                   :ARG1-of (c21-14 / copy-01
                                                    :quant (c21-9 / almost
                                                                  :op1 (c21-23 / mass-quantity
                                                                               :unit (c21-19 / megabyte)
                                                                               :quant 1000000))))
                     :duration (c21-21 / temporal-quantity
                                       :unit (c21-32 / week)
                                       :quant 1))
        :snt3 (c21-30 / possible-01
                      :ARG1 (c21-5 / sell-01
                                   :ARG0 (c21-22 / man
                                                 :mod (c21-34 / this))
                                   :ARG1 (c21-29 / record)
                                   :mod (c21-4 / still)))
        :snt4 (c21-2 / cant-01
                     :ARG0 (c21-6 / you)
                     :ARG1 (c21-28 / stop-03
                                   :ARG0 c21-6
                                   :ARG1 (c21-26 / feel-01
                                                 :ARG1 (c21-1 / song
                                                              :ARG1-of (c21-33 / have-degree-91
                                                                               :ARG2 (c21-3 / good-02
                                                                                            :ARG1 c21-5)
                                                                               :ARG3 (c21-24 / most))
                                                              :ARG2-of (c21-25 / chart-02
                                                                               :medium (c21-17 / product
                                                                                               :name (c21-31 / name
                                                                                                             :op1 "iPod"))
                                                                               :mod (c21-15 / still)))))
                     :mode imperative))

# ::snt I AM SO READY
# ::tokens ["I", "AM", "SO", "READY"]
# ::lemmas ["i", "be", "so", "ready"]
(c22-0 / read-01
       :ARG0 (c22-1 / i)
       :degree (c22-2 / so))

# ::snt the haters crying in the comments is satisfying
# ::tokens ["the", "haters", "crying", "in", "the", "comments", "is", "satisfying"]
# ::lemmas ["the", "hater", "cry", "in", "the", "comment", "be", "satisfy"]
(c23-0 / satisfy-01
       :ARG0 (c23-3 / cry-02
                    :ARG0 (c23-2 / person
                                 :ARG0-of (c23-1 / hate-01))
                    :medium (c23-4 / comment-01)))

# ::snt Hopefully his album get blacklisted
# ::tokens ["Hopefully", "his", "album", "get", "blacklisted"]
# ::lemmas ["hopefully", "his", "album", "get", "blacklist"]
(c24-2 / hope-01
       :ARG1 (c24-1 / blacklist-01
                    :ARG1 (c24-3 / album
                                 :poss (c24-0 / he))))

# ::snt Happy New Year JT!!!! Yo I used to take masterclasses and dance with Marty!! If u see or talk to him or Roger tell em what it do from Dallas!!
# ::tokens ["Happy", "New", "Year", "JT", "!", "!", "!", "!", "Yo", "I", "used", "to", "take", "masterclasses", "and", "dance", "with", "Marty", "!", "!", "If", "u", "see", "or", "talk", "to", "him", "or", "Roger", "tell", "em", "what", "it", "do", "from", "Dallas", "!", "!"]
# ::lemmas ["Happy", "New", "Year", "JT", "!", "!", "!", "!", "Yo", "i", "use", "to", "take", "masterclasse", "and", "dance", "with", "Marty", "!", "!", "if", "u", "see", "or", "talk", "to", "he", "or", "Roger", "tell", "em", "what", "it", "do", "from", "Dallas", "!", "!"]
(c25-14 / multi-sentence
        :snt1 (c25-0 / say-01
                     :ARG1 (c25-7 / happy-01
                                  :ARG1 (c25-22 / festival
                                                :name (c25-23 / name
                                                              :op1 "New"
                                                              :op2 "Year")))
                     :ARG2 (c25-24 / person
                                   :name (c25-16 / name
                                                 :op1 "JT")))
        :snt2 (c25-10 / and
                      :op1 (c25-9 / take-01
                                  :ARG0 (c25-27 / i)
                                  :ARG1 (c25-17 / class
                                                :mod (c25-8 / master)))
                      :op2 (c25-29 / dance-01
                                   :ARG0 c25-27
                                   :accompanier (c25-15 / person
                                                        :name (c25-25 / name
                                                                      :op1 "Marty")))
                      :time (c25-21 / use-03))
        :snt3 (c25-20 / tell-01
                      :ARG0 (c25-5 / you)
                      :ARG1 (c25-28 / thing
                                    :ARG1-of (c25-18 / do-02
                                                     :ARG0 (c25-6 / it)
                                                     :location (c25-12 / city
                                                                       :name (c25-19 / name
                                                                                     :op1 "Dallas"))))
                      :ARG2 (c25-3 / or
                                   :op1 (c25-11 / you)
                                   :op2 (c25-2 / person
                                               :name (c25-26 / name
                                                             :op1 "Roger")))
                      :condition (c25-13 / or
                                         :op1 (c25-4 / see-01
                                                     :ARG0 c25-11
                                                     :ARG1 c25-13)
                                         :op2 (c25-1 / talk-01
                                                     :ARG0 c25-11
                                                     :ARG2 (c25-30 / or)))
                      :mode imperative))

# ::snt God
# ::tokens ["God"]
# ::lemmas ["God"]
(c26-1 / person
       :name (c26-0 / name
                    :op1 "God"))

# ::snt Justin Timberlake ft. Ariana
# ::tokens ["Justin", "Timberlake", "ft", ".", "Ariana"]
# ::lemmas ["Justin", "Timberlake", "ft", ".", "Ariana"]
(c27-4 / and
       :op1 (c27-3 / person
                   :name (c27-0 / name
                                :op1 "Justin"
                                :op2 "Timberlake"))
       :op2 (c27-1 / person
                   :name (c27-2 / name
                                :op1 "Ariana")))

# ::snt HAHAHA! Got a light?
# ::tokens ["HAHAHA", "!", "Got", "a", "light", "?"]
# ::lemmas ["HAHAHA", "!", "get", "a", "light", "?"]
(c28-4 / get-01
       :polarity (c28-3 / amr-unknown)
       :ARG0 (c28-0 / you)
       :ARG1 (c28-2 / light)
       :mod (c28-1 / haha
                   :mode expressive))

# ::snt Listen to star 's new single out now Stream the single, "NightTime" here:iTunes: : Play
# ::tokens ["Listen", "to", "star", "'s", "new", "single", "out", "now", "Stream", "the", "single", ",", "\"", "NightTime", "\"", "here", ":", "iTunes", ":", ":", "Play"]
# ::lemmas ["listen", "to", "star", "'s", "new", "single", "out", "now", "Stream", "the", "single", ",", "\"", "NightTime", "\"", "here", ":", "itune", ":", ":", "play"]
(c29-13 / and
        :op1 (c29-8 / listen-01
                    :ARG0 (c29-2 / you)
                    :ARG1 (c29-5 / single
                                 :ARG1-of (c29-3 / new-01)
                                 :poss (c29-0 / star))
                    :ARG1-of (c29-1 / out-01
                                    :time (c29-7 / now))
                    :mode imperative)
        :op2 (c29-14 / stream-03
                     :ARG0 c29-2
                     :ARG1 (c29-6 / single
                                  :name (c29-9 / name
                                               :op1 "NightTime"))
                     :location (c29-10 / here
                                       :medium (c29-11 / product
                                                       :name (c29-12 / name
                                                                     :op1 "iTunes")))
                     :manner (c29-4 / play-11
                                    :ARG0 c29-2
                                    :mode imperative)
                     :mode imperative))

# ::snt :No worries, I am
# ::tokens [":", "No", "worries", ",", "I", "am"]
# ::lemmas [":", "no", "worry", ",", "i", "be"]
(c30-0 / worry-01
       :ARG0 (c30-1 / i)
       :polarity -)

# ::snt Fine,just be aware of both sides.
# ::tokens ["Fine", ",", "just", "be", "aware", "of", "both", "sides", "."]
# ::lemmas ["fine", ",", "just", "be", "aware", "of", "both", "side", "."]
(c31-3 / multi-sentence
       :snt1 (c31-0 / fine-04)
       :snt2 (c31-5 / realize-01
                    :ARG0 (c31-2 / you)
                    :ARG1 (c31-4 / side
                                 :mod (c31-1 / both))
                    :mod (c31-6 / just)
                    :mode imperative))

# ::snt I'm not going to argue with anyone,so have a nice evening
# ::tokens ["I", "'m", "not", "going", "to", "argue", "with", "anyone", ",", "so", "have", "a", "nice", "evening"]
# ::lemmas ["i", "be", "not", "go", "to", "argue", "with", "anyone", ",", "so", "have", "a", "nice", "evening"]
(c32-2 / argue-02
       :ARG0 (c32-7 / i)
       :ARG1 (c32-6 / anyone)
       :ARG0-of (c32-5 / cause-01
                       :ARG1 (c32-4 / have-06
                                    :ARG0 (c32-0 / you)
                                    :ARG1 (c32-3 / evening
                                                 :ARG1-of (c32-1 / nice-01))
                                    :mode imperative))
       :polarity -)

# ::snt Not everyone feels this way.There's been a huge backlash on the other side of twitter.Please report both sides otherwise its fake news.
# ::tokens ["Not", "everyone", "feels", "this", "way", ".", "There", "'s", "been", "a", "huge", "backlash", "on", "the", "other", "side", "of", "twitter", ".", "Please", "report", "both", "sides", "otherwise", "its", "fake", "news", "."]
# ::lemmas ["not", "everyone", "feel", "this", "way", ".", "there", "be", "be", "a", "huge", "backlash", "on", "the", "other", "side", "of", "twitter", ".", "please", "report", "both", "side", "otherwise", "its", "fake", "news", "."]
(c33-4 / multi-sentence
       :snt1 (c33-0 / feel-02
                    :ARG0 (c33-9 / everyone
                                 :polarity -)
                    :ARG1 (c33-15 / way
                                  :mod (c33-16 / this)))
       :snt2 (c33-2 / backlash-01
                    :mod (c33-10 / huge)
                    :location (c33-6 / side
                                     :mod (c33-1 / other)
                                     :part-of (c33-11 / publication
                                                      :name (c33-5 / name
                                                                   :op1 "Twitter"))))
       :snt3 (c33-8 / report-01
                    :ARG0 (c33-3 / you)
                    :ARG1 (c33-7 / side
                                 :mod (c33-12 / both))
                    :condition (c33-13 / fake-02
                                       :ARG1 (c33-14 / news))
                    :mode imperative
                    :polite +))

# ::snt Yay! so excited
# ::tokens ["Yay", "!", "so", "excited"]
# ::lemmas ["Yay", "!", "so", "excited"]
(c34-1 / excite-01
       :ARG0 (c34-0 / event)
       :degree (c34-2 / so)
       :mode expressive)

# ::snt Listen to star 's new single out now Stream the single, "NightTime" here:iTunes: : Play
# ::tokens ["Listen", "to", "star", "'s", "new", "single", "out", "now", "Stream", "the", "single", ",", "\"", "NightTime", "\"", "here", ":", "iTunes", ":", ":", "Play"]
# ::lemmas ["listen", "to", "star", "'s", "new", "single", "out", "now", "Stream", "the", "single", ",", "\"", "NightTime", "\"", "here", ":", "itune", ":", ":", "play"]
(c35-13 / and
        :op1 (c35-8 / listen-01
                    :ARG0 (c35-2 / you)
                    :ARG1 (c35-5 / single
                                 :ARG1-of (c35-3 / new-01)
                                 :poss (c35-0 / star))
                    :ARG1-of (c35-1 / out-01
                                    :time (c35-7 / now))
                    :mode imperative)
        :op2 (c35-14 / stream-03
                     :ARG0 c35-2
                     :ARG1 (c35-6 / single
                                  :name (c35-9 / name
                                               :op1 "NightTime"))
                     :location (c35-10 / here
                                       :medium (c35-11 / product
                                                       :name (c35-12 / name
                                                                     :op1 "iTunes")))
                     :manner (c35-4 / play-11
                                    :ARG0 c35-2
                                    :mode imperative)
                     :mode imperative))

# ::snt :Cant wait to hear this feat with Alicia Keys!
# ::tokens [":", "Ca", "nt", "wait", "to", "hear", "this", "feat", "with", "Alicia", "Keys", "!"]
# ::lemmas [":", "can", "nt", "wait", "to", "hear", "this", "feat", "with", "Alicia", "Keys", "!"]
(c36-4 / possible-01
       :ARG1 (c36-5 / wait-01
                    :ARG1 (c36-6 / i)
                    :ARG2 (c36-3 / hear-01
                                 :ARG0 c36-6
                                 :ARG1 (c36-0 / feat
                                              :mod (c36-7 / this)
                                              :prep-with (c36-2 / person
                                                                :name (c36-1 / name
                                                                             :op1 "Alicia"
                                                                             :op2 "Keys"))))))

# ::snt Imma cop cause this cover is clean lol
# ::tokens ["Imma", "cop", "cause", "this", "cover", "is", "clean", "lol"]
# ::lemmas ["Imma", "cop", "cause", "this", "cover", "be", "clean", "lol"]
(c37-2 / cause-01
       :ARG0 (c37-7 / clean-04
                    :ARG1 (c37-3 / cover-03
                                 :mod (c37-5 / this)))
       :ARG1 (c37-0 / cop
                    :domain (c37-4 / i))
       :ARG2-of (c37-1 / laugh-01
                       :ARG0 c37-4
                       :manner (c37-6 / loud)
                       :mode expressive))

# ::snt you need it
# ::tokens ["you", "need", "it"]
# ::lemmas ["you", "need", "it"]
(c38-1 / need-01
       :ARG0 (c38-0 / you)
       :ARG1 (c38-2 / it))

# ::snt LOL It wouldn't be the first time!
# ::tokens ["LOL", "It", "would", "n't", "be", "the", "first", "time", "!"]
# ::lemmas ["LOL", "it", "would", "not", "be", "the", "first", "time", "!"]
(c39-0 / ordinal-entity
       :domain (c39-3 / it)
       :ARG2-of (c39-2 / laugh-01
                       :manner (c39-1 / loud)
                       :mode expressive)
       :value 1
       :polarity -)

# ::snt Justin Timberlake has shared more details about Man Of The Woods: The album features Chris Stapleton and Alicia Keys, its lead single is "Filthy," and this is the cover art
# ::tokens ["Justin", "Timberlake", "has", "shared", "more", "details", "about", "Man", "Of", "The", "Woods", ":", "The", "album", "features", "Chris", "Stapleton", "and", "Alicia", "Keys", ",", "its", "lead", "single", "is", "\"", "Filthy", ",", "\"", "and", "this", "is", "the", "cover", "art"]
# ::lemmas ["Justin", "Timberlake", "have", "share", "more", "detail", "about", "Man", "of", "the", "Woods", ":", "the", "album", "feature", "Chris", "Stapleton", "and", "Alicia", "Keys", ",", "its", "lead", "single", "be", "\"", "filthy", ",", "\"", "and", "this", "be", "the", "cover", "art"]
(c40-0 / share-01
       :ARG0 (c40-17 / person
                     :name (c40-15 / name
                                   :op1 "Justin"
                                   :op2 "Timberlake"))
       :ARG1 (c40-16 / detail-01
                     :ARG1 (c40-8 / and
                                  :op1 (c40-14 / feature-01
                                               :ARG0 (c40-6 / album)
                                               :ARG1 (c40-5 / and
                                                            :op1 (c40-10 / person
                                                                         :name (c40-11 / name
                                                                                       :op1 "Chris"
                                                                                       :op2 "Stapleton"))
                                                            :op2 (c40-2 / person
                                                                        :name (c40-18 / name
                                                                                      :op1 "Alicia"
                                                                                      :op2 "Keys"))))
                                  :op2 (c40-3 / single
                                              :ARG1-of (c40-1 / lead-02
                                                              :ARG0 c40-6)
                                              :domain (c40-9 / music
                                                             :name (c40-13 / name
                                                                           :op1 "Filthy")))
                                  :op3 (c40-19 / art
                                               :mod (c40-12 / cover)
                                               :domain (c40-7 / this)))
                     :mod (c40-4 / more)))

# ::snt What's with all the Hate? JT is fresh!
# ::tokens ["What", "'s", "with", "all", "the", "Hate", "?", "JT", "is", "fresh", "!"]
# ::lemmas ["what", "be", "with", "all", "the", "hate", "?", "JT", "be", "fresh", "!"]
(c41-1 / multi-sentence
       :snt1 (c41-3 / hate-01
                    :mod (c41-5 / all))
       :snt2 (c41-0 / fresh-04
                    :ARG1 (c41-4 / person
                                 :name (c41-2 / name
                                              :op1 "JT"))
                    :mode expressive))

# ::snt so a black metal album then?
# ::tokens ["so", "a", "black", "metal", "album", "then", "?"]
# ::lemmas ["so", "a", "black", "metal", "album", "then", "?"]
(c42-4 / infer-01
       :polarity (c42-2 / amr-unknown)
       :ARG1 (c42-3 / album
                    :mod (c42-1 / metal
                                :ARG1-of (c42-0 / black-04))))

# ::snt YES
# ::tokens ["YES"]
# ::lemmas ["yes"]
(c43-0 / yes)

# ::snt is bringing sex back to metrosexual
# ::tokens ["is", "bringing", "sex", "back", "to", "metrosexual"]
# ::lemmas ["be", "bring", "sex", "back", "to", "metrosexual"]
(c44-0 / bring-01
       :ARG1 (c44-3 / sex-01)
       :ARG2 (c44-2 / metrosexual)
       :direction (c44-1 / back))

# ::snt You told one of your random followers you loved them soooo
# ::tokens ["You", "told", "one", "of", "your", "random", "followers", "you", "loved", "them", "soooo"]
# ::lemmas ["you", "tell", "one", "of", "your", "random", "follower", "you", "love", "they", "soooo"]
(c45-8 / tell-01
       :ARG0 (c45-1 / you)
       :ARG1 (c45-6 / love-01
                    :ARG0 c45-1
                    :ARG1 (c45-5 / person
                                 :ARG1-of (c45-7 / include-91
                                                 :ARG2 (c45-2 / person
                                                              :ARG0-of (c45-0 / follow-02
                                                                              :ARG1 c45-1)
                                                              :mod (c45-4 / random)))
                                 :quant 1)
                    :degree (c45-3 / so))
       :ARG2 c45-5)

# ::snt You know I already know this. Thats my man.
# ::tokens ["You", "know", "I", "already", "know", "this", ".", "That", "s", "my", "man", "."]
# ::lemmas ["you", "know", "i", "already", "know", "this", ".", "that", "s", "my", "man", "."]
(c46-1 / multi-sentence
       :snt1 (c46-3 / know-01
                    :ARG0 (c46-0 / you)
                    :ARG1 (c46-4 / this)
                    :time (c46-6 / already))
       :snt2 (c46-2 / man
                    :domain (c46-7 / that)
                    :poss (c46-5 / i)))

# ::snt Did he find a dollar?
# ::tokens ["Did", "he", "find", "a", "dollar", "?"]
# ::lemmas ["do", "he", "find", "a", "dollar", "?"]
(c47-0 / find-01
       :polarity (c47-3 / amr-unknown)
       :ARG0 (c47-1 / he)
       :ARG1 (c47-2 / dollar))

# ::snt Buildin a still to slow down the time I suppose
# ::tokens ["Buildin", "a", "still", "to", "slow", "down", "the", "time", "I", "suppose"]
# ::lemmas ["buildin", "a", "still", "to", "slow", "down", "the", "time", "i", "suppose"]
(c48-1 / build-01
       :ARG1 (c48-2 / still)
       :purpose (c48-0 / slow-down-03
                       :ARG1 (c48-4 / time)
                       :ARG1-of (c48-5 / suppose-01
                                       :ARG0 (c48-3 / i))))

# ::snt Bone E Bear??
# ::tokens ["Bone", "E", "Bear", "?", "?"]
# ::lemmas ["bone", "e", "Bear", "?", "?"]
(c49-0 / bone-01
       :polarity (c49-3 / amr-unknown)
       :ARG1 (c49-2 / animal
                    :name (c49-1 / name
                                 :op1 "Bear")))

# ::snt sounds like a gay porn title TBH
# ::tokens ["sounds", "like", "a", "gay", "porn", "title", "TBH"]
# ::lemmas ["sound", "like", "a", "gay", "porn", "title", "TBH"]
(c50-0 / sound-01
       :ARG2 (c50-4 / title-01
                    :ARG2 (c50-2 / porn
                                 :ARG1-of (c50-5 / gay-01)))
       :ARG1-of (c50-1 / honest-01
                       :ARG0 (c50-3 / i)))
