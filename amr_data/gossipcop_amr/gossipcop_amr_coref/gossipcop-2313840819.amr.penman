# ::snt So? Guess you missed the point of the article. He's a horribly troubled, very violent, super f*cked up excuse for a man.
# ::tokens ["So", "?", "Guess", "you", "missed", "the", "point", "of", "the", "article", ".", "He", "'s", "a", "horribly", "troubled", ",", "very", "violent", ",", "super", "f*cked", "up", "excuse", "for", "a", "man", "."]
# ::lemmas ["so", "?", "guess", "you", "miss", "the", "point", "of", "the", "article", ".", "he", "be", "a", "horribly", "troubled", ",", "very", "violent", ",", "super", "f*cke", "up", "excuse", "for", "a", "man", "."]
(c1-12 / multi-sentence
       :snt1 (c1-0 / so
                   :polarity (c1-10 / amr-unknown))
       :snt2 (c1-11 / guess-01
                    :ARG0 (c1-18 / i)
                    :ARG1 (c1-5 / miss-02
                                :ARG0 (c1-3 / you)
                                :ARG1 (c1-16 / point-04
                                             :ARG1 (c1-8 / article))))
       :snt3 (c1-15 / excuse-02
                    :ARG0 (c1-6 / he)
                    :ARG1 (c1-13 / man)
                    :ARG2 (c1-7 / and
                                :op1 (c1-9 / trouble-01
                                           :ARG1 c1-6
                                           :degree (c1-17 / horrible))
                                :op2 (c1-4 / violent
                                           :degree (c1-1 / very))
                                :op3 (c1-14 / fuck-up-02
                                            :degree (c1-2 / super)))))

# ::snt Ohh myyy goodness.
# ::tokens ["Ohh", "myyy", "goodness", "."]
# ::lemmas ["Ohh", "myyy", "goodness", "."]
(c2-0 / goodness
      :mod (c2-1 / oh
                 :mode expressive)
      :poss (c2-2 / i)
      :mode expressive)

# ::snt Your point is?
# ::tokens ["Your", "point", "is", "?"]
# ::lemmas ["your", "point", "be", "?"]
(c3-1 / point-04
      :ARG0 (c3-0 / you)
      :ARG1 (c3-2 / amr-unknown))

# ::snt Thankfully ChrisBrown didn't go into sports/comedy b/c he'd be out a job by now. Good thing his records still support his misogyny habit.
# ::tokens ["Thankfully", "ChrisBrown", "did", "n't", "go", "into", "sports", "/", "comedy", "b", "/", "c", "he", "'d", "be", "out", "a", "job", "by", "now", ".", "Good", "thing", "his", "records", "still", "support", "his", "misogyny", "habit", "."]
# ::lemmas ["Thankfully", "ChrisBrown", "do", "not", "go", "into", "sport", "/", "comedy", "b", "/", "c", "he", "would", "be", "out", "a", "job", "by", "now", ".", "good", "thing", "his", "record", "still", "support", "his", "misogyny", "habit", "."]
(c4-12 / multi-sentence
       :snt1 (c4-9 / go-06
                   :ARG0 (c4-18 / person
                                :name (c4-15 / name
                                             :op1 "ChrisBrown"))
                   :ARG1 (c4-0 / slash
                               :op1 (c4-3 / sport)
                               :op2 (c4-14 / comedy))
                   :ARG2-of (c4-8 / thankful-02)
                   :ARG1-of (c4-10 / cause-01
                                   :ARG0 (c4-4 / out-03
                                               :ARG1 c4-18
                                               :ARG2 (c4-7 / job)
                                               :time (c4-11 / by
                                                            :op1 (c4-13 / now))))
                   :polarity -)
       :snt2 (c4-1 / good-02
                   :ARG1 (c4-2 / support-01
                               :ARG0 (c4-17 / record
                                            :poss (c4-5 / he))
                               :ARG1 (c4-19 / habit
                                            :mod (c4-6 / misogyny)
                                            :poss c4-5)
                               :mod (c4-16 / still))))

# ::snt Good! Am assuming this means we can expect not have to see her at the BET Awards or any other celeb events where she has no business
# ::tokens ["Good", "!", "Am", "assuming", "this", "means", "we", "can", "expect", "not", "have", "to", "see", "her", "at", "the", "BET", "Awards", "or", "any", "other", "celeb", "events", "where", "she", "has", "no", "business"]
# ::lemmas ["good", "!", "be", "assume", "this", "mean", "we", "can", "expect", "not", "have", "to", "see", "she", "at", "the", "BET", "Awards", "or", "any", "other", "celeb", "event", "where", "she", "have", "no", "business"]
(c5-12 / multi-sentence
       :snt1 (c5-8 / good-02
                   :mode expressive)
       :snt2 (c5-7 / assume-02
                   :ARG0 (c5-19 / i)
                   :ARG1 (c5-3 / mean-01
                               :ARG1 (c5-6 / this)
                               :ARG2 (c5-17 / possible-01
                                            :ARG1 (c5-16 / expect-01
                                                         :ARG0 (c5-18 / we)
                                                         :ARG1 (c5-1 / obligate-01
                                                                     :ARG1 c5-18
                                                                     :ARG2 (c5-0 / see-01
                                                                                 :ARG0 c5-18
                                                                                 :ARG1 (c5-2 / she)
                                                                                 :location (c5-10 / or
                                                                                                  :op1 (c5-9 / event
                                                                                                             :name (c5-15 / name
                                                                                                                          :op1 " BET"
                                                                                                                          :op2 "Awards"))
                                                                                                  :op2 (c5-13 / event
                                                                                                              :mod (c5-14 / celebrity)
                                                                                                              :mod (c5-20 / other)
                                                                                                              :mod (c5-5 / any))
                                                                                                  :location-of (c5-4 / have-03
                                                                                                                     :ARG0 c5-2
                                                                                                                     :ARG1 (c5-11 / business)
                                                                                                                     :polarity -)))
                                                                     :polarity -))))))

# ::snt She didn't have evidence of the beating or something
# ::tokens ["She", "did", "n't", "have", "evidence", "of", "the", "beating", "or", "something"]
# ::lemmas ["she", "do", "not", "have", "evidence", "of", "the", "beating", "or", "something"]
(c6-4 / have-03
      :ARG0 (c6-2 / she)
      :ARG1 (c6-3 / evidence-01
                  :ARG1 (c6-1 / beat-01)
                  :ARG0-of (c6-0 / something-01))
      :polarity -)

# ::snt Good!!!Hope now her team won't use his nam or anything with him Chris brown
# ::tokens ["Good!!!Hope", "now", "her", "team", "wo", "n't", "use", "his", "nam", "or", "anything", "with", "him", "Chris", "brown"]
# ::lemmas ["good!!!hope", "now", "her", "team", "will", "not", "use", "his", "nam", "or", "anything", "with", "he", "Chris", "brown"]
(c7-2 / multi-sentence
      :snt1 (c7-12 / good-02
                   :mode expressive)
      :snt2 (c7-6 / hope-01
                  :ARG0 (c7-7 / person
                              :name (c7-1 / name
                                          :op1 "Chris"
                                          :op2 "Brown"))
                  :ARG1 (c7-14 / use-01
                               :ARG0 (c7-11 / team
                                            :poss (c7-3 / she))
                               :ARG1 (c7-0 / or
                                           :op1 c7-7
                                           :ARG0-of (c7-10 / have-rel-role-91
                                                           :ARG1 (c7-5 / he)
                                                           :ARG2 (c7-8 / nam)))
                               :op2 (c7-4 / anything)
                               :prep-with (c7-13 / he)
                               :polarity -)
                  :time (c7-9 / now)))

# ::snt Good. Although it makes me think of an officer telling me, "a restraining order won't stop a knife or a bullet."
# ::tokens ["Good", ".", "Although", "it", "makes", "me", "think", "of", "an", "officer", "telling", "me", ",", "\"", "a", "restraining", "order", "wo", "n't", "stop", "a", "knife", "or", "a", "bullet", ".", "\""]
# ::lemmas ["good", ".", "although", "it", "make", "i", "think", "of", "an", "officer", "tell", "i", ",", "\"", "a", "restraining", "order", "will", "not", "stop", "a", "knife", "or", "a", "bullet", ".", "\""]
(c8-3 / multi-sentence
      :snt1 (c8-12 / good-02)
      :snt2 (c8-8 / have-concession-91
                  :ARG2 (c8-7 / make-02
                              :ARG0 (c8-10 / it)
                              :ARG1 (c8-11 / think-01
                                           :ARG0 (c8-5 / i)
                                           :ARG1 (c8-14 / tell-01
                                                        :ARG0 (c8-0 / officer)
                                                        :ARG1 (c8-4 / stop-01
                                                                    :ARG0 (c8-1 / order-01
                                                                                :ARG2 (c8-6 / restrain-01))
                                                                    :ARG1 (c8-13 / or
                                                                                 :op1 (c8-9 / knife)
                                                                                 :op2 (c8-2 / bullet))
                                                                    :polarity -)
                                                        :ARG2 c8-5)))))

# ::snt cool
# ::tokens ["cool"]
# ::lemmas ["cool"]
(c9-0 / cool-04)

# ::snt He tried to beat her real quick like a trapdoor spider.
# ::tokens ["He", "tried", "to", "beat", "her", "real", "quick", "like", "a", "trapdoor", "spider", "."]
# ::lemmas ["he", "try", "to", "beat", "she", "real", "quick", "like", "a", "trapdoor", "spider", "."]
(c10-7 / try-01
       :ARG0 (c10-3 / he)
       :ARG1 (c10-0 / beat-01
                    :ARG0 c10-3
                    :ARG1 (c10-1 / she)
                    :ARG1-of (c10-6 / quick-02
                                    :degree (c10-2 / really))
                    :ARG1-of (c10-9 / resemble-01
                                    :ARG2 (c10-4 / beat-01
                                                 :ARG0 c10-3
                                                 :ARG1 (c10-10 / thing
                                                               :ARG0-of (c10-5 / crawl-01
                                                                               :location (c10-8 / trapdoor)))))))

# ::snt You notice nobody messed with Rihanna, betcha she still sticks to hers roots, ijs
# ::tokens ["You", "notice", "nobody", "messed", "with", "Rihanna", ",", "betcha", "she", "still", "sticks", "to", "hers", "roots", ",", "ijs"]
# ::lemmas ["you", "notice", "nobody", "mess", "with", "Rihanna", ",", "betcha", "she", "still", "stick", "to", "hers", "root", ",", "ijs"]
(c11-11 / and
        :op1 (c11-4 / notice-01
                    :ARG0 (c11-2 / you)
                    :ARG1 (c11-3 / mess-01
                                 :ARG0 (c11-7 / nobody)
                                 :ARG1 (c11-8 / person
                                              :name (c11-9 / name
                                                           :op1 "Rihanna"))))
        :op2 (c11-1 / bet-01
                    :ARG0 c11-2
                    :ARG1 (c11-5 / stick-01
                                 :ARG1 c11-8
                                 :ARG2 (c11-6 / root
                                              :poss c11-8)
                                 :mod (c11-0 / still))
                    :ARG2 (c11-10 / i)))

# ::snt We on the outside..yo!it's part OF THIS CONTROL ON ARTIST. If Chris was gay, or eyes wide shut, not so many problems
# ::tokens ["We", "on", "the", "outside", "..", "yo!it", "'s", "part", "OF", "THIS", "CONTROL", "ON", "ARTIST", ".", "If", "Chris", "was", "gay", ",", "or", "eyes", "wide", "shut", ",", "not", "so", "many", "problems"]
# ::lemmas ["we", "on", "the", "outside", "..", "yo!it", "'s", "part", "of", "THIS", "CONTROL", "ON", "ARTIST", ".", "if", "Chris", "be", "gay", ",", "or", "eye", "wide", "shut", ",", "not", "so", "many", "problem"]
(c12-11 / multi-sentence
        :snt1 (c12-17 / we
                      :location (c12-2 / outside))
        :snt2 (c12-4 / yo
                     :mode expressive)
        :snt3 (c12-5 / have-part-91
                     :ARG1 (c12-13 / control-01
                                   :ARG0 (c12-8 / this)
                                   :ARG1 (c12-7 / artist))
                     :ARG2 (c12-18 / it))
        :snt4 (c12-16 / problem
                      :quant (c12-6 / many
                                    :degree (c12-0 / so)
                                    :polarity -)
                      :condition (c12-10 / or
                                         :op1 (c12-9 / gay-01
                                                     :ARG1 (c12-12 / person
                                                                   :name (c12-14 / name
                                                                                 :op1 "Chris")
                                                                   :part (c12-15 / eye)))
                                         :op2 (c12-3 / shut-01
                                                     :ARG1 c12-15
                                                     :ARG1-of (c12-1 / wide-02)))))

# ::snt Sad n petty
# ::tokens ["Sad", "n", "petty"]
# ::lemmas ["sad", "n", "petty"]
(c13-2 / and
       :op1 (c13-0 / sad-02)
       :op2 (c13-1 / petty))

# ::snt He is a woman abuser...we already know that (Rihanna) so stop trying to say you're not!
# ::tokens ["He", "is", "a", "woman", "abuser", "...", "we", "already", "know", "that", "(", "Rihanna", ")", "so", "stop", "trying", "to", "say", "you", "'re", "not", "!"]
# ::lemmas ["he", "be", "a", "woman", "abuser", "...", "we", "already", "know", "that", "(", "Rihanna", ")", "so", "stop", "try", "to", "say", "you", "be", "not", "!"]
(c14-15 / and
        :op1 (c14-14 / abuse-01
                     :ARG0 (c14-5 / he)
                     :ARG1 (c14-9 / woman))
        :op2 (c14-6 / know-01
                    :ARG0 (c14-8 / we)
                    :ARG1 c14-14
                    :time (c14-10 / already)
                    :ARG1-of (c14-2 / mean-01
                                    :ARG2 (c14-7 / person
                                                 :name (c14-3 / name
                                                              :op1 "Rihanna"))))
        :ARG0-of (c14-11 / cause-01
                         :ARG1 (c14-4 / stop-01
                                      :ARG0 (c14-1 / you)
                                      :ARG1 (c14-13 / try-01
                                                    :ARG0 c14-1
                                                    :ARG1 (c14-0 / say-01
                                                                 :ARG0 c14-1
                                                                 :ARG1 (c14-12 / have-polarity-91
                                                                               :ARG1 c14-1
                                                                               :ARG2 -)))
                                      :mode imperative)))

# ::snt Anyone can get a restraining order - I can get one against ur Dumb ass!
# ::tokens ["Anyone", "can", "get", "a", "restraining", "order", "-", "I", "can", "get", "one", "against", "ur", "Dumb", "ass", "!"]
# ::lemmas ["anyone", "can", "get", "a", "restraining", "order", "-", "i", "can", "get", "one", "against", "ur", "Dumb", "ass", "!"]
(c15-10 / and
        :op1 (c15-7 / possible-01
                    :ARG1 (c15-11 / get-01
                                  :ARG0 (c15-9 / anyone)
                                  :ARG1 (c15-0 / order-01
                                               :ARG2 (c15-5 / restrain-01))))
        :op2 (c15-3 / possible-01
                    :ARG1 (c15-12 / get-01
                                  :ARG0 (c15-13 / i)
                                  :ARG1 (c15-1 / order-01
                                               :ARG2 (c15-4 / restrain-01
                                                            :ARG1 (c15-8 / ass
                                                                         :mod (c15-6 / dumb)
                                                                         :part-of (c15-2 / you)))))))

# ::snt He is crazy and people still spend money on his music.
# ::tokens ["He", "is", "crazy", "and", "people", "still", "spend", "money", "on", "his", "music", "."]
# ::lemmas ["he", "be", "crazy", "and", "people", "still", "spend", "money", "on", "his", "music", "."]
(c16-7 / and
       :op1 (c16-6 / crazy-03
                   :ARG1 (c16-3 / he))
       :op2 (c16-2 / spend-01
                   :ARG0 (c16-4 / person)
                   :ARG1 (c16-1 / music
                                :poss c16-3)
                   :ARG3 (c16-5 / money)
                   :mod (c16-0 / still)))

# ::snt A damn joke!!!!
# ::tokens ["A", "damn", "joke", "!", "!", "!", "!"]
# ::lemmas ["a", "damn", "joke", "!", "!", "!", "!"]
(c17-1 / joke-01
       :mod (c17-0 / damn
                   :mode expressive))

# ::snt No police report, didnt take her ass to a hospital &amp; on Iyanla show saying he NEVER hit her. Fuck her!
# ::tokens ["No", "police", "report", ",", "did", "nt", "take", "her", "ass", "to", "a", "hospital", "&", "amp", ";", "on", "Iyanla", "show", "saying", "he", "NEVER", "hit", "her", ".", "Fuck", "her", "!"]
# ::lemmas ["no", "police", "report", ",", "do", "not", "take", "her", "ass", "to", "a", "hospital", "&", "amp", ";", "on", "Iyanla", "show", "say", "he", "NEVER", "hit", "she", ".", "fuck", "she", "!"]
(c19-10 / multi-sentence
        :snt1 (c19-8 / and
                     :op1 (c19-15 / report-01
                                  :ARG0 (c19-17 / police)
                                  :polarity -)
                     :op2 (c19-9 / take-01
                                 :ARG0 c19-17
                                 :ARG1 (c19-7 / ass
                                              :part-of (c19-0 / she))
                                 :ARG3 (c19-5 / hospital)
                                 :polarity -)
                     :op3 (c19-6 / amp))
        :snt2 (c19-3 / say-01
                     :ARG0 (c19-2 / show
                                  :mod (c19-11 / person
                                               :name (c19-13 / name
                                                             :op1 "Iyanla")))
                     :ARG1 (c19-18 / hit-01
                                   :ARG0 (c19-4 / he)
                                   :ARG1 (c19-14 / she)
                                   :time (c19-16 / ever)
                                   :polarity -))
        :snt3 (c19-12 / fuck-01
                      :ARG1 (c19-1 / she)
                      :mode expressive))

# ::snt Riri still cool with Chris. Act like u don't know.. .
# ::tokens ["Riri", "still", "cool", "with", "Chris", ".", "Act", "like", "u", "do", "n't", "know", "..", "."]
# ::lemmas ["riri", "still", "cool", "with", "Chris", ".", "Act", "like", "u", "do", "not", "know", "..", "."]
(c20-3 / multi-sentence
       :snt1 (c20-9 / cool-04
                    :ARG1 (c20-7 / person
                                 :name (c20-1 / name
                                              :op1 "Riri"))
                    :ARG2 (c20-2 / person
                                 :name (c20-6 / name
                                              :op1 "Chris"))
                    :mod (c20-4 / still))
       :snt2 (c20-10 / act-01
                     :ARG0 (c20-0 / you)
                     :ARG1-of (c20-5 / resemble-01
                                     :ARG2 (c20-8 / know-01
                                                  :ARG0 c20-0
                                                  :polarity -))
                     :mode imperative))

# ::snt swear all these bitches got is their pussy. Yo guys dont never go overboard financially &amp; emotionally with these hoes.
# ::tokens ["swear", "all", "these", "bitches", "got", "is", "their", "pussy", ".", "Yo", "guys", "do", "nt", "never", "go", "overboard", "financially", "&", "amp", ";", "emotionally", "with", "these", "hoes", "."]
# ::lemmas ["swear", "all", "these", "bitch", "get", "be", "their", "pussy", ".", "Yo", "guy", "do", "not", "never", "go", "overboard", "financially", "&", "amp", ";", "emotionally", "with", "these", "hoe", "."]
(c21-4 / multi-sentence
       :snt1 (c21-13 / get-01
                     :ARG0 (c21-2 / bitch
                                  :mod (c21-10 / this)
                                  :mod (c21-12 / all))
                     :ARG1 (c21-8 / pussy
                                  :poss c21-2))
       :snt2 (c21-11 / go-08
                     :ARG1 (c21-15 / guy
                                   :mod (c21-3 / yo))
                     :ARG2 (c21-0 / overboard
                                  :topic (c21-14 / and
                                                 :op1 (c21-1 / finance)
                                                 :op2 (c21-9 / amp)))
                     :time (c21-6 / ever)
                     :condition (c21-7 / hoe
                                       :mod (c21-16 / this))
                     :manner (c21-5 / emotional)
                     :polarity -))

# ::snt Finally katuchi can stay her lying ass away from Chris
# ::tokens ["Finally", "katuchi", "can", "stay", "her", "lying", "ass", "away", "from", "Chris"]
# ::lemmas ["finally", "katuchi", "can", "stay", "her", "lie", "ass", "away", "from", "Chris"]
(c22-5 / possible-01
       :ARG1 (c22-3 / stay-01
                    :ARG1 (c22-2 / person
                                 :name (c22-1 / name
                                              :op1 "Katuchi")
                                 :part (c22-7 / ass))
                    :ARG3 (c22-6 / away
                                 :op1 (c22-8 / person
                                             :name (c22-4 / name
                                                          :op1 "Chris"))
                                 :source c22-7))
       :time (c22-0 / final))

# ::snt Right. Which means we should see sis at any award shows, parties or events he is likely to attend. Sounds like a win to me
# ::tokens ["Right", ".", "Which", "means", "we", "should", "see", "sis", "at", "any", "award", "shows", ",", "parties", "or", "events", "he", "is", "likely", "to", "attend", ".", "Sounds", "like", "a", "win", "to", "me"]
# ::lemmas ["right", ".", "which", "mean", "we", "should", "see", "sis", "at", "any", "award", "show", ",", "party", "or", "event", "he", "be", "likely", "to", "attend", ".", "sound", "like", "a", "win", "to", "i"]
(c23-12 / multi-sentence
        :snt1 (c23-14 / right-06)
        :snt2 (c23-7 / mean-01
                     :ARG2 (c23-3 / recommend-01
                                  :ARG1 (c23-0 / see-01
                                               :ARG0 (c23-17 / we)
                                               :ARG1 (c23-5 / sis)
                                               :location (c23-6 / or
                                                                :op1 (c23-4 / show
                                                                            :mod (c23-11 / award-01))
                                                                :op2 (c23-16 / party-01)
                                                                :op3 (c23-15 / event
                                                                             :ARG1-of (c23-10 / attend-01
                                                                                              :ARG0 (c23-8 / he)
                                                                                              :ARG1-of (c23-1 / likely-01)))
                                                                :mod (c23-9 / any)))))
        :snt3 (c23-13 / sound-01
                      :ARG1 (c23-2 / win-01)
                      :ARG2 (c23-18 / i)))

# ::snt Good! Guess that means we should NOT expect to see her at the BET Awards or any other celebrity events she has no business being at anyway
# ::tokens ["Good", "!", "Guess", "that", "means", "we", "should", "NOT", "expect", "to", "see", "her", "at", "the", "BET", "Awards", "or", "any", "other", "celebrity", "events", "she", "has", "no", "business", "being", "at", "anyway"]
# ::lemmas ["good", "!", "guess", "that", "mean", "we", "should", "not", "expect", "to", "see", "she", "at", "the", "BET", "Awards", "or", "any", "other", "celebrity", "event", "she", "have", "no", "business", "be", "at", "anyway"]
(c24-3 / multi-sentence
       :snt1 (c24-16 / good-02
                     :mode expressive)
       :snt2 (c24-14 / guess-01
                     :ARG1 (c24-9 / mean-01
                                  :ARG1 (c24-15 / that)
                                  :ARG2 (c24-6 / recommend-01
                                               :ARG1 (c24-8 / expect-01
                                                            :ARG0 (c24-12 / we)
                                                            :ARG1 (c24-5 / see-01
                                                                         :ARG0 c24-12
                                                                         :ARG1 (c24-0 / she)
                                                                         :location (c24-1 / or
                                                                                          :op1 (c24-17 / event
                                                                                                       :name (c24-4 / name
                                                                                                                    :op1 "BET"
                                                                                                                    :op2 "Awards"))
                                                                                          :op2 (c24-11 / event
                                                                                                       :mod (c24-13 / celebrity)
                                                                                                       :mod (c24-2 / other)
                                                                                                       :mod (c24-7 / any)
                                                                                                       :ARG2-of (c24-10 / have-org-role-91
                                                                                                                        :ARG0 c24-0
                                                                                                                        :ARG1-of c24-6
                                                                                                                        :ARG0 c24-12
                                                                                                                        :polarity -))))
                                                            :polarity -)))
                     :mode expressive))

# ::snt Thank you karrueche now we don't need to worry about you and your team
# ::tokens ["Thank", "you", "karrueche", "now", "we", "do", "n't", "need", "to", "worry", "about", "you", "and", "your", "team"]
# ::lemmas ["thank", "you", "karrueche", "now", "we", "do", "not", "need", "to", "worry", "about", "you", "and", "your", "team"]
(c25-1 / say-01
       :ARG0 (c25-9 / i)
       :ARG1 (c25-10 / thank-01
                     :ARG0 c25-9
                     :ARG1 (c25-4 / person
                                  :name (c25-0 / name
                                               :op1 "karrueche"))
                     :time (c25-3 / now)
                     :ARG0-of (c25-7 / cause-01
                                     :ARG1 (c25-5 / need-01
                                                  :ARG0 (c25-8 / we)
                                                  :ARG1 (c25-6 / worry-02
                                                               :ARG0 c25-8
                                                               :ARG1 (c25-2 / and
                                                                            :op1 c25-4
                                                                            :op2 (c25-11 / team
                                                                                         :poss c25-4)))
                                                  :polarity -)))
       :ARG2 c25-4)

# ::snt LOL! It's not like Chris gets great publicity.
# ::tokens ["LOL", "!", "It", "'s", "not", "like", "Chris", "gets", "great", "publicity", "."]
# ::lemmas ["LOL", "!", "it", "be", "not", "like", "Chris", "get", "great", "publicity", "."]
(c27-0 / multi-sentence
       :snt1 (c27-4 / laugh-01
                    :manner (c27-9 / loud)
                    :mode expressive)
       :snt2 (c27-3 / resemble-01
                    :ARG1 (c27-6 / it)
                    :ARG2 (c27-8 / get-01
                                 :ARG0 (c27-5 / person
                                              :name (c27-1 / name
                                                           :op1 "Chris"))
                                 :ARG1 (c27-2 / publicity
                                              :mod (c27-7 / great)))
                    :polarity -))

# ::snt Finally I am for chris karrueche and her team can stop using chris brown for attention
# ::tokens ["Finally", "I", "am", "for", "chris", "karrueche", "and", "her", "team", "can", "stop", "using", "chris", "brown", "for", "attention"]
# ::lemmas ["finally", "i", "be", "for", "chris", "karrueche", "and", "her", "team", "can", "stop", "use", "chris", "brown", "for", "attention"]
(c29-4 / support-01
       :ARG0 (c29-9 / i)
       :ARG1 (c29-6 / person
                    :name (c29-2 / name
                                 :op1 "chris"
                                 :op2 "karrueche"))
       :time (c29-0 / final)
       :purpose (c29-3 / possible-01
                       :ARG1 (c29-1 / stop-01
                                    :ARG0 (c29-10 / and
                                                  :op1 c29-6
                                                  :op2 (c29-8 / team
                                                              :poss c29-6))
                                    :ARG1 (c29-12 / use-01
                                                  :ARG0 c29-10
                                                  :ARG1 (c29-7 / product
                                                               :name (c29-5 / name
                                                                            :op1 "chris"
                                                                            :op2 "brown"))
                                                  :ARG2 (c29-11 / attend-02
                                                                :ARG1 c29-10)))))

# ::snt I thought a restraining order was a restraining order. I aint know it had a limit..
# ::tokens ["I", "thought", "a", "restraining", "order", "was", "a", "restraining", "order", ".", "I", "ai", "nt", "know", "it", "had", "a", "limit", ".."]
# ::lemmas ["i", "think", "a", "restraining", "order", "be", "a", "restraining", "order", ".", "i", "be", "not", "know", "it", "have", "a", "limit", ".."]
(c30-2 / multi-sentence
       :snt1 (c30-8 / think-01
                    :ARG0 (c30-7 / i)
                    :ARG1 (c30-0 / order-01
                                 :ARG2 (c30-4 / restrain-01)
                                 :domain (c30-1 / order-01
                                                :ARG2 (c30-9 / restrain-01))))
       :snt2 (c30-5 / know-01
                    :ARG0 (c30-3 / i)
                    :ARG1 (c30-6 / limit-01
                                 :ARG1 (c30-10 / it))
                    :polarity -))

# ::snt But what about all that stuff she claim about him punching her and kicking her down stairs
# ::tokens ["But", "what", "about", "all", "that", "stuff", "she", "claim", "about", "him", "punching", "her", "and", "kicking", "her", "down", "stairs"]
# ::lemmas ["but", "what", "about", "all", "that", "stuff", "she", "claim", "about", "he", "punch", "she", "and", "kick", "she", "down", "stair"]
(c31-6 / contrast-01
       :ARG2 (c31-2 / amr-unknown
                    :topic (c31-1 / stuff
                                  :mod (c31-8 / all)
                                  :mod (c31-9 / that)
                                  :ARG1-of (c31-11 / claim-01
                                                   :ARG0 (c31-0 / she))
                                  :topic (c31-7 / and
                                                :op1 (c31-4 / punch-01
                                                            :ARG0 (c31-3 / he)
                                                            :ARG1 c31-0)
                                                :op2 (c31-5 / kick-01
                                                            :ARG0 c31-3
                                                            :ARG1 c31-0
                                                            :direction (c31-10 / down)
                                                            :location (c31-12 / stair))))))

# ::snt Now we can move on without Chris bothering us while we're relaxing. Great news!
# ::tokens ["Now", "we", "can", "move", "on", "without", "Chris", "bothering", "us", "while", "we", "'re", "relaxing", ".", "Great", "news", "!"]
# ::lemmas ["now", "we", "can", "move", "on", "without", "Chris", "bother", "we", "while", "we", "be", "relax", ".", "great", "news", "!"]
(c32-2 / multi-sentence
       :snt1 (c32-7 / possible-01
                    :ARG1 (c32-6 / move-01
                                 :ARG0 (c32-11 / we)
                                 :direction (c32-0 / on)
                                 :manner (c32-1 / bother-01
                                                :ARG0 (c32-3 / person
                                                             :name (c32-4 / name
                                                                          :op1 "Chris"))
                                                :ARG1 c32-11
                                                :time (c32-5 / relax-01
                                                             :ARG1 (c32-9 / we))
                                                :polarity -)
                                 :time (c32-8 / now)))
       :snt2 (c32-10 / news
                     :mod (c32-12 / great)))

# ::snt Finally
# ::tokens ["Finally"]
# ::lemmas ["finally"]
(c33-0 / final)

# ::snt Have to catch up on Mediatakeout...this slipped by!
# ::tokens ["Have", "to", "catch", "up", "on", "Mediatakeout", "...", "this", "slipped", "by", "!"]
# ::lemmas ["have", "to", "catch", "up", "on", "Mediatakeout", "...", "this", "slip", "by", "!"]
(c34-2 / multi-sentence
       :snt1 (c34-0 / obligate-01
                    :ARG2 (c34-5 / catch-up-04
                                 :ARG1 (c34-6 / i)
                                 :ARG2 (c34-1 / broadcast-program
                                              :name (c34-3 / name
                                                           :op1 "Mediatakeout"))))
       :snt2 (c34-4 / slip-02
                    :ARG1 (c34-7 / this)))

# ::snt He's a loser.
# ::tokens ["He", "'s", "a", "loser", "."]
# ::lemmas ["he", "be", "a", "loser", "."]
(c35-1 / person
       :ARG0-of (c35-2 / lose-03)
       :domain (c35-0 / he))

# ::snt It's about time
# ::tokens ["It", "'s", "about", "time"]
# ::lemmas ["it", "be", "about", "time"]
(c36-1 / about
       :op1 (c36-0 / time))
