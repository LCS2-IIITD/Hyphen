# ::snt There is no way Marjorie and Steve would divorce over Kris Jenner.
# ::tokens ["There", "is", "no", "way", "Marjorie", "and", "Steve", "would", "divorce", "over", "Kris", "Jenner", "."]
# ::lemmas ["there", "be", "no", "way", "Marjorie", "and", "Steve", "would", "divorce", "over", "Kris", "Jenner", "."]
(c1-3 / possible-01
      :ARG1 (c1-7 / divorce-01
                  :ARG0 (c1-1 / person
                              :name (c1-0 / name
                                          :op1 "Marjorie"))
                  :ARG1 (c1-6 / person
                              :name (c1-2 / name
                                          :op1 "Steve"))
                  :ARG2 (c1-5 / person
                              :name (c1-4 / name
                                          :op1 "Kris"
                                          :op2 "Jenner")))
      :polarity -)

# ::snt HONESTLY
# ::tokens ["HONESTLY"]
# ::lemmas ["HONESTLY"]
(c2-0 / sincere)

# ::snt This is why I get my news from "Oh Yes! with Shar"
# ::tokens ["This", "is", "why", "I", "get", "my", "news", "from", "\"", "Oh", "Yes", "!", "with", "Shar", "\""]
# ::lemmas ["this", "be", "why", "i", "get", "my", "news", "from", "\"", "oh", "yes", "!", "with", "Shar", "\""]
(c3-4 / cause-01
      :ARG0 (c3-6 / this)
      :ARG1 (c3-7 / get-01
                  :ARG0 (c3-5 / i)
                  :ARG1 (c3-1 / news
                              :poss c3-5)
                  :ARG2 (c3-3 / person
                              :name (c3-2 / name
                                          :op1 "Shar"))
                  :mod (c3-0 / yes
                             :mode expressive)))

# ::snt Radar is trash
# ::tokens ["Radar", "is", "trash"]
# ::lemmas ["Radar", "be", "trash"]
(c4-2 / trash
      :domain (c4-1 / person
                    :name (c4-0 / name
                                :op1 "Radar")))

# ::snt The BS
# ::tokens ["The", "BS"]
# ::lemmas ["the", "BS"]
(c5-0 / bullshit-01)

# ::snt I swear I just thought that same thing.
# ::tokens ["I", "swear", "I", "just", "thought", "that", "same", "thing", "."]
# ::lemmas ["i", "swear", "i", "just", "think", "that", "same", "thing", "."]
(c7-1 / swear-01
      :ARG0 (c7-3 / i)
      :ARG1 (c7-2 / think-01
                  :ARG0 c7-3
                  :ARG1 (c7-4 / thing
                              :ARG1-of (c7-0 / same-01)
                              :mod (c7-5 / that))
                  :mod (c7-6 / just)))
