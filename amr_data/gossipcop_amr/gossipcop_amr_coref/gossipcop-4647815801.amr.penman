# ::snt This is definitely the Parental Alienation Syndrome. It's harmful to children and will scare them emotionally for life. Angelina Jolie should know that.
# ::tokens ["This", "is", "definitely", "the", "Parental", "Alienation", "Syndrome", ".", "It", "'s", "harmful", "to", "children", "and", "will", "scare", "them", "emotionally", "for", "life", ".", "Angelina", "Jolie", "should", "know", "that", "."]
# ::lemmas ["this", "be", "definitely", "the", "Parental", "Alienation", "Syndrome", ".", "it", "be", "harmful", "to", "child", "and", "will", "scare", "they", "emotionally", "for", "life", ".", "Angelina", "Jolie", "should", "know", "that", "."]
(c1-1 / multi-sentence
      :snt1 (c1-3 / syndrome
                  :mod (c1-9 / parental)
                  :domain (c1-14 / this)
                  :mod (c1-15 / definite))
      :snt2 (c1-5 / and
                  :op1 (c1-8 / harmful-02
                             :ARG0 (c1-13 / it)
                             :ARG1 (c1-12 / child))
                  :op2 (c1-0 / scare-01
                             :ARG0 c1-13
                             :ARG1 c1-12
                             :manner (c1-7 / emotional)
                             :duration (c1-10 / life)))
      :snt3 (c1-6 / recommend-01
                  :ARG1 (c1-11 / know-01
                               :ARG0 (c1-2 / person
                                           :name (c1-4 / name
                                                       :op1 "Angelina"
                                                       :op2 "Jolie"))
                               :ARG1 (c1-16 / that))))

# ::snt I feel really bad for the kids. Her mom did it to Jon Voight, her and her brother hate him. All this is to create problems for the kids that will carry the rest of their lives.
# ::tokens ["I", "feel", "really", "bad", "for", "the", "kids", ".", "Her", "mom", "did", "it", "to", "Jon", "Voight", ",", "her", "and", "her", "brother", "hate", "him", ".", "All", "this", "is", "to", "create", "problems", "for", "the", "kids", "that", "will", "carry", "the", "rest", "of", "their", "lives", "."]
# ::lemmas ["i", "feel", "really", "bad", "for", "the", "kid", ".", "her", "mom", "do", "it", "to", "Jon", "Voight", ",", "she", "and", "her", "brother", "hate", "he", ".", "all", "this", "be", "to", "create", "problem", "for", "the", "kid", "that", "will", "carry", "the", "rest", "of", "their", "life", "."]
(c2-18 / multi-sentence
       :snt1 (c2-22 / feel-01
                    :ARG0 (c2-27 / i)
                    :ARG1 (c2-17 / bad-07
                                 :degree (c2-24 / really))
                    :ARG2 (c2-10 / kid))
       :snt2 (c2-14 / and
                    :op1 (c2-28 / do-02
                                :ARG0 (c2-25 / person
                                             :ARG0-of (c2-9 / have-rel-role-91
                                                            :ARG1 (c2-0 / she)
                                                            :ARG2 (c2-11 / mom)))
                                :ARG1 (c2-7 / it)
                                :ARG2 (c2-19 / person
                                             :name (c2-23 / name
                                                          :op1 "Jon"
                                                          :op2 "Voight")))
                    :op2 (c2-26 / hate-01
                                :ARG0 (c2-13 / and
                                             :op1 (c2-6 / she)
                                             :op2 (c2-4 / person
                                                        :ARG0-of (c2-8 / have-rel-role-91
                                                                       :ARG1 c2-6
                                                                       :ARG2 (c2-1 / brother))))
                                :ARG1 c2-19))
       :snt3 (c2-20 / create-01
                    :ARG0 (c2-15 / this
                                 :mod (c2-12 / all))
                    :ARG1 (c2-3 / problem
                                :beneficiary (c2-21 / kid
                                                    :ARG0-of (c2-16 / carry-01
                                                                    :ARG1 (c2-5 / rest
                                                                                :part-of (c2-2 / live-01
                                                                                               :ARG0 c2-21)))))))

# ::snt Votefor Most Beautiful Hollywood Actresses Poll
# ::tokens ["Votefor", "Most", "Beautiful", "Hollywood", "Actresses", "Poll"]
# ::lemmas ["votefor", "most", "beautiful", "Hollywood", "Actresses", "Poll"]
(c3-5 / poll-01
      :ARG2 (c3-3 / person
                  :ARG0-of (c3-7 / actress-01)
                  :mod (c3-1 / market-sector
                             :name (c3-2 / name
                                         :op1 "Hollywood"))
                  :ARG1-of (c3-4 / have-degree-91
                                 :ARG2 (c3-0 / beautiful-02
                                             :ARG1 c3-3)
                                 :ARG3 (c3-6 / most))))

# ::snt Amen to that one
# ::tokens ["Amen", "to", "that", "one"]
# ::lemmas ["amen", "to", "that", "one"]
(c4-3 / say-01
      :ARG1 (c4-0 / amen)
      :ARG2 (c4-1 / one
                  :mod (c4-2 / that)))

# ::snt I pray and wish they re-marry for love sake
# ::tokens ["I", "pray", "and", "wish", "they", "re", "-", "marry", "for", "love", "sake"]
# ::lemmas ["i", "pray", "and", "wish", "they", "re", "-", "marry", "for", "love", "sake"]
(c5-7 / and
      :op1 (c5-2 / pray-01
                 :ARG0 (c5-6 / i))
      :op2 (c5-4 / wish-01
                 :ARG0 c5-6
                 :ARG1 (c5-0 / marry-01
                             :ARG1 (c5-5 / they)
                             :mod (c5-8 / again)
                             :purpose (c5-1 / sake
                                            :mod (c5-3 / love)))))

# ::snt I wish them together and living in one roof again
# ::tokens ["I", "wish", "them", "together", "and", "living", "in", "one", "roof", "again"]
# ::lemmas ["i", "wish", "they", "together", "and", "live", "in", "one", "roof", "again"]
(c6-3 / wish-01
      :ARG0 (c6-5 / i)
      :ARG1 (c6-0 / and
                  :op1 (c6-4 / together
                             :domain (c6-6 / they))
                  :op2 (c6-2 / live-01
                             :ARG0 c6-6
                             :location (c6-1 / roof
                                             :quant 1)
                             :mod (c6-7 / again))))

# ::snt Dick
# ::tokens ["Dick"]
# ::lemmas ["Dick"]
(c7-1 / person
      :name (c7-0 / name
                  :op1 "Dick"))

# ::snt name it
# ::tokens ["name", "it"]
# ::lemmas ["name", "it"]
(c8-0 / name-01
      :ARG1 (c8-1 / it))

# ::snt Leave him alone husband stealer
# ::tokens ["Leave", "him", "alone", "husband", "stealer"]
# ::lemmas ["leave", "he", "alone", "husband", "stealer"]
(c9-2 / say-01
      :ARG0 (c9-8 / i)
      :ARG1 (c9-5 / leave-14
                  :ARG0 (c9-1 / you)
                  :ARG1 (c9-4 / he
                              :mod (c9-9 / alone))
                  :mode imperative)
      :ARG2 (c9-6 / person
                  :ARG0-of (c9-0 / steal-01)
                  :ARG0-of (c9-7 / have-rel-role-91
                                 :ARG2 (c9-3 / husband))))

# ::snt IMO Angelina made one very big huge mistake and that was divorcing Brad after only years of marriage
# ::tokens ["IMO", "Angelina", "made", "one", "very", "big", "huge", "mistake", "and", "that", "was", "divorcing", "Brad", "after", "only", "years", "of", "marriage"]
# ::lemmas ["imo", "Angelina", "make", "one", "very", "big", "huge", "mistake", "and", "that", "be", "divorce", "Brad", "after", "only", "years", "of", "marriage"]
(c10-0 / opine-01
       :ARG0 (c10-12 / i)
       :ARG1 (c10-5 / mistake-02
                    :ARG0 (c10-9 / person
                                 :name (c10-4 / name
                                              :op1 "Angelina"))
                    :ARG1 (c10-14 / divorce-01
                                  :ARG0 c10-9
                                  :ARG1 (c10-6 / person
                                               :name (c10-8 / name
                                                            :op1 "Brad"))
                                  :time (c10-13 / after
                                                :op1 (c10-10 / marry-01
                                                             :ARG1 c10-9
                                                             :ARG2 c10-6
                                                             :duration (c10-15 / multiple
                                                                               :op1 (c10-11 / temporal-quantity
                                                                                            :unit (c10-3 / year)
                                                                                            :quant 1)
                                                                               :mod (c10-1 / only)))))
                    :mod (c10-2 / big
                                :degree (c10-7 / very))))

# ::snt Link doesn't work for me
# ::tokens ["Link", "does", "n't", "work", "for", "me"]
# ::lemmas ["Link", "do", "not", "work", "for", "i"]
(c11-0 / work-09
       :ARG1 (c11-1 / link)
       :ARG2 (c11-2 / i)
       :polarity -)

# ::snt Link didn't work
# ::tokens ["Link", "did", "n't", "work"]
# ::lemmas ["Link", "do", "not", "work"]
(c12-0 / work-09
       :ARG1 (c12-1 / link)
       :polarity -)

# ::snt Prayers.Sent.
# ::tokens ["Prayers", ".", "Sent", "."]
# ::lemmas ["prayer", ".", "send", "."]
(c13-2 / and
       :op1 (c13-1 / pray-01)
       :op2 (c13-0 / sentence-01))

# ::snt karma is a real bitch.
# ::tokens ["karma", "is", "a", "real", "bitch", "."]
# ::lemmas ["karma", "be", "a", "real", "bitch", "."]
(c14-1 / bitch
       :ARG1-of (c14-0 / real-04)
       :domain (c14-2 / person
                      :name (c14-3 / name
                                   :op1 "Karma")))

# ::snt vous nous manquez a Correns.. bises
# ::tokens ["vous", "nous", "manquez", "a", "Correns", "..", "bises"]
# ::lemmas ["vous", "nous", "manquez", "a", "Correns", "..", "bise"]
(c15-3 / multi-sentence
       :snt1 (c15-1 / vous
                    :mode expressive)
       :snt2 (c15-0 / person
                    :name (c15-2 / name
                                 :op1 "Marcos")))
