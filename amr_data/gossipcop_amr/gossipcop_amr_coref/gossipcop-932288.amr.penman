# ::snt Her*
# ::tokens ["Her", "*"]
# ::lemmas ["her", "*"]
(c2-0 / her)

# ::snt He behind was amazing
# ::tokens ["He", "behind", "was", "amazing"]
# ::lemmas ["he", "behind", "be", "amazing"]
(c3-2 / amaze-01
      :ARG0 (c3-1 / he
                  :location (c3-0 / behind)))

# ::snt No sis, friends or butts allowed.
# ::tokens ["No", "sis", ",", "friends", "or", "butts", "allowed", "."]
# ::lemmas ["no", "sis", ",", "friend", "or", "butts", "allow", "."]
(c4-4 / allow-01
      :ARG1 (c4-0 / or
                  :op1 (c4-3 / sister)
                  :op2 (c4-1 / friend)
                  :op3 (c4-2 / butt))
      :polarity -)

# ::snt The local restaurant below the castle has a Royal menu posted oursideAre you invited?I have my invitation to the Windsor Castle grounds
# ::tokens ["The", "local", "restaurant", "below", "the", "castle", "has", "a", "Royal", "menu", "posted", "oursideAre", "you", "invited?I", "have", "my", "invitation", "to", "the", "Windsor", "Castle", "grounds"]
# ::lemmas ["the", "local", "restaurant", "below", "the", "castle", "have", "a", "Royal", "menu", "post", "oursideare", "you", "invited?i", "have", "my", "invitation", "to", "the", "Windsor", "Castle", "ground"]
(c5-1 / multi-sentence
      :snt1 (c5-6 / have-03
                  :ARG0 (c5-5 / restaurant
                              :ARG1-of (c5-7 / local-02)
                              :location (c5-0 / below
                                              :op1 (c5-10 / castle)))
                  :ARG1 (c5-8 / menu
                              :mod (c5-15 / royal)
                              :ARG1-of (c5-9 / post-01
                                             :ARG2 (c5-3 / side
                                                         :poss (c5-11 / we)))))
      :snt2 (c5-12 / invite-01
                   :polarity (c5-13 / amr-unknown)
                   :ARG1 (c5-4 / i)
                   :ARG2 c5-12
                   :ARG1 c5-4
                   :ARG2 (c5-14 / ground
                                :part-of (c5-16 / castle
                                                :name (c5-2 / name
                                                            :op1 "Windsor"
                                                            :op2 "Castle")))))

# ::snt ??
# ::tokens ["?", "?"]
# ::lemmas ["?", "?"]
(c6-0 / amr-unknown)

# ::snt Sorry to hear that! What about Allyson Carey?
# ::tokens ["Sorry", "to", "hear", "that", "!", "What", "about", "Allyson", "Carey", "?"]
# ::lemmas ["sorry", "to", "hear", "that", "!", "what", "about", "Allyson", "Carey", "?"]
(c7-0 / multi-sentence
      :snt1 (c7-2 / sorry-01
                  :ARG2 (c7-3 / hear-01
                              :ARG1 (c7-5 / that)))
      :snt2 (c7-6 / amr-unknown
                  :topic (c7-4 / person
                               :name (c7-1 / name
                                           :op1 "Allyson"
                                           :op2 "Carey"))))

# ::snt This is Prince Harry's and Meghan's Wedding and if she does not want to have a maid of honor that is OK too and if she changes her mind I'll be honored to be.
# ::tokens ["This", "is", "Prince", "Harry", "'s", "and", "Meghan", "'s", "Wedding", "and", "if", "she", "does", "not", "want", "to", "have", "a", "maid", "of", "honor", "that", "is", "OK", "too", "and", "if", "she", "changes", "her", "mind", "I", "'ll", "be", "honored", "to", "be", "."]
# ::lemmas ["this", "be", "Prince", "Harry", "'s", "and", "Meghan", "'s", "wedding", "and", "if", "she", "do", "not", "want", "to", "have", "a", "maid", "of", "honor", "that", "be", "ok", "too", "and", "if", "she", "change", "her", "mind", "i", "'ll", "be", "honor", "to", "be", "."]
(c8-14 / and
       :op1 (c8-9 / wed-01
                  :ARG1 (c8-5 / person
                              :name (c8-1 / name
                                          :op1 "Prince"
                                          :op2 "Harry"))
                  :ARG2 (c8-2 / person
                              :name (c8-4 / name
                                          :op1 "Meghan"))
                  :mod (c8-12 / this))
       :op2 (c8-0 / okay-04
                  :ARG1 (c8-6 / have-03
                              :ARG0 c8-2
                              :ARG1 (c8-3 / maid
                                          :ARG2-of (c8-11 / honor-01)))
                  :mod (c8-15 / too)
                  :condition (c8-7 / want-01
                                   :ARG0 c8-2
                                   :ARG1 c8-6
                                   :polarity -))
       :op3 c8-11
       :ARG1 (c8-13 / i)
       :condition (c8-10 / change-01
                         :ARG0 c8-2
                         :ARG1 (c8-8 / mind-05
                                     :ARG0 c8-2)))

# ::snt This is so appropriate.
# ::tokens ["This", "is", "so", "appropriate", "."]
# ::lemmas ["this", "be", "so", "appropriate", "."]
(c9-2 / appropriate-02
      :ARG1 (c9-1 / this)
      :degree (c9-0 / so))

# ::snt What???
# ::tokens ["What", "?", "?", "?"]
# ::lemmas ["what", "?", "?", "?"]
(c11-0 / amr-unknown)

# ::snt omg thats a beautiful carriage..
# ::tokens ["omg", "that", "s", "a", "beautiful", "carriage", ".."]
# ::lemmas ["omg", "that", "s", "a", "beautiful", "carriage", ".."]
(c12-0 / carriage
       :ARG1-of (c12-2 / beautiful-02)
       :domain (c12-3 / that)
       :mod (c12-1 / opine-01
                   :mode expressive))

# ::snt She doesn't have one.
# ::tokens ["She", "does", "n't", "have", "one", "."]
# ::lemmas ["she", "do", "not", "have", "one", "."]
(c13-1 / have-03
       :ARG0 (c13-2 / she)
       :ARG1 (c13-0 / one)
       :polarity -)

# ::snt yeah, that's what generally happens when ppl plan such events
# ::tokens ["yeah", ",", "that", "'s", "what", "generally", "happens", "when", "ppl", "plan", "such", "events"]
# ::lemmas ["yeah", ",", "that", "be", "what", "generally", "happen", "when", "ppl", "plan", "such", "event"]
(c14-3 / event
       :domain (c14-5 / that)
       :ARG1-of (c14-6 / general-02)
       :time (c14-4 / plan-01
                    :ARG0 (c14-1 / person)
                    :ARG1 c14-3
                    :mod (c14-2 / such))
       :mod (c14-0 / yeah
                   :mode expressive))
