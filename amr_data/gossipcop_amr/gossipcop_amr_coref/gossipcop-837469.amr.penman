# ::snt "Gummy bear? They've been in my pocket all day, so they're nice and warm."
# ::tokens ["\"", "Gummy", "bear", "?", "They", "'ve", "been", "in", "my", "pocket", "all", "day", ",", "so", "they", "'re", "nice", "and", "warm", ".", "\""]
# ::lemmas ["\"", "Gummy", "bear", "?", "they", "'ve", "be", "in", "my", "pocket", "all", "day", ",", "so", "they", "be", "nice", "and", "warm", ".", "\""]
(c1-1 / multi-sentence
      :snt1 (c1-0 / bear
                  :polarity (c1-10 / amr-unknown)
                  :mod (c1-11 / gummy))
      :snt2 (c1-3 / be-located-at-91
                  :ARG1 (c1-8 / they)
                  :ARG2 (c1-4 / pocket
                              :poss (c1-9 / i))
                  :duration (c1-12 / day
                                   :mod (c1-13 / all))
                  :ARG0-of (c1-5 / cause-01
                                 :ARG1 (c1-6 / and
                                             :op1 (c1-2 / nice-01
                                                        :ARG1 c1-8)
                                             :op2 (c1-7 / warm-07
                                                        :ARG1 c1-8)))))

# ::snt Congratulations.
# ::tokens ["Congratulations", "."]
# ::lemmas ["congratulation", "."]
(c2-0 / congratulate-01)

# ::snt Just a shame we need zoos......but we do need them at the moment
# ::tokens ["Just", "a", "shame", "we", "need", "zoos", "......", "but", "we", "do", "need", "them", "at", "the", "moment"]
# ::lemmas ["just", "a", "shame", "we", "need", "zoos", "......", "but", "we", "do", "need", "they", "at", "the", "moment"]
(c3-5 / contrast-01
      :ARG1 (c3-2 / shame
                  :mod (c3-7 / just)
                  :ARG0-of (c3-8 / cause-01
                                 :ARG1 (c3-0 / need-01
                                             :ARG0 (c3-6 / we)
                                             :ARG1 (c3-3 / zoos))))
      :ARG2 (c3-4 / need-01
                  :ARG0 c3-6
                  :ARG1 c3-3
                  :time (c3-1 / moment)))

# ::snt glad us humansdon't have provide *this dutyewe
# ::tokens ["glad", "us", "humansdon't", "have", "provide", "*", "this", "dutyewe"]
# ::lemmas ["glad", "we", "humansdon't", "have", "provide", "*", "this", "dutyewe"]
(c4-5 / glad-02
      :ARG0 (c4-0 / have-03
                  :ARG0 (c4-2 / we
                              :mod (c4-3 / human))
                  :ARG1 (c4-1 / provide-01
                              :ARG0 c4-2
                              :ARG1 (c4-6 / duty
                                          :mod (c4-4 / this)))
                  :polarity -)
      :ARG1 c4-2)

# ::snt OH my so precious! Glad the baby is finally here and healthy. Certainly adorable! Now my girls want a baby giraffe.
# ::tokens ["OH", "my", "so", "precious", "!", "Glad", "the", "baby", "is", "finally", "here", "and", "healthy", ".", "Certainly", "adorable", "!", "Now", "my", "girls", "want", "a", "baby", "giraffe", "."]
# ::lemmas ["OH", "my", "so", "precious", "!", "glad", "the", "baby", "be", "finally", "here", "and", "healthy", ".", "certainly", "adorable", "!", "now", "my", "girl", "want", "a", "baby", "giraffe", "."]
(c5-11 / multi-sentence
       :snt1 (c5-15 / precious
                    :degree (c5-0 / so)
                    :domain (c5-18 / i)
                    :mod (c5-5 / oh
                               :mode expressive))
       :snt2 (c5-8 / glad-02
                   :ARG0 (c5-7 / and
                               :op1 (c5-10 / be-located-at-91
                                           :ARG1 (c5-1 / baby)
                                           :ARG2 (c5-6 / here)
                                           :mod (c5-13 / final))
                               :op2 (c5-17 / healthy
                                           :domain c5-1))
                   :ARG1 c5-18)
       :snt3 (c5-12 / cute
                    :degree (c5-9 / certain))
       :snt4 (c5-16 / want-01
                    :ARG0 (c5-2 / girl
                                :poss c5-18)
                    :ARG1 (c5-3 / giraffe
                                :mod (c5-4 / baby))
                    :time (c5-14 / now)))

# ::snt The mothers name is April and her baby was born in April, which is the astrological sign of Aries. Name the baby boy ARIES!!! April &amp; Aries.
# ::tokens ["The", "mothers", "name", "is", "April", "and", "her", "baby", "was", "born", "in", "April", ",", "which", "is", "the", "astrological", "sign", "of", "Aries", ".", "Name", "the", "baby", "boy", "ARIES", "!", "!", "!", "April", "&", "amp", ";", "Aries", "."]
# ::lemmas ["the", "mother", "name", "be", "April", "and", "her", "baby", "be", "bear", "in", "April", ",", "which", "be", "the", "astrological", "sign", "of", "Aries", ".", "name", "the", "baby", "boy", "arie", "!", "!", "!", "April", "&", "amp", ";", "Aries", "."]
(c6-12 / multi-sentence
       :snt1 (c6-9 / and
                   :op1 (c6-18 / name-01
                               :ARG1 (c6-19 / person
                                            :ARG0-of (c6-5 / have-rel-role-91
                                                           :ARG2 (c6-6 / mother)))
                               :ARG2 (c6-23 / date-entity
                                            :month 4))
                   :op2 (c6-11 / bear-02
                               :ARG1 (c6-1 / baby
                                           :ARG0-of (c6-21 / have-rel-role-91
                                                           :ARG1 c6-19
                                                           :ARG2 (c6-3 / baby)))
                               :time (c6-15 / date-entity
                                            :month 4)
                               :ARG0-of (c6-0 / signal-07
                                              :ARG1 (c6-8 / astrological)
                                              :ARG3 (c6-13 / person
                                                           :name (c6-14 / name
                                                                        :op1 "Aries")))))
       :snt2 (c6-20 / name-01
                    :ARG0 (c6-4 / you)
                    :ARG1 (c6-10 / boy
                                 :mod (c6-7 / baby))
                    :ARG2 (c6-16 / name
                                 :op1 "April"
                                 :op2 "&amp")
                    :ARG1-of (c6-17 / mean-01
                                    :ARG2 (c6-2 / person
                                                :name (c6-22 / name
                                                             :op1 "Aries")))
                    :mode imperative))

# ::snt First time, Ive seen a giraffe giving birth.
# ::tokens ["First", "time", ",", "I", "ve", "seen", "a", "giraffe", "giving", "birth", "."]
# ::lemmas ["First", "time", ",", "i", "ve", "see", "a", "giraffe", "give", "birth", "."]
(c7-2 / see-01
      :ARG0 (c7-3 / i)
      :ARG1 (c7-1 / bear-02
                  :ARG0 (c7-4 / giraffe))
      :ord (c7-0 / ordinal-entity
                 :value 1))

# ::snt Woooo ...welcome to a new world baby.May u find sun n blue skies n plenty of peace so u will love n trust this world and all thats in it .
# ::tokens ["Woooo", "...", "welcome", "to", "a", "new", "world", "baby", ".", "May", "u", "find", "sun", "n", "blue", "skies", "n", "plenty", "of", "peace", "so", "u", "will", "love", "n", "trust", "this", "world", "and", "all", "that", "s", "in", "it", "."]
# ::lemmas ["Woooo", "...", "welcome", "to", "a", "new", "world", "baby", ".", "may", "u", "find", "sun", "n", "blue", "sky", "n", "plenty", "of", "peace", "so", "u", "will", "love", "n", "trust", "this", "world", "and", "all", "that", "s", "in", "it", "."]
(c8-19 / welcome-01
       :ARG1 (c8-11 / baby
                    :mod (c8-4 / world)
                    :ARG1-of (c8-17 / new-01))
       :ARG2 (c8-16 / find-01
                    :ARG0 c8-11
                    :ARG1 (c8-10 / and
                                 :op1 (c8-1 / sun)
                                 :op2 (c8-6 / sky
                                            :mod (c8-2 / blue))
                                 :op3 (c8-18 / peace
                                             :quant (c8-12 / plenty)))
                    :ARG0-of (c8-13 / cause-01
                                    :ARG1 (c8-3 / love-01
                                                :ARG0 c8-11
                                                :ARG1 (c8-8 / and
                                                            :op1 (c8-9 / trust-02
                                                                       :ARG0 c8-11
                                                                       :ARG1 (c8-15 / world
                                                                                    :mod (c8-14 / this)))
                                                            :op2 (c8-5 / be-located-at-91
                                                                       :ARG2 c8-15
                                                                       :mod (c8-7 / all)
                                                                       :ARG1 c8-8)))))
       :mod (c8-0 / woo
                  :mode expressive))

# ::snt We used to see this is n africa
# ::tokens ["We", "used", "to", "see", "this", "is", "n", "africa"]
# ::lemmas ["we", "use", "to", "see", "this", "be", "n", "africa"]
(c9-1 / see-01
      :ARG0 (c9-2 / we)
      :ARG1 (c9-3 / continent
                  :name (c9-0 / name
                              :op1 "Africa")
                  :domain (c9-4 / this))
      :time (c9-5 / use-03))

# ::snt rewind the clip and you can watch it go back in
# ::tokens ["rewind", "the", "clip", "and", "you", "can", "watch", "it", "go", "back", "in"]
# ::lemmas ["rewind", "the", "clip", "and", "you", "can", "watch", "it", "go", "back", "in"]
(c10-2 / and
       :op1 (c10-1 / screw-02
                   :ARG1 (c10-6 / thing
                                :ARG1-of (c10-4 / clip-01)))
       :op2 (c10-3 / possible-01
                   :ARG1 (c10-5 / watch-01
                                :ARG0 (c10-0 / you)
                                :ARG1 (c10-7 / go-back-19
                                             :ARG1 c10-6))))

# ::snt I just cat get enough of thank you !!
# ::tokens ["I", "just", "cat", "get", "enough", "of", "thank", "you", "!", "!"]
# ::lemmas ["i", "just", "cat", "get", "enough", "of", "thank", "you", "!", "!"]
(c11-5 / thank-01
       :ARG0 (c11-4 / i)
       :ARG1 (c11-0 / you)
       :ARG1-of (c11-2 / have-quant-91
                       :ARG3 (c11-1 / enough))
       :mod (c11-3 / just))

# ::snt Very very special! Thank you!!
# ::tokens ["Very", "very", "special", "!", "Thank", "you", "!", "!"]
# ::lemmas ["very", "very", "special", "!", "thank", "you", "!", "!"]
(c12-1 / multi-sentence
       :snt1 (c12-2 / special-02
                    :degree (c12-3 / very))
       :snt2 (c12-5 / thank-01
                    :ARG0 (c12-4 / i)
                    :ARG1 (c12-0 / you)))

# ::snt via webcam from her enclosure in Harpursville, New York. Now she's finally given birth.
# ::tokens ["via", "webcam", "from", "her", "enclosure", "in", "Harpursville", ",", "New", "York", ".", "Now", "she", "'s", "finally", "given", "birth", "."]
# ::lemmas ["via", "webcam", "from", "her", "enclosure", "in", "Harpursville", ",", "New", "York", ".", "now", "she", "be", "finally", "give", "birth", "."]
(c13-3 / multi-sentence
       :snt1 (c13-2 / be-from-91
                    :ARG2 (c13-6 / enclosure
                                 :poss (c13-5 / she)
                                 :location (c13-10 / city
                                                   :name (c13-4 / name
                                                                :op1 "Harpursville")
                                                   :location (c13-0 / state
                                                                    :name (c13-7 / name
                                                                                 :op1 "New"
                                                                                 :op2 "York"))))
                    :medium (c13-11 / webcam))
       :snt2 (c13-8 / bear-02
                    :ARG1 (c13-12 / she)
                    :time (c13-9 / now)
                    :time (c13-1 / final)))

# ::snt April Last updated at :24 BST April the giraffe has become an internet sensation as millions watched her long pregnancy unfold
# ::tokens ["April", "Last", "updated", "at", ":", "24", "BST", "April", "the", "giraffe", "has", "become", "an", "internet", "sensation", "as", "millions", "watched", "her", "long", "pregnancy", "unfold"]
# ::lemmas ["April", "Last", "update", "at", ":", "24", "BST", "April", "the", "giraffe", "have", "become", "an", "internet", "sensation", "as", "million", "watch", "her", "long", "pregnancy", "unfold"]
(c14-0 / become-01
       :ARG1 (c14-9 / giraffe)
       :ARG2 (c14-3 / sensation
                    :medium (c14-8 / internet))
       :time (c14-7 / watch-01
                    :ARG0 (c14-4 / person
                                 :quant (c14-1 / multiple
                                               :op1 1000000))
                    :ARG1 (c14-12 / unfold-02
                                  :ARG1 (c14-2 / pregnancy
                                               :poss c14-9
                                               :ARG1-of (c14-5 / long-03))))
       :time (c14-10 / date-entity
                     :month 4
                     :day 24
                     :time "1:24"
                     :timezone "BST")
       :ARG1-of (c14-6 / update-01
                       :time (c14-11 / last)
                       :time c14-10
                       :time "14:24"
                       :timezone " BST"))

# ::snt Here is a short summary of the posted link
# ::tokens ["Here", "is", "a", "short", "summary", "of", "the", "posted", "link"]
# ::lemmas ["here", "be", "a", "short", "summary", "of", "the", "post", "link"]
(c15-1 / summarize-01
       :ARG1 (c15-4 / link
                    :ARG1-of (c15-3 / post-01))
       :ARG1-of (c15-0 / short-07)
       :location (c15-2 / here))

# ::snt :.
# ::tokens [":", "."]
# ::lemmas [":", "."]
(c16-0 / emoticon)

# ::snt . I think the internet having such an interest in this = a +sign supporting more inclusivity/tolerance for those who self-identify as queer.
# ::tokens [".", "I", "think", "the", "internet", "having", "such", "an", "interest", "in", "this", "=", "a", "+", "sign", "supporting", "more", "inclusivity", "/", "tolerance", "for", "those", "who", "self", "-", "identify", "as", "queer", "."]
# ::lemmas [".", "i", "think", "the", "internet", "have", "such", "an", "interest", "in", "this", "=", "a", "+", "sign", "support", "more", "inclusivity", "/", "tolerance", "for", "those", "who", "self", "-", "identify", "as", "queer", "."]
(c17-9 / think-01
       :ARG0 (c17-8 / i)
       :ARG1 (c17-6 / equal-01
                    :ARG1 (c17-4 / interest-01
                                 :ARG1 (c17-12 / internet)
                                 :ARG2 (c17-13 / this)
                                 :mod (c17-3 / such))
                    :ARG2 (c17-0 / signal-07
                                 :ARG1 (c17-14 / support-01
                                               :ARG1 (c17-5 / slash
                                                            :op1 (c17-10 / tolerate-01
                                                                         :ARG1 (c17-7 / person
                                                                                      :ARG0-of (c17-1 / identify-01
                                                                                                      :ARG2 (c17-11 / queer)
                                                                                                      :ARG1 c17-7))
                                                                         :mod (c17-2 / more)
                                                                         :op2-of c17-5))))))

# ::snt . had a great take on , correlating it (among many things) being LGBTQ-friendly.
# ::tokens [".", "had", "a", "great", "take", "on", ",", "correlating", "it", "(", "among", "many", "things", ")", "being", "LGBTQ", "-", "friendly", "."]
# ::lemmas [".", "have", "a", "great", "take", "on", ",", "correlate", "it", "(", "among", "many", "thing", ")", "be", "lgbtq", "-", "friendly", "."]
(c18-3 / have-03
       :ARG1 (c18-6 / thing
                    :ARG1-of (c18-8 / take-on-09)
                    :mod (c18-9 / great)
                    :ARG0-of (c18-4 / correlate-01
                                    :ARG1 (c18-0 / friendly-01
                                                 :ARG1 c18-6
                                                 :ARG2 (c18-2 / and
                                                              :op1 (c18-5 / homosexuality)
                                                              :op2 (c18-7 / thing
                                                                          :quant (c18-1 / many)))
                                                 :ARG2-of c18-4))))

# ::snt it only took what felt like yrs lol.... It was exciting to see
# ::tokens ["it", "only", "took", "what", "felt", "like", "yrs", "lol", "....", "It", "was", "exciting", "to", "see"]
# ::lemmas ["it", "only", "take", "what", "feel", "like", "yrs", "lol", "....", "it", "be", "exciting", "to", "see"]
(c19-3 / multi-sentence
       :snt1 (c19-8 / take-10
                    :ARG0 (c19-4 / see-01)
                    :ARG1 (c19-10 / thing
                                  :ARG1-of (c19-0 / feel-05
                                                  :ARG2 (c19-6 / multiple
                                                               :op1 (c19-9 / temporal-quantity
                                                                           :unit (c19-2 / year)
                                                                           :quant 1))))
                    :mod (c19-1 / only)
                    :ARG2-of (c19-7 / laugh-01
                                    :manner (c19-11 / loud)
                                    :mode expressive))
       :snt2 (c19-5 / excite-01
                    :ARG0 c19-4))

# ::snt I'm thinking more local and less high profile
# ::tokens ["I", "'m", "thinking", "more", "local", "and", "less", "high", "profile"]
# ::lemmas ["i", "be", "think", "more", "local", "and", "less", "high", "profile"]
(c20-5 / think-01
       :ARG0 (c20-6 / i)
       :ARG1 (c20-7 / and
                    :op1 (c20-1 / have-degree-91
                                :ARG2 (c20-2 / local-02)
                                :ARG3 (c20-0 / more))
                    :op2 (c20-4 / have-degree-91
                                :ARG2 (c20-3 / profile)
                                :ARG3 (c20-8 / less))))

# ::snt . can you put this in the gazette?
# ::tokens [".", "can", "you", "put", "this", "in", "the", "gazette", "?"]
# ::lemmas [".", "can", "you", "put", "this", "in", "the", "gazette", "?"]
(c21-5 / possible-01
       :polarity (c21-3 / amr-unknown)
       :ARG1 (c21-2 / put-01
                    :ARG0 (c21-0 / you)
                    :ARG1 (c21-6 / this)
                    :ARG2 (c21-1 / newspaper
                                 :name (c21-4 / name
                                              :op1 "Gazette"))))

# ::snt Perfect name for baby giraffe TAXI or Refund
# ::tokens ["Perfect", "name", "for", "baby", "giraffe", "TAXI", "or", "Refund"]
# ::lemmas ["perfect", "name", "for", "baby", "giraffe", "TAXI", "or", "Refund"]
(c22-1 / name
       :ARG1-of (c22-3 / perfect-02)
       :beneficiary (c22-5 / giraffe
                           :mod (c22-0 / baby)
                           :name (c22-2 / name
                                        :op1 "TAXI"))
       :beneficiary (c22-4 / name
                           :op1 "Refund"))

# ::snt Good looking Giraffe!
# ::tokens ["Good", "looking", "Giraffe", "!"]
# ::lemmas ["good", "look", "Giraffe", "!"]
(c23-3 / say-01
       :ARG1 (c23-1 / look-02
                    :ARG0 (c23-0 / giraffe)
                    :ARG1 (c23-2 / good-02))
       :ARG2 c23-0)

# ::snt The baby should be named "Boston" in honor of the anniversary of the Boston Marathon bombing on /15. Happy Birthday little one.
# ::tokens ["The", "baby", "should", "be", "named", "\"", "Boston", "\"", "in", "honor", "of", "the", "anniversary", "of", "the", "Boston", "Marathon", "bombing", "on", "/15", ".", "Happy", "Birthday", "little", "one", "."]
# ::lemmas ["the", "baby", "should", "be", "name", "\"", "Boston", "\"", "in", "honor", "of", "the", "anniversary", "of", "the", "Boston", "Marathon", "bombing", "on", "/15", ".", "happy", "Birthday", "little", "one", "."]
(c24-4 / multi-sentence
       :snt1 (c24-5 / recommend-01
                    :ARG1 (c24-3 / name-01
                                 :ARG1 (c24-2 / baby)
                                 :ARG2 (c24-11 / city
                                               :name (c24-6 / name
                                                            :op1 "Boston"))
                                 :ARG1-of (c24-7 / honor-01
                                                 :ARG2 (c24-13 / anniversary
                                                               :topic (c24-8 / bomb-01
                                                                             :ARG1 (c24-0 / facility
                                                                                          :name (c24-9 / name
                                                                                                       :op1 "Boston"
                                                                                                       :op2 "Marathon"))
                                                                             :time (c24-14 / date-entity
                                                                                           :month 8
                                                                                           :day 15))))))
       :snt2 (c24-1 / one
                    :mod (c24-10 / little)
                    :ARG0-of (c24-12 / happy-01
                                     :ARG1 (c24-15 / birthday))))

# ::snt This is too cute! xxxx
# ::tokens ["This", "is", "too", "cute", "!", "xxxx"]
# ::lemmas ["this", "be", "too", "cute", "!", "xxxx"]
(c25-0 / cute
       :domain (c25-3 / this)
       :ARG2-of (c25-1 / have-degree-91
                       :ARG1 c25-3
                       :ARG3 (c25-2 / too))
       :mode expressive)

# ::snt Sure have!
# ::tokens ["Sure", "have", "!"]
# ::lemmas ["sure", "have", "!"]
(c26-1 / sure-02
       :ARG1 (c26-0 / event)
       :mode expressive)

# ::snt To quote Peter Griffin "Oh my god,, who the HELL cares!!!!!?
# ::tokens ["To", "quote", "Peter", "Griffin", "\"", "Oh", "my", "god", ",", ",", "who", "the", "HELL", "cares", "!", "!", "!", "!", "!", "?"]
# ::lemmas ["to", "quote", "Peter", "Griffin", "\"", "oh", "my", "god", ",", ",", "who", "the", "HELL", "care", "!", "!", "!", "!", "!", "?"]
(c27-5 / quote-01
       :ARG1 (c27-4 / care-01
                    :ARG0 (c27-6 / amr-unknown)
                    :mod (c27-2 / hell))
       :ARG2 (c27-3 / person
                    :name (c27-1 / name
                                 :op1 "Peter"
                                 :op2 "Griffin")
                    :mod (c27-7 / god
                                :mod (c27-0 / oh)
                                :mode expressive)))

# ::snt You can tell it's off season
# ::tokens ["You", "can", "tell", "it", "'s", "off", "season"]
# ::lemmas ["you", "can", "tell", "it", "be", "off", "season"]
(c28-2 / possible-01
       :ARG1 (c28-4 / tell-01
                    :ARG0 (c28-1 / you)
                    :ARG1 (c28-0 / off-season
                                 :domain (c28-3 / it))))

# ::snt I watched it live, it was amazing to see
# ::tokens ["I", "watched", "it", "live", ",", "it", "was", "amazing", "to", "see"]
# ::lemmas ["i", "watch", "it", "live", ",", "it", "be", "amazing", "to", "see"]
(c29-5 / and
       :op1 (c29-3 / watch-01
                   :ARG0 (c29-4 / i)
                   :ARG1 (c29-1 / it)
                   :manner (c29-2 / live))
       :op2 (c29-6 / amaze-01
                   :ARG0 (c29-0 / see-01
                                :ARG0 c29-4)))

# ::snt You're fucking crazy. Go live in Russia
# ::tokens ["You", "'re", "fucking", "crazy", ".", "Go", "live", "in", "Russia"]
# ::lemmas ["you", "be", "fuck", "crazy", ".", "go", "live", "in", "Russia"]
(c30-2 / multi-sentence
       :snt1 (c30-5 / crazy-03
                    :ARG1 (c30-1 / you)
                    :mod (c30-0 / fucking))
       :snt2 (c30-6 / go-02
                    :ARG0 (c30-7 / you)
                    :ARG4 (c30-4 / live-01
                                 :ARG0 c30-7
                                 :location (c30-8 / country
                                                  :name (c30-3 / name
                                                               :op1 "Russia")))
                    :mode imperative))

# ::snt So precious!!! thank you for sharing.
# ::tokens ["So", "precious", "!", "!", "!", "thank", "you", "for", "sharing", "."]
# ::lemmas ["so", "precious", "!", "!", "!", "thank", "you", "for", "share", "."]
(c31-2 / multi-sentence
       :snt1 (c31-4 / precious
                    :degree (c31-3 / so))
       :snt2 (c31-6 / thank-01
                    :ARG0 (c31-5 / i)
                    :ARG1 (c31-1 / you)
                    :ARG2 (c31-0 / share-01
                                 :ARG0 c31-1)))

# ::snt Very good this report, Congratulations!!!
# ::tokens ["Very", "good", "this", "report", ",", "Congratulations", "!", "!", "!"]
# ::lemmas ["very", "good", "this", "report", ",", "Congratulations", "!", "!", "!"]
(c32-3 / and
       :op1 (c32-7 / good-02
                   :ARG1 (c32-1 / report-01
                                :mod (c32-6 / this))
                   :degree (c32-2 / very))
       :op2 (c32-4 / congratulate-01
                   :ARG0 (c32-5 / i)
                   :ARG1 (c32-0 / you)))

# ::snt feet by feet if I remember correctly.
# ::tokens ["feet", "by", "feet", "if", "I", "remember", "correctly", "."]
# ::lemmas ["foot", "by", "foot", "if", "i", "remember", "correctly", "."]
(c33-2 / have-condition-91
       :ARG2 (c33-1 / remember-01
                    :ARG0 (c33-5 / i)
                    :manner (c33-0 / foot
                                   :prep-by (c33-3 / foot))
                    :ARG1-of (c33-4 / correct-02)))

# ::snt My question is how large are the areas for them
# ::tokens ["My", "question", "is", "how", "large", "are", "the", "areas", "for", "them"]
# ::lemmas ["my", "question", "be", "how", "large", "be", "the", "area", "for", "they"]
(c34-4 / question-01
       :ARG0 (c34-2 / i)
       :ARG1 (c34-1 / thing
                    :degree-of (c34-0 / large
                                      :domain (c34-3 / area
                                                     :beneficiary (c34-5 / they)))))

# ::snt this is something that I find completely irrelevant.
# ::tokens ["this", "is", "something", "that", "I", "find", "completely", "irrelevant", "."]
# ::lemmas ["this", "be", "something", "that", "i", "find", "completely", "irrelevant", "."]
(c35-0 / find-02
       :ARG0 (c35-4 / i)
       :ARG1 (c35-2 / relevant-01
                    :ARG1 (c35-1 / something
                                 :mod (c35-5 / this))
                    :ARG1-of (c35-3 / complete-02)
                    :polarity -))

# ::snt So Beautiful
# ::tokens ["So", "Beautiful"]
# ::lemmas ["so", "beautiful"]
(c36-0 / beautiful-02
       :degree (c36-1 / so))

# ::snt This is a top story? A giraffe giving birth?
# ::tokens ["This", "is", "a", "top", "story", "?", "A", "giraffe", "giving", "birth", "?"]
# ::lemmas ["this", "be", "a", "top", "story", "?", "a", "giraffe", "give", "birth", "?"]
(c37-1 / multi-sentence
       :snt1 (c37-2 / story
                    :mod (c37-4 / top)
                    :domain (c37-6 / this))
       :snt2 (c37-0 / bear-02
                    :ARG0 (c37-5 / giraffe)
                    :polarity (c37-3 / amr-unknown)))

# ::snt Or be that tall lol
# ::tokens ["Or", "be", "that", "tall", "lol"]
# ::lemmas ["or", "be", "that", "tall", "lol"]
(c38-0 / or
       :op2 (c38-3 / tall
                   :degree (c38-5 / that)
                   :domain (c38-1 / you)
                   :ARG2-of (c38-2 / laugh-01
                                   :ARG0 (c38-4 / i)
                                   :manner (c38-6 / loud)
                                   :mode expressive)))

# ::snt Great interview, thanks GMA!!
# ::tokens ["Great", "interview", ",", "thanks", "GMA", "!", "!"]
# ::lemmas ["great", "interview", ",", "thank", "GMA", "!", "!"]
(c39-2 / and
       :op1 (c39-4 / interview-01
                   :mod (c39-6 / great))
       :op2 (c39-5 / thank-01
                   :ARG0 (c39-1 / i)
                   :ARG1 (c39-3 / person
                                :name (c39-0 / name
                                             :op1 "GMA"))))

# ::snt damn,,,, , lol,,, ,I thought I was bored to death
# ::tokens ["damn", ",", ",", ",", ",", ",", "lol", ",", ",", ",", ",", "I", "thought", "I", "was", "bored", "to", "death"]
# ::lemmas ["damn", ",", ",", ",", ",", ",", "lol", ",", ",", ",", ",", "i", "think", "i", "be", "bored", "to", "death"]
(c40-5 / think-01
       :ARG0 (c40-4 / i)
       :ARG1 (c40-0 / bore-02
                    :ARG1 c40-4
                    :ARG0-of (c40-2 / cause-01
                                    :ARG1 (c40-6 / die-01
                                                 :ARG1 c40-4)))
       :ARG2-of (c40-3 / damn-01)
       :ARG2-of (c40-1 / laugh-01
                       :ARG0 c40-4
                       :manner (c40-7 / loud)
                       :mode expressive))

# ::snt Such a sweet Momma &amp; baby giraffe
# ::tokens ["Such", "a", "sweet", "Momma", "&", "amp", ";", "baby", "giraffe"]
# ::lemmas ["such", "a", "sweet", "Momma", "&", "amp", ";", "baby", "giraffe"]
(c42-2 / multi-sentence
       :snt1 (c42-4 / sweet-03
                    :ARG1 (c42-9 / and
                                 :op1 (c42-6 / person
                                             :ARG0-of (c42-5 / have-rel-role-91
                                                             :ARG2 (c42-7 / mom)))
                                 :op2 (c42-3 / person
                                             :ARG0-of (c42-8 / have-rel-role-91
                                                             :ARG2 (c42-11 / dad))))
                    :degree (c42-0 / such))
       :snt2 (c42-10 / giraffe
                     :mod (c42-1 / baby)))

# ::snt Thanks so much for having them on. The world has come together for beautiful event
# ::tokens ["Thanks", "so", "much", "for", "having", "them", "on", ".", "The", "world", "has", "come", "together", "for", "beautiful", "event"]
# ::lemmas ["thank", "so", "much", "for", "have", "they", "on", ".", "the", "world", "have", "come", "together", "for", "beautiful", "event"]
(c43-2 / multi-sentence
       :snt1 (c43-11 / thank-01
                     :ARG0 (c43-10 / i)
                     :ARG1 (c43-1 / you)
                     :ARG2 (c43-5 / have-06
                                  :ARG0 c43-1
                                  :ARG1 (c43-13 / they))
                     :ARG1-of (c43-9 / have-quant-91
                                     :ARG2 (c43-6 / much)
                                     :ARG3 (c43-3 / so)))
       :snt2 (c43-7 / come-01
                    :ARG1 (c43-8 / world)
                    :mod (c43-12 / together)
                    :purpose (c43-4 / event
                                    :ARG1-of (c43-0 / beautiful-02))))

# ::snt It's was wonderful. Thanks for sharing!
# ::tokens ["It", "'s", "was", "wonderful", ".", "Thanks", "for", "sharing", "!"]
# ::lemmas ["it", "be", "be", "wonderful", ".", "thank", "for", "sharing", "!"]
(c44-1 / multi-sentence
       :snt1 (c44-4 / wonderful-03
                    :ARG1 (c44-5 / it))
       :snt2 (c44-6 / thank-01
                    :ARG0 (c44-3 / i)
                    :ARG1 (c44-0 / you)
                    :ARG2 (c44-2 / share-01
                                 :ARG0 c44-0)))

# ::snt Poor thing
# ::tokens ["Poor", "thing"]
# ::lemmas ["poor", "thing"]
(c45-1 / thing
       :mod (c45-0 / poor))

# ::snt Nothing like a bit of privacy in the birthing suite!
# ::tokens ["Nothing", "like", "a", "bit", "of", "privacy", "in", "the", "birthing", "suite", "!"]
# ::lemmas ["nothing", "like", "a", "bit", "of", "privacy", "in", "the", "birthing", "suite", "!"]
(c46-3 / resemble-01
       :ARG1 (c46-1 / nothing)
       :ARG2 (c46-5 / privacy
                    :quant (c46-0 / bit)
                    :location (c46-2 / suite
                                     :mod (c46-4 / birthing-03))))

# ::snt Will this story finally go away now?
# ::tokens ["Will", "this", "story", "finally", "go", "away", "now", "?"]
# ::lemmas ["will", "this", "story", "finally", "go", "away", "now", "?"]
(c47-6 / go-01
       :polarity (c47-3 / amr-unknown)
       :ARG1 (c47-2 / story
                    :mod (c47-5 / this))
       :ARG4 (c47-4 / away)
       :time (c47-1 / now)
       :mod (c47-0 / final))

# ::snt So much for modesty.
# ::tokens ["So", "much", "for", "modesty", "."]
# ::lemmas ["so", "much", "for", "modesty", "."]
(c48-1 / much
       :degree (c48-2 / so)
       :topic (c48-0 / modesty))

# ::snt No, but one of my twins decided to try the feet first thing, boy was that awful!
# ::tokens ["No", ",", "but", "one", "of", "my", "twins", "decided", "to", "try", "the", "feet", "first", "thing", ",", "boy", "was", "that", "awful", "!"]
# ::lemmas ["no", ",", "but", "one", "of", "my", "twin", "decide", "to", "try", "the", "foot", "first", "thing", ",", "boy", "be", "that", "awful", "!"]
(c49-8 / contrast-01
       :ARG2 (c49-12 / decide-01
                     :ARG0 (c49-7 / person
                                  :ARG1-of (c49-9 / include-91
                                                  :ARG2 (c49-3 / person
                                                               :ARG0-of (c49-6 / have-rel-role-91
                                                                               :ARG1 (c49-4 / i)
                                                                               :ARG2 (c49-10 / twin))))
                                  :quant 1)
                     :ARG1 (c49-13 / try-01
                                   :ARG0 c49-7
                                   :ARG1 (c49-0 / foot)
                                   :ord (c49-1 / ordinal-entity
                                               :value 1))
                     :mod (c49-5 / awful
                                 :degree (c49-11 / that)
                                 :mod (c49-2 / boy))))

# ::snt If and could they would shoot those giraffes and would laugh about it.
# ::tokens ["If", "and", "could", "they", "would", "shoot", "those", "giraffes", "and", "would", "laugh", "about", "it", "."]
# ::lemmas ["if", "and", "could", "they", "would", "shoot", "those", "giraffe", "and", "would", "laugh", "about", "it", "."]
(c50-2 / and
       :op1 (c50-1 / shoot-02
                   :ARG0 (c50-5 / they)
                   :ARG1 (c50-8 / giraffe
                                :mod (c50-7 / that)))
       :op2 (c50-3 / laugh-01
                   :ARG0 c50-5
                   :ARG2 c50-1)
       :condition (c50-6 / and
                         :op1 (c50-4 / possible-01
                                     :ARG1 c50-1)
                         :op2 (c50-0 / possible-01
                                     :ARG1 c50-1)))
