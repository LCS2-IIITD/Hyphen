# ::snt Baby Crew was born. Healthy!
# ::tokens ["Baby", "Crew", "was", "born", ".", "Healthy", "!"]
# ::lemmas ["Baby", "Crew", "be", "bear", ".", "healthy", "!"]
(c1-1 / multi-sentence
      :snt1 (c1-0 / bear-02
                  :ARG1 (c1-4 / person
                              :name (c1-2 / name
                                          :op1 "Crew")
                              :mod (c1-3 / baby)))
      :snt2 (c1-5 / healthy
                  :mode expressive))

# ::snt Congrats to them all....great family!
# ::tokens ["Congrats", "to", "them", "all", "....", "great", "family", "!"]
# ::lemmas ["congrat", "to", "they", "all", "....", "great", "family", "!"]
(c2-1 / and
      :op1 (c2-2 / congratulate-01
                 :ARG1 (c2-4 / they
                             :mod (c2-3 / all)))
      :op2 (c2-0 / family
                 :mod (c2-5 / great)))

# ::snt Congrats to the Gaines family as they welcome their new baby boy Crew Gaines!!!!
# ::tokens ["Congrats", "to", "the", "Gaines", "family", "as", "they", "welcome", "their", "new", "baby", "boy", "Crew", "Gaines", "!", "!", "!", "!"]
# ::lemmas ["congrat", "to", "the", "Gaines", "family", "as", "they", "welcome", "their", "new", "baby", "boy", "Crew", "Gaines", "!", "!", "!", "!"]
(c3-7 / congratulate-01
      :ARG1 (c3-0 / family
                  :name (c3-2 / name
                              :op1 "Gaines"))
      :ARG2 (c3-8 / welcome-01
                  :ARG0 c3-0
                  :ARG1 (c3-1 / boy
                              :name (c3-3 / name
                                          :op1 "Crew"
                                          :op2 "Gaines")
                              :ARG0-of (c3-4 / have-rel-role-91
                                             :ARG1 c3-0
                                             :ARG2 (c3-5 / baby))
                              :ARG1-of (c3-6 / new-01))))

# ::snt One of my favorites on HGTV. They make me want to move to Texas since Calif is a bona fide s-h-
# ::tokens ["One", "of", "my", "favorites", "on", "HGTV", ".", "They", "make", "me", "want", "to", "move", "to", "Texas", "since", "Calif", "is", "a", "bona", "fide", "s", "-", "h-"]
# ::lemmas ["One", "of", "my", "favorite", "on", "HGTV", ".", "they", "make", "i", "want", "to", "move", "to", "Texas", "since", "Calif", "be", "a", "bona", "fide", "s", "-", "h-"]
(c4-4 / multi-sentence
      :snt1 (c4-14 / include-91
                   :ARG1 (c4-0 / one)
                   :ARG2 (c4-1 / favorite
                               :poss (c4-7 / i)
                               :medium (c4-2 / broadcast-program
                                             :name (c4-5 / name
                                                         :op1 "HGTV"))))
      :snt2 (c4-8 / make-02
                  :ARG0 (c4-15 / they)
                  :ARG1 (c4-12 / want-01
                               :ARG0 c4-7
                               :ARG1 (c4-16 / move-01
                                            :ARG0 c4-7
                                            :ARG2 (c4-6 / state
                                                        :name (c4-9 / name
                                                                    :op1 "Texas")))
                               :ARG1-of (c4-13 / cause-01
                                               :ARG0 (c4-3 / s-h
                                                           :mod (c4-10 / bona-fide)
                                                           :domain (c4-17 / state
                                                                          :name (c4-11 / name
                                                                                       :op1 "California")))))))

# ::snt I just adore them, they're so sweet!
# ::tokens ["I", "just", "adore", "them", ",", "they", "'re", "so", "sweet", "!"]
# ::lemmas ["i", "just", "adore", "they", ",", "they", "be", "so", "sweet", "!"]
(c5-2 / adore-01
      :ARG0 (c5-5 / i)
      :ARG1 (c5-6 / they)
      :mod (c5-4 / just)
      :ARG1-of (c5-3 / cause-01
                     :ARG0 (c5-1 / sweet-03
                                 :ARG1 c5-6
                                 :degree (c5-0 / so))))

# ::snt When is Chip due?
# ::tokens ["When", "is", "Chip", "due", "?"]
# ::lemmas ["when", "be", "Chip", "due", "?"]
(c6-0 / due-03
      :ARG1 (c6-2 / person
                  :name (c6-1 / name
                              :op1 "Chip"))
      :time (c6-3 / amr-unknown))

# ::snt Have they named him yet?
# ::tokens ["Have", "they", "named", "him", "yet", "?"]
# ::lemmas ["have", "they", "name", "he", "yet", "?"]
(c7-1 / name-01
      :polarity (c7-2 / amr-unknown)
      :ARG0 (c7-4 / they)
      :ARG1 (c7-3 / he)
      :time (c7-0 / yet))

# ::snt Awww, they're so cute together!!
# ::tokens ["Awww", ",", "they", "'re", "so", "cute", "together", "!", "!"]
# ::lemmas ["Awww", ",", "they", "be", "so", "cute", "together", "!", "!"]
(c8-1 / cute
      :domain (c8-2 / they)
      :mod (c8-4 / together)
      :degree (c8-0 / so)
      :mod (c8-3 / awww
                 :mode expressive))

# ::snt She's a strong women. Congratulations on a beautiful blessing
# ::tokens ["She", "'s", "a", "strong", "women", ".", "Congratulations", "on", "a", "beautiful", "blessing"]
# ::lemmas ["she", "be", "a", "strong", "woman", ".", "congratulation", "on", "a", "beautiful", "blessing"]
(c9-3 / multi-sentence
      :snt1 (c9-6 / woman
                  :ARG1-of (c9-4 / strong-02)
                  :domain (c9-0 / she))
      :snt2 (c9-7 / congratulate-01
                  :ARG1 (c9-2 / you)
                  :ARG2 (c9-8 / thing
                              :ARG2-of (c9-1 / bless-01)
                              :ARG1-of (c9-5 / beautiful-02))))

# ::snt I love them and their show!! But they can stop having babies lol.
# ::tokens ["I", "love", "them", "and", "their", "show", "!", "!", "But", "they", "can", "stop", "having", "babies", "lol", "."]
# ::lemmas ["i", "love", "they", "and", "their", "show", "!", "!", "but", "they", "can", "stop", "have", "baby", "lol", "."]
(c10-2 / multi-sentence
       :snt1 (c10-6 / love-01
                    :ARG0 (c10-10 / i)
                    :ARG1 (c10-4 / and
                                 :op1 (c10-11 / they)
                                 :op2 (c10-3 / show-04
                                             :ARG0 c10-11)))
       :snt2 (c10-9 / contrast-01
                    :ARG2 (c10-7 / possible-01
                                 :ARG1 (c10-0 / stop-01
                                              :ARG0 (c10-13 / they)
                                              :ARG1 (c10-5 / have-05
                                                           :ARG0 c10-13
                                                           :ARG1 (c10-1 / baby)))
                                 :ARG2-of (c10-12 / laugh-01
                                                  :ARG0 c10-10
                                                  :manner (c10-8 / loud)))))

# ::snt Congratulations
# ::tokens ["Congratulations"]
# ::lemmas ["congratulation"]
(c11-0 / congratulate-01)

# ::snt Congratulations
# ::tokens ["Congratulations"]
# ::lemmas ["congratulation"]
(c12-0 / congratulate-01)

# ::snt You obviously do bc you commented and bothered yourself to say .. who are they and why do we care?
# ::tokens ["You", "obviously", "do", "bc", "you", "commented", "and", "bothered", "yourself", "to", "say", "..", "who", "are", "they", "and", "why", "do", "we", "care", "?"]
# ::lemmas ["you", "obviously", "do", "bc", "you", "comment", "and", "bother", "yourself", "to", "say", "..", "who", "be", "they", "and", "why", "do", "we", "care", "?"]
(c13-6 / cause-01
       :ARG0 (c13-5 / and
                    :op1 (c13-13 / comment-01
                                 :ARG0 (c13-3 / you)
                                 :ARG3 (c13-11 / they))
                    :op2 (c13-2 / bother-01
                                :ARG0 c13-3
                                :ARG1 c13-3
                                :ARG2 (c13-4 / say-01
                                             :ARG0 c13-3
                                             :ARG1 (c13-10 / and
                                                           :op1 (c13-7 / amr-unknown
                                                                       :domain c13-11)
                                                           :op2 (c13-9 / cause-01
                                                                       :ARG0 c13-7)
                                                           :ARG1 (c13-0 / care-01
                                                                        :ARG0 (c13-8 / we))))))
       :ARG1 (c13-12 / do-02
                     :ARG0 c13-3
                     :ARG1-of (c13-1 / obvious-01)))

# ::snt Congratulations
# ::tokens ["Congratulations"]
# ::lemmas ["congratulation"]
(c14-0 / congratulate-01)

# ::snt Congrats and This blessed baby will have some great parents and older siblings.
# ::tokens ["Congrats", "and", "This", "blessed", "baby", "will", "have", "some", "great", "parents", "and", "older", "siblings", "."]
# ::lemmas ["Congrats", "and", "this", "blessed", "baby", "will", "have", "some", "great", "parent", "and", "old", "sibling", "."]
(c15-6 / and
       :op1 (c15-11 / congratulate-01)
       :op2 (c15-8 / have-03
                   :ARG0 (c15-2 / baby
                                :mod (c15-14 / this)
                                :ARG1-of (c15-9 / bless-01))
                   :ARG1 (c15-13 / and
                                 :op1 (c15-10 / person
                                              :ARG0-of (c15-12 / have-rel-role-91
                                                               :ARG1 c15-2
                                                               :ARG2 (c15-4 / parent))
                                              :mod (c15-15 / great))
                                 :op2 (c15-17 / person
                                              :ARG0-of (c15-7 / have-rel-role-91
                                                              :ARG1 c15-2
                                                              :ARG2 (c15-5 / sibling))
                                              :ARG1-of (c15-16 / have-degree-91
                                                               :ARG2 (c15-0 / old)
                                                               :ARG3 (c15-3 / more)))
                                 :quant (c15-1 / some))))

# ::snt If my husband called me big momma in a tweet, theres no chance hed get to try for child
# ::tokens ["If", "my", "husband", "called", "me", "big", "momma", "in", "a", "tweet", ",", "there", "s", "no", "chance", "he", "d", "get", "to", "try", "for", "child"]
# ::lemmas ["if", "my", "husband", "call", "i", "big", "momma", "in", "a", "tweet", ",", "there", "s", "no", "chance", "he", "d", "get", "to", "try", "for", "child"]
(c16-4 / chance-02
       :ARG1 (c16-9 / get-22
                    :ARG0 (c16-2 / he)
                    :ARG1 (c16-8 / try-01
                                 :ARG0 c16-2
                                 :ARG1 (c16-11 / child)))
       :ARG2 (c16-5 / call-02
                    :ARG0 (c16-3 / person
                                 :ARG0-of (c16-6 / have-rel-role-91
                                                 :ARG1 (c16-7 / i)
                                                 :ARG2 (c16-1 / husband))
                                 :mod (c16-0 / big))
                    :ARG1 c16-7
                    :medium (c16-10 / tweet)
                    :condition-of c16-4)
       :polarity -)

# ::snt Congratulations
# ::tokens ["Congratulations"]
# ::lemmas ["congratulation"]
(c17-0 / congratulate-01)

# ::snt Congratulations
# ::tokens ["Congratulations"]
# ::lemmas ["congratulation"]
(c18-0 / congratulate-01)

# ::snt Wow, congratulations!
# ::tokens ["Wow", ",", "congratulations", "!"]
# ::lemmas ["wow", ",", "congratulation", "!"]
(c19-0 / congratulate-01
       :mod (c19-1 / wow
                   :mode expressive))

# ::snt So happy for them
# ::tokens ["So", "happy", "for", "them"]
# ::lemmas ["so", "happy", "for", "they"]
(c20-1 / happy-01
       :ARG1 (c20-2 / they)
       :degree (c20-0 / so))

# ::snt I'm so happy for you all. Blessings and God's l over for you both and your family.
# ::tokens ["I", "'m", "so", "happy", "for", "you", "all", ".", "Blessings", "and", "God", "'s", "l", "over", "for", "you", "both", "and", "your", "family", "."]
# ::lemmas ["i", "be", "so", "happy", "for", "you", "all", ".", "blessing", "and", "God", "'s", "l", "over", "for", "you", "both", "and", "your", "family", "."]
(c21-4 / multi-sentence
       :snt1 (c21-7 / happy-01
                    :ARG1 (c21-13 / i)
                    :ARG2 (c21-3 / you
                                 :mod (c21-14 / all))
                    :degree (c21-6 / so))
       :snt2 (c21-15 / and
                     :op1 (c21-2 / bless-01)
                     :op2 (c21-8 / person
                                 :name (c21-5 / name
                                              :op1 "God"))
                     :beneficiary (c21-11 / and
                                          :op1 (c21-16 / you
                                                       :mod (c21-9 / both))
                                          :op2 (c21-0 / family
                                                      :ARG1-of (c21-12 / have-org-role-91
                                                                       :ARG0 c21-16
                                                                       :ARG2 (c21-10 / member))))
                     :mod (c21-1 / over)))

# ::snt Omg yay! Love these guys!
# ::tokens ["Omg", "yay", "!", "Love", "these", "guys", "!"]
# ::lemmas ["Omg", "yay", "!", "love", "these", "guy", "!"]
(c22-2 / multi-sentence
       :snt1 (c22-1 / yay
                    :mod (c22-0 / oh-my-god
                                :mode expressive)
                    :mode expressive)
       :snt2 (c22-3 / love-01
                    :ARG1 (c22-5 / guy
                                 :mod (c22-4 / this))
                    :mode expressive))

# ::snt congratulations!
# ::tokens ["congratulations", "!"]
# ::lemmas ["congratulation", "!"]
(c23-0 / congratulate-01)

# ::snt Congratulations!
# ::tokens ["Congratulations", "!"]
# ::lemmas ["congratulation", "!"]
(c24-0 / congratulate-01
       :mode expressive)

# ::snt Congratulations everyone!
# ::tokens ["Congratulations", "everyone", "!"]
# ::lemmas ["congratulation", "everyone", "!"]
(c25-0 / congratulate-01
       :ARG1 (c25-1 / everyone))

# ::snt Go away already and PLEASE stop showing that show everyday just sos
# ::tokens ["Go", "away", "already", "and", "PLEASE", "stop", "showing", "that", "show", "everyday", "just", "sos"]
# ::lemmas ["go", "away", "already", "and", "please", "stop", "show", "that", "show", "everyday", "just", "sos"]
(c26-7 / and
       :op1 (c26-8 / go-02
                   :ARG0 (c26-1 / you)
                   :ARG4 (c26-6 / away)
                   :time (c26-4 / already)
                   :mode imperative
                   :polite +)
       :op2 (c26-2 / stop-01
                   :ARG0 c26-1
                   :ARG1 (c26-0 / show-04
                                :ARG0 c26-1
                                :ARG1 (c26-5 / that)
                                :frequency (c26-3 / rate-entity-91
                                                  :ARG3 (c26-11 / temporal-quantity
                                                                :unit (c26-9 / day)
                                                                :quant 1))
                                :mod (c26-10 / just))
                   :mode imperative
                   :polite +))

# ::snt Good for them- but why do we care? Who are they?
# ::tokens ["Good", "for", "them-", "but", "why", "do", "we", "care", "?", "Who", "are", "they", "?"]
# ::lemmas ["good", "for", "them-", "but", "why", "do", "we", "care", "?", "who", "be", "they", "?"]
(c28-0 / multi-sentence
       :snt1 (c28-2 / contrast-01
                    :ARG1 (c28-7 / good-04
                                 :ARG2 (c28-6 / they))
                    :ARG2 (c28-9 / care-01
                                 :ARG0 (c28-3 / we)
                                 :ARG1-of (c28-4 / cause-01
                                                 :ARG0 (c28-1 / amr-unknown))))
       :snt2 (c28-8 / they
                    :domain (c28-5 / amr-unknown)))

# ::snt Looking for Web Developer? Contact me or
# ::tokens ["Looking", "for", "Web", "Developer", "?", "Contact", "me", "or"]
# ::lemmas ["look", "for", "web", "Developer", "?", "contact", "i", "or"]
(c29-1 / multi-sentence
       :snt1 (c29-3 / look-01
                    :ARG0 (c29-0 / you)
                    :ARG1 (c29-2 / person
                                 :ARG0-of (c29-8 / develop-02
                                                 :ARG1 (c29-4 / web)))
                    :polarity (c29-7 / amr-unknown))
       :snt2 (c29-5 / contact-01
                    :ARG0 c29-0)
       :ARG1 (c29-6 / i))

# ::snt Congratulations!
# ::tokens ["Congratulations", "!"]
# ::lemmas ["congratulation", "!"]
(c30-0 / congratulate-01
       :mode expressive)

# ::snt Congratulations !!
# ::tokens ["Congratulations", "!", "!"]
# ::lemmas ["congratulation", "!", "!"]
(c31-0 / congratulate-01
       :mode expressive)

# ::snt Congrats
# ::tokens ["Congrats"]
# ::lemmas ["Congrats"]
(c32-0 / congratulate-01)

# ::snt Attention! Do you need your business to the next level by Website? Then let me do your job,please. Here my services
# ::tokens ["Attention", "!", "Do", "you", "need", "your", "business", "to", "the", "next", "level", "by", "Website", "?", "Then", "let", "me", "do", "your", "job", ",", "please", ".", "Here", "my", "services"]
# ::lemmas ["attention", "!", "do", "you", "need", "your", "business", "to", "the", "next", "level", "by", "Website", "?", "then", "let", "i", "do", "your", "job", ",", "please", ".", "here", "my", "service"]
(c33-14 / multi-sentence
        :snt1 (c33-9 / attend-02
                     :ARG0 (c33-4 / you)
                     :mode imperative)
        :snt2 (c33-16 / need-01
                      :polarity (c33-8 / amr-unknown)
                      :ARG0 (c33-10 / you)
                      :ARG1 (c33-13 / business
                                    :poss c33-10)
                      :destination (c33-2 / level
                                          :mod (c33-15 / next)
                                          :prep-by (c33-17 / website))
                      :polarity (c33-6 / amr-unknown))
        :snt3 (c33-12 / let-01
                      :ARG0 (c33-3 / you)
                      :ARG1 (c33-19 / do-02
                                    :ARG0 (c33-18 / i)
                                    :ARG1 (c33-7 / job
                                                 :poss c33-3))
                      :mod (c33-11 / then)
                      :mode imperative
                      :polite +)
        :snt4 (c33-1 / be-located-at-91
                     :ARG1 (c33-0 / service
                                  :poss c33-18)
                     :ARG2 (c33-5 / here)))

# ::snt :So happy for them!!
# ::tokens [":", "So", "happy", "for", "them", "!", "!"]
# ::lemmas [":", "so", "happy", "for", "they", "!", "!"]
(c34-1 / happy-01
       :ARG0 (c34-2 / they)
       :degree (c34-0 / so))

# ::snt All American!
# ::tokens ["All", "American", "!"]
# ::lemmas ["all", "American", "!"]
(c35-2 / person
       :mod (c35-0 / country
                   :name (c35-1 / name
                                :op1 "America"))
       :mod (c35-3 / all))

# ::snt How does this affect me?
# ::tokens ["How", "does", "this", "affect", "me", "?"]
# ::lemmas ["how", "do", "this", "affect", "i", "?"]
(c36-3 / affect-01
       :ARG0 (c36-1 / this)
       :ARG1 (c36-2 / i)
       :manner (c36-0 / amr-unknown))

# ::snt So what do they do when they're not working?
# ::tokens ["So", "what", "do", "they", "do", "when", "they", "'re", "not", "working", "?"]
# ::lemmas ["so", "what", "do", "they", "do", "when", "they", "be", "not", "work", "?"]
(c37-0 / do-02
       :ARG0 (c37-3 / they)
       :ARG1 (c37-1 / amr-unknown)
       :time (c37-2 / work-01
                    :ARG0 c37-3
                    :polarity -))

# ::snt Name. Your son Daniel
# ::tokens ["Name", ".", "Your", "son", "Daniel"]
# ::lemmas ["name", ".", "your", "son", "Daniel"]
(c38-4 / person
       :name (c38-1 / name
                    :op1 "Daniel")
       :ARG0-of (c38-3 / have-rel-role-91
                       :ARG1 (c38-0 / you)
                       :ARG2 (c38-2 / son)))

# ::snt That's to many kids
# ::tokens ["That", "'s", "to", "many", "kids"]
# ::lemmas ["that", "be", "to", "many", "kid"]
(c39-1 / have-mod-91
       :ARG1 (c39-3 / that)
       :ARG2 (c39-2 / kid
                    :quant (c39-0 / many)))

# ::snt Love the name. Congratulations to my favorite family.
# ::tokens ["Love", "the", "name", ".", "Congratulations", "to", "my", "favorite", "family", "."]
# ::lemmas ["love", "the", "name", ".", "congratulation", "to", "my", "favorite", "family", "."]
(c40-2 / multi-sentence
       :snt1 (c40-3 / love-01
                    :ARG1 (c40-1 / name))
       :snt2 (c40-5 / congratulate-01
                    :ARG1 (c40-0 / family
                                 :mod (c40-4 / favorite)
                                 :poss (c40-6 / i))))

# ::snt Chip chip hurray. Congrats
# ::tokens ["Chip", "chip", "hurray", ".", "Congrats"]
# ::lemmas ["chip", "chip", "hurray", ".", "congrat"]
(c41-2 / multi-sentence
       :snt1 (c41-1 / hurl-01
                    :ARG1 (c41-0 / chip))
       :snt2 (c41-3 / congratulate-01))

# ::snt My birthday today too! Welcome and happy birthday, baby Crew Gaines!
# ::tokens ["My", "birthday", "today", "too", "!", "Welcome", "and", "happy", "birthday", ",", "baby", "Crew", "Gaines", "!"]
# ::lemmas ["my", "birthday", "today", "too", "!", "welcome", "and", "happy", "birthday", ",", "baby", "Crew", "Gaines", "!"]
(c42-1 / multi-sentence
       :snt1 (c42-0 / birthday
                    :poss (c42-8 / i)
                    :time (c42-7 / today)
                    :mod (c42-9 / too))
       :snt2 (c42-6 / welcome-01
                    :ARG1 (c42-4 / person
                                 :name (c42-2 / name
                                              :op1 "Crew"
                                              :op2 "Gaines")
                                 :mod (c42-3 / baby))
                    :ARG2 (c42-10 / birthday
                                  :poss c42-8)
                    :ARG1-of (c42-5 / happy-01)))

# ::snt congratulations!
# ::tokens ["congratulations", "!"]
# ::lemmas ["congratulation", "!"]
(c43-0 / congratulate-01)

# ::snt congrats love you guys miss your show
# ::tokens ["congrats", "love", "you", "guys", "miss", "your", "show"]
# ::lemmas ["congrat", "love", "you", "guy", "miss", "your", "show"]
(c44-4 / and
       :op1 (c44-3 / congratulate-01
                   :ARG1 (c44-0 / you
                                :mod (c44-5 / guy)))
       :op2 (c44-1 / miss-02
                   :ARG0 c44-0
                   :ARG1 (c44-2 / show-04
                                :ARG0 c44-0)))

# ::snt Congratulations!
# ::tokens ["Congratulations", "!"]
# ::lemmas ["congratulation", "!"]
(c45-0 / congratulate-01
       :mode expressive)

# ::snt Congratulations to this beautiful family!! Another sweet baby boy.
# ::tokens ["Congratulations", "to", "this", "beautiful", "family", "!", "!", "Another", "sweet", "baby", "boy", "."]
# ::lemmas ["congratulation", "to", "this", "beautiful", "family", "!", "!", "another", "sweet", "baby", "boy", "."]
(c46-2 / multi-sentence
       :snt1 (c46-6 / congratulate-01
                    :ARG1 (c46-0 / family
                                 :ARG1-of (c46-1 / beautiful-02)
                                 :mod (c46-7 / this)))
       :snt2 (c46-5 / boy
                    :mod (c46-4 / another)
                    :ARG0-of (c46-3 / sweet-03)
                    :mod (c46-8 / baby)))

# ::snt YAY - Love good news
# ::tokens ["YAY", "-", "Love", "good", "news"]
# ::lemmas ["yay", "-", "Love", "good", "news"]
(c47-2 / love-01
       :ARG1 (c47-1 / news
                    :ARG1-of (c47-0 / good-02))
       :time (c47-3 / date-entity
                    :month 5))

# ::snt YAY Happy news
# ::tokens ["YAY", "Happy", "news"]
# ::lemmas ["YAY", "Happy", "news"]
(c48-1 / happy-01
       :ARG1 (c48-2 / news)
       :time (c48-0 / date-entity
                    :month 5))

# ::snt CONGRATULATIONS. GAINES FAMILY!!!
# ::tokens ["CONGRATULATIONS", ".", "GAINES", "FAMILY", "!", "!", "!"]
# ::lemmas ["CONGRATULATIONS", ".", "GAINES", "FAMILY", "!", "!", "!"]
(c49-3 / multi-sentence
       :snt1 (c49-1 / congratulate-01)
       :snt2 (c49-0 / give-01
                    :ARG2 (c49-2 / family)))

# ::snt So happy for all of you! Love your family and cant wait to see his picture soon!
# ::tokens ["So", "happy", "for", "all", "of", "you", "!", "Love", "your", "family", "and", "ca", "nt", "wait", "to", "see", "his", "picture", "soon", "!"]
# ::lemmas ["so", "happy", "for", "all", "of", "you", "!", "Love", "your", "family", "and", "can", "not", "wait", "to", "see", "his", "picture", "soon", "!"]
(c50-3 / multi-sentence
       :snt1 (c50-7 / happy-01
                    :ARG1 (c50-2 / you
                                 :mod (c50-13 / all))
                    :degree (c50-5 / so))
       :snt2 (c50-12 / and
                     :op1 (c50-8 / love-01
                                 :ARG0 (c50-14 / i)
                                 :ARG1 (c50-9 / person
                                              :ARG0-of (c50-11 / have-rel-role-91
                                                               :ARG1 (c50-15 / you)
                                                               :ARG2 (c50-0 / family))))
                     :op2 (c50-10 / wait-01
                                  :ARG1 c50-14
                                  :ARG2 (c50-1 / see-01
                                               :ARG0 c50-14
                                               :ARG1 (c50-4 / picture-01
                                                            :ARG1 (c50-6 / he))
                                               :time (c50-16 / soon))
                                  :polarity -)))
