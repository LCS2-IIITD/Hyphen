# ::snt Thanks for letting us know
# ::tokens ["Thanks", "for", "letting", "us", "know"]
# ::lemmas ["thank", "for", "let", "we", "know"]
(c2-3 / thank-01
      :ARG0 (c2-0 / we)
      :ARG1 (c2-1 / you)
      :ARG2 (c2-2 / let-know-07
                  :ARG0 c2-1
                  :ARG1 c2-0))

# ::snt Who here remembers.when NME used to be about good or interesting music? Before all the Top crap &amp; celebrity gossip.
# ::tokens ["Who", "here", "remembers.when", "NME", "used", "to", "be", "about", "good", "or", "interesting", "music", "?", "Before", "all", "the", "Top", "crap", "&", "amp", ";", "celebrity", "gossip", "."]
# ::lemmas ["who", "here", "remembers.when", "NME", "use", "to", "be", "about", "good", "or", "interesting", "music", "?", "before", "all", "the", "Top", "crap", "&", "amp", ";", "celebrity", "gossip", "."]
(c3-13 / multi-sentence
       :snt1 (c3-19 / remember-01
                    :ARG0 (c3-9 / amr-unknown)
                    :ARG1 (c3-20 / person
                                 :location (c3-4 / here)))
       :snt2 (c3-12 / be-temporally-at-91
                    :ARG1 (c3-5 / magazine
                                :name (c3-18 / name
                                             :op1 "NME"))
                    :ARG2 (c3-15 / concern-02
                                 :ARG0 c3-5
                                 :ARG1 (c3-3 / or
                                             :op1 (c3-17 / music
                                                         :ARG1-of (c3-10 / good-02))
                                             :op2 (c3-14 / music
                                                         :ARG2-of (c3-21 / interest-01)))
                                 :time (c3-16 / use-03))
                    :snt3 (c3-0 / before
                                :op1 (c3-7 / and
                                           :op1 (c3-11 / crap
                                                       :mod (c3-8 / top)
                                                       :mod (c3-6 / all))
                                           :op2 (c3-2 / gossip
                                                      :mod (c3-1 / celebrity))))
                    :polarity (c3-22 / amr-unknown)))

# ::snt Anton is his middle name... hes just Jack Off
# ::tokens ["Anton", "is", "his", "middle", "name", "...", "he", "s", "just", "Jack", "Off"]
# ::lemmas ["Anton", "be", "his", "middle", "name", "...", "he", "s", "just", "Jack", "Off"]
(c4-1 / name
      :mod (c4-0 / middle)
      :poss (c4-4 / person
                  :name (c4-5 / name
                              :op1 "Anton"))
      :ARG1-of (c4-3 / mean-01
                     :ARG2 (c4-2 / person
                                 :name (c4-6 / name
                                             :op1 "Jack"
                                             :op2 "Off")
                                 :domain c4-4
                                 :mod (c4-7 / just))))

# ::snt No kids? Ok, good!
# ::tokens ["No", "kids", "?", "Ok", ",", "good", "!"]
# ::lemmas ["no", "kid", "?", "ok", ",", "good", "!"]
(c6-2 / multi-sentence
      :snt1 (c6-3 / kid
                  :polarity (c6-0 / amr-unknown))
      :snt2 (c6-1 / okay-01
                  :mode expressive))

# ::snt One question. Whoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo?
# ::tokens ["One", "question", ".", "Whoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo", "?"]
# ::lemmas ["One", "question", ".", "Whoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo", "?"]
(c7-0 / question-01
      :polarity (c7-1 / amr-unknown)
      :quant 1)

# ::snt Dont take the money!
# ::tokens ["Do", "nt", "take", "the", "money", "!"]
# ::lemmas ["do", "not", "take", "the", "money", "!"]
(c8-2 / take-01
      :ARG0 (c8-0 / you)
      :ARG1 (c8-1 / money)
      :polarity -
      :mode imperative)

# ::snt You can't tell me this just before I leave for work....I'll be an emotional wreck all day.......hang on.....who the chuff are they?! NME further mutating into
# ::tokens ["You", "ca", "n't", "tell", "me", "this", "just", "before", "I", "leave", "for", "work", "....", "I'll", "be", "an", "emotional", "wreck", "all", "day", ".......", "hang", "on", ".....", "who", "the", "chuff", "are", "they", "?", "!", "NME", "further", "mutating", "into"]
# ::lemmas ["you", "can", "not", "tell", "i", "this", "just", "before", "i", "leave", "for", "work", "....", "I'll", "be", "an", "emotional", "wreck", "all", "day", ".......", "hang", "on", ".....", "who", "the", "chuff", "be", "they", "?", "!", "NME", "far", "mutate", "into"]
(c9-12 / multi-sentence
       :snt1 (c9-17 / possible-01
                    :ARG1 (c9-9 / tell-01
                                :ARG0 (c9-2 / you)
                                :ARG1 (c9-14 / this)
                                :ARG2 (c9-19 / i)
                                :time (c9-11 / before
                                             :op1 (c9-0 / leave-11
                                                        :ARG0 c9-19
                                                        :ARG1 (c9-18 / work-01
                                                                     :ARG0 c9-19))
                                             :mod (c9-6 / just)))
                    :polarity -)
       :snt2 (c9-1 / wreck-01
                   :ARG0 (c9-3 / i)
                   :ARG1-of (c9-16 / emotional-02)
                   :duration (c9-20 / day
                                    :mod (c9-8 / all)))
       :snt3 (c9-4 / hang-on-05
                   :ARG1 c9-2
                   :mode imperative)
       :snt4 (c9-7 / amr-unknown
                   :domain (c9-13 / chuff))
       :snt5 (c9-5 / mutate-01
                   :ARG0 (c9-10 / i)
                   :degree (c9-15 / further)))

# ::snt "Split up" is something my mom would say. I didn't even know they were going steady.
# ::tokens ["\"", "Split", "up", "\"", "is", "something", "my", "mom", "would", "say", ".", "I", "did", "n't", "even", "know", "they", "were", "going", "steady", "."]
# ::lemmas ["\"", "split", "up", "\"", "be", "something", "my", "mom", "would", "say", ".", "i", "do", "not", "even", "know", "they", "be", "go", "steady", "."]
(c11-1 / multi-sentence
       :snt1 (c11-2 / say-01
                    :ARG0 (c11-7 / person
                                 :ARG0-of (c11-6 / have-rel-role-91
                                                 :ARG1 (c11-10 / i)
                                                 :ARG2 (c11-8 / mom)))
                    :ARG1 (c11-0 / something
                                 :domain (c11-13 / split-up-03)))
       :snt2 (c11-9 / know-01
                    :ARG0 (c11-3 / i)
                    :ARG1 (c11-12 / go-01
                                  :ARG1 (c11-11 / they)
                                  :ARG4 (c11-4 / steady))
                    :mod (c11-5 / even)
                    :polarity -))

# ::snt The dogs will be sliced exactly in half.
# ::tokens ["The", "dogs", "will", "be", "sliced", "exactly", "in", "half", "."]
# ::lemmas ["the", "dog", "will", "be", "slice", "exactly", "in", "half", "."]
(c13-3 / slice-01
       :ARG1 (c13-0 / dog)
       :manner (c13-2 / half
                      :mod (c13-1 / exact)))

# ::snt thats double the damaged dogs dammit
# ::tokens ["that", "s", "double", "the", "damaged", "dogs", "dammit"]
# ::lemmas ["that", "s", "double", "the", "damage", "dog", "dammit"]
(c14-5 / double-01
       :ARG1 (c14-4 / that)
       :ARG3 (c14-2 / dog
                    :ARG1-of (c14-1 / damage-01))
       :ARG1-of (c14-0 / damn-01
                       :ARG0 (c14-3 / i)))

# ::snt Good. Jack can finally be a man.
# ::tokens ["Good", ".", "Jack", "can", "finally", "be", "a", "man", "."]
# ::lemmas ["good", ".", "Jack", "can", "finally", "be", "a", "man", "."]
(c15-1 / multi-sentence
       :snt1 (c15-6 / good-02)
       :snt2 (c15-5 / possible-01
                    :ARG1 (c15-4 / man
                                 :domain (c15-2 / person
                                                :name (c15-3 / name
                                                             :op1 "Jack"))
                                 :time (c15-0 / final))))

# ::snt Who? V
# ::tokens ["Who", "?", "V"]
# ::lemmas ["who", "?", "v"]
(c16-1 / multi-sentence
       :snt1 (c16-4 / amr-unknown)
       :snt2 (c16-3 / amr-unknown)
       :snt3 (c16-2 / person
                    :name (c16-0 / name
                                 :op1 "V")))

# ::snt Thank goodness!!! Shes horrible.
# ::tokens ["Thank", "goodness", "!", "!", "!", "She", "s", "horrible", "."]
# ::lemmas ["thank", "goodness", "!", "!", "!", "she", "s", "horrible", "."]
(c17-0 / multi-sentence
       :snt1 (c17-3 / thank-01
                    :ARG0 (c17-2 / i)
                    :ARG1 (c17-4 / goodness))
       :snt2 (c17-1 / horrible
                    :domain (c17-5 / this)))

# ::snt Ill lose sleep over that......! Dont recognise either of them. Seriously, is this news?
# ::tokens ["Ill", "lose", "sleep", "over", "that", "......", "!", "Do", "nt", "recognise", "either", "of", "them", ".", "Seriously", ",", "is", "this", "news", "?"]
# ::lemmas ["Ill", "lose", "sleep", "over", "that", "......", "!", "do", "not", "recognise", "either", "of", "they", ".", "seriously", ",", "be", "this", "news", "?"]
(c18-1 / multi-sentence
       :snt1 (c18-7 / lose-02
                    :ARG0 (c18-8 / i)
                    :ARG1 (c18-3 / sleep-01
                                 :ARG0 c18-8
                                 :ARG1 (c18-9 / that)))
       :snt2 (c18-4 / recognize-02
                    :ARG0 c18-8
                    :ARG1 (c18-11 / they
                                  :mod (c18-6 / either))
                    :polarity -)
       :snt3 (c18-2 / news
                    :domain (c18-10 / this)
                    :ARG1-of (c18-0 / serious-01)
                    :polarity (c18-5 / amr-unknown)))

# ::snt Who
# ::tokens ["Who"]
# ::lemmas ["who"]
(c19-0 / amr-unknown)

# ::snt good for him
# ::tokens ["good", "for", "him"]
# ::lemmas ["good", "for", "he"]
(c21-0 / good-04
       :ARG2 (c21-1 / he))
