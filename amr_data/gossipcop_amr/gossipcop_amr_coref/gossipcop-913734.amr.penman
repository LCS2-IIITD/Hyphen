# ::snt Thats a messed up thing to say, you wish death upon someone? WTF!
# ::tokens ["That", "s", "a", "messed", "up", "thing", "to", "say", ",", "you", "wish", "death", "upon", "someone", "?", "WTF", "!"]
# ::lemmas ["that", "s", "a", "messed", "up", "thing", "to", "say", ",", "you", "wish", "death", "upon", "someone", "?", "WTF", "!"]
(c1-3 / multi-sentence
      :snt1 (c1-8 / thing
                  :ARG1-of (c1-6 / mess-up-02)
                  :domain (c1-9 / that)
                  :ARG1-of (c1-4 / say-01
                                 :ARG3 (c1-7 / wish-01
                                             :ARG0 (c1-2 / you)
                                             :ARG1 (c1-10 / die-01
                                                          :ARG1 (c1-0 / someone)))))
      :snt2 (c1-5 / amr-unknown
                  :mod (c1-1 / fuck
                             :mode expressive)))

# ::snt What a misleading headline.
# ::tokens ["What", "a", "misleading", "headline", "."]
# ::lemmas ["what", "a", "misleading", "headline", "."]
(c2-1 / mislead-02
      :ARG0 (c2-0 / headline)
      :degree (c2-2 / so))

# ::snt Streets were wet and he over drove the conditions.
# ::tokens ["Streets", "were", "wet", "and", "he", "over", "drove", "the", "conditions", "."]
# ::lemmas ["street", "be", "wet", "and", "he", "over", "drive", "the", "condition", "."]
(c3-5 / and
      :op1 (c3-3 / wet-01
                 :ARG1 (c3-1 / street))
      :op2 (c3-6 / drive-01
                 :ARG0 (c3-2 / he)
                 :ARG1 (c3-4 / condition)
                 :mod (c3-0 / over)))

# ::snt Luke didn't die dumbass, his car just got hit.
# ::tokens ["Luke", "did", "n't", "die", "dumbass", ",", "his", "car", "just", "got", "hit", "."]
# ::lemmas ["Luke", "do", "not", "die", "dumbass", ",", "his", "car", "just", "got", "hit", "."]
(c4-1 / say-01
      :ARG0 (c4-7 / i)
      :ARG1 (c4-4 / contrast-01
                  :ARG1 (c4-8 / die-01
                              :ARG1 (c4-3 / person
                                          :name (c4-0 / name
                                                      :op1 "Luke"))
                              :polarity -)
                  :ARG2 (c4-2 / hit-01
                              :ARG1 (c4-9 / car
                                          :poss c4-3)
                              :mod (c4-6 / just)))
      :ARG2 (c4-5 / dumbass
                  :domain c4-3))

# ::snt Poorly written, imo. Shouldnt devalue the lives lost to name drop a headline.
# ::tokens ["Poorly", "written", ",", "imo", ".", "Should", "nt", "devalue", "the", "lives", "lost", "to", "name", "drop", "a", "headline", "."]
# ::lemmas ["poorly", "write", ",", "imo", ".", "should", "nt", "devalue", "the", "life", "lose", "to", "name", "drop", "a", "headline", "."]
(c5-1 / multi-sentence
      :snt1 (c5-6 / write-01
                  :manner (c5-4 / poor)
                  :ARG1-of (c5-0 / opine-01
                                 :ARG0 (c5-8 / i)))
      :snt2 (c5-2 / recommend-01
                  :ARG1 (c5-9 / devalue-01
                              :ARG1 (c5-5 / life
                                          :ARG1-of (c5-10 / lose-02))
                              :purpose (c5-7 / drop-05
                                             :ARG1 (c5-3 / headline))
                              :polarity -)))

# ::snt Fast and Furious real life edition. That sucks.
# ::tokens ["Fast", "and", "Furious", "real", "life", "edition", ".", "That", "sucks", "."]
# ::lemmas ["fast", "and", "furious", "real", "life", "edition", ".", "that", "suck", "."]
(c6-1 / multi-sentence
      :snt1 (c6-4 / edition
                  :mod (c6-5 / life
                             :ARG1-of (c6-3 / real-04))
                  :ARG1-of (c6-0 / fast-02)
                  :ARG2-of (c6-6 / furious-02))
      :snt2 (c6-2 / suck-03
                  :ARG0 (c6-7 / that)))

# ::snt Ferrari? Check. Speeding and reckless? Check. USC Douchebag? Check.
# ::tokens ["Ferrari", "?", "Check", ".", "Speeding", "and", "reckless", "?", "Check", ".", "USC", "Douchebag", "?", "Check", "."]
# ::lemmas ["Ferrari", "?", "check", ".", "speeding", "and", "reckless", "?", "check", ".", "USC", "Douchebag", "?", "check", "."]
(c7-1 / multi-sentence
      :snt1 (c7-7 / check-01
                  :ARG1 (c7-6 / person
                              :name (c7-0 / name
                                          :op1 "Ferrari"))
                  :polarity (c7-10 / amr-unknown))
      :snt2 (c7-9 / and
                  :op1 (c7-2 / speed-01)
                  :op2 (c7-4 / reckless)
                  :polarity (c7-8 / amr-unknown)
                  :ARG1-of (c7-13 / check-01))
      :snt3 (c7-11 / douchebag
                   :polarity (c7-3 / amr-unknown)
                   :mod (c7-12 / university
                               :name (c7-5 / name
                                           :op1 "USC"))))

# ::snt Wilson wasn't in the Ferrari.
# ::tokens ["Wilson", "was", "n't", "in", "the", "Ferrari", "."]
# ::lemmas ["Wilson", "be", "not", "in", "the", "Ferrari", "."]
(c8-0 / be-located-at-91
      :ARG1 (c8-3 / person
                  :name (c8-1 / name
                              :op1 "Wilson"))
      :ARG2 (c8-4 / car-make
                  :name (c8-2 / name
                              :op1 "Ferrari"))
      :polarity -)

# ::snt Wow!!! Rip
# ::tokens ["Wow", "!", "!", "!", "Rip"]
# ::lemmas ["wow", "!", "!", "!", "Rip"]
(c9-1 / person
      :name (c9-0 / name
                  :op1 "Rip")
      :ARG0-of (c9-2 / wow-01
                     :mode expressive))
