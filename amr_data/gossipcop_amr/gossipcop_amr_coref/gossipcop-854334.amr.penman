# ::snt Yay yay
# ::tokens ["Yay", "yay"]
# ::lemmas ["yay", "yay"]
(c1-0 / yay)

# ::snt Gizzzzmoduck!!!!
# ::tokens ["Gizzzzmoduck", "!", "!", "!", "!"]
# ::lemmas ["Gizzzzmoduck", "!", "!", "!", "!"]
(c2-3 / say-01
      :ARG0 (c2-2 / i)
      :ARG2 (c2-1 / person
                  :name (c2-0 / name
                              :op1 "izzzzmoduck"))
      :mode expressive)

# ::snt !!!
# ::tokens ["!", "!", "!"]
# ::lemmas ["!", "!", "!"]
(c3-0 / thing
      :mode expressive)

# ::snt It looks too streamlined. The original was a bit more clunky and felt alot more appropriate to the style of the show
# ::tokens ["It", "looks", "too", "streamlined", ".", "The", "original", "was", "a", "bit", "more", "clunky", "and", "felt", "alot", "more", "appropriate", "to", "the", "style", "of", "the", "show"]
# ::lemmas ["it", "look", "too", "streamlined", ".", "the", "original", "be", "a", "bit", "more", "clunky", "and", "feel", "alot", "more", "appropriate", "to", "the", "style", "of", "the", "show"]
(c4-13 / multi-sentence
       :snt1 (c4-1 / look-02
                   :ARG0 (c4-18 / it)
                   :ARG1 (c4-6 / have-degree-91
                               :ARG1 c4-18
                               :ARG2 (c4-0 / streamline-01
                                           :ARG1 c4-18)
                               :ARG3 (c4-10 / too)))
       :snt2 (c4-9 / and
                   :op1 (c4-17 / have-degree-91
                               :ARG1 (c4-3 / original)
                               :ARG2 (c4-14 / clunky)
                               :ARG3 (c4-7 / more
                                           :quant (c4-12 / bit)))
                   :op2 (c4-16 / feel-01
                               :ARG1 (c4-8 / appropriate-02
                                           :ARG1 c4-3
                                           :ARG2 (c4-4 / style-01
                                                       :ARG1 (c4-2 / show-04))
                                           :ARG2-of (c4-5 / have-degree-91
                                                          :ARG1 c4-3
                                                          :ARG3 (c4-15 / more
                                                                       :quant (c4-11 / lot)))))))

# ::snt the robot looks familiar...
# ::tokens ["the", "robot", "looks", "familiar", "..."]
# ::lemmas ["the", "robot", "look", "familiar", "..."]
(c5-2 / look-02
      :ARG0 (c5-0 / robot)
      :ARG1 (c5-1 / familiarize-01
                  :ARG2 c5-0))

# ::snt That's a solid character (re)design.
# ::tokens ["That", "'s", "a", "solid", "character", "(", "re)design", "."]
# ::lemmas ["that", "be", "a", "solid", "character", "(", "re)design", "."]
(c6-0 / character
      :ARG1-of (c6-3 / solid-02)
      :domain (c6-1 / that)
      :ARG1-of (c6-2 / design-01))

# ::snt hmm
# ::tokens ["hmm"]
# ::lemmas ["hmm"]
(c7-0 / hmm
      :mode expressive)

# ::snt one only can dream
# ::tokens ["one", "only", "can", "dream"]
# ::lemmas ["one", "only", "can", "dream"]
(c8-2 / possible-01
      :ARG1 (c8-1 / dream-01
                  :ARG0 (c8-3 / one))
      :mod (c8-0 / only))

# ::snt This Cuacks never to spot.
# ::tokens ["This", "Cuacks", "never", "to", "spot", "."]
# ::lemmas ["this", "Cuacks", "never", "to", "spot", "."]
(c9-0 / Cuack
      :ARG1-of (c9-3 / spot-01
                     :time (c9-1 / ever)
                     :polarity -)
      :mod (c9-2 / this))

# ::snt THIS HAS TO STOP
# ::tokens ["THIS", "HAS", "TO", "STOP"]
# ::lemmas ["this", "have", "to", "stop"]
(c10-0 / obligate-01
       :ARG2 (c10-2 / stop-01
                    :ARG1 (c10-1 / this)))

# ::snt does than mean we get Darkwing Duck too?
# ::tokens ["does", "than", "mean", "we", "get", "Darkwing", "Duck", "too", "?"]
# ::lemmas ["do", "than", "mean", "we", "get", "Darkwing", "Duck", "too", "?"]
(c11-0 / mean-01
       :polarity (c11-5 / amr-unknown)
       :ARG2 (c11-6 / get-01
                    :ARG0 (c11-2 / we)
                    :ARG1 (c11-4 / animal
                                 :name (c11-1 / name
                                              :op1 "Darkwing"
                                              :op2 "Duck"))
                    :mod (c11-3 / too)))
