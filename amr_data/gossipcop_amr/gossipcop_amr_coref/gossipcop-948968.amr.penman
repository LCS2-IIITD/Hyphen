# ::snt Oy
# ::tokens ["Oy"]
# ::lemmas ["oy"]
(c1-0 / hey
      :mode expressive)

# ::snt who?
# ::tokens ["who", "?"]
# ::lemmas ["who", "?"]
(c2-0 / amr-unknown)

# ::snt Next!
# ::tokens ["Next", "!"]
# ::lemmas ["next", "!"]
(c3-0 / next
      :mode expressive)

# ::snt Congratulations!!!!!!!!
# ::tokens ["Congratulations", "!", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["congratulation", "!", "!", "!", "!", "!", "!", "!", "!"]
(c4-0 / congratulate-01
      :mode expressive)

# ::snt Lucky dude.
# ::tokens ["Lucky", "dude", "."]
# ::lemmas ["lucky", "dude", "."]
(c5-0 / dude
      :mod (c5-1 / lucky))

# ::snt He's chasing tail, she's chasing money. Perfect match!!
# ::tokens ["He", "'s", "chasing", "tail", ",", "she", "'s", "chasing", "money", ".", "Perfect", "match", "!", "!"]
# ::lemmas ["he", "be", "chase", "tail", ",", "she", "be", "chase", "money", ".", "perfect", "match", "!", "!"]
(c6-0 / multi-sentence
      :snt1 (c6-5 / chase-01
                  :ARG0 (c6-2 / he)
                  :ARG1 (c6-6 / tail))
      :snt2 (c6-8 / chase-01
                  :ARG0 (c6-1 / she)
                  :ARG1 (c6-3 / money))
      :snt3 (c6-7 / match-03
                  :ARG1-of (c6-4 / perfect-02)))

# ::snt I'm sorry but no matter what age, I just can't see looking at someone + years older than me and go ah Sexy and want some of that.
# ::tokens ["I", "'m", "sorry", "but", "no", "matter", "what", "age", ",", "I", "just", "ca", "n't", "see", "looking", "at", "someone", "+", "years", "older", "than", "me", "and", "go", "ah", "Sexy", "and", "want", "some", "of", "that", "."]
# ::lemmas ["i", "be", "sorry", "but", "no", "matter", "what", "age", ",", "i", "just", "can", "not", "see", "look", "at", "someone", "+", "years", "old", "than", "i", "and", "go", "ah", "Sexy", "and", "want", "some", "of", "that", "."]
(c7-15 / contrast-01
       :ARG1 (c7-0 / sorry-01
                   :ARG1 (c7-21 / i))
       :ARG2 (c7-19 / possible-01
                    :ARG1 (c7-4 / see-01
                                :ARG0 c7-21
                                :ARG1 (c7-12 / and
                                             :op1 (c7-2 / look-01
                                                        :ARG0 c7-21
                                                        :ARG1 (c7-3 / someone
                                                                    :ARG1-of (c7-8 / have-degree-91
                                                                                   :ARG2 (c7-5 / old)
                                                                                   :ARG3 (c7-14 / more
                                                                                                :quant (c7-9 / more-than
                                                                                                             :op1 (c7-11 / temporal-quantity
                                                                                                                         :unit (c7-6 / year)
                                                                                                                         :quant 1)))
                                                                                   :ARG4 c7-21)))
                                             :op2 (c7-13 / go-08
                                                         :ARG1 c7-3
                                                         :ARG2 (c7-17 / Sexy))
                                             :op3 (c7-20 / want-01
                                                         :ARG0 c7-3
                                                         :ARG1 (c7-1 / some
                                                                     :ARG1-of (c7-7 / include-91
                                                                                    :ARG2 c7-2)))))
                    :mod (c7-10 / just)
                    :ARG1-of (c7-18 / regardless-91
                                    :ARG2 (c7-16 / thing
                                                 :age-of c7-3))
                    :polarity -))

# ::snt Saggy balls daddy-o go go and sugar tipped tongue honey I need some money
# ::tokens ["Saggy", "balls", "daddy", "-", "o", "go", "go", "and", "sugar", "tipped", "tongue", "honey", "I", "need", "some", "money"]
# ::lemmas ["Saggy", "ball", "daddy", "-", "o", "go", "go", "and", "sugar", "tip", "tongue", "honey", "i", "need", "some", "money"]
(c8-2 / say-01
      :ARG0 (c8-6 / i)
      :ARG1 (c8-7 / and
                  :op1 (c8-8 / go-02
                             :ARG0 (c8-4 / person
                                         :ARG0-of (c8-3 / have-rel-role-91
                                                        :ARG1 c8-6
                                                        :ARG2 (c8-9 / daddy))
                                         :mod (c8-1 / ball
                                                    :mod (c8-0 / silly)))
                             :op2-of c8-7
                             :mode imperative)
                  :ARG0 c8-4
                  :mode imperative)
      :op3 (c8-5 / tongue
                 :ARG1-of (c8-10 / tip-01
                                 :ARG2 (c8-11 / sugar)))
      :ARG2 c8-4)

# ::snt Gross
# ::tokens ["Gross"]
# ::lemmas ["gross"]
(c10-0 / gross)

# ::snt Ewwww. Probably older than her father.
# ::tokens ["Ewwww", ".", "Probably", "older", "than", "her", "father", "."]
# ::lemmas ["Ewwww", ".", "probably", "old", "than", "her", "father", "."]
(c11-7 / probable
       :domain (c11-6 / have-degree-91
                      :ARG2 (c11-0 / old)
                      :ARG3 (c11-2 / more)
                      :ARG4 (c11-3 / person
                                   :ARG0-of (c11-8 / have-rel-role-91
                                                   :ARG1 (c11-4 / she)
                                                   :ARG2 (c11-1 / father))))
       :mod (c11-5 / ewww
                   :mode expressive))

# ::snt We all suffered from her Lyme disease
# ::tokens ["We", "all", "suffered", "from", "her", "Lyme", "disease"]
# ::lemmas ["we", "all", "suffer", "from", "her", "Lyme", "disease"]
(c12-2 / suffer-01
       :ARG0 (c12-3 / we
                    :mod (c12-4 / all))
       :ARG1 (c12-5 / disease
                    :name (c12-1 / name
                                 :op1 "Lyme"
                                 :op2 " disease")
                    :poss (c12-0 / she)))

# ::snt What a fool!! Did u see how supportive he was to his x, who is/was suffering from l lyme disease
# ::tokens ["What", "a", "fool", "!", "!", "Did", "u", "see", "how", "supportive", "he", "was", "to", "his", "x", ",", "who", "is", "/", "was", "suffering", "from", "l", "lyme", "disease"]
# ::lemmas ["what", "a", "fool", "!", "!", "do", "u", "see", "how", "supportive", "he", "be", "to", "his", "x", ",", "who", "be", "/", "be", "suffer", "from", "l", "lyme", "disease"]
(c13-3 / multi-sentence
       :snt1 (c13-0 / fool
                    :degree (c13-5 / so))
       :snt2 (c13-1 / see-01
                    :ARG0 (c13-2 / you)
                    :ARG1 (c13-11 / thing
                                  :degree-of (c13-13 / support-01
                                                     :ARG0 (c13-9 / he)
                                                     :ARG1 (c13-10 / person
                                                                   :mod (c13-8 / variable
                                                                               :name (c13-4 / name
                                                                                            :op1 "x"))
                                                                   :ARG0-of (c13-6 / suffer-01
                                                                                   :ARG1 (c13-12 / disease
                                                                                                 :name c13-4
                                                                                                 :op1 "l lyme"
                                                                                                 :op2 " disease"))))))
       :polarity (c13-7 / amr-unknown))

# ::snt Ok. I agree.
# ::tokens ["Ok", ".", "I", "agree", "."]
# ::lemmas ["ok", ".", "i", "agree", "."]
(c14-1 / agree-01
       :ARG0 (c14-0 / i))

# ::snt Im sure he will leave her the second she falls ill
# ::tokens ["I", "m", "sure", "he", "will", "leave", "her", "the", "second", "she", "falls", "ill"]
# ::lemmas ["i", "m", "sure", "he", "will", "leave", "she", "the", "second", "she", "fall", "ill"]
(c15-2 / sure-02
       :ARG0 (c15-6 / i)
       :ARG1 (c15-5 / leave-15
                    :ARG0 (c15-4 / he)
                    :ARG1 (c15-0 / she)
                    :time (c15-1 / fall-07
                                 :ARG1 c15-0
                                 :ARG2 (c15-3 / ill-01
                                              :ARG1 c15-0))))

# ::snt I use to like David actually found him attractive! But for some reason not so much now! This has weirded me out &amp; now I see him not so attractive anymore
# ::tokens ["I", "use", "to", "like", "David", "actually", "found", "him", "attractive", "!", "But", "for", "some", "reason", "not", "so", "much", "now", "!", "This", "has", "weirded", "me", "out", "&", "amp", ";", "now", "I", "see", "him", "not", "so", "attractive", "anymore"]
# ::lemmas ["i", "use", "to", "like", "David", "actually", "find", "he", "attractive", "!", "but", "for", "some", "reason", "not", "so", "much", "now", "!", "this", "have", "weirde", "i", "out", "&", "amp", ";", "now", "i", "see", "he", "not", "so", "attractive", "anymore"]
(c16-10 / multi-sentence
        :snt1 (c16-12 / contrast-01
                      :ARG1 (c16-15 / find-02
                                    :ARG0 (c16-21 / i)
                                    :ARG1 (c16-8 / attract-01
                                                 :ARG0 (c16-18 / person
                                                               :name (c16-16 / name
                                                                             :op1 "David"))
                                                 :ARG1 c16-21)
                                    :ARG1-of (c16-6 / actual-02)
                                    :time (c16-14 / use-03))
                      :ARG2 (c16-9 / cause-01
                                   :ARG0 (c16-17 / reason
                                                 :mod (c16-0 / some))
                                   :ARG1 (c16-5 / attract-01
                                                :ARG0 c16-18
                                                :ARG1 c16-21
                                                :quant (c16-4 / much
                                                              :degree (c16-2 / so))
                                                :time (c16-11 / now)
                                                :polarity -)))
        :snt2 (c16-22 / and
                      :op1 (c16-19 / weird-out-02
                                   :ARG0 (c16-7 / this)
                                   :ARG1 (c16-3 / i))
                      :op2 (c16-1 / see-01
                                  :ARG0 c16-3
                                  :ARG1 (c16-20 / attract-01
                                                :ARG0 c16-18
                                                :degree c16-2
                                                :polarity -)
                                  :time (c16-13 / anymore))))

# ::snt times is the charm
# ::tokens ["times", "is", "the", "charm"]
# ::lemmas ["time", "be", "the", "charm"]
(c17-0 / charm-01
       :ARG0 (c17-1 / time))

# ::snt Ummmmm
# ::tokens ["Ummmmm"]
# ::lemmas ["ummmmm"]
(c18-0 / ummmmm
       :mode expressive)

# ::snt He's .She's .She'll wait it out.
# ::tokens ["He", "'s", ".She", "'s", ".She'll", "wait", "it", "out", "."]
# ::lemmas ["he", "be", ".she", "'s", ".she'll", "wait", "it", "out", "."]
(c20-1 / multi-sentence
       :snt1 (c20-2 / she)
       :snt2 (c20-0 / she))

# ::snt , congrats to you &amp; David!!!
# ::tokens [",", "congrats", "to", "you", "&", "amp", ";", "David", "!", "!", "!"]
# ::lemmas [",", "congrat", "to", "you", "&", "amp", ";", "David", "!", "!", "!"]
(c21-2 / and
       :op1 (c21-4 / congratulate-01
                   :ARG0 (c21-6 / i)
                   :ARG1 (c21-5 / and
                                :op1 (c21-0 / you)
                                :op2 (c21-3 / person
                                            :name (c21-1 / name
                                                         :op1 "David")))
                   :op2-of c21-2)
       :ARG0 c21-6
       :ARG1 c21-3)

# ::snt and What do they have in common!
# ::tokens ["and", "What", "do", "they", "have", "in", "common", "!"]
# ::lemmas ["and", "what", "do", "they", "have", "in", "common", "!"]
(c22-3 / and
       :op2 (c22-0 / common-00
                   :ARG1 (c22-1 / they)
                   :ARG2 (c22-2 / amr-unknown)))

# ::snt Daddy issues
# ::tokens ["Daddy", "issues"]
# ::lemmas ["daddy", "issue"]
(c23-3 / issue-02
       :ARG0 (c23-2 / person
                    :ARG0-of (c23-1 / have-rel-role-91
                                    :ARG1 (c23-0 / i)
                                    :ARG2 (c23-4 / daddy))))

# ::snt Welp she better not catch as much as a cold or hes outta there
# ::tokens ["Welp", "she", "better", "not", "catch", "as", "much", "as", "a", "cold", "or", "he", "s", "outta", "there"]
# ::lemmas ["welp", "she", "well", "not", "catch", "as", "much", "as", "a", "cold", "or", "he", "s", "outta", "there"]
(c24-0 / or
       :op1 (c24-6 / catch-02
                   :ARG0 (c24-3 / she)
                   :ARG1 (c24-10 / cold-01)
                   :ARG1-of (c24-5 / have-quant-91
                                   :ARG2 (c24-2 / much)
                                   :ARG3 (c24-4 / equal)
                                   :ARG4 c24-10)
                   :polarity -)
       :op2 (c24-1 / out-06
                   :ARG1 (c24-8 / he)
                   :ARG2 (c24-9 / there))
       :mod (c24-7 / welp
                   :mode expressive))

# ::snt How many is that for Foster?
# ::tokens ["How", "many", "is", "that", "for", "Foster", "?"]
# ::lemmas ["how", "many", "be", "that", "for", "Foster", "?"]
(c25-3 / that
       :beneficiary (c25-2 / person
                           :name (c25-1 / name
                                        :op1 "Foster"))
       :quant (c25-0 / amr-unknown))

# ::snt $$$$$$$
# ::tokens ["$", "$", "$", "$", "$", "$", "$"]
# ::lemmas ["$", "$", "$", "$", "$", "$", "$"]
(c26-0 / $$$$$$)

# ::snt It wont last David foster changes wives like he does his underwear.
# ::tokens ["It", "wo", "nt", "last", "David", "foster", "changes", "wives", "like", "he", "does", "his", "underwear", "."]
# ::lemmas ["it", "will", "not", "last", "David", "foster", "change", "wife", "like", "he", "do", "his", "underwear", "."]
(c27-4 / last-04
       :ARG1 (c27-6 / change-01
                    :ARG0 (c27-5 / person
                                 :name (c27-0 / name
                                              :op1 "David"
                                              :op2 "Foster"))
                    :ARG1 (c27-1 / person
                                 :ARG0-of (c27-3 / have-rel-role-91
                                                 :ARG2 (c27-7 / wife)))
                    :ARG1-of (c27-2 / resemble-01
                                    :ARG2 (c27-9 / change-01
                                                 :ARG0 c27-5
                                                 :ARG1 (c27-8 / underwear
                                                              :poss c27-5))))
       :polarity -)

# ::snt I think Celine Dion really loved her husband though
# ::tokens ["I", "think", "Celine", "Dion", "really", "loved", "her", "husband", "though"]
# ::lemmas ["i", "think", "Celine", "Dion", "really", "love", "her", "husband", "though"]
(c28-9 / think-01
       :ARG0 (c28-8 / i)
       :ARG1 (c28-6 / love-01
                    :ARG0 (c28-5 / person
                                 :name (c28-0 / name
                                              :op1 "Celine"
                                              :op2 "Dion"))
                    :ARG1 (c28-1 / person
                                 :ARG0-of (c28-4 / have-rel-role-91
                                                 :ARG1 c28-5
                                                 :ARG2 (c28-7 / husband)))
                    :ARG1-of (c28-2 / real-04))
       :ARG1-of (c28-3 / have-concession-91))

# ::snt Dude find a chick your own age.
# ::tokens ["Dude", "find", "a", "chick", "your", "own", "age", "."]
# ::lemmas ["dude", "find", "a", "chick", "your", "own", "age", "."]
(c29-0 / find-01
       :ARG0 (c29-4 / dude)
       :ARG1 (c29-2 / chick
                    :age (c29-3 / temporal-quantity
                                :age-of (c29-1 / you))))

# ::snt Shes just using him for his money
# ::tokens ["She", "s", "just", "using", "him", "for", "his", "money"]
# ::lemmas ["she", "s", "just", "use", "he", "for", "his", "money"]
(c30-1 / use-01
       :ARG0 (c30-3 / he
                    :ARG1-of c30-1)
       :ARG2 (c30-2 / money
                    :poss c30-3)
       :mod (c30-0 / just))

# ::snt naulit?
# ::tokens ["naulit", "?"]
# ::lemmas ["naulit", "?"]
(c31-0 / it
       :polarity (c31-1 / amr-unknown))

# ::snt You know It!
# ::tokens ["You", "know", "It", "!"]
# ::lemmas ["you", "know", "it", "!"]
(c32-1 / know-01
       :ARG0 (c32-0 / you)
       :ARG1 (c32-2 / it))

# ::snt She must really want to get divorced. That will last about mos. if shes lucky.
# ::tokens ["She", "must", "really", "want", "to", "get", "divorced", ".", "That", "will", "last", "about", "mos", ".", "if", "she", "s", "lucky", "."]
# ::lemmas ["she", "must", "really", "want", "to", "get", "divorce", ".", "that", "will", "last", "about", "mos", ".", "if", "she", "s", "lucky", "."]
(c34-2 / multi-sentence
       :snt1 (c34-0 / obligate-01
                    :ARG2 (c34-8 / want-01
                                 :ARG0 (c34-3 / she)
                                 :ARG1 (c34-10 / divorce-01
                                               :ARG0 c34-3)
                                 :ARG1-of (c34-4 / real-04)))
       :snt2 (c34-7 / last-01
                    :ARG1 (c34-9 / that)
                    :ARG2 (c34-5 / about
                                 :op1 (c34-12 / temporal-quantity
                                              :unit (c34-6 / month)
                                              :quant 1))
                    :condition (c34-11 / lucky
                                       :domain (c34-1 / she))))

# ::snt Why does he get married?
# ::tokens ["Why", "does", "he", "get", "married", "?"]
# ::lemmas ["why", "do", "he", "get", "marry", "?"]
(c35-2 / marry-01
       :ARG1 (c35-1 / he)
       :ARG1-of (c35-0 / cause-01
                       :ARG0 (c35-3 / amr-unknown)))

# ::snt I kind of liked the old Hadid lady
# ::tokens ["I", "kind", "of", "liked", "the", "old", "Hadid", "lady"]
# ::lemmas ["i", "kind", "of", "like", "the", "old", "Hadid", "lady"]
(c36-2 / like-01
       :ARG0 (c36-4 / i)
       :ARG1 (c36-5 / lady
                    :name (c36-1 / name
                                 :op1 "Hadid")
                    :mod (c36-0 / old))
       :degree (c36-3 / kind-of))

# ::snt Im sure this one will be the keeper! Itll work for sure
# ::tokens ["I", "m", "sure", "this", "one", "will", "be", "the", "keeper", "!", "It", "ll", "work", "for", "sure"]
# ::lemmas ["i", "m", "sure", "this", "one", "will", "be", "the", "keeper", "!", "it", "ll", "work", "for", "sure"]
(c37-2 / multi-sentence
       :snt1 (c37-3 / sure-02
                    :ARG0 (c37-7 / i)
                    :ARG1 (c37-5 / keeper
                                 :domain (c37-0 / one
                                                :mod (c37-8 / this))))
       :snt2 (c37-6 / work-09
                    :ARG1 (c37-4 / it)
                    :ARG1-of (c37-1 / sure-02)))

# ::snt Big head????
# ::tokens ["Big", "head", "?", "?", "?", "?"]
# ::lemmas ["big", "head", "?", "?", "?", "?"]
(c38-1 / head
       :polarity (c38-2 / amr-unknown)
       :mod (c38-0 / big))

# ::snt If they're happy why is it gross? (Though he IS probably a loser...)
# ::tokens ["If", "they", "'re", "happy", "why", "is", "it", "gross", "?", "(", "Though", "he", "IS", "probably", "a", "loser", "...", ")"]
# ::lemmas ["if", "they", "be", "happy", "why", "be", "it", "gross", "?", "(", "though", "he", "be", "probably", "a", "loser", "...", ")"]
(c39-0 / multi-sentence
       :snt1 (c39-9 / gross-05
                    :ARG1 (c39-7 / it)
                    :ARG1-of (c39-4 / cause-01
                                    :ARG0 (c39-8 / amr-unknown))
                    :condition (c39-1 / happy-01
                                      :ARG1 (c39-6 / they)))
       :snt2 (c39-2 / lose-03
                    :ARG0 (c39-5 / he)
                    :mod (c39-3 / probable)))

# ::snt And that's just gross!
# ::tokens ["And", "that", "'s", "just", "gross", "!"]
# ::lemmas ["and", "that", "be", "just", "gross", "!"]
(c40-3 / and
       :op2 (c40-0 / gross-05
                   :ARG1 (c40-2 / that)
                   :mod (c40-1 / just)))

# ::snt Woah
# ::tokens ["Woah"]
# ::lemmas ["Woah"]
(c41-0 / Woah
       :mode expressive)

# ::snt For some reason my knee-jerk reaction was "Ewwe, gross!"
# ::tokens ["For", "some", "reason", "my", "knee", "-", "jerk", "reaction", "was", "\"", "Ewwe", ",", "gross", "!", "\""]
# ::lemmas ["for", "some", "reason", "my", "knee", "-", "jerk", "reaction", "be", "\"", "ewwe", ",", "gross", "!", "\""]
(c42-1 / react-01
       :ARG0 (c42-5 / i)
       :ARG2 (c42-6 / gross-05
                    :ARG1 (c42-3 / we)
                    :mode expressive)
       :mod (c42-2 / knee)
       :ARG1-of (c42-4 / cause-01
                       :ARG0 (c42-7 / reason
                                    :mod (c42-0 / some))))

# ::snt This is gross. Why does she have a thing for old men? Does she even have a career?
# ::tokens ["This", "is", "gross", ".", "Why", "does", "she", "have", "a", "thing", "for", "old", "men", "?", "Does", "she", "even", "have", "a", "career", "?"]
# ::lemmas ["this", "be", "gross", ".", "why", "do", "she", "have", "a", "thing", "for", "old", "man", "?", "do", "she", "even", "have", "a", "career", "?"]
(c43-2 / multi-sentence
       :snt1 (c43-11 / gross-05
                     :ARG1 (c43-9 / this))
       :snt2 (c43-7 / cause-01
                    :ARG0 (c43-10 / amr-unknown)
                    :ARG1 (c43-5 / have-03
                                 :ARG0 (c43-3 / she)
                                 :ARG1 (c43-13 / thing
                                               :beneficiary (c43-6 / man
                                                                   :mod (c43-0 / old)))))
       :snt3 (c43-8 / have-03
                    :ARG0 (c43-1 / she)
                    :ARG1 (c43-12 / career)
                    :mod (c43-4 / even)))

# ::snt Is she trying to look more his age in this photo?
# ::tokens ["Is", "she", "trying", "to", "look", "more", "his", "age", "in", "this", "photo", "?"]
# ::lemmas ["be", "she", "try", "to", "look", "more", "his", "age", "in", "this", "photo", "?"]
(c44-5 / try-01
       :polarity (c44-7 / amr-unknown)
       :ARG0 (c44-1 / she)
       :ARG1 (c44-3 / look-01
                    :ARG0 c44-1
                    :ARG1 (c44-6 / age-01
                                 :ARG1 (c44-2 / he)
                                 :ARG2 (c44-0 / more))
                    :location (c44-4 / photo
                                     :mod (c44-8 / this))))

# ::snt Iron clad Pre-Nup. I wonder what happened in McPhee childhood.
# ::tokens ["Iron", "clad", "Pre", "-", "Nup", ".", "I", "wonder", "what", "happened", "in", "McPhee", "childhood", "."]
# ::lemmas ["iron", "clothe", "Pre", "-", "Nup", ".", "i", "wonder", "what", "happen", "in", "McPhee", "childhood", "."]
(c45-1 / multi-sentence
       :snt1 (c45-6 / person
                    :name (c45-0 / name
                                 :op1 "Pre-Nup")
                    :ARG1-of (c45-7 / clad-01
                                    :ARG2 (c45-9 / iron)))
       :snt2 (c45-8 / wonder-01
                    :ARG0 (c45-3 / i)
                    :ARG1 (c45-4 / event
                                 :time (c45-10 / childhood
                                               :poss (c45-2 / person
                                                            :name (c45-5 / name
                                                                         :op1 "McPhee"))))))

# ::snt Gross. And embarrassing
# ::tokens ["Gross", ".", "And", "embarrassing"]
# ::lemmas ["Gross", ".", "and", "embarrassing"]
(c46-2 / multi-sentence
       :snt1 (c46-0 / gross-05)
       :snt2 (c46-3 / and
                    :op2 (c46-1 / embarrass-01)))

# ::snt Give it a month
# ::tokens ["Give", "it", "a", "month"]
# ::lemmas ["give", "it", "a", "month"]
(c47-4 / give-01
       :ARG0 (c47-0 / you)
       :ARG1 (c47-3 / temporal-quantity
                    :unit (c47-1 / month)
                    :quant 1)
       :ARG2 (c47-2 / it)
       :mode imperative)

# ::snt What is that saying about a fool and his money?
# ::tokens ["What", "is", "that", "saying", "about", "a", "fool", "and", "his", "money", "?"]
# ::lemmas ["what", "be", "that", "say", "about", "a", "fool", "and", "his", "money", "?"]
(c48-2 / say-01
       :ARG1 (c48-4 / amr-unknown)
       :ARG3 (c48-3 / and
                    :op1 (c48-0 / fool)
                    :op2 (c48-1 / money
                                :poss c48-0)))

# ::snt I used to like me some Katharine on Idol...she out here securing the bag
# ::tokens ["I", "used", "to", "like", "me", "some", "Katharine", "on", "Idol", "...", "she", "out", "here", "securing", "the", "bag"]
# ::lemmas ["i", "use", "to", "like", "i", "some", "Katharine", "on", "Idol", "...", "she", "out", "here", "secure", "the", "bag"]
(c50-7 / like-01
       :ARG0 (c50-11 / i)
       :ARG1 (c50-6 / person
                    :name (c50-3 / name
                                 :op1 "Katharine")
                    :mod (c50-4 / some)
                    :location (c50-2 / broadcast-program
                                     :name (c50-5 / name
                                                  :op1 "Idol")))
       :time (c50-12 / use-03)
       :ARG1-of (c50-10 / cause-01
                        :ARG0 (c50-0 / secure-01
                                     :ARG0 c50-6
                                     :ARG1 (c50-8 / bag)))
       :location (c50-9 / here
                        :mod (c50-1 / out)))
