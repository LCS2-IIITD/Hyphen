# ::snt A lot of stuff out in the world about these two. Dont always believe what you read....
# ::tokens ["A", "lot", "of", "stuff", "out", "in", "the", "world", "about", "these", "two", ".", "Do", "nt", "always", "believe", "what", "you", "read", "...."]
# ::lemmas ["a", "lot", "of", "stuff", "out", "in", "the", "world", "about", "these", "two", ".", "do", "not", "always", "believe", "what", "you", "read", "...."]
(c1-3 / multi-sentence
      :snt1 (c1-4 / stuff
                  :quant (c1-7 / lot)
                  :location (c1-0 / out
                                  :op1 (c1-8 / world))
                  :topic (c1-10 / thing
                                :mod (c1-11 / this)
                                :quant 2))
      :snt2 (c1-1 / believe-01
                  :ARG0 (c1-2 / you)
                  :ARG1 (c1-9 / thing
                              :ARG1-of (c1-5 / read-01
                                             :ARG0 c1-2))
                  :time (c1-6 / always)
                  :polarity -
                  :mode imperative))

# ::snt When will men learn to man up and talk to their s/o when theres a problem (especially if theyve been together long and/or have kids) instead of being a piece of shit by resorting to cheating?
# ::tokens ["When", "will", "men", "learn", "to", "man", "up", "and", "talk", "to", "their", "s", "/", "o", "when", "there", "s", "a", "problem", "(", "especially", "if", "they", "ve", "been", "together", "long", "and/or", "have", "kids", ")", "instead", "of", "being", "a", "piece", "of", "shit", "by", "resorting", "to", "cheating", "?"]
# ::lemmas ["when", "will", "man", "learn", "to", "man", "up", "and", "talk", "to", "their", "s", "/", "o", "when", "there", "s", "a", "problem", "(", "especially", "if", "they", "ve", "be", "together", "long", "and/or", "have", "kid", ")", "instead", "of", "be", "a", "piece", "of", "shit", "by", "resort", "to", "cheat", "?"]
(c2-1 / learn-01
      :ARG0 (c2-12 / man)
      :ARG1 (c2-9 / and-or
                  :op1 c2-12
                  :mod (c2-16 / up))
      :op2 (c2-10 / talk-01
                  :ARG0 c2-12
                  :ARG2 (c2-19 / person
                               :ARG0-of (c2-6 / have-rel-role-91
                                              :ARG1 c2-12
                                              :ARG2 (c2-0 / sister))))
      :time (c2-13 / problem
                   :condition c2-9
                   :op1 (c2-15 / together
                               :domain c2-12
                               :ARG1-of (c2-11 / long-03))
                   :op2 (c2-20 / have-05
                               :ARG0 c2-12
                               :ARG1 (c2-3 / person
                                           :ARG0-of (c2-5 / have-rel-role-91
                                                          :ARG1 c2-12
                                                          :ARG2 (c2-7 / kid))))
                   :mod (c2-18 / especially))
      :ARG1-of (c2-21 / instead-of-91
                      :ARG2 (c2-2 / piece
                                  :consist-of (c2-4 / shit)
                                  :domain c2-12
                                  :manner (c2-17 / resort-01
                                                 :ARG0 c2-12
                                                 :ARG1 (c2-14 / cheat-03
                                                              :ARG0 c2-12))))
      :time (c2-8 / amr-unknown))

# ::snt What the woman who was that childs teacher, any faith in women
# ::tokens ["What", "the", "woman", "who", "was", "that", "childs", "teacher", ",", "any", "faith", "in", "women"]
# ::lemmas ["what", "the", "woman", "who", "be", "that", "child", "teacher", ",", "any", "faith", "in", "woman"]
(c3-1 / multi-sentence
      :snt1 (c3-4 / woman
                  :ARG0-of (c3-6 / teach-01
                                 :ARG2 (c3-5 / child
                                             :mod (c3-7 / that))))
      :snt2 (c3-0 / faith
                  :mod (c3-2 / any)
                  :beneficiary (c3-3 / woman)))

# ::snt More than once! He's been having affairs for years
# ::tokens ["More", "than", "once", "!", "He", "'s", "been", "having", "affairs", "for", "years"]
# ::lemmas ["more", "than", "once", "!", "he", "be", "be", "have", "affair", "for", "years"]
(c4-1 / multi-sentence
      :snt1 (c4-2 / more-than
                  :op1 1)
      :snt2 (c4-5 / affair-01
                  :ARG0 (c4-3 / he)
                  :duration (c4-6 / multiple
                                  :op1 (c4-4 / temporal-quantity
                                             :unit (c4-0 / year)
                                             :quant 1))))

# ::snt Its rumoured e already has a secret love child
# ::tokens ["Its", "rumoured", "e", "already", "has", "a", "secret", "love", "child"]
# ::lemmas ["its", "rumour", "e", "already", "have", "a", "secret", "love", "child"]
(c5-1 / ruminate-01
      :ARG1 (c5-2 / have-03
                  :ARG0 (c5-5 / it)
                  :ARG1 (c5-4 / child
                              :ARG0-of (c5-3 / love-01)
                              :mod (c5-0 / secret))
                  :time (c5-6 / already)))

# ::snt Bet you're crap in bed
# ::tokens ["Bet", "you", "'re", "crap", "in", "bed"]
# ::lemmas ["bet", "you", "be", "crap", "in", "bed"]
(c6-0 / bet-01
      :ARG0 (c6-4 / i)
      :ARG2 (c6-3 / crap-01
                  :ARG1 (c6-1 / you)
                  :location (c6-2 / bed)))

# ::snt Agreed, more directed at and her misandrist views
# ::tokens ["Agreed", ",", "more", "directed", "at", "and", "her", "misandrist", "views"]
# ::lemmas ["agree", ",", "more", "direct", "at", "and", "her", "misandrist", "view"]
(c7-3 / and
      :op1 (c7-11 / agree-01
                  :ARG0 (c7-9 / i))
      :op2 (c7-6 / have-degree-91
                 :ARG1 (c7-10 / thing
                              :ARG2-of (c7-4 / view-02
                                             :ARG0 (c7-2 / she)
                                             :ARG1 (c7-8 / and
                                                         :op1 (c7-0 / misandrist)
                                                         :op2 (c7-5 / religious-group
                                                                    :name (c7-1 / name
                                                                                :op1 "Christian")))))
                 :ARG2 (c7-12 / direct-01
                              :ARG1 c7-10)
                 :ARG3 (c7-7 / more)))

# ::snt Why would you presume that? Theyre both slags. End of story.
# ::tokens ["Why", "would", "you", "presume", "that", "?", "They", "re", "both", "slags", ".", "End", "of", "story", "."]
# ::lemmas ["why", "would", "you", "presume", "that", "?", "they", "re", "both", "slag", ".", "end", "of", "story", "."]
(c8-3 / multi-sentence
      :snt1 (c8-7 / presume-01
                  :ARG0 (c8-2 / you)
                  :ARG1 (c8-9 / that)
                  :ARG1-of (c8-8 / cause-01
                                 :ARG0 (c8-5 / amr-unknown)))
      :snt2 (c8-4 / slag
                  :domain (c8-10 / they
                                 :mod (c8-1 / both)))
      :snt3 (c8-6 / end-01
                  :ARG1 (c8-0 / story)))

# ::snt Presume you approve of women sleeping with married men? Im sure shes not an attention seeking slag.
# ::tokens ["Presume", "you", "approve", "of", "women", "sleeping", "with", "married", "men", "?", "I", "m", "sure", "she", "s", "not", "an", "attention", "seeking", "slag", "."]
# ::lemmas ["presume", "you", "approve", "of", "woman", "sleep", "with", "married", "man", "?", "i", "m", "sure", "she", "s", "not", "an", "attention", "seek", "slag", "."]
(c9-2 / multi-sentence
      :snt1 (c9-7 / presume-01
                  :polarity (c9-11 / amr-unknown)
                  :ARG1 (c9-10 / approve-01
                               :ARG0 (c9-1 / you)
                               :ARG1 (c9-3 / sleep-02
                                           :ARG0 (c9-8 / woman)
                                           :ARG1 (c9-6 / man
                                                       :ARG1-of (c9-13 / marry-01)))))
      :snt2 (c9-0 / sure-02
                  :ARG0 (c9-12 / i)
                  :ARG1 (c9-14 / slag
                               :ARG0-of (c9-4 / seek-01
                                              :ARG1 (c9-9 / attend-02))
                               :domain (c9-5 / she)
                               :polarity -)))

# ::snt Theyre standing, Ive got left if youre interested
# ::tokens ["They", "re", "standing", ",", "I", "ve", "got", "left", "if", "you", "re", "interested"]
# ::lemmas ["they", "re", "stand", ",", "i", "ve", "got", "leave", "if", "you", "re", "interested"]
(c10-1 / multi-sentence
       :snt1 (c10-2 / stand-11
                    :ARG0 (c10-7 / they))
       :snt2 (c10-4 / have-condition-91
                    :ARG1 (c10-5 / leave-17
                                 :ARG0 (c10-6 / i))
                    :ARG2 (c10-3 / interest-01
                                 :ARG1 (c10-0 / you))))

# ::snt Seated or?
# ::tokens ["Seated", "or", "?"]
# ::lemmas ["seat", "or", "?"]
(c11-2 / amr-choice
       :op1 (c11-0 / Seated-02)
       :op2 (c11-1 / conclude-01))

# ::snt men who cheat/ think like this don't deserve to be happy
# ::tokens ["men", "who", "cheat/", "think", "like", "this", "do", "n't", "deserve", "to", "be", "happy"]
# ::lemmas ["man", "who", "cheat/", "think", "like", "this", "do", "not", "deserve", "to", "be", "happy"]
(c12-5 / deserve-01
       :ARG0 (c12-0 / man
                    :ARG0-of (c12-2 / cheat-03)
                    :ARG0-of (c12-3 / think-01
                                    :manner (c12-4 / this)))
       :ARG1 (c12-1 / happy-01
                    :ARG1 c12-0)
       :polarity -)

# ::snt Nah Im gone how about Deskia
# ::tokens ["Nah", "I", "m", "gone", "how", "about", "Deskia"]
# ::lemmas ["Nah", "i", "m", "go", "how", "about", "Deskia"]
(c13-1 / multi-sentence
       :snt1 (c13-6 / go-02
                    :ARG0 (c13-5 / i)
                    :mod (c13-0 / nah))
       :snt2 (c13-2 / suggest-01
                    :ARG1 (c13-4 / product
                                 :name (c13-3 / name
                                              :op1 "Dia"))))

# ::snt My money is on staff room or boiler-room
# ::tokens ["My", "money", "is", "on", "staff", "room", "or", "boiler", "-", "room"]
# ::lemmas ["my", "money", "be", "on", "staff", "room", "or", "boiler", "-", "room"]
(c14-5 / put-01
       :ARG0 (c14-6 / i)
       :ARG1 (c14-2 / money
                    :poss c14-6)
       :ARG2 (c14-0 / or
                    :op1 (c14-4 / room
                                :mod (c14-3 / staff))
                    :op2 (c14-7 / room
                                :mod (c14-1 / boiler))))

# ::snt My phone is a shit show
# ::tokens ["My", "phone", "is", "a", "shit", "show"]
# ::lemmas ["my", "phone", "be", "a", "shit", "show"]
(c15-3 / show-04
       :ARG1 (c15-1 / phone
                    :poss (c15-2 / i))
       :mod (c15-0 / shit))

# ::snt Tweet banged youre famous now
# ::tokens ["Tweet", "banged", "you", "re", "famous", "now"]
# ::lemmas ["Tweet", "bang", "you", "re", "famous", "now"]
(c17-1 / banged-02
       :ARG0 (c17-4 / thing
                    :ARG1-of (c17-5 / tweet-01))
       :ARG1 (c17-0 / fame-01
                    :ARG1 (c17-2 / you)
                    :time (c17-3 / now)))

# ::snt Same yeah!! I am so lost. H e l p.
# ::tokens ["Same", "yeah", "!", "!", "I", "am", "so", "lost", ".", "H", "e", "l", "p."]
# ::lemmas ["same", "yeah", "!", "!", "i", "be", "so", "lost", ".", "h", "e", "l", "p."]
(c18-1 / multi-sentence
       :snt1 (c18-2 / same-01
                    :mode expressive)
       :snt2 (c18-3 / lose-02
                    :ARG1 (c18-5 / i)
                    :degree (c18-0 / so))
       :snt3 (c18-6 / laugh-01
                    :ARG0 c18-5
                    :mode expressive)
       :manner (c18-4 / loud))

# ::snt Loooooool honestly. I think they just hate women its ok
# ::tokens ["Loooooool", "honestly", ".", "I", "think", "they", "just", "hate", "women", "its", "ok"]
# ::lemmas ["Loooooool", "honestly", ".", "i", "think", "they", "just", "hate", "woman", "its", "ok"]
(c19-2 / multi-sentence
       :snt1 (c19-0 / ool
                    :ARG1-of (c19-3 / honest-01)
                    :mode expressive)
       :snt2 (c19-8 / think-01
                    :ARG0 (c19-7 / i)
                    :ARG1 (c19-1 / okay-04
                                 :ARG1 (c19-5 / hate-01
                                              :ARG0 (c19-9 / they)
                                              :ARG1 (c19-4 / woman)
                                              :mod (c19-6 / just)))))

# ::snt They were heard arguing there all day
# ::tokens ["They", "were", "heard", "arguing", "there", "all", "day"]
# ::lemmas ["they", "be", "hear", "argue", "there", "all", "day"]
(c20-1 / hear-01
       :ARG1 (c20-0 / argue-02
                    :ARG0 (c20-3 / they)
                    :location (c20-5 / there)
                    :duration (c20-4 / day
                                     :mod (c20-2 / all))))

# ::snt Lol use the tweet to sell your ticket
# ::tokens ["Lol", "use", "the", "tweet", "to", "sell", "your", "ticket"]
# ::lemmas ["Lol", "use", "the", "tweet", "to", "sell", "your", "ticket"]
(c21-6 / use-01
       :ARG0 (c21-0 / you)
       :ARG1 (c21-3 / tweet-01)
       :ARG2 (c21-1 / sell-01
                    :ARG0 c21-0
                    :ARG1 (c21-4 / ticket
                                 :poss c21-0))
       :ARG2-of (c21-2 / laugh-01
                       :manner (c21-5 / loud)
                       :mode expressive)
       :mode expressive)

# ::snt Lol to men? David Beckham is just one man
# ::tokens ["Lol", "to", "men", "?", "David", "Beckham", "is", "just", "one", "man"]
# ::lemmas ["Lol", "to", "man", "?", "David", "Beckham", "be", "just", "one", "man"]
(c22-0 / multi-sentence
       :snt1 (c22-3 / laugh-01
                    :ARG0 (c22-6 / i)
                    :manner (c22-7 / loud)
                    :beneficiary (c22-2 / man)
                    :mode expressive)
       :snt2 (c22-8 / man
                    :domain (c22-4 / person
                                   :name (c22-1 / name
                                                :op1 "David"
                                                :op2 "Beckham"))
                    :mod (c22-5 / just)
                    :quant 1))

# ::snt wtf
# ::tokens ["wtf"]
# ::lemmas ["wtf"]
(c23-1 / amr-unknown
       :mod (c23-0 / fuck))

# ::snt You realise he cheated on her before right?
# ::tokens ["You", "realise", "he", "cheated", "on", "her", "before", "right", "?"]
# ::lemmas ["you", "realise", "he", "cheat", "on", "she", "before", "right", "?"]
(c25-3 / realize-01
       :ARG0 (c25-1 / you)
       :ARG1 (c25-5 / cheat-03
                    :ARG0 (c25-4 / he)
                    :ARG1 (c25-2 / she))
       :time (c25-0 / before)
       :ARG1-of (c25-6 / request-confirmation-91
                       :ARG2 c25-1))

# ::snt Takes two to Tango, what sort of woman sleeps with someone elses husband?
# ::tokens ["Takes", "two", "to", "Tango", ",", "what", "sort", "of", "woman", "sleeps", "with", "someone", "elses", "husband", "?"]
# ::lemmas ["take", "two", "to", "Tango", ",", "what", "sort", "of", "woman", "sleep", "with", "someone", "else", "husband", "?"]
(c26-4 / and
       :op1 (c26-11 / take-10
                    :ARG1 (c26-12 / thing
                                  :quant 2)
                    :ARG2 (c26-7 / person
                                 :name (c26-1 / name
                                              :op1 "Tango")))
       :op2 (c26-3 / sleep-02
                   :ARG0 (c26-8 / woman
                                :mod (c26-0 / sort
                                            :mod (c26-10 / amr-unknown)))
                   :accompanier (c26-2 / person
                                       :ARG0-of (c26-6 / have-rel-role-91
                                                       :ARG1 (c26-13 / someone
                                                                     :mod (c26-5 / else))
                                                       :ARG2 (c26-9 / husband)))))

# ::snt Wimmin of course are all virtuous angels made of sugar &amp; spice &amp; all things nice
# ::tokens ["Wimmin", "of", "course", "are", "all", "virtuous", "angels", "made", "of", "sugar", "&", "amp", ";", "spice", "&", "amp", ";", "all", "things", "nice"]
# ::lemmas ["Wimmin", "of", "course", "be", "all", "virtuous", "angel", "make", "of", "sugar", "&", "amp", ";", "spice", "&", "amp", ";", "all", "thing", "nice"]
(c27-11 / angel
        :domain (c27-7 / person
                       :name (c27-3 / name
                                    :op1 "Wimmin"))
        :mod (c27-5 / virtue)
        :ARG1-of (c27-2 / make-01
                        :ARG2 (c27-10 / and
                                      :op1 (c27-4 / sugar)
                                      :op2 (c27-8 / amp)
                                      :op3 (c27-0 / spice)
                                      :op4 (c27-9 / thing
                                                  :mod (c27-12 / all)
                                                  :ARG1-of (c27-6 / nice-01))))
        :mod (c27-1 / of-course))

# ::snt This tweet didnt get the credit it deserved
# ::tokens ["This", "tweet", "did", "nt", "get", "the", "credit", "it", "deserved"]
# ::lemmas ["this", "tweet", "do", "not", "get", "the", "credit", "it", "deserve"]
(c28-4 / get-01
       :ARG0 (c28-1 / thing
                    :ARG1-of (c28-3 / tweet-01)
                    :mod (c28-2 / this))
       :ARG1 (c28-0 / credit-01
                    :ARG1 c28-1
                    :ARG1-of (c28-5 / deserve-01
                                    :ARG0 c28-1))
       :polarity -)

# ::snt London!
# ::tokens ["London", "!"]
# ::lemmas ["London", "!"]
(c29-0 / city
       :name (c29-1 / name
                    :op1 "London"))

# ::snt Hi whereabouts please?
# ::tokens ["Hi", "whereabouts", "please", "?"]
# ::lemmas ["hi", "whereabouts", "please", "?"]
(c30-0 / whereabouts
       :polarity (c30-1 / amr-unknown)
       :polite +)

# ::snt Im selling tickets for on Saturday th of June. All standing. each. Please message if interested! Please RT
# ::tokens ["I", "m", "selling", "tickets", "for", "on", "Saturday", "th", "of", "June", ".", "All", "standing", ".", "each", ".", "Please", "message", "if", "interested", "!", "Please", "RT"]
# ::lemmas ["i", "m", "sell", "ticket", "for", "on", "Saturday", "th", "of", "June", ".", "all", "stand", ".", "each", ".", "please", "message", "if", "interested", "!", "please", "rt"]
(c31-2 / multi-sentence
       :snt1 (c31-3 / sell-01
                    :ARG0 (c31-9 / i)
                    :ARG1 (c31-10 / ticket)
                    :time (c31-12 / date-entity
                                  :month 6
                                  :day 4))
       :snt2 (c31-0 / stand-01
                    :ARG1 (c31-5 / all)
                    :mod (c31-7 / each))
       :snt3 (c31-8 / message-01
                    :ARG0 (c31-1 / you)
                    :condition (c31-4 / interest-01
                                      :ARG1 c31-1)
                    :mode imperative
                    :polite +)
       :snt4 (c31-6 / reply-01
                    :ARG0 (c31-11 / you)
                    :mode imperative
                    :polite +))

# ::snt It's % true. Breaking news within next few days
# ::tokens ["It", "'s", "%", "true", ".", "Breaking", "news", "within", "next", "few", "days"]
# ::lemmas ["it", "be", "%", "true", ".", "break", "news", "within", "next", "few", "days"]
(c32-2 / multi-sentence
       :snt1 (c32-8 / true-01
                    :ARG1 (c32-7 / it)
                    :degree (c32-6 / percentage-entity
                                   :value 80))
       :snt2 (c32-1 / break-13
                    :ARG1 (c32-3 / news)
                    :time (c32-4 / after
                                 :op1 (c32-5 / now)
                                 :quant (c32-0 / few
                                               :op1 (c32-10 / temporal-quantity
                                                            :unit (c32-9 / day)
                                                            :quant 1)))))

# ::snt Speak for yourself!
# ::tokens ["Speak", "for", "yourself", "!"]
# ::lemmas ["speak", "for", "yourself", "!"]
(c33-2 / speak-01
       :ARG0 (c33-1 / you)
       :mod (c33-0 / by-oneself)
       :mode imperative)

# ::snt Married women are seriously crap at putting out.
# ::tokens ["Married", "women", "are", "seriously", "crap", "at", "putting", "out", "."]
# ::lemmas ["married", "woman", "be", "seriously", "crap", "at", "put", "out", "."]
(c34-3 / crap-01
       :ARG1 (c34-4 / woman
                    :ARG1-of (c34-0 / marry-01))
       :ARG2 (c34-2 / put-out-10
                    :ARG0 c34-4)
       :ARG1-of (c34-1 / serious-02))

# ::snt Old golden balls has the Midas touch.
# ::tokens ["Old", "golden", "balls", "has", "the", "Midas", "touch", "."]
# ::lemmas ["old", "golden", "ball", "have", "the", "Midas", "touch", "."]
(c35-4 / touch-01
       :ARG0 (c35-3 / person
                    :name (c35-2 / name
                                 :op1 "Midas"))
       :ARG1 (c35-1 / ball
                    :mod (c35-0 / old)
                    :mod (c35-5 / golden)))

# ::snt the rule men have when with a GF is you can look but you cant touch David beckham broke both
# ::tokens ["the", "rule", "men", "have", "when", "with", "a", "GF", "is", "you", "can", "look", "but", "you", "ca", "nt", "touch", "David", "beckham", "broke", "both"]
# ::lemmas ["the", "rule", "man", "have", "when", "with", "a", "GF", "be", "you", "can", "look", "but", "you", "can", "not", "touch", "David", "beckham", "break", "both"]
(c36-10 / contrast-01
        :ARG1 (c36-7 / possible-01
                     :ARG1 (c36-8 / look-01
                                  :ARG0 (c36-1 / man)))
        :ARG2 (c36-2 / possible-01
                     :ARG1 (c36-14 / touch-01
                                   :ARG0 c36-1
                                   :ARG1 (c36-4 / and
                                                :op1 (c36-16 / person
                                                             :name (c36-3 / name
                                                                          :op1 "David"
                                                                          :op2 "Beckham")
                                                             :ARG0-of (c36-0 / break-13
                                                                             :ARG1 (c36-6 / both)))
                                                :op2 (c36-11 / person
                                                             :name c36-3
                                                             :op1 "David"
                                                             :op2 "Beckham")))
                     :polarity -)
        :ARG1-of (c36-5 / rule-01
                        :ARG0 c36-1
                        :condition (c36-9 / have-03
                                          :ARG0 c36-1
                                          :ARG1 (c36-13 / person
                                                        :ARG0-of (c36-12 / have-rel-role-91
                                                                         :ARG1 c36-1
                                                                         :ARG2 (c36-15 / girlfriend))))))

# ::snt Im really disappointed in beckham. Guy could have piped a supermodel but He chose some nobody. He got really bad taste
# ::tokens ["I", "m", "really", "disappointed", "in", "beckham", ".", "Guy", "could", "have", "piped", "a", "supermodel", "but", "He", "chose", "some", "nobody", ".", "He", "got", "really", "bad", "taste"]
# ::lemmas ["i", "m", "really", "disappointed", "in", "beckham", ".", "Guy", "could", "have", "pipe", "a", "supermodel", "but", "he", "choose", "some", "nobody", ".", "he", "get", "really", "bad", "taste"]
(c37-3 / multi-sentence
       :snt1 (c37-15 / disappoint-01
                     :ARG0 (c37-8 / person
                                  :name (c37-2 / name
                                               :op1 "Beckham"))
                     :ARG1 (c37-12 / i)
                     :degree (c37-6 / really))
       :snt2 (c37-10 / contrast-01
                     :ARG1 (c37-4 / possible-01
                                  :ARG1 (c37-13 / pip-02
                                                :ARG0 (c37-14 / guy)
                                                :ARG1 (c37-5 / supermodel)))
                     :ARG2 (c37-17 / choose-01
                                   :ARG0 c37-14
                                   :ARG1 (c37-7 / nobody
                                                :mod (c37-0 / some))))
       :snt3 (c37-11 / taste-02
                     :ARG1 (c37-9 / he)
                     :ARG1-of (c37-1 / bad-07
                                     :degree (c37-16 / really))))

# ::snt Loooooollll this killed me
# ::tokens ["Loooooollll", "this", "killed", "me"]
# ::lemmas ["Loooooollll", "this", "kill", "i"]
(c38-1 / kill-01
       :ARG0 (c38-3 / this)
       :ARG1 (c38-2 / i)
       :degree (c38-0 / laugh-01
                      :manner (c38-4 / loud)
                      :mode expressive))

# ::snt Please tell me this isn't true?. More hateful bullshit I hope
# ::tokens ["Please", "tell", "me", "this", "is", "n't", "true", "?", ".", "More", "hateful", "bullshit", "I", "hope"]
# ::lemmas ["please", "tell", "i", "this", "be", "not", "true", "?", ".", "more", "hateful", "bullshit", "i", "hope"]
(c39-2 / multi-sentence
       :snt1 (c39-8 / tell-01
                    :ARG0 (c39-1 / you)
                    :ARG1 (c39-10 / true-01
                                  :ARG1 (c39-9 / this)
                                  :polarity -)
                    :ARG2 (c39-11 / i)
                    :polite +
                    :mode imperative)
       :snt2 (c39-5 / hope-01
                    :ARG0 (c39-3 / i)
                    :ARG1 (c39-0 / bullshit
                                 :ARG0-of (c39-7 / hate-01
                                                 :ARG2-of (c39-4 / have-degree-91
                                                                 :ARG1 c39-0
                                                                 :ARG3 (c39-6 / more))))))

# ::snt Yeah, the first time he cheated meant nothing!
# ::tokens ["Yeah", ",", "the", "first", "time", "he", "cheated", "meant", "nothing", "!"]
# ::lemmas ["yeah", ",", "the", "first", "time", "he", "cheat", "mean", "nothing", "!"]
(c40-2 / mean-01
       :ARG1 (c40-4 / cheat-03
                    :ARG0 (c40-3 / he)
                    :ord (c40-0 / ordinal-entity
                                :value 1))
       :ARG2 (c40-1 / nothing))

# ::snt If she wasnt such a miserable get that looks like a stick insect he probably wouldnt stray
# ::tokens ["If", "she", "was", "nt", "such", "a", "miserable", "get", "that", "looks", "like", "a", "stick", "insect", "he", "probably", "would", "nt", "stray"]
# ::lemmas ["if", "she", "be", "not", "such", "a", "miserable", "get", "that", "look", "like", "a", "stick", "insect", "he", "probably", "would", "not", "stray"]
(c41-5 / likely-01
       :ARG1 (c41-2 / stray-01
                    :ARG0 (c41-4 / he)
                    :polarity -)
       :condition (c41-1 / miserable
                         :domain (c41-0 / she)
                         :degree (c41-8 / such)
                         :ARG0-of (c41-7 / look-02
                                         :ARG1 (c41-6 / insect
                                                      :ARG1-of (c41-3 / stick-01)))
                         :polarity -))

# ::snt Of course women dont cheat do they?
# ::tokens ["Of", "course", "women", "do", "nt", "cheat", "do", "they", "?"]
# ::lemmas ["of", "course", "woman", "do", "not", "cheat", "do", "they", "?"]
(c42-0 / cheat-03
       :ARG0 (c42-3 / woman)
       :mod (c42-1 / of-course)
       :ARG1-of (c42-2 / request-confirmation-91)
       :polarity -)

# ::snt Is there anyone who can tell me the truth? I am confused now. Chinese netizens need your help
# ::tokens ["Is", "there", "anyone", "who", "can", "tell", "me", "the", "truth", "?", "I", "am", "confused", "now", ".", "Chinese", "netizens", "need", "your", "help"]
# ::lemmas ["be", "there", "anyone", "who", "can", "tell", "i", "the", "truth", "?", "i", "be", "confuse", "now", ".", "Chinese", "netizens", "need", "your", "help"]
(c43-1 / multi-sentence
       :snt1 (c43-3 / anyone
                    :polarity (c43-11 / amr-unknown)
                    :ARG0-of (c43-10 / tell-01
                                     :ARG1 (c43-12 / truth)
                                     :ARG2 (c43-13 / i)
                                     :ARG1-of (c43-5 / possible-01)))
       :snt2 (c43-8 / confuse-01
                    :ARG1 c43-13
                    :time (c43-2 / now))
       :snt3 (c43-4 / need-01
                    :ARG0 (c43-6 / netizen
                                 :mod (c43-14 / country
                                              :name (c43-9 / name
                                                           :op1 "China")))
                    :ARG1 (c43-7 / help-01
                                 :ARG0 (c43-0 / you)
                                 :ARG1 c43-6)))

# ::snt I heard that David Beckham once had sex with Katie Hopkins eww yuk! I dunno if it's true but I read it on here a few years ago ok. Can you imagine him &amp; her? What would the baby boy or girl look like? I have not seen this child in public before or on TV?
# ::tokens ["I", "heard", "that", "David", "Beckham", "once", "had", "sex", "with", "Katie", "Hopkins", "eww", "yuk", "!", "I", "dunno", "if", "it", "'s", "true", "but", "I", "read", "it", "on", "here", "a", "few", "years", "ago", "ok", ".", "Can", "you", "imagine", "him", "&", "amp", ";", "her", "?", "What", "would", "the", "baby", "boy", "or", "girl", "look", "like", "?", "I", "have", "not", "seen", "this", "child", "in", "public", "before", "or", "on", "TV", "?"]
# ::lemmas ["i", "hear", "that", "David", "Beckham", "once", "have", "sex", "with", "Katie", "Hopkins", "eww", "yuk", "!", "i", "dunno", "if", "it", "be", "true", "but", "i", "read", "it", "on", "here", "a", "few", "years", "ago", "ok", ".", "can", "you", "imagine", "he", "&", "amp", ";", "she", "?", "what", "would", "the", "baby", "boy", "or", "girl", "look", "like", "?", "i", "have", "not", "see", "this", "child", "in", "public", "before", "or", "on", "tv", "?"]
(c44-26 / multi-sentence
        :snt1 (c44-18 / and
                      :op1 (c44-13 / hear-01
                                   :ARG0 (c44-41 / i)
                                   :ARG1 (c44-1 / sex-01
                                                :ARG0 (c44-38 / person
                                                              :name (c44-35 / name
                                                                            :op1 "David"
                                                                            :op2 "Beckham"))
                                                :ARG1 (c44-27 / person
                                                              :name (c44-28 / name
                                                                            :op1 "Katie"
                                                                            :op2 "Hopkins"))
                                                :time (c44-8 / once)))
                      :op2 (c44-37 / ewww
                                   :mode expressive))
        :snt2 (c44-29 / contrast-01
                      :ARG1 (c44-14 / know-01
                                    :ARG0 (c44-11 / i)
                                    :ARG1 (c44-17 / true-01
                                                  :ARG1 (c44-21 / it))
                                    :polarity -)
                      :ARG2 (c44-36 / read-01
                                    :ARG0 c44-11
                                    :ARG1 c44-21
                                    :ARG3 (c44-40 / here)
                                    :time (c44-25 / before
                                                  :op1 (c44-39 / now)
                                                  :quant (c44-34 / few
                                                                 :op1 (c44-31 / temporal-quantity
                                                                              :unit (c44-10 / year)
                                                                              :quant 1)))
                                    :ARG1-of (c44-24 / okay-04)))
        :snt3 (c44-6 / possible-01
                     :ARG1 (c44-0 / imagine-01
                                  :ARG0 (c44-19 / you)
                                  :ARG1 (c44-16 / and
                                                :op1 (c44-12 / he)
                                                :op2 (c44-5 / person
                                                            :name (c44-30 / name
                                                                          :op1 "amp")))))
        :snt4 (c44-4 / look-02
                     :ARG0 (c44-43 / or
                                   :op1 (c44-3 / boy
                                               :mod (c44-7 / baby))
                                   :op2 (c44-20 / girl
                                                :mod c44-7))
                     :ARG1 (c44-15 / amr-unknown))
        :snt5 (c44-9 / see-01
                     :ARG0 (c44-33 / i)
                     :ARG1 (c44-23 / child
                                   :mod (c44-42 / this))
                     :location (c44-32 / or
                                       :op1 c44-25)
                     :op2 (c44-2 / television)
                     :polarity -)
        :ARG1-of (c44-22 / public-02)
        :polarity c44-15)

# ::snt When will women learn to keep their man happy?.....
# ::tokens ["When", "will", "women", "learn", "to", "keep", "their", "man", "happy", "?", "....."]
# ::lemmas ["when", "will", "woman", "learn", "to", "keep", "their", "man", "happy", "?", "....."]
(c45-2 / learn-01
       :ARG0 (c45-4 / woman)
       :ARG1 (c45-3 / keep-02
                    :ARG0 c45-4
                    :ARG1 (c45-1 / happy-01
                                 :ARG1 (c45-0 / man
                                              :poss c45-4)))
       :time (c45-5 / amr-unknown))

# ::snt Wtf is this true??????
# ::tokens ["Wtf", "is", "this", "true", "?", "?", "?", "?", "?", "?"]
# ::lemmas ["Wtf", "be", "this", "true", "?", "?", "?", "?", "?", "?"]
(c46-3 / true-01
       :ARG1 (c46-2 / this)
       :mod (c46-0 / amr-unknown)
       :mod (c46-1 / fuck
                   :mode expressive))

# ::snt Can you blame him? Shes a weapon
# ::tokens ["Can", "you", "blame", "him", "?", "She", "s", "a", "weapon"]
# ::lemmas ["can", "you", "blame", "he", "?", "she", "s", "a", "weapon"]
(c47-2 / multi-sentence
       :snt1 (c47-5 / possible-01
                    :polarity (c47-7 / amr-unknown)
                    :ARG1 (c47-0 / blame-01
                                 :ARG0 (c47-1 / you)
                                 :ARG1 (c47-4 / he)))
       :snt2 (c47-3 / sell-01
                    :ARG1 (c47-6 / weapon)))

# ::snt Did him cheating last time not put you off him?
# ::tokens ["Did", "him", "cheating", "last", "time", "not", "put", "you", "off", "him", "?"]
# ::lemmas ["do", "he", "cheat", "last", "time", "not", "put", "you", "off", "he", "?"]
(c48-3 / put-01
       :ARG0 (c48-5 / cheat-03
                    :ARG0 (c48-2 / he)
                    :time (c48-4 / last))
       :ARG1 (c48-1 / you)
       :ARG2 (c48-0 / off
                    :op1 c48-2)
       :polarity (c48-6 / amr-unknown)
       :polarity -)

# ::snt Nah first time was the Nanny
# ::tokens ["Nah", "first", "time", "was", "the", "Nanny"]
# ::lemmas ["Nah", "first", "time", "be", "the", "Nanny"]
(c49-2 / nanny
       :ord (c49-0 / ordinal-entity
                   :value 1)
       :mod (c49-1 / nah))

# ::snt Thanks!
# ::tokens ["Thanks", "!"]
# ::lemmas ["thank", "!"]
(c50-1 / thank-01
       :ARG1 (c50-0 / you)
       :mode expressive)
