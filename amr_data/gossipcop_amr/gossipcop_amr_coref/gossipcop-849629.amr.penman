# ::snt Loved the original series... didn't enjoy the newer ne. Hope this ne is awesome
# ::tokens ["Loved", "the", "original", "series", "...", "did", "n't", "enjoy", "the", "newer", "ne", ".", "Hope", "this", "ne", "is", "awesome"]
# ::lemmas ["love", "the", "original", "series", "...", "do", "not", "enjoy", "the", "new", "ne", ".", "hope", "this", "ne", "be", "awesome"]
(c1-2 / multi-sentence
      :snt1 (c1-13 / and
                   :op1 (c1-8 / love-01
                              :ARG0 (c1-12 / i)
                              :ARG1 (c1-4 / series
                                          :mod (c1-0 / original)))
                   :op2 (c1-6 / enjoy-01
                              :ARG0 c1-12
                              :ARG1 (c1-1 / series
                                          :ARG1-of (c1-7 / have-degree-91
                                                         :ARG2 (c1-3 / new-01
                                                                     :ARG1 c1-1)
                                                         :ARG3 (c1-9 / more)))
                              :polarity -))
      :snt2 (c1-10 / hope-01
                   :ARG0 (c1-5 / i)
                   :ARG1 (c1-14 / awe-01
                                :ARG0 (c1-11 / this))))

# ::snt Him?
# ::tokens ["Him", "?"]
# ::lemmas ["he", "?"]
(c2-0 / event
      :polarity (c2-2 / amr-unknown)
      :mod (c2-1 / he))

# ::snt looks like perfect timing for your current rewatching
# ::tokens ["looks", "like", "perfect", "timing", "for", "your", "current", "rewatching"]
# ::lemmas ["look", "like", "perfect", "timing", "for", "your", "current", "rewatching"]
(c4-1 / look-02
      :ARG1 (c4-5 / time-02
                  :ARG1 (c4-3 / watch-01
                              :ARG0 (c4-0 / you)
                              :time (c4-4 / current))
                  :ARG1-of (c4-2 / perfect-02)))

# ::snt no x
# ::tokens ["no", "x"]
# ::lemmas ["no", "x"]
(c5-0 / string-entity
      :value "no")

# ::snt Oaa izliyo musun ok efsane deil mi djkdkfkf
# ::tokens ["Oaa", "izliyo", "musun", "ok", "efsane", "deil", "mi", "djkdkfkf"]
# ::lemmas ["Oaa", "izliyo", "musun", "ok", "efsane", "deil", "mi", "djkdkfkf"]
(c6-3 / say-01
      :ARG0 (c6-8 / i)
      :ARG1 (c6-9 / and
                  :op1 (c6-0 / okay-04
                             :ARG1 (c6-4 / religious-group
                                         :name (c6-2 / name
                                                     :op1 "Islam"))
                             :op2-of c6-9)
                  :ARG1 (c6-10 / religious-group
                               :name (c6-5 / name
                                           :op1 "Islam")))
      :op3 (c6-1 / fuck-01
                 :ARG1 (c6-6 / person
                             :name (c6-7 / name
                                         :op1 "Djkdkfkf")
                             :ARG2-of c6-3)))

# ::snt get in lads
# ::tokens ["get", "in", "lads"]
# ::lemmas ["get", "in", "lad"]
(c7-0 / get-05
      :ARG0 (c7-1 / you
                  :ARG1-of c7-0)
      :ARG2 (c7-2 / lad)
      :mode imperative)

# ::snt YESSSZZZ!
# ::tokens ["YESSSZZZ", "!"]
# ::lemmas ["YESSSZZZ", "!"]
(c9-0 / yes)

# ::snt Yes so happy hope portia dose it to
# ::tokens ["Yes", "so", "happy", "hope", "portia", "dose", "it", "to"]
# ::lemmas ["yes", "so", "happy", "hope", "portia", "dose", "it", "to"]
(c10-2 / happy-01
       :ARG0 (c10-4 / hope-01
                    :ARG1 (c10-6 / dose-01
                                 :ARG0 (c10-3 / person
                                              :name (c10-0 / name
                                                           :op1 "Portia"))
                                 :ARG1 (c10-5 / it)))
       :degree (c10-1 / so))
