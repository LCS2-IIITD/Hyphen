# ::snt Stormi is a cute name for a girl.
# ::tokens ["Stormi", "is", "a", "cute", "name", "for", "a", "girl", "."]
# ::lemmas ["Stormi", "be", "a", "cute", "name", "for", "a", "girl", "."]
(c1-0 / name
      :mod (c1-3 / cute)
      :beneficiary (c1-4 / girl)
      :domain (c1-2 / person
                    :name (c1-1 / name
                                :op1 "Stormi")))

# ::snt Daichi saitoMONA MODEL
# ::tokens ["Daichi", "saitoMONA", "MODEL"]
# ::lemmas ["Daichi", "saitomona", "MODEL"]
(c2-2 / model-01
      :ARG0 (c2-0 / person
                  :name (c2-1 / name
                              :op1 "Daichi"
                              :op2 "Sapito")))

# ::snt She literally says it was random lmao but ok explain it to me
# ::tokens ["She", "literally", "says", "it", "was", "random", "lmao", "but", "ok", "explain", "it", "to", "me"]
# ::lemmas ["she", "literally", "say", "it", "be", "random", "lmao", "but", "ok", "explain", "it", "to", "i"]
(c3-8 / contrast-01
      :ARG1 (c3-2 / say-01
                  :ARG0 (c3-0 / she)
                  :ARG1 (c3-4 / random
                              :domain (c3-9 / it))
                  :manner (c3-6 / literal)
                  :ARG2-of (c3-10 / laugh-01
                                  :ARG0 (c3-3 / i)
                                  :manner (c3-7 / loud)
                                  :mode expressive))
      :ARG2 (c3-5 / explain-01
                  :ARG0 (c3-1 / you)
                  :ARG1 c3-9
                  :ARG2 c3-3
                  :mode imperative
                  :polite +))

# ::snt Porn star name? Good start!
# ::tokens ["Porn", "star", "name", "?", "Good", "start", "!"]
# ::lemmas ["porn", "star", "name", "?", "good", "start", "!"]
(c4-3 / multi-sentence
      :snt1 (c4-2 / name
                  :polarity (c4-5 / amr-unknown)
                  :mod (c4-4 / star)
                  :ARG1-of (c4-0 / orn-02))
      :snt2 (c4-1 / start-01
                  :ARG1-of (c4-6 / good-02)))

# ::snt We know where it came from
# ::tokens ["We", "know", "where", "it", "came", "from"]
# ::lemmas ["we", "know", "where", "it", "come", "from"]
(c5-0 / know-01
      :ARG0 (c5-1 / we)
      :ARG1 (c5-4 / thing
                  :ARG2-of (c5-2 / come-03
                                 :ARG1 (c5-3 / it))))

# ::snt :Very typical, surface interview! Great job, no one! You know what's surprising about having a child? When you have to pack for them for over an hr because it takes mins just to leave the house, just to go to the store, and get more diapers. Oh yeah, and car seat hell.
# ::tokens [":", "Very", "typical", ",", "surface", "interview", "!", "Great", "job", ",", "no", "one", "!", "You", "know", "what", "'s", "surprising", "about", "having", "a", "child", "?", "When", "you", "have", "to", "pack", "for", "them", "for", "over", "an", "hr", "because", "it", "takes", "mins", "just", "to", "leave", "the", "house", ",", "just", "to", "go", "to", "the", "store", ",", "and", "get", "more", "diapers", ".", "Oh", "yeah", ",", "and", "car", "seat", "hell", "."]
# ::lemmas [":", "very", "typical", ",", "surface", "interview", "!", "great", "job", ",", "no", "one", "!", "you", "know", "what", "be", "surprising", "about", "have", "a", "child", "?", "when", "you", "have", "to", "pack", "for", "they", "for", "over", "an", "hr", "because", "it", "take", "min", "just", "to", "leave", "the", "house", ",", "just", "to", "go", "to", "the", "store", ",", "and", "get", "more", "diaper", ".", "oh", "yeah", ",", "and", "car", "seat", "hell", "."]
(c6-23 / multi-sentence
       :snt1 (c6-34 / interview-01
                    :ARG2 (c6-0 / surface)
                    :ARG1-of (c6-19 / typical-02
                                    :degree (c6-10 / very)))
       :snt2 (c6-18 / and
                    :op1 (c6-16 / job
                                :mod (c6-20 / great))
                    :op2 (c6-30 / no-one))
       :snt3 (c6-13 / know-01
                    :ARG0 (c6-9 / you)
                    :ARG1 (c6-27 / thing
                                 :ARG0-of (c6-7 / surprise-01
                                                :ARG1 (c6-32 / person
                                                             :ARG0-of (c6-12 / have-rel-role-91
                                                                             :ARG1 c6-9
                                                                             :ARG2 (c6-26 / child)))))
                    :polarity (c6-17 / amr-unknown)
                    :time (c6-8 / obligate-01
                                :ARG1 c6-9
                                :ARG2 (c6-24 / pack-01
                                             :ARG0 c6-9
                                             :ARG2 c6-32
                                             :duration (c6-22 / over
                                                              :op1 (c6-35 / temporal-quantity
                                                                          :unit (c6-33 / hour)
                                                                          :quant 1))
                                             :ARG1-of (c6-21 / cause-01
                                                             :ARG0 (c6-1 / take-10
                                                                         :ARG0 (c6-15 / and
                                                                                      :op1 (c6-2 / leave-11
                                                                                                 :ARG0 c6-9
                                                                                                 :ARG1 (c6-11 / house))
                                                                                      :op2 (c6-4 / go-02
                                                                                                 :ARG0 c6-9
                                                                                                 :ARG4 (c6-6 / store))
                                                                                      :op3 (c6-5 / get-01
                                                                                                 :ARG0 c6-9
                                                                                                 :ARG1 (c6-36 / diaper
                                                                                                              :mod (c6-14 / more)))
                                                                                      :mod (c6-29 / just))))))
                    :snt4 (c6-25 / and
                                 :op1 (c6-37 / oh-yeah
                                             :mode expressive)
                                 :op2 (c6-28 / hell
                                             :mod (c6-31 / seat-01
                                                         :ARG2 (c6-3 / car))))))

# ::snt This one time at a strip club this girl...
# ::tokens ["This", "one", "time", "at", "a", "strip", "club", "this", "girl", "..."]
# ::lemmas ["this", "one", "time", "at", "a", "strip", "club", "this", "girl", "..."]
(c7-5 / girl
      :mod (c7-3 / this)
      :time (c7-0 / one
                  :mod (c7-4 / this))
      :location (c7-2 / club
                      :mod (c7-1 / strip)))

# ::snt the answer is simple, they always fight for who gives the ugliest name to their kids.
# ::tokens ["the", "answer", "is", "simple", ",", "they", "always", "fight", "for", "who", "gives", "the", "ugliest", "name", "to", "their", "kids", "."]
# ::lemmas ["the", "answer", "be", "simple", ",", "they", "always", "fight", "for", "who", "give", "the", "ugly", "name", "to", "their", "kid", "."]
(c8-3 / simple-02
      :ARG1 (c8-9 / answer-01
                  :ARG2 (c8-0 / fight-01
                              :ARG0 (c8-7 / they)
                              :ARG2 (c8-5 / person
                                          :ARG0-of (c8-10 / give-01
                                                          :ARG1 (c8-1 / name
                                                                      :ARG1-of (c8-4 / have-degree-91
                                                                                     :ARG2 (c8-11 / ugly)
                                                                                     :ARG3 (c8-2 / most)))
                                                          :ARG2 (c8-6 / kid
                                                                      :poss c8-7)))
                              :time (c8-8 / always))))

# ::snt Can we stop trying to keep this family relevant? Enough already!
# ::tokens ["Can", "we", "stop", "trying", "to", "keep", "this", "family", "relevant", "?", "Enough", "already", "!"]
# ::lemmas ["can", "we", "stop", "try", "to", "keep", "this", "family", "relevant", "?", "enough", "already", "!"]
(c10-1 / multi-sentence
       :snt1 (c10-6 / possible-01
                    :polarity (c10-11 / amr-unknown)
                    :ARG1 (c10-2 / stop-01
                                 :ARG0 (c10-8 / we)
                                 :ARG1 (c10-9 / try-01
                                              :ARG0 c10-8
                                              :ARG1 (c10-7 / keep-02
                                                           :ARG0 c10-8
                                                           :ARG1 (c10-3 / relevant-01
                                                                        :ARG1 (c10-0 / family
                                                                                     :mod (c10-12 / this)))))))
       :snt2 (c10-5 / have-quant-91
                    :ARG3 (c10-4 / enough)
                    :time (c10-10 / already)))

# ::snt Beautiful
# ::tokens ["Beautiful"]
# ::lemmas ["beautiful"]
(c11-0 / beautiful-02)

# ::snt beautiful name *
# ::tokens ["beautiful", "name", "*"]
# ::lemmas ["beautiful", "name", "*"]
(c12-1 / name
       :ARG1-of (c12-0 / beautiful-02))
