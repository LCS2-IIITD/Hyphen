# ::snt Congratulations Guillermo
# ::tokens ["Congratulations", "Guillermo"]
# ::lemmas ["Congratulations", "Guillermo"]
(c1-0 / congratulate-01
      :ARG1 (c1-2 / person
                  :name (c1-1 / name
                              :op1 "Guillermo")))

# ::snt So far... Since we haven't seen of them yet.
# ::tokens ["So", "far", "...", "Since", "we", "have", "n't", "seen", "of", "them", "yet", "."]
# ::lemmas ["so", "far", "...", "since", "we", "have", "not", "see", "of", "they", "yet", "."]
(c2-3 / cause-01
      :ARG0 (c2-2 / see-01
                  :ARG0 (c2-4 / we)
                  :ARG1 (c2-5 / they)
                  :time (c2-1 / yet)
                  :polarity -)
      :ARG1 (c2-0 / so-far))

# ::snt Thank you for not tweeting every single winner as it happens like some other "news" sources
# ::tokens ["Thank", "you", "for", "not", "tweeting", "every", "single", "winner", "as", "it", "happens", "like", "some", "other", "\"", "news", "\"", "sources"]
# ::lemmas ["thank", "you", "for", "not", "tweet", "every", "single", "winner", "as", "it", "happen", "like", "some", "other", "\"", "news", "\"", "source"]
(c3-9 / thank-01
      :ARG1 (c3-2 / you)
      :ARG2 (c3-10 / tweet-02
                   :ARG0 c3-2
                   :ARG1 (c3-7 / person
                               :ARG0-of (c3-8 / win-01)
                               :ARG1-of (c3-4 / single-02
                                              :mod (c3-6 / every)))
                   :manner (c3-11 / event
                                  :ARG1-of (c3-5 / resemble-01
                                                 :ARG2 (c3-0 / source
                                                             :mod (c3-3 / news)
                                                             :mod (c3-1 / other)
                                                             :quant (c3-12 / some))))
                   :polarity -))

# ::snt Who cares.
# ::tokens ["Who", "cares", "."]
# ::lemmas ["who", "care", "."]
(c4-0 / care-01
      :ARG0 (c4-1 / amr-unknown))

# ::snt WATCH THE WINNER OF TH OSCAR ...
# ::tokens ["WATCH", "THE", "WINNER", "OF", "TH", "OSCAR", "..."]
# ::lemmas ["watch", "the", "winner", "of", "TH", "OSCAR", "..."]
(c5-4 / watch-01
      :ARG0 (c5-0 / you)
      :ARG1 (c5-2 / person
                  :ARG0-of (c5-3 / win-01
                                 :ARG1 (c5-5 / game
                                             :name (c5-1 / name
                                                         :op1 "Th"
                                                         :op2 "Oscars"))))
      :mode imperative)

# ::snt People With Dogs Are More Likely To Find Love, Reveals Study!
# ::tokens ["People", "With", "Dogs", "Are", "More", "Likely", "To", "Find", "Love", ",", "Reveals", "Study", "!"]
# ::lemmas ["people", "with", "Dogs", "be", "more", "likely", "to", "find", "love", ",", "reveal", "Study", "!"]
(c6-3 / reveal-01
      :ARG0 (c6-2 / study-01)
      :ARG1 (c6-5 / likely-01
                  :ARG1 (c6-0 / find-01
                              :ARG0 (c6-6 / person
                                          :ARG0-of (c6-4 / have-03
                                                         :ARG1 (c6-8 / dog)))
                              :ARG1 (c6-9 / love-01
                                          :ARG0 c6-6))
                  :ARG2-of (c6-7 / have-degree-91
                                 :ARG1 c6-0
                                 :ARG3 (c6-1 / more))))

# ::snt Man weighing kg found abandoned in cave after years!
# ::tokens ["Man", "weighing", "kg", "found", "abandoned", "in", "cave", "after", "years", "!"]
# ::lemmas ["man", "weigh", "kg", "find", "abandon", "in", "cave", "after", "years", "!"]
(c7-0 / find-01
      :ARG1 (c7-2 / man
                  :ARG0-of (c7-5 / weigh-01
                                 :ARG1 (c7-3 / mass-quantity
                                             :unit (c7-4 / kilogram)
                                             :quant 1))
                  :ARG1-of (c7-9 / abandon-01
                                 :location (c7-6 / cave)
                                 :time (c7-8 / after
                                             :quant (c7-10 / multiple
                                                           :op1 (c7-7 / temporal-quantity
                                                                      :unit (c7-1 / year)
                                                                      :quant 1))))))

# ::snt Nature lovers in Jordan clean as they hike! ://
# ::tokens ["Nature", "lovers", "in", "Jordan", "clean", "as", "they", "hike", "!", ":", "//"]
# ::lemmas ["nature", "lover", "in", "Jordan", "clean", "as", "they", "hike", "!", ":", "//"]
(c8-4 / clean-04
      :ARG1 (c8-2 / lover
                  :mod (c8-0 / nature)
                  :location (c8-5 / country
                                  :name (c8-1 / name
                                              :op1 "Jordan")))
      :time (c8-3 / hike-02
                  :ARG0 c8-2))

# ::snt Jay-Z Dethrones Diddy to Become Forbes' Richest Hip-Hop Artist of !
# ::tokens ["Jay", "-", "Z", "Dethrones", "Diddy", "to", "Become", "Forbes", "'", "Richest", "Hip", "-", "Hop", "Artist", "of", "!"]
# ::lemmas ["Jay", "-", "Z", "Dethrones", "Diddy", "to", "become", "Forbes", "'", "Richest", "Hip", "-", "Hop", "Artist", "of", "!"]
(c9-4 / rones-01
      :ARG0 (c9-6 / person
                  :name (c9-1 / name
                              :op1 "Jay-Z"))
      :ARG1 (c9-2 / person
                  :name (c9-5 / name
                              :op1 "Diddy"))
      :purpose (c9-0 / become-01
                     :ARG1 c9-2
                     :ARG2 (c9-11 / artist
                                  :mod (c9-7 / hip-hop)
                                  :ARG1-of (c9-10 / have-degree-91
                                                  :ARG2 (c9-12 / rich)
                                                  :ARG3 (c9-3 / most)
                                                  :ARG5 (c9-8 / magazine
                                                              :name (c9-9 / name
                                                                          :op1 "Forbes"))))))

# ::snt The Oscars Awards ceremony attracted its smallest recorded US television audience.
# ::tokens ["The", "Oscars", "Awards", "ceremony", "attracted", "its", "smallest", "recorded", "US", "television", "audience", "."]
# ::lemmas ["The", "Oscars", "Awards", "ceremony", "attract", "its", "small", "record", "US", "television", "audience", "."]
(c10-3 / attract-01
       :ARG0 (c10-7 / ceremony
                    :name (c10-0 / name
                                 :op1 "The"
                                 :op2 "Oscars"
                                 :op3 "Awards"))
       :ARG1 (c10-8 / audience
                    :mod (c10-9 / television)
                    :mod (c10-10 / country
                                 :name (c10-5 / name
                                              :op1 "US"))
                    :ARG1-of (c10-4 / record-01)
                    :ARG1-of (c10-6 / have-degree-91
                                    :ARG2 (c10-2 / small)
                                    :ARG3 (c10-1 / most))))

# ::snt Most boring show on TV!
# ::tokens ["Most", "boring", "show", "on", "TV", "!"]
# ::lemmas ["most", "boring", "show", "on", "tv", "!"]
(c11-3 / have-degree-91
       :ARG1 (c11-2 / show-04
                    :medium (c11-4 / television))
       :ARG2 (c11-0 / bore-02
                    :ARG0 c11-2)
       :ARG3 (c11-1 / most)
       :mode expressive)

# ::snt pregnant with excitement
# ::tokens ["pregnant", "with", "excitement"]
# ::lemmas ["pregnant", "with", "excitement"]
(c12-1 / impregnate-01
       :ARG2 (c12-0 / excite-01))

# ::snt Can't wait to see the ratings review after. No one watches these shit shows anymore.
# ::tokens ["Ca", "n't", "wait", "to", "see", "the", "ratings", "review", "after", ".", "No", "one", "watches", "these", "shit", "shows", "anymore", "."]
# ::lemmas ["can", "not", "wait", "to", "see", "the", "rating", "review", "after", ".", "no", "one", "watch", "these", "shit", "show", "anymore", "."]
(c13-1 / multi-sentence
       :snt1 (c13-6 / wait-01
                    :ARG1 (c13-8 / i)
                    :ARG2 (c13-3 / see-01
                                 :ARG0 c13-8
                                 :ARG1 (c13-4 / review-01
                                              :ARG1 (c13-11 / rate-01))
                                 :time (c13-9 / after)))
       :snt2 (c13-5 / watch-01
                    :ARG0 (c13-2 / no-one)
                    :ARG1 (c13-0 / show-04
                                 :mod (c13-12 / shit
                                              :mode expressive)
                                 :mod (c13-7 / this))
                    :time (c13-10 / anymore)))

# ::snt And the as the Best Movie is
# ::tokens ["And", "the", "as", "the", "Best", "Movie", "is"]
# ::lemmas ["and", "the", "as", "the", "Best", "Movie", "be"]
(c14-3 / and
       :op2 (c14-2 / have-degree-91
                   :ARG1 (c14-0 / movie)
                   :ARG2 (c14-4 / good-02
                                :ARG1 c14-0)
                   :ARG3 (c14-1 / most)))

# ::snt What and how ??!! Isn't it going g live now ??
# ::tokens ["What", "and", "how", "?", "?", "!", "!", "Is", "n't", "it", "going", "g", "live", "now", "?", "?"]
# ::lemmas ["what", "and", "how", "?", "?", "!", "!", "be", "not", "it", "go", "g", "live", "now", "?", "?"]
(c15-1 / multi-sentence
       :snt1 (c15-7 / and
                    :op1 (c15-6 / amr-unknown)
                    :op2 (c15-5 / amr-unknown))
       :snt2 (c15-8 / go-06
                    :ARG0 (c15-0 / you)
                    :ARG1 (c15-4 / live-01
                                 :ARG0 c15-0)
                    :time (c15-2 / now)
                    :ARG1-of (c15-3 / request-confirmation-91)
                    :mode imperative))

# ::snt LIVE &gt;&gt;&gt;
# ::tokens ["LIVE", "&", "gt;&gt;&gt", ";"]
# ::lemmas ["LIVE", "&", "gt;&gt;&gt", ";"]
(c16-2 / and
       :op1 (c16-1 / live-01)
       :op2 (c16-0 / gt;&gt;&gt;))

# ::snt Is it me, (or because of last years gaffe), they printed the category title really really large on the envelopes.
# ::tokens ["Is", "it", "me", ",", "(", "or", "because", "of", "last", "years", "gaffe", ")", ",", "they", "printed", "the", "category", "title", "really", "really", "large", "on", "the", "envelopes", "."]
# ::lemmas ["be", "it", "i", ",", "(", "or", "because", "of", "last", "years", "gaffe", ")", ",", "they", "print", "the", "category", "title", "really", "really", "large", "on", "the", "envelope", "."]
(c17-0 / or
       :op1 (c17-5 / print-01
                   :ARG0 (c17-8 / they)
                   :ARG1 (c17-9 / title
                                :mod (c17-7 / category))
                   :manner (c17-6 / large
                                  :degree (c17-2 / really))
                   :location (c17-4 / envelope))
       :op2 (c17-12 / cause-01
                    :ARG0 (c17-10 / gaffe
                                  :time (c17-1 / year
                                               :mod (c17-11 / last)))
                    :ARG1 c17-5)
       :polarity (c17-3 / amr-unknown))

# ::snt The stage looks beautiful
# ::tokens ["The", "stage", "looks", "beautiful"]
# ::lemmas ["the", "stage", "look", "beautiful"]
(c18-1 / look-02
       :ARG0 (c18-2 / stage)
       :ARG1 (c18-0 / beautiful-02
                    :ARG1 c18-2))

# ::snt Looking forward to Mary Poppins, difficult shoes to fill Hope some cheerful movies make the awards next year. I watched whole show expected more on (less half wore pins) and pay gap but the point got made time for change.
# ::tokens ["Looking", "forward", "to", "Mary", "Poppins", ",", "difficult", "shoes", "to", "fill", "Hope", "some", "cheerful", "movies", "make", "the", "awards", "next", "year", ".", "I", "watched", "whole", "show", "expected", "more", "on", "(", "less", "half", "wore", "pins", ")", "and", "pay", "gap", "but", "the", "point", "got", "made", "time", "for", "change", "."]
# ::lemmas ["look", "forward", "to", "Mary", "Poppins", ",", "difficult", "shoe", "to", "fill", "Hope", "some", "cheerful", "movie", "make", "the", "award", "next", "year", ".", "i", "watch", "whole", "show", "expect", "more", "on", "(", "less", "half", "wear", "pin", ")", "and", "pay", "gap", "but", "the", "point", "got", "make", "time", "for", "change", "."]
(c20-15 / multi-sentence
        :snt1 (c20-1 / look-forward-03
                     :ARG0 (c20-28 / i)
                     :ARG1 (c20-0 / shoe
                                  :mod (c20-29 / difficult)
                                  :ARG2-of (c20-22 / fill-01
                                                   :ARG1 (c20-9 / hope-01
                                                                :ARG1 (c20-10 / make-18
                                                                              :ARG0 (c20-20 / movie
                                                                                            :quant (c20-6 / some)
                                                                                            :mod (c20-18 / cheerful))
                                                                              :ARG1 (c20-12 / award-01)
                                                                              :time (c20-7 / year
                                                                                           :mod (c20-23 / next)))))))
        :snt2 (c20-14 / contrast-01
                      :ARG1 (c20-26 / watch-01
                                    :ARG0 c20-28
                                    :ARG1 (c20-5 / show-04
                                                 :mod (c20-2 / whole)))
                      :ARG2 (c20-24 / expect-01
                                    :ARG0 c20-28
                                    :ARG1 (c20-11 / and
                                                  :op1 (c20-17 / more)
                                                  :op2 (c20-13 / gap
                                                               :mod (c20-25 / pay-01)
                                                               :ARG1-of (c20-19 / mean-01
                                                                                :ARG2 (c20-21 / wear-01
                                                                                              :ARG1 (c20-16 / pin
                                                                                                            :ARG1-of (c20-27 / have-quant-91
                                                                                                                             :ARG3 (c20-8 / half)
                                                                                                                             :polarity -)))))))
                      :ARG2 c20-10
                      :ARG1 (c20-4 / point-04)
                      :purpose (c20-3 / change-01)))

# ::snt We dont care
# ::tokens ["We", "do", "nt", "care"]
# ::lemmas ["we", "do", "not", "care"]
(c21-0 / care-01
       :ARG0 (c21-1 / we)
       :polarity -)

# ::snt Boo
# ::tokens ["Boo"]
# ::lemmas ["Boo"]
(c22-0 / boo)

# ::snt Not interested
# ::tokens ["Not", "interested"]
# ::lemmas ["not", "interested"]
(c23-0 / interest-01
       :polarity -)

# ::snt Dear star/ Gannett. As you can see. No one cares
# ::tokens ["Dear", "star/", "Gannett", ".", "As", "you", "can", "see", ".", "No", "one", "cares"]
# ::lemmas ["dear", "star/", "Gannett", ".", "as", "you", "can", "see", ".", "no", "one", "care"]
(c24-1 / multi-sentence
       :snt1 (c24-7 / dear
                    :domain (c24-3 / slash
                                   :op1 (c24-0 / star)
                                   :op2 (c24-5 / person
                                               :name (c24-2 / name
                                                            :op1 "Gannett"))))
       :snt2 (c24-6 / care-01
                    :ARG0 (c24-4 / no-one)))

# ::snt Congratulations
# ::tokens ["Congratulations"]
# ::lemmas ["congratulation"]
(c25-0 / congratulate-01)

# ::snt My name is missing.
# ::tokens ["My", "name", "is", "missing", "."]
# ::lemmas ["my", "name", "be", "miss", "."]
(c27-1 / miss-01
       :ARG1 (c27-0 / name
                    :poss (c27-2 / i)))
