# ::snt Prepare yourself. Now.
# ::tokens ["Prepare", "yourself", ".", "Now", "."]
# ::lemmas ["prepare", "yourself", ".", "now", "."]
(c1-3 / multi-sentence
      :snt1 (c1-0 / prepare-02
                  :ARG0 (c1-2 / you
                              :ARG1-of c1-0)
                  :mode imperative)
      :snt2 (c1-1 / now
                  :mode expressive))

# ::snt YAAAAS
# ::tokens ["YAAAAS"]
# ::lemmas ["YAAAAS"]
(c2-0 / yah
      :mode expressive)

# ::snt Yea I'll get right on that shit.
# ::tokens ["Yea", "I", "'ll", "get", "right", "on", "that", "shit", "."]
# ::lemmas ["yea", "i", "'ll", "get", "right", "on", "that", "shit", "."]
(c3-4 / get-03
      :ARG1 (c3-2 / i)
      :ARG2 (c3-1 / right-06
                  :ARG1 c3-2
                  :ARG2 (c3-0 / shit
                              :mod (c3-3 / that))))

# ::snt YOU KNOW WE ARE GONNA WATCH THIS ON REPEAT!
# ::tokens ["YOU", "KNOW", "WE", "ARE", "GONNA", "WATCH", "THIS", "ON", "REPEAT", "!"]
# ::lemmas ["you", "know", "we", "be", "GONNA", "watch", "this", "ON", "REPEAT", "!"]
(c4-2 / know-01
      :ARG0 (c4-0 / you)
      :ARG1 (c4-4 / watch-01
                  :ARG0 (c4-3 / we)
                  :ARG1 (c4-5 / this)
                  :mod (c4-1 / again)))

# ::snt WE LIT
# ::tokens ["WE", "LIT"]
# ::lemmas ["WE", "LIT"]
(c5-1 / shit-01
      :ARG0 (c5-0 / we))

# ::snt I KNOW I SAW THIS!
# ::tokens ["I", "KNOW", "I", "SAW", "THIS", "!"]
# ::lemmas ["i", "know", "i", "SAW", "this", "!"]
(c6-1 / know-01
      :ARG0 (c6-2 / i)
      :ARG1 (c6-3 / see-01
                  :ARG0 c6-2
                  :ARG1 (c6-0 / this)))

# ::snt even tho I'm sure you own it on blu-ray already
# ::tokens ["even", "tho", "I", "'m", "sure", "you", "own", "it", "on", "blu", "-", "ray", "already"]
# ::lemmas ["even", "tho", "i", "be", "sure", "you", "own", "it", "on", "blu", "-", "ray", "already"]
(c7-5 / have-concession-91
      :ARG2 (c7-3 / sure-02
                  :ARG0 (c7-6 / i)
                  :ARG1 (c7-0 / own-01
                              :ARG0 (c7-2 / you)
                              :ARG1 (c7-4 / it)
                              :medium (c7-1 / blu-ray)
                              :time (c7-7 / already))))

# ::snt I can already picture us on the couch watching this over and over again
# ::tokens ["I", "can", "already", "picture", "us", "on", "the", "couch", "watching", "this", "over", "and", "over", "again"]
# ::lemmas ["i", "can", "already", "picture", "we", "on", "the", "couch", "watch", "this", "over", "and", "over", "again"]
(c12-3 / possible-01
       :ARG1 (c12-1 / picture-01
                    :ARG0 (c12-7 / i)
                    :ARG1 (c12-5 / we
                                 :location (c12-6 / couch)
                                 :ARG0-of (c12-4 / watch-01
                                                 :ARG1 (c12-8 / this)
                                                 :frequency (c12-0 / over-and-over)))
                    :time (c12-2 / already)))

# ::snt yes!
# ::tokens ["yes", "!"]
# ::lemmas ["yes", "!"]
(c15-0 / yes)

# ::snt I thought Disney was removing all their movies from Netflix the end of August
# ::tokens ["I", "thought", "Disney", "was", "removing", "all", "their", "movies", "from", "Netflix", "the", "end", "of", "August"]
# ::lemmas ["i", "think", "Disney", "be", "remove", "all", "their", "movie", "from", "Netflix", "the", "end", "of", "August"]
(c16-8 / think-01
       :ARG0 (c16-7 / i)
       :ARG1 (c16-2 / remove-01
                    :ARG0 (c16-6 / company
                                 :name (c16-0 / name
                                              :op1 "Disney"))
                    :ARG1 (c16-1 / movie
                                 :poss c16-6
                                 :mod (c16-3 / all))
                    :ARG2 c16-6
                    :name (c16-5 / name
                                 :op1 "Netflix"))
       :time (c16-4 / end-01
                    :ARG1 (c16-9 / date-entity
                                 :month 8)))

# ::snt bet it's only US though
# ::tokens ["bet", "it", "'s", "only", "US", "though"]
# ::lemmas ["bet", "it", "be", "only", "US", "though"]
(c17-3 / have-concession-91
       :ARG1 (c17-1 / bet-01
                    :ARG2 (c17-4 / country
                                 :name (c17-2 / name
                                              :op1 "US")
                                 :mod (c17-0 / only))))

# ::snt Omg finally
# ::tokens ["Omg", "finally"]
# ::lemmas ["Omg", "finally"]
(c18-0 / final
       :mod (c18-1 / oh-my-god
                   :mode expressive))

# ::snt Trupti wanted to see this
# ::tokens ["Trupti", "wanted", "to", "see", "this"]
# ::lemmas ["Trupti", "want", "to", "see", "this"]
(c19-3 / want-01
       :ARG0 (c19-2 / person
                    :name (c19-0 / name
                                 :op1 "Trupti"))
       :ARG1 (c19-1 / see-01
                    :ARG0 c19-2
                    :ARG1 (c19-4 / this)))

# ::snt OH MY GOSH WOW IM PUMPED
# ::tokens ["OH", "MY", "GOSH", "WOW", "IM", "PUMPED"]
# ::lemmas ["OH", "MY", "GOSH", "WOW", "IM", "PUMPED"]
(c20-2 / puke-01
       :ARG1 (c20-3 / i)
       :mod (c20-1 / oh
                   :op1 (c20-0 / gosh
                               :poss c20-3)
                   :mode expressive))

# ::snt She is dancing with some kind of troll bear nope
# ::tokens ["She", "is", "dancing", "with", "some", "kind", "of", "troll", "bear", "nope"]
# ::lemmas ["she", "be", "dance", "with", "some", "kind", "of", "troll", "bear", "nope"]
(c21-4 / and
       :op1 (c21-7 / dance-01
                   :ARG0 (c21-3 / she)
                   :accompanier (c21-1 / bear
                                       :mod (c21-6 / troll)
                                       :mod (c21-5 / kind
                                                   :mod (c21-0 / some))))
       :op2 (c21-2 / nope))

# ::snt My OTP! *You see, I would say sorry, but I'm really not. The heart loves what the heart loves. Right??*
# ::tokens ["My", "OTP", "!", "*", "You", "see", ",", "I", "would", "say", "sorry", ",", "but", "I", "'m", "really", "not", ".", "The", "heart", "loves", "what", "the", "heart", "loves", ".", "Right", "?", "?", "*"]
# ::lemmas ["my", "OTP", "!", "*", "you", "see", ",", "i", "would", "say", "sorry", ",", "but", "i", "be", "really", "not", ".", "the", "heart", "love", "what", "the", "heart", "love", ".", "right", "?", "?", "*"]
(c22-3 / multi-sentence
       :snt1 (c22-9 / person
                    :name (c22-2 / name
                                 :op1 "Obama")
                    :mod (c22-0 / original)
                    :mode expressive)
       :snt2 (c22-11 / contrast-01
                     :ARG1 (c22-4 / say-01
                                  :ARG0 (c22-13 / i)
                                  :ARG1 (c22-1 / sorry-01
                                               :ARG1 c22-13))
                     :ARG2 (c22-16 / say-01
                                   :ARG0 c22-13
                                   :ARG1 (c22-5 / sorry-01
                                                :ARG1 c22-13)
                                   :ARG1-of (c22-6 / real-04)
                                   :polarity -))
       :snt3 (c22-10 / love-01
                     :ARG0 (c22-8 / heart)
                     :ARG1 (c22-14 / thing
                                   :ARG1-of (c22-15 / love-01
                                                    :ARG0 (c22-12 / heart)))
                     :ARG1-of (c22-7 / request-confirmation-91)))

# ::snt !!!!
# ::tokens ["!", "!", "!", "!"]
# ::lemmas ["!", "!", "!", "!"]
(c23-0 / thing
       :mode expressive)

# ::snt ARE YOU FUCKING KIDDING ME?!! I BOUGHT IT FOR DOLLARS!!
# ::tokens ["ARE", "YOU", "FUCKING", "KIDDING", "ME", "?", "!", "!", "I", "BOUGHT", "IT", "FOR", "DOLLARS", "!", "!"]
# ::lemmas ["be", "you", "fucking", "kid", "ME", "?", "!", "!", "i", "buy", "it", "for", "dollar", "!", "!"]
(c24-3 / multi-sentence
       :snt1 (c24-5 / kid-01
                    :polarity (c24-7 / amr-unknown)
                    :ARG0 (c24-2 / you)
                    :ARG1 (c24-6 / i)
                    :mod (c24-0 / fucking
                                :mode expressive))
       :snt2 (c24-1 / bring-01
                    :ARG0 (c24-4 / i)
                    :ARG1 (c24-9 / it)
                    :ARG3 (c24-8 / dollar)))

# ::snt !!!!!
# ::tokens ["!", "!", "!", "!", "!"]
# ::lemmas ["!", "!", "!", "!", "!"]
(c25-0 / thing
       :mode expressive)

# ::snt - "OMG IM SO HAPPY"
# ::tokens ["-", "\"", "OMG", "IM", "SO", "HAPPY", "\""]
# ::lemmas ["-", "\"", "OMG", "IM", "SO", "HAPPY", "\""]
(c26-1 / happy-01
       :ARG1 (c26-2 / i)
       :degree (c26-3 / so)
       :mod (c26-0 / oh-my-god
                   :mode expressive))

# ::snt Only to get yanked when Disney releases their own service lol
# ::tokens ["Only", "to", "get", "yanked", "when", "Disney", "releases", "their", "own", "service", "lol"]
# ::lemmas ["only", "to", "get", "yank", "when", "Disney", "release", "their", "own", "service", "lol"]
(c27-1 / yank-01
       :ARG1 (c27-7 / i)
       :mod (c27-0 / only)
       :time (c27-4 / release-01
                    :ARG0 (c27-6 / company
                                 :name (c27-2 / name
                                              :op1 "Disney"))
                    :ARG1 (c27-3 / service
                                 :poss c27-6)
                    :ARG2-of (c27-5 / laugh-01
                                    :ARG0 c27-7
                                    :manner (c27-8 / loud)
                                    :mode expressive)))

# ::snt years
# ::tokens ["years"]
# ::lemmas ["years"]
(c28-1 / multiple
       :op1 (c28-2 / temporal-quantity
                   :unit (c28-0 / year)
                   :quant 1))

# ::snt now we don't have to pay to go see it!!!
# ::tokens ["now", "we", "do", "n't", "have", "to", "pay", "to", "go", "see", "it", "!", "!", "!"]
# ::lemmas ["now", "we", "do", "not", "have", "to", "pay", "to", "go", "see", "it", "!", "!", "!"]
(c30-0 / obligate-01
       :ARG1 (c30-4 / we)
       :ARG2 (c30-3 / pay-01
                    :ARG0 c30-4
                    :ARG3 (c30-6 / go-02
                                 :ARG0 c30-4
                                 :ARG4 (c30-2 / see-01
                                              :ARG0 c30-4
                                              :ARG1 (c30-5 / it))))
       :time (c30-1 / now)
       :polarity -)

# ::snt Merci pour votre rponse. Il me semble avoir vu effectivement un petit bout de bande annonce sur cette chane.
# ::tokens ["Merci", "pour", "votre", "rponse", ".", "Il", "me", "semble", "avoir", "vu", "effectivement", "un", "petit", "bout", "de", "bande", "annonce", "sur", "cette", "chane", "."]
# ::lemmas ["merci", "pour", "votre", "rponse", ".", "il", "i", "semble", "avoir", "vu", "effectivement", "un", "petit", "bout", "de", "bande", "annonce", "sur", "cette", "chane", "."]
(c31-4 / multi-sentence
       :snt1 (c31-8 / pour-03
                    :ARG1 (c31-5 / person
                                 :name (c31-3 / name
                                              :op1 "Merci"))
                    :ARG2 (c31-6 / vote-01
                                 :ARG0 c31-5))
       :snt2 (c31-9 / cause-01
                    :ARG0 (c31-13 / amr-unknown)
                    :ARG1 (c31-15 / possible-01
                                  :ARG1 (c31-10 / pursue-01
                                                :ARG0 (c31-12 / i)
                                                :ARG1 (c31-1 / unite-01
                                                             :ARG1 c31-12
                                                             :ARG2 (c31-2 / bande)
                                                             :time (c31-14 / after
                                                                           :op1 (c31-7 / event))
                                                             :ARG1-of (c31-16 / compare-01
                                                                              :ARG2 (c31-11 / cette
                                                                                            :mod (c31-0 / chane)))))
                                  :polarity -)))

# ::snt Gnralement entre et mois aprs la sortie.
# ::tokens ["Gnralement", "entre", "et", "mois", "aprs", "la", "sortie", "."]
# ::lemmas ["gnralement", "entre", "et", "mois", "aprs", "la", "sortie", "."]
(c32-2 / and
       :op1 (c32-3 / gnralement)
       :op2 (c32-1 / et-magnitude)
       :op3 (c32-4 / et-cetera)
       :subevent-of (c32-0 / sortie))

# ::snt Peut-tre aussi sur la chane "Canal Plus" "?
# ::tokens ["Peut", "-", "tre", "aussi", "sur", "la", "chane", "\"", "Canal", "Plus", "\"", "\"", "?"]
# ::lemmas ["Peut", "-", "tre", "aussi", "sur", "la", "chane", "\"", "Canal", "Plus", "\"", "\"", "?"]
(c33-1 / peut-tre-aussi
       :polarity (c33-3 / amr-unknown)
       :topic (c33-2 / product
                     :name (c33-0 / name
                                  :op1 "Canal"
                                  :op2 "Plus")))

# ::snt True though I usually don't until November when they are all on sale
# ::tokens ["True", "though", "I", "usually", "do", "n't", "until", "November", "when", "they", "are", "all", "on", "sale"]
# ::lemmas ["true", "though", "i", "usually", "do", "not", "until", "November", "when", "they", "be", "all", "on", "sale"]
(c34-5 / true-01
       :concession (c34-6 / do-02
                          :ARG0 (c34-4 / i)
                          :mod (c34-7 / usual)
                          :time (c34-2 / until
                                       :op1 (c34-3 / date-entity
                                                   :time-of (c34-0 / sell-01
                                                                   :ARG1 (c34-8 / they
                                                                                :mod (c34-1 / all)))
                                                   :month 11))
                          :polarity -))

# ::snt Taylor said she was gonna buy it
# ::tokens ["Taylor", "said", "she", "was", "gon", "na", "buy", "it"]
# ::lemmas ["Taylor", "say", "she", "be", "going", "to", "buy", "it"]
(c35-2 / say-01
       :ARG0 (c35-3 / person
                    :name (c35-1 / name
                                 :op1 "Taylor"))
       :ARG1 (c35-0 / buy-01
                    :ARG0 c35-3
                    :ARG1 (c35-4 / it)))

# ::snt I'm shook
# ::tokens ["I", "'m", "shook"]
# ::lemmas ["i", "be", "shake"]
(c36-1 / shake-01
       :ARG1 (c36-0 / i))

# ::snt Nope I did not.
# ::tokens ["Nope", "I", "did", "not", "."]
# ::lemmas ["nope", "i", "do", "not", "."]
(c37-0 / do-02
       :ARG0 (c37-1 / i)
       :polarity -)

# ::snt thank god
# ::tokens ["thank", "god"]
# ::lemmas ["thank", "god"]
(c38-2 / thank-01
       :ARG1 (c38-1 / person
                    :name (c38-0 / name
                                 :op1 "God")))

# ::snt Yesss
# ::tokens ["Yesss"]
# ::lemmas ["yesss"]
(c40-0 / yesss)

# ::snt She didn't tell me if she did
# ::tokens ["She", "did", "n't", "tell", "me", "if", "she", "did"]
# ::lemmas ["she", "do", "not", "tell", "i", "if", "she", "do"]
(c41-1 / tell-01
       :ARG0 (c41-0 / she)
       :ARG1 (c41-3 / truth-value
                    :polarity-of (c41-4 / do-02
                                        :ARG0 c41-0))
       :ARG2 (c41-2 / i)
       :polarity -)

# ::snt Didn't Rossy already buy it?
# ::tokens ["Did", "n't", "Rossy", "already", "buy", "it", "?"]
# ::lemmas ["do", "not", "Rossy", "already", "buy", "it", "?"]
(c42-0 / buy-01
       :ARG0 (c42-2 / person
                    :name (c42-1 / name
                                 :op1 "Rossy"))
       :ARG1 (c42-3 / it)
       :polarity (c42-4 / amr-unknown)
       :time (c42-5 / already))

# ::snt !!!
# ::tokens ["!", "!", "!"]
# ::lemmas ["!", "!", "!"]
(c43-0 / thing
       :mode expressive)

# ::snt I thought Disney was pulling all there movies from Netflix to start there own service????
# ::tokens ["I", "thought", "Disney", "was", "pulling", "all", "there", "movies", "from", "Netflix", "to", "start", "there", "own", "service", "?", "?", "?", "?"]
# ::lemmas ["i", "think", "Disney", "be", "pull", "all", "there", "movie", "from", "Netflix", "to", "start", "there", "own", "service", "?", "?", "?", "?"]
(c45-9 / think-01
       :ARG0 (c45-8 / i)
       :ARG1 (c45-6 / pull-01
                    :ARG0 (c45-7 / company
                                 :name (c45-1 / name
                                              :op1 "Disney"))
                    :ARG1 (c45-2 / movie
                                 :mod (c45-4 / all))
                    :ARG2 c45-7
                    :name (c45-5 / name
                                 :op1 "Netflix"))
       :purpose (c45-3 / start-01
                       :ARG0 c45-7
                       :ARG1 (c45-0 / serve-01
                                    :ARG0 c45-7))
       :polarity (c45-10 / amr-unknown))

# ::snt Best series -Gypsy is now streaming on Netflix
# ::tokens ["Best", "series", "-Gypsy", "is", "now", "streaming", "on", "Netflix"]
# ::lemmas ["good", "series", "-gypsy", "be", "now", "stream", "on", "Netflix"]
(c47-4 / stream-01
       :ARG1 (c47-1 / broadcast-program
                    :name (c47-2 / name
                                 :op1 "Gypsy")
                    :ARG1-of (c47-5 / have-degree-91
                                    :ARG2 (c47-9 / good-02
                                                 :ARG1 c47-1)
                                    :ARG3 (c47-3 / most))
                    :mod (c47-0 / series))
       :medium (c47-8 / company
                      :name (c47-6 / name
                                   :op1 "Netflix"))
       :time (c47-7 / now))

# ::snt Can't wait for this movie to come to netflix so I can watch it
# ::tokens ["Ca", "n't", "wait", "for", "this", "movie", "to", "come", "to", "netflix", "so", "I", "can", "watch", "it"]
# ::lemmas ["can", "not", "wait", "for", "this", "movie", "to", "come", "to", "netflix", "so", "i", "can", "watch", "it"]
(c48-4 / wait-01
       :ARG1 (c48-6 / i)
       :ARG2 (c48-5 / come-01
                    :ARG1 (c48-0 / movie
                                 :mod (c48-7 / this))
                    :ARG4 (c48-8 / company
                                 :name (c48-1 / name
                                              :op1 "Netflix"))
                    :purpose (c48-2 / possible-01
                                    :ARG1 (c48-3 / watch-01
                                                 :ARG0 c48-6
                                                 :ARG1 c48-0))))
