# ::snt Congrats Adele Dazeem
# ::tokens ["Congrats", "Adele", "Dazeem"]
# ::lemmas ["Congrats", "Adele", "dazeem"]
(c1-1 / say-01
      :ARG1 (c1-3 / congratulate-01
                  :ARG0 (c1-4 / i)
                  :ARG1 (c1-2 / person
                              :name (c1-0 / name
                                          :op1 "Adele"
                                          :op2 "Dazeem")
                              :ARG2-of c1-1)))

# ::snt Love love love Idina! Happy for her
# ::tokens ["Love", "love", "love", "Idina", "!", "Happy", "for", "her"]
# ::lemmas ["love", "love", "love", "Idina", "!", "happy", "for", "she"]
(c4-1 / multi-sentence
      :snt1 (c4-5 / love-01
                  :ARG1 (c4-4 / person
                              :name (c4-0 / name
                                          :op1 "Idina"))
                  :mode expressive)
      :snt2 (c4-3 / happy-01
                  :ARG1 (c4-2 / she)))

# ::snt Let's see how long this one is going to last .
# ::tokens ["Let", "'s", "see", "how", "long", "this", "one", "is", "going", "to", "last", "."]
# ::lemmas ["let", "us", "see", "how", "long", "this", "one", "be", "go", "to", "last", "."]
(c5-1 / see-01
      :ARG0 (c5-3 / we)
      :ARG1 (c5-4 / temporal-quantity
                  :duration-of (c5-2 / last-01
                                     :ARG1 (c5-0 / one
                                                 :mod (c5-5 / this))))
      :mode imperative)
