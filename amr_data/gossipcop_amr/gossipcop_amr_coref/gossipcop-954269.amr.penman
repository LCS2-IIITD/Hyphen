# ::snt Has anyone checked all the manikins at the nearest Goodwill??
# ::tokens ["Has", "anyone", "checked", "all", "the", "manikins", "at", "the", "nearest", "Goodwill", "?", "?"]
# ::lemmas ["have", "anyone", "check", "all", "the", "manikin", "at", "the", "near", "Goodwill", "?", "?"]
(c1-6 / check-01
      :ARG0 (c1-9 / anyone)
      :ARG1 (c1-1 / manikin
                  :mod (c1-8 / all))
      :polarity (c1-7 / amr-unknown)
      :location (c1-0 / facility
                      :name (c1-2 / name
                                  :op1 "Goodwill")
                      :ARG1-of (c1-3 / near-02
                                     :ARG2-of (c1-4 / have-degree-91
                                                    :ARG1 c1-0
                                                    :ARG3 (c1-5 / most)))))

# ::snt Damn, I had forgotten all about him. He was so very odd
# ::tokens ["Damn", ",", "I", "had", "forgotten", "all", "about", "him", ".", "He", "was", "so", "very", "odd"]
# ::lemmas ["damn", ",", "i", "have", "forget", "all", "about", "he", ".", "he", "be", "so", "very", "odd"]
(c2-2 / multi-sentence
      :snt1 (c2-0 / forget-01
                  :ARG0 (c2-7 / i)
                  :ARG1 (c2-5 / he)
                  :mod (c2-9 / damn
                             :mode expressive)
                  :mod (c2-8 / all))
      :snt2 (c2-1 / odd
                  :domain (c2-6 / he)
                  :degree (c2-4 / very
                                :degree (c2-3 / so))))

# ::snt Looking for In hrscontract
# ::tokens ["Looking", "for", "In", "hrscontract"]
# ::lemmas ["look", "for", "in", "hrscontract"]
(c3-1 / look-01
      :ARG1 (c3-2 / thing
                  :name (c3-0 / name
                              :op1 "In"
                              :op2 "HRscontract")))

# ::snt Did they find him?
# ::tokens ["Did", "they", "find", "him", "?"]
# ::lemmas ["do", "they", "find", "he", "?"]
(c4-0 / find-01
      :polarity (c4-3 / amr-unknown)
      :ARG0 (c4-2 / they)
      :ARG1 (c4-1 / he))

# ::snt That is a good family member. I've gone years and no one has asked where I was.
# ::tokens ["That", "is", "a", "good", "family", "member", ".", "I", "'ve", "gone", "years", "and", "no", "one", "has", "asked", "where", "I", "was", "."]
# ::lemmas ["that", "be", "a", "good", "family", "member", ".", "i", "'ve", "go", "year", "and", "no", "one", "have", "ask", "where", "i", "be", "."]
(c5-2 / multi-sentence
      :snt1 (c5-6 / person
                  :ARG0-of (c5-7 / have-org-role-91
                                 :ARG1 (c5-0 / family)
                                 :ARG2 (c5-5 / member)
                                 :ARG1-of (c5-10 / good-02))
                  :domain (c5-9 / that))
      :snt2 (c5-4 / and
                  :op1 (c5-8 / go-02
                             :ARG0 (c5-11 / i)
                             :duration (c5-14 / multiple
                                              :op1 (c5-15 / temporal-quantity
                                                          :unit (c5-1 / year)
                                                          :quant 1)))
                  :op2 (c5-12 / ask-01
                              :ARG0 (c5-3 / no-one)
                              :ARG1 (c5-13 / thing
                                           :location-of c5-11))))

# ::snt Good news!! Thanks for the update!!
# ::tokens ["Good", "news", "!", "!", "Thanks", "for", "the", "update", "!", "!"]
# ::lemmas ["good", "news", "!", "!", "thank", "for", "the", "update", "!", "!"]
(c6-2 / multi-sentence
      :snt1 (c6-1 / news
                  :ARG1-of (c6-5 / good-02))
      :snt2 (c6-4 / thank-01
                  :ARG0 (c6-3 / i)
                  :ARG1 (c6-0 / you)
                  :ARG2 (c6-6 / update-02
                              :ARG0 c6-0)))

# ::snt This kid was something else ://
# ::tokens ["This", "kid", "was", "something", "else", ":", "//"]
# ::lemmas ["this", "kid", "be", "something", "else", ":", "//"]
(c7-3 / something
      :mod (c7-1 / else)
      :domain (c7-2 / kid
                    :mod (c7-0 / this)))

# ::snt He was/is cool, that's for sure. I hope he'll be ok.
# ::tokens ["He", "was", "/", "is", "cool", ",", "that", "'s", "for", "sure", ".", "I", "hope", "he", "'ll", "be", "ok", "."]
# ::lemmas ["he", "be", "/", "be", "cool", ",", "that", "be", "for", "sure", ".", "i", "hope", "he", "'ll", "be", "ok", "."]
(c8-1 / multi-sentence
      :snt1 (c8-5 / cool-04
                  :ARG1 (c8-4 / he)
                  :mod (c8-8 / too)
                  :ARG1-of (c8-2 / sure-02))
      :snt2 (c8-6 / hope-01
                  :ARG0 (c8-7 / i)
                  :ARG1 (c8-0 / okay-03
                              :ARG1 (c8-3 / he))))

# ::snt He's starting to look...OLD!!!
# ::tokens ["He", "'s", "starting", "to", "look", "...", "OLD", "!", "!", "!"]
# ::lemmas ["he", "be", "start", "to", "look", "...", "old", "!", "!", "!"]
(c9-3 / start-01
      :ARG0 (c9-1 / he)
      :ARG1 (c9-2 / look-02
                  :ARG0 c9-1
                  :ARG1 (c9-0 / OLD
                              :mode expressive)))

# ::snt Who the hell is he? And who the hell cares???
# ::tokens ["Who", "the", "hell", "is", "he", "?", "And", "who", "the", "hell", "cares", "?", "?", "?"]
# ::lemmas ["who", "the", "hell", "be", "he", "?", "and", "who", "the", "hell", "care", "?", "?", "?"]
(c10-0 / multi-sentence
       :snt1 (c10-2 / he
                    :domain (c10-7 / amr-unknown
                                   :mod (c10-5 / hell)))
       :snt2 (c10-6 / and
                    :op2 (c10-3 / care-01
                                :ARG0 (c10-4 / amr-unknown
                                             :mod (c10-1 / hell)))))

# ::snt Oh thank god.
# ::tokens ["Oh", "thank", "god", "."]
# ::lemmas ["oh", "thank", "god", "."]
(c11-3 / thank-01
       :ARG1 (c11-2 / person
                    :name (c11-0 / name
                                 :op1 "God"))
       :mod (c11-1 / oh
                   :mode expressive))

# ::snt Thats good news , I was worried was gonna have to play him in his Bio-Pic , &amp; could play themselves theyve aged well.
# ::tokens ["That", "s", "good", "news", ",", "I", "was", "worried", "was", "gon", "na", "have", "to", "play", "him", "in", "his", "Bio", "-", "Pic", ",", "&", "amp", ";", "could", "play", "themselves", "they", "ve", "aged", "well", "."]
# ::lemmas ["that", "s", "good", "news", ",", "i", "be", "worried", "be", "going", "to", "have", "to", "play", "he", "in", "his", "Bio", "-", "Pic", ",", "&", "amp", ";", "could", "play", "themselves", "they", "ve", "age", "well", "."]
(c12-2 / multi-sentence
       :snt1 (c12-1 / news
                    :ARG1-of (c12-13 / good-02)
                    :domain (c12-12 / that))
       :snt2 (c12-9 / worry-01
                    :ARG0 (c12-0 / obligate-01
                                 :ARG1 (c12-11 / i)
                                 :ARG2 (c12-6 / play-01
                                              :ARG0 c12-11
                                              :ARG1 (c12-5 / he)
                                              :location (c12-4 / and
                                                               :op1 (c12-3 / product
                                                                           :name (c12-7 / name
                                                                                        :op1 "Biology"
                                                                                        :op2 "Pic")
                                                                           :op2-of c12-4)
                                                               :name c12-7
                                                               :op1 "&amp"))))
       :ARG1 c12-11
       :snt3 (c12-14 / possible-01
                     :ARG1 (c12-10 / play-01
                                   :ARG0 (c12-15 / they
                                                 :ARG1-of c12-10)
                                   :ARG1-of (c12-8 / well-09))))

# ::snt For years?
# ::tokens ["For", "years", "?"]
# ::lemmas ["for", "years", "?"]
(c13-2 / multiple
       :op1 (c13-3 / temporal-quantity
                   :unit (c13-1 / year)
                   :quant 1)
       :polarity (c13-0 / amr-unknown))

# ::snt Pray they find him safe and well Smen
# ::tokens ["Pray", "they", "find", "him", "safe", "and", "well", "Smen"]
# ::lemmas ["pray", "they", "find", "he", "safe", "and", "well", "Smen"]
(c14-4 / say-01
       :ARG0 (c14-9 / i)
       :ARG1 (c14-7 / pray-01
                    :ARG0 c14-9
                    :ARG1 (c14-0 / find-01
                                 :ARG0 (c14-10 / they)
                                 :ARG1 (c14-5 / and
                                              :op1 (c14-1 / safe-01
                                                          :ARG1 (c14-6 / he))
                                              :op2 (c14-8 / well-09
                                                          :ARG1 c14-6))))
       :ARG2 (c14-3 / person
                    :name (c14-2 / name
                                 :op1 "Shen")))

# ::snt Maybe hes camping.
# ::tokens ["Maybe", "he", "s", "camping", "."]
# ::lemmas ["maybe", "he", "s", "camp", "."]
(c15-2 / possible-01
       :ARG1 (c15-0 / camp-02
                    :ARG0 (c15-1 / he)))

# ::snt whos covering his shift at chipoltle?
# ::tokens ["who", "s", "covering", "his", "shift", "at", "chipoltle", "?"]
# ::lemmas ["who", "s", "cover", "his", "shift", "at", "chipoltle", "?"]
(c16-3 / cover-03
       :ARG0 (c16-4 / amr-unknown)
       :ARG1 (c16-1 / shift
                    :poss (c16-2 / he)
                    :location (c16-5 / company
                                     :name (c16-0 / name
                                                  :op1 " chipoltle"))))

# ::snt Oh man, hope they find him ok..
# ::tokens ["Oh", "man", ",", "hope", "they", "find", "him", "ok", ".."]
# ::lemmas ["oh", "man", ",", "hope", "they", "find", "he", "ok", ".."]
(c17-3 / hope-01
       :ARG0 (c17-5 / i)
       :ARG1 (c17-0 / find-01
                    :ARG0 (c17-6 / they)
                    :ARG1 (c17-1 / okay-03
                                 :ARG1 (c17-4 / he)))
       :mod (c17-2 / oh
                   :mode expressive)
       :mode expressive)

# ::snt I didn't know obscurity was a place.
# ::tokens ["I", "did", "n't", "know", "obscurity", "was", "a", "place", "."]
# ::lemmas ["i", "do", "not", "know", "obscurity", "be", "a", "place", "."]
(c18-1 / know-01
       :ARG0 (c18-2 / i)
       :ARG1 (c18-0 / place
                    :domain (c18-3 / obscure-02))
       :polarity -)

# ::snt Holy crap that picture looks NOTHING like how imagine him to look like. Hell forever be the young kid on MTV to me. Aging is a mind eff.
# ::tokens ["Holy", "crap", "that", "picture", "looks", "NOTHING", "like", "how", "imagine", "him", "to", "look", "like", ".", "Hell", "forever", "be", "the", "young", "kid", "on", "MTV", "to", "me", ".", "Aging", "is", "a", "mind", "eff", "."]
# ::lemmas ["holy", "crap", "that", "picture", "look", "nothing", "like", "how", "imagine", "he", "to", "look", "like", ".", "Hell", "forever", "be", "the", "young", "kid", "on", "MTV", "to", "i", ".", "aging", "be", "a", "mind", "eff", "."]
(c19-10 / multi-sentence
        :snt1 (c19-0 / look-02
                     :ARG0 (c19-17 / picture)
                     :ARG1 (c19-14 / nothing)
                     :ARG2 (c19-19 / imagine-01
                                   :ARG0 (c19-1 / you)
                                   :ARG1 (c19-4 / he)
                                   :ARG2-of (c19-15 / resemble-01
                                                    :ARG1 c19-4))
                     :mod (c19-12 / crap
                                  :mod (c19-18 / holy)
                                  :mode expressive))
        :snt2 (c19-5 / kid
                     :domain (c19-2 / i)
                     :mod (c19-8 / young)
                     :location (c19-9 / broadcast-program
                                      :name (c19-11 / name
                                                    :op1 "MTV"))
                     :mod (c19-3 / hell
                                 :mode expressive)
                     :time (c19-13 / forever))
        :snt3 (c19-6 / mind
                     :mod (c19-16 / eff
                                  :mode expressive)
                     :domain (c19-7 / age-01)))

# ::snt Looks like he has a Klinger fetish
# ::tokens ["Looks", "like", "he", "has", "a", "Klinger", "fetish"]
# ::lemmas ["look", "like", "he", "have", "a", "Klinger", "fetish"]
(c20-3 / look-02
       :ARG1 (c20-2 / have-03
                    :ARG0 (c20-5 / he)
                    :ARG1 (c20-0 / fetish
                                 :mod (c20-4 / person
                                             :name (c20-1 / name
                                                          :op1 "Klinger")))))

# ::snt We need to find this guy; too much of our raw-talent is being snuffed away; still praying...
# ::tokens ["We", "need", "to", "find", "this", "guy", ";", "too", "much", "of", "our", "raw", "-", "talent", "is", "being", "snuffed", "away", ";", "still", "praying", "..."]
# ::lemmas ["we", "need", "to", "find", "this", "guy", ";", "too", "much", "of", "our", "raw", "-", "talent", "be", "be", "snuff", "away", ";", "still", "pray", "..."]
(c22-3 / multi-sentence
       :snt1 (c22-2 / need-01
                    :ARG0 (c22-10 / we)
                    :ARG1 (c22-0 / find-01
                                 :ARG0 c22-10
                                 :ARG1 (c22-13 / guy
                                               :mod (c22-12 / this))))
       :snt2 (c22-4 / snuff-away-02
                    :ARG1 (c22-15 / talent
                                  :poss (c22-9 / we)
                                  :mod (c22-5 / raw)
                                  :ARG1-of (c22-6 / have-quant-91
                                                  :ARG2 (c22-7 / much)
                                                  :ARG3 (c22-11 / too))))
       :snt3 (c22-8 / pray-01
                    :ARG0 (c22-14 / i)
                    :mod (c22-1 / still)))

# ::snt Jessie missing? He/She, has been missing for years!
# ::tokens ["Jessie", "missing", "?", "He", "/", "She", ",", "has", "been", "missing", "for", "years", "!"]
# ::lemmas ["Jessie", "miss", "?", "he", "/", "She", ",", "have", "be", "miss", "for", "years", "!"]
(c23-3 / multi-sentence
       :snt1 (c23-5 / miss-01
                    :ARG1 (c23-6 / person
                                 :name (c23-2 / name
                                              :op1 "Jessie"))
                    :polarity (c23-10 / amr-unknown))
       :snt2 (c23-11 / miss-01
                     :ARG1 (c23-4 / slash
                                  :op1 (c23-7 / he)
                                  :op2 (c23-0 / she))
                     :duration (c23-8 / multiple
                                      :op1 (c23-9 / temporal-quantity
                                                  :unit (c23-1 / year)
                                                  :quant 1))))

# ::snt Located
# ::tokens ["Located"]
# ::lemmas ["locate"]
(c24-0 / locate-01)

# ::snt Is this him or his sister?
# ::tokens ["Is", "this", "him", "or", "his", "sister", "?"]
# ::lemmas ["be", "this", "he", "or", "his", "sister", "?"]
(c25-5 / amr-choice
       :op1 (c25-1 / he)
       :op2 (c25-2 / person
                   :ARG0-of (c25-3 / have-rel-role-91
                                   :ARG1 c25-1
                                   :ARG2 (c25-0 / sister)))
       :domain (c25-4 / this))

# ::snt So hoping hes ok. I remember watching him on that show. Wow!
# ::tokens ["So", "hoping", "he", "s", "ok", ".", "I", "remember", "watching", "him", "on", "that", "show", ".", "Wow", "!"]
# ::lemmas ["so", "hope", "he", "s", "ok", ".", "i", "remember", "watch", "he", "on", "that", "show", ".", "wow", "!"]
(c26-2 / multi-sentence
       :snt1 (c26-7 / hope-01
                    :ARG0 (c26-11 / i)
                    :ARG1 (c26-0 / okay-03
                                 :ARG1 (c26-10 / he))
                    :mod (c26-3 / so))
       :snt2 (c26-5 / remember-01
                    :ARG0 (c26-4 / i)
                    :ARG1 (c26-9 / watch-01
                                 :ARG0 c26-4
                                 :ARG1 (c26-6 / he)
                                 :location (c26-1 / show-04
                                                  :mod (c26-12 / that))))
       :snt3 (c26-8 / wow-01
                    :mode expressive))

# ::snt yikes
# ::tokens ["yikes"]
# ::lemmas ["yike"]
(c28-0 / yikes)

# ::snt Old news.
# ::tokens ["Old", "news", "."]
# ::lemmas ["old", "news", "."]
(c29-1 / news
       :mod (c29-0 / old))

# ::snt so relieved !!! &lt;3 &lt;3 !!!
# ::tokens ["so", "relieved", "!", "!", "!", "&", "lt;3", "&", "lt;3", "!", "!", "!"]
# ::lemmas ["so", "relieved", "!", "!", "!", "&", "lt;3", "&", "lt;3", "!", "!", "!"]
(c30-0 / relieve-01
       :degree (c30-1 / so)
       :mode expressive)

# ::snt Saesar
# ::tokens ["Saesar"]
# ::lemmas ["Saesar"]
(c31-1 / person
       :name (c31-0 / name
                    :op1 "Saesar"))

# ::snt Damn. FONTANA? What a fall.
# ::tokens ["Damn", ".", "FONTANA", "?", "What", "a", "fall", "."]
# ::lemmas ["Damn", ".", "FONTANA", "?", "what", "a", "fall", "."]
(c32-2 / multi-sentence
       :snt1 (c32-6 / damn
                    :mode expressive)
       :snt2 (c32-4 / city
                    :name (c32-1 / name
                                 :op1 "FONTANA")
                    :polarity (c32-5 / amr-unknown))
       :snt3 (c32-0 / fall-01
                    :degree (c32-3 / so)))

# ::snt Where he go to....
# ::tokens ["Where", "he", "go", "to", "...."]
# ::lemmas ["where", "he", "go", "to", "...."]
(c33-2 / thing
       :ARG4-of (c33-0 / go-02
                       :ARG0 (c33-1 / he)))
