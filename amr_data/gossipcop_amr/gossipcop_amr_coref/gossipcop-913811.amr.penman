# ::snt like why are we the same and why don't we hang out more
# ::tokens ["like", "why", "are", "we", "the", "same", "and", "why", "do", "n't", "we", "hang", "out", "more"]
# ::lemmas ["like", "why", "be", "we", "the", "same", "and", "why", "do", "not", "we", "hang", "out", "more"]
(c1-2 / exemplify-01
      :ARG0 (c1-8 / and
                  :op1 (c1-4 / cause-01
                             :ARG0 (c1-7 / amr-unknown)
                             :ARG1 (c1-1 / same-01
                                         :ARG1 (c1-5 / we)))
                  :op2 (c1-9 / cause-01
                             :ARG0 (c1-6 / amr-unknown)
                             :ARG1 (c1-3 / hang-out-06
                                         :ARG1 c1-5
                                         :ARG2 (c1-0 / more)
                                         :polarity -))))

# ::snt i signed back into the twitter app just to comment on the use of the phrase "tumultuous relaish,," i for one live
# ::tokens ["i", "signed", "back", "into", "the", "twitter", "app", "just", "to", "comment", "on", "the", "use", "of", "the", "phrase", "\"", "tumultuous", "relaish", ",", ",", "\"", "i", "for", "one", "live"]
# ::lemmas ["i", "sign", "back", "into", "the", "twitter", "app", "just", "to", "comment", "on", "the", "use", "of", "the", "phrase", "\"", "tumultuous", "relaish", ",", ",", "\"", "i", "for", "one", "live"]
(c2-3 / sign-01
      :ARG0 (c2-10 / i)
      :ARG2 (c2-6 / publication
                  :name (c2-1 / name
                              :op1 "Twitter"))
      :direction (c2-0 / back)
      :purpose (c2-8 / comment-01
                     :ARG0 c2-10
                     :ARG3 (c2-11 / use-01
                                  :ARG1 (c2-2 / phrase-01
                                              :ARG2 (c2-5 / relaish
                                                          :mod (c2-4 / incest))))
                     :mod (c2-9 / just)
                     :ARG1-of (c2-7 / live-01
                                    :ARG0 c2-10)))

# ::snt You can bet on that
# ::tokens ["You", "can", "bet", "on", "that"]
# ::lemmas ["you", "can", "bet", "on", "that"]
(c3-2 / possible-01
      :ARG1 (c3-0 / bet-01
                  :ARG0 (c3-1 / you)
                  :ARG2 (c3-3 / that)))

# ::snt What happened to him? Yikes
# ::tokens ["What", "happened", "to", "him", "?", "Yikes"]
# ::lemmas ["what", "happen", "to", "he", "?", "yike"]
(c4-1 / multi-sentence
      :snt1 (c4-2 / event
                  :mod (c4-3 / he)
                  :mod (c4-4 / amr-unknown))
      :snt2 (c4-0 / yikes))

# ::snt I can't un see it
# ::tokens ["I", "ca", "n't", "un", "see", "it"]
# ::lemmas ["i", "can", "not", "un", "see", "it"]
(c5-1 / possible-01
      :ARG1 (c5-3 / see-01
                  :ARG0 (c5-2 / i)
                  :ARG1 (c5-0 / it))
      :polarity -)

# ::snt Liza looks better!
# ::tokens ["Liza", "looks", "better", "!"]
# ::lemmas ["Liza", "look", "well", "!"]
(c6-4 / look-02
      :ARG0 (c6-3 / person
                  :name (c6-0 / name
                              :op1 "Liza"))
      :ARG1 (c6-5 / good-02
                  :ARG2-of (c6-2 / have-degree-91
                                 :ARG1 c6-3
                                 :ARG3 (c6-1 / more))))

# ::snt Sweet lord he looks so bad now
# ::tokens ["Sweet", "lord", "he", "looks", "so", "bad", "now"]
# ::lemmas ["sweet", "lord", "he", "look", "so", "bad", "now"]
(c7-5 / look-02
      :ARG0 (c7-4 / he)
      :ARG1 (c7-1 / bad-07
                  :degree (c7-3 / so))
      :time (c7-2 / now)
      :mod (c7-6 / lord
                 :mod (c7-0 / sweet)
                 :mode expressive))

# ::snt GROSS!!!!
# ::tokens ["GROSS", "!", "!", "!", "!"]
# ::lemmas ["GROSS", "!", "!", "!", "!"]
(c8-0 / win-01
      :mode expressive)

# ::snt He looks like Liza Minnelli now
# ::tokens ["He", "looks", "like", "Liza", "Minnelli", "now"]
# ::lemmas ["he", "look", "like", "Liza", "Minnelli", "now"]
(c9-3 / look-02
      :ARG0 (c9-1 / he)
      :ARG1 (c9-2 / person
                  :name (c9-0 / name
                              :op1 "Liza"
                              :op2 "Minnelli"))
      :time (c9-4 / now))

# ::snt He looks dead
# ::tokens ["He", "looks", "dead"]
# ::lemmas ["he", "look", "dead"]
(c10-2 / look-02
       :ARG0 (c10-1 / he)
       :ARG1 (c10-0 / die-01
                    :ARG1 c10-1))
