# ::snt "Tying up Noose Ends". This season, everyone dies!
# ::tokens ["\"", "Tying", "up", "Noose", "Ends", "\"", ".", "This", "season", ",", "everyone", "dies", "!"]
# ::lemmas ["\"", "Tying", "up", "Noose", "Ends", "\"", ".", "This", "season", ",", "everyone", "die", "!"]
(c1-1 / multi-sentence
      :snt1 (c1-4 / end-01
                  :ARG1 (c1-5 / tie-up-05
                              :ARG1 (c1-0 / noose)))
      :snt2 (c1-6 / die-01
                  :ARG1 (c1-2 / everyone)
                  :time (c1-3 / season
                              :mod (c1-7 / this))))

# ::snt we had closure with Hannah's story. Don't get me wrong, loved the show, but an S2 feels forced.
# ::tokens ["we", "had", "closure", "with", "Hannah", "'s", "story", ".", "Do", "n't", "get", "me", "wrong", ",", "loved", "the", "show", ",", "but", "an", "S2", "feels", "forced", "."]
# ::lemmas ["we", "have", "closure", "with", "Hannah", "'s", "story", ".", "do", "not", "get", "i", "wrong", ",", "love", "the", "show", ",", "but", "an", "S2", "feels", "force", "."]
(c2-3 / multi-sentence
      :snt1 (c2-11 / close-01
                   :ARG0 (c2-12 / we)
                   :ARG1 (c2-5 / story
                               :poss (c2-7 / person
                                           :name (c2-4 / name
                                                       :op1 "Hannah"))))
      :snt2 (c2-15 / contrast-01
                   :ARG1 (c2-14 / get-04
                                :ARG0 (c2-2 / you)
                                :ARG1 (c2-9 / wrong-04
                                            :ARG1 (c2-13 / i))
                                :polarity -
                                :mode imperative)
                   :ARG2 (c2-8 / love-01
                               :ARG0 c2-13
                               :ARG1 (c2-0 / show-04)))
      :ARG2 (c2-1 / feel-01
                  :ARG0 (c2-16 / spaceship
                               :name (c2-6 / name
                                           :op1 "S2"))
                  :ARG1 (c2-10 / force-01
                               :ARG2 c2-16)))

# ::snt Then they'll call it the reasons why??
# ::tokens ["Then", "they", "'ll", "call", "it", "the", "reasons", "why", "?", "?"]
# ::lemmas ["then", "they", "'ll", "call", "it", "the", "reason", "why", "?", "?"]
(c3-0 / call-01
      :ARG0 (c3-1 / they)
      :ARG1 (c3-2 / it)
      :ARG2 (c3-3 / amr-unknown
                  :ARG0-of (c3-5 / cause-01))
      :time (c3-4 / then))

# ::snt yes I don't understand what they could do for a second season although it did end awkwardly
# ::tokens ["yes", "I", "do", "n't", "understand", "what", "they", "could", "do", "for", "a", "second", "season", "although", "it", "did", "end", "awkwardly"]
# ::lemmas ["yes", "i", "do", "not", "understand", "what", "they", "could", "do", "for", "a", "second", "season", "although", "it", "do", "end", "awkwardly"]
(c5-9 / understand-01
      :ARG0 (c5-6 / i)
      :ARG1 (c5-5 / thing
                  :ARG1-of (c5-8 / do-02
                                 :ARG0 (c5-7 / they)
                                 :ARG2 (c5-1 / season
                                             :ord (c5-0 / ordinal-entity
                                                        :value 2))
                                 :ARG1-of (c5-4 / possible-01)))
      :concession (c5-3 / end-01
                        :ARG1 c5-1
                        :manner (c5-2 / awkward))
      :polarity -)

# ::snt I got through all episodes in days, between two days of work and a dance comp its soooo good!!
# ::tokens ["I", "got", "through", "all", "episodes", "in", "days", ",", "between", "two", "days", "of", "work", "and", "a", "dance", "comp", "its", "soooo", "good", "!", "!"]
# ::lemmas ["i", "get", "through", "all", "episode", "in", "days", ",", "between", "two", "days", "of", "work", "and", "a", "dance", "comp", "its", "soooo", "good", "!", "!"]
(c6-1 / multi-sentence
      :snt1 (c6-13 / get-through-13
                   :ARG0 (c6-11 / i)
                   :ARG1 (c6-4 / episode
                               :mod (c6-12 / all))
                   :duration (c6-5 / multiple
                                   :op1 (c6-10 / temporal-quantity
                                               :unit (c6-14 / day)
                                               :quant 1)))
      :snt2 (c6-15 / good-02
                   :ARG1 (c6-3 / it)
                   :degree (c6-2 / so)
                   :time (c6-0 / between
                               :op1 (c6-7 / work-01
                                          :duration (c6-16 / temporal-quantity
                                                           :unit (c6-8 / day)
                                                           :quant 2))
                               :op2 (c6-9 / comp
                                          :mod (c6-6 / dance-01)))))

# ::snt Ive not watched season yet, finishing Shadowhunters first
# ::tokens ["I", "ve", "not", "watched", "season", "yet", ",", "finishing", "Shadowhunters", "first"]
# ::lemmas ["i", "ve", "not", "watch", "season", "yet", ",", "finish", "shadowhunter", "first"]
(c7-8 / and
      :op1 (c7-6 / watch-01
                 :ARG0 (c7-7 / i)
                 :ARG1 (c7-4 / season)
                 :time (c7-2 / yet)
                 :polarity -)
      :op2 (c7-0 / finish-01
                 :ARG0 c7-7
                 :ARG1 (c7-5 / work-of-art
                             :name (c7-3 / name
                                         :op1 "Shadowhunters"))
                 :ord (c7-1 / ordinal-entity
                            :value 1)))

# ::snt CALLL ME !!! Thank u!!!
# ::tokens ["CALLL", "ME", "!", "!", "!", "Thank", "u", "!", "!", "!"]
# ::lemmas ["CALLL", "ME", "!", "!", "!", "thank", "u", "!", "!", "!"]
(c8-1 / multi-sentence
      :snt1 (c8-3 / carry-01
                  :ARG0 (c8-0 / you)
                  :ARG1 (c8-4 / i)
                  :mode imperative)
      :snt2 (c8-5 / thank-01
                  :ARG0 (c8-2 / i)
                  :ARG1 (c8-6 / you)
                  :mode expressive))

# ::snt Now this is bad
# ::tokens ["Now", "this", "is", "bad"]
# ::lemmas ["now", "this", "be", "bad"]
(c9-0 / bad-07
      :ARG1 (c9-2 / this)
      :time (c9-1 / now))

# ::snt Yeah i know jk lol
# ::tokens ["Yeah", "i", "know", "jk", "lol"]
# ::lemmas ["yeah", "i", "know", "jk", "lol"]
(c11-3 / know-01
       :ARG0 (c11-5 / i)
       :ARG1 (c11-2 / person
                    :name (c11-1 / name
                                 :op1 "Jk"))
       :mod (c11-0 / yeah)
       :ARG2-of (c11-4 / laugh-01
                       :ARG0 c11-5
                       :manner (c11-6 / loud)))

# ::snt hey it's nice c'mon!
# ::tokens ["hey", "it", "'s", "nice", "c'm", "on", "!"]
# ::lemmas ["hey", "it", "be", "nice", "c'm", "on", "!"]
(c12-0 / come-on-25
       :ARG1 (c12-1 / you)
       :ARG1-of (c12-2 / nice-01)
       :mod (c12-3 / hey
                   :mode expressive)
       :mode imperative)

# ::snt *more depression*
# ::tokens ["*", "more", "depression", "*"]
# ::lemmas ["*", "more", "depression", "*"]
(c13-0 / depress-01
       :mod (c13-1 / more))

# ::snt Lol I think I was just starting to recover from season and this news kinda slammed me back into my sadness
# ::tokens ["Lol", "I", "think", "I", "was", "just", "starting", "to", "recover", "from", "season", "and", "this", "news", "kinda", "slammed", "me", "back", "into", "my", "sadness"]
# ::lemmas ["Lol", "i", "think", "i", "be", "just", "start", "to", "recover", "from", "season", "and", "this", "news", "kinda", "slam", "i", "back", "into", "my", "sadness"]
(c14-6 / and
       :op1 (c14-11 / think-01
                    :ARG0 (c14-10 / i)
                    :ARG1 (c14-3 / start-01
                                 :ARG0 c14-10
                                 :ARG1 (c14-5 / recover-01
                                              :ARG1 c14-10
                                              :ARG2 (c14-0 / season))
                                 :mod (c14-9 / just))
                    :mod (c14-7 / laugh-01
                                :ARG0 c14-10
                                :manner (c14-12 / loud)
                                :mode expressive))
       :op2 (c14-14 / slam-02
                    :ARG0 (c14-2 / news
                                 :mod (c14-13 / this))
                    :ARG1 c14-10
                    :ARG2 (c14-4 / sad-02
                                 :ARG1 c14-10)
                    :direction (c14-1 / back)
                    :degree (c14-8 / kind-of)))

# ::snt This is a huge thing for me if they focuse well on those two. And Bryce needs to go to jail. For all the men who didn't. We deserve it.
# ::tokens ["This", "is", "a", "huge", "thing", "for", "me", "if", "they", "focuse", "well", "on", "those", "two", ".", "And", "Bryce", "needs", "to", "go", "to", "jail", ".", "For", "all", "the", "men", "who", "did", "n't", ".", "We", "deserve", "it", "."]
# ::lemmas ["this", "be", "a", "huge", "thing", "for", "i", "if", "they", "focuse", "well", "on", "those", "two", ".", "and", "Bryce", "need", "to", "go", "to", "jail", ".", "for", "all", "the", "man", "who", "do", "not", ".", "we", "deserve", "it", "."]
(c15-8 / multi-sentence
       :snt1 (c15-7 / thing
                    :mod (c15-2 / huge)
                    :domain (c15-12 / this)
                    :beneficiary (c15-18 / i)
                    :condition (c15-13 / focus-01
                                       :ARG0 (c15-19 / they)
                                       :ARG2 (c15-15 / person
                                                     :mod (c15-0 / that)
                                                     :quant 2)
                                       :ARG1-of (c15-17 / well-09)))
       :snt2 (c15-5 / and
                    :op2 (c15-14 / need-01
                                 :ARG0 (c15-9 / person
                                              :name (c15-10 / name
                                                            :op1 "Bryce"))
                                 :ARG1 (c15-6 / go-02
                                              :ARG0 c15-9
                                              :ARG4 (c15-4 / jail))))
       :snt3 (c15-20 / deserve-01
                     :ARG0 (c15-1 / we)
                     :ARG1 c15-6
                     :mod (c15-16 / for-all
                                  :op1 (c15-3 / man
                                              :ARG0-of (c15-11 / deserve-01
                                                               :ARG1 c15-6
                                                               :polarity -)))))

# ::snt The storylines of Alex and Jessica could be counter-Hannah and help people feeling/experiencing the same way get help and feel represented.
# ::tokens ["The", "storylines", "of", "Alex", "and", "Jessica", "could", "be", "counter", "-", "Hannah", "and", "help", "people", "feeling", "/", "experiencing", "the", "same", "way", "get", "help", "and", "feel", "represented", "."]
# ::lemmas ["the", "storyline", "of", "Alex", "and", "Jessica", "could", "be", "counter", "-", "Hannah", "and", "help", "people", "feel", "/", "experience", "the", "same", "way", "get", "help", "and", "feel", "represent", "."]
(c16-17 / possible-01
        :ARG1 (c16-8 / and
                     :op1 (c16-12 / counter-01
                                  :ARG0 (c16-0 / storyline
                                               :poss (c16-7 / and
                                                            :op1 (c16-10 / person
                                                                         :name (c16-14 / name
                                                                                       :op1 "Alex"))
                                                            :op2 (c16-3 / person
                                                                        :name (c16-11 / name
                                                                                      :op1 "Jessica"))))
                                  :ARG1 (c16-2 / person
                                               :name (c16-18 / name
                                                             :op1 "Hannah")))
                     :op2 (c16-5 / help-01
                                 :ARG0 c16-0
                                 :ARG1 (c16-6 / and
                                              :op1 (c16-13 / feel-01
                                                           :ARG0 c16-2
                                                           :ARG1 (c16-21 / help-01))
                                              :op2 (c16-16 / experience-01
                                                           :ARG0 c16-2)
                                              :manner (c16-20 / way
                                                              :ARG1-of (c16-4 / same-01
                                                                              :ARG2 (c16-1 / way
                                                                                           :manner-of (c16-9 / get-04
                                                                                                             :ARG0 c16-2
                                                                                                             :ARG1 (c16-22 / and
                                                                                                                           :op1 c16-21
                                                                                                                           :op2 (c16-19 / feel-01
                                                                                                                                        :ARG0 c16-2
                                                                                                                                        :ARG1 (c16-15 / represent-01
                                                                                                                                                      :ARG1 c16-2)))))))))))

# ::snt Me too!!
# ::tokens ["Me", "too", "!", "!"]
# ::lemmas ["i", "too", "!", "!"]
(c17-0 / i
       :mod (c17-1 / too))

# ::snt I know me too!
# ::tokens ["I", "know", "me", "too", "!"]
# ::lemmas ["i", "know", "i", "too", "!"]
(c18-0 / know-02
       :ARG0 (c18-1 / i
                    :ARG1-of c18-0)
       :mod (c18-2 / too))

# ::snt I don't know! But there is an open storyline that was left at the end of the first season soooo could be about that.
# ::tokens ["I", "do", "n't", "know", "!", "But", "there", "is", "an", "open", "storyline", "that", "was", "left", "at", "the", "end", "of", "the", "first", "season", "soooo", "could", "be", "about", "that", "."]
# ::lemmas ["i", "do", "not", "know", "!", "but", "there", "be", "an", "open", "storyline", "that", "be", "leave", "at", "the", "end", "of", "the", "first", "season", "soooo", "could", "be", "about", "that", "."]
(c19-3 / multi-sentence
       :snt1 (c19-6 / know-01
                    :ARG0 (c19-11 / i)
                    :polarity -)
       :snt2 (c19-9 / contrast-01
                    :ARG2 (c19-4 / storyline
                                 :ARG1-of (c19-7 / leave-17
                                                 :time (c19-5 / end-01
                                                              :ARG1 (c19-0 / season
                                                                           :ord (c19-1 / ordinal-entity
                                                                                       :value 1)))
                                                 :ARG0-of (c19-13 / cause-01
                                                                  :ARG1 (c19-8 / possible-01
                                                                               :ARG1 (c19-12 / about
                                                                                             :op1 (c19-10 / that))
                                                                               :degree (c19-14 / so))))
                                 :ARG1-of (c19-2 / open-04))))

# ::snt How excited are you?
# ::tokens ["How", "excited", "are", "you", "?"]
# ::lemmas ["how", "excited", "be", "you", "?"]
(c20-0 / excite-01
       :ARG0 (c20-1 / you)
       :degree (c20-2 / amr-unknown))

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c21-0 / amr-empty)

# ::snt The Bard might disagree, but I also enjoyed it. They also prequeled Watchmen in the comics to varying quality.
# ::tokens ["The", "Bard", "might", "disagree", ",", "but", "I", "also", "enjoyed", "it", ".", "They", "also", "prequeled", "Watchmen", "in", "the", "comics", "to", "varying", "quality", "."]
# ::lemmas ["the", "Bard", "might", "disagree", ",", "but", "i", "also", "enjoy", "it", ".", "they", "also", "prequele", "Watchmen", "in", "the", "comic_strip", "to", "vary", "quality", "."]
(c22-0 / multi-sentence
       :snt1 (c22-7 / possible-01
                    :ARG1 (c22-14 / disagree-01
                                  :ARG0 (c22-1 / person
                                               :name (c22-2 / name
                                                            :op1 "Bard")))
                    :concession-of (c22-5 / enjoy-01
                                          :ARG0 (c22-11 / i)
                                          :ARG1 (c22-3 / it)
                                          :mod (c22-12 / also)))
       :snt2 (c22-16 / prequel-00
                     :ARG0 (c22-10 / they)
                     :ARG1 (c22-8 / work-of-art
                                  :name (c22-6 / name
                                               :op1 "Watchmen"))
                     :location (c22-9 / comic)
                     :manner (c22-13 / quality
                                     :ARG1-of (c22-4 / vary-01))
                     :mod (c22-15 / also)))

# ::snt But there is a hamlet and its excellent
# ::tokens ["But", "there", "is", "a", "hamlet", "and", "its", "excellent"]
# ::lemmas ["but", "there", "be", "a", "hamlet", "and", "its", "excellent"]
(c23-3 / contrast-01
       :ARG2 (c23-0 / and
                    :op1 (c23-2 / hamlet
                                :location (c23-4 / there))
                    :op2 (c23-1 / excellent-02
                                :ARG1 c23-2)))

# ::snt Was supposed to be self contained. Beginning, middle, end. Like making sequel to Watchmen or Hamlet part . Money grab.
# ::tokens ["Was", "supposed", "to", "be", "self", "contained", ".", "Beginning", ",", "middle", ",", "end", ".", "Like", "making", "sequel", "to", "Watchmen", "or", "Hamlet", "part", ".", "Money", "grab", "."]
# ::lemmas ["be", "suppose", "to", "be", "self", "contain", ".", "begin", ",", "middle", ",", "end", ".", "like", "make", "sequel", "to", "Watchmen", "or", "Hamlet", "part", ".", "money", "grab", "."]
(c24-3 / multi-sentence
       :snt1 (c24-5 / suppose-02
                    :ARG1 (c24-14 / it)
                    :ARG2 (c24-12 / contain-01
                                  :ARG0 c24-14
                                  :ARG1 c24-14))
       :snt2 (c24-15 / and
                     :op1 (c24-2 / begin-01)
                     :op2 (c24-8 / middle)
                     :op3 (c24-7 / end-01)
                     :op4 (c24-6 / resemble-01
                                 :ARG2 (c24-17 / make-01
                                               :ARG1 (c24-0 / sequel
                                                            :mod (c24-1 / or
                                                                        :op1 (c24-13 / work-of-art
                                                                                     :name (c24-4 / name
                                                                                                  :op1 "Watchmen"))
                                                                        :op2 (c24-11 / work-of-art
                                                                                     :name (c24-9 / name
                                                                                                  :op1 "Hamlet")))))))
       :snt3 (c24-16 / grab-01
                     :ARG1 (c24-10 / money)))

# ::snt I hope its new tapes from Jeff
# ::tokens ["I", "hope", "its", "new", "tapes", "from", "Jeff"]
# ::lemmas ["i", "hope", "its", "new", "tape", "from", "Jeff"]
(c25-1 / hope-01
       :ARG0 (c25-4 / i)
       :ARG1 (c25-5 / tape-02
                    :ARG0 (c25-2 / person
                                 :name (c25-0 / name
                                              :op1 "Jeff"))
                    :ARG1-of (c25-3 / new-01)))

# ::snt YES FINALLY
# ::tokens ["YES", "FINALLY"]
# ::lemmas ["yes", "finally"]
(c26-1 / yes
       :mod (c26-0 / final))

# ::snt also constantly reminded how out of touch I am with the youth. EVERYONE was annoying
# ::tokens ["also", "constantly", "reminded", "how", "out", "of", "touch", "I", "am", "with", "the", "youth", ".", "EVERYONE", "was", "annoying"]
# ::lemmas ["also", "constantly", "remind", "how", "out", "of", "touch", "i", "be", "with", "the", "youth", ".", "everyone", "be", "annoying"]
(c27-1 / multi-sentence
       :snt1 (c27-4 / remind-01
                    :ARG1 (c27-7 / in-touch-11
                                 :ARG1 (c27-3 / i)
                                 :ARG2 (c27-0 / youth)
                                 :degree (c27-2 / so)
                                 :polarity -)
                    :mod (c27-8 / also)
                    :frequency (c27-6 / constant))
       :snt2 (c27-9 / annoy-01
                    :ARG0 (c27-5 / everyone)))

# ::snt Lo digo porque tal vez incluyan un tiroteo al final. Y muestren lo que pasa despus en la pero hasta ah.
# ::tokens ["Lo", "digo", "porque", "tal", "vez", "incluyan", "un", "tiroteo", "al", "final", ".", "Y", "muestren", "lo", "que", "pasa", "despus", "en", "la", "pero", "hasta", "ah", "."]
# ::lemmas ["Lo", "digo", "porque", "tal", "vez", "incluyan", "un", "tiroteo", "al", "final", ".", "Y", "muestren", "lo", "que", "pasa", "despus", "en", "la", "pero", "hasta", "ah", "."]
(c28-2 / multi-sentence
       :snt1 (c28-13 / dig-01
                     :ARG0 (c28-1 / you)
                     :ARG1-of (c28-6 / cause-01
                                     :ARG0 (c28-5 / possible-01
                                                  :ARG1 (c28-10 / incluyan-01
                                                                :ARG0 c28-1
                                                                :ARG1 (c28-11 / tiroteo
                                                                              :mod (c28-4 / al))))))
       :snt2 (c28-15 / cause-01
                     :ARG0 (c28-12 / you)
                     :ARG1 (c28-3 / possible-01
                                  :ARG1 (c28-14 / pasa-01
                                                :ARG0 (c28-0 / you)
                                                :ARG1 (c28-7 / despus)
                                                :ARG1-of (c28-9 / cause-01
                                                                :ARG0 (c28-8 / pero-de-la))))))

# ::snt Yo creo que la segunda temporada debera ser la ltima y ya. Y eso, con captulos o algo as.
# ::tokens ["Yo", "creo", "que", "la", "segunda", "temporada", "debera", "ser", "la", "ltima", "y", "ya", ".", "Y", "eso", ",", "con", "captulos", "o", "algo", "as", "."]
# ::lemmas ["Yo", "creo", "que", "la", "segunda", "temporada", "debera", "ser", "la", "ltima", "y", "ya", ".", "Y", "eso", ",", "con", "captulo", "o", "algo", "as", "."]
(c29-3 / multi-sentence
       :snt1 (c29-9 / creo-00
                    :ARG0 (c29-2 / you)
                    :ARG1 (c29-8 / possible-01
                                 :ARG1 (c29-5 / ser-01
                                              :ARG1 (c29-4 / person
                                                           :ARG0-of (c29-7 / have-rel-role-91
                                                                           :ARG1 c29-2
                                                                           :ARG2 (c29-1 / significant-other)))
                                              :ARG2 (c29-13 / person
                                                            :ARG0-of (c29-10 / have-rel-role-91
                                                                             :ARG1 c29-2
                                                                             :ARG2 (c29-16 / significant-other))))))
       :snt2 (c29-6 / and
                    :op1 (c29-15 / con-03
                                 :ARG0 (c29-14 / you)
                                 :ARG1 (c29-11 / captulos))
                    :op2 (c29-0 / con-03
                                :ARG0 c29-14
                                :ARG1 (c29-12 / algo))))

# ::snt Debera ser una serie con mximo temporadas, la verdad.
# ::tokens ["Debera", "ser", "una", "serie", "con", "mximo", "temporadas", ",", "la", "verdad", "."]
# ::lemmas ["Debera", "ser", "una", "serie", "con", "mximo", "temporadas", ",", "la", "verdad", "."]
(c30-1 / multi-sentence
       :snt1 (c30-4 / come-03
                    :ARG1 (c30-0 / you)
                    :ARG2 (c30-2 / serie
                                 :domain c30-0
                                 :topic (c30-6 / con-mximo
                                               :op1 (c30-5 / temporada))
                                 :polarity -))
       :snt2 (c30-3 / verdad
                    :mode expressive))

# ::snt PREACH!
# ::tokens ["PREACH", "!"]
# ::lemmas ["preach", "!"]
(c31-1 / preach-01
       :ARG0 (c31-0 / you)
       :mode imperative)

# ::snt I don't think it glorifies suicide. It does shine a bright light on bullying in the age of social media. Please watch it
# ::tokens ["I", "do", "n't", "think", "it", "glorifies", "suicide", ".", "It", "does", "shine", "a", "bright", "light", "on", "bullying", "in", "the", "age", "of", "social", "media", ".", "Please", "watch", "it"]
# ::lemmas ["i", "do", "not", "think", "it", "glorify", "suicide", ".", "it", "do", "shine", "a", "bright", "light", "on", "bully", "in", "the", "age", "of", "social", "medium", ".", "please", "watch", "it"]
(c32-4 / multi-sentence
       :snt1 (c32-12 / think-01
                     :ARG0 (c32-11 / i)
                     :ARG1 (c32-13 / glorify-01
                                   :ARG0 (c32-6 / it)
                                   :ARG1 (c32-5 / suicide))
                     :polarity -)
       :snt2 (c32-0 / shine-01
                    :ARG0 (c32-14 / it)
                    :ARG1 (c32-9 / light
                                 :ARG1-of (c32-2 / bright-02))
                    :ARG2 (c32-8 / bully-01
                                 :time (c32-7 / age
                                              :mod (c32-15 / social-03))))
       :snt3 (c32-10 / watch-01
                     :ARG0 (c32-3 / you)
                     :ARG1 (c32-1 / it)
                     :mode imperative
                     :polite +))

# ::snt I'm hoping for lots of courtroom drama with everybody's favorite attorney/stud muffin. And lots of Zach, too!
# ::tokens ["I", "'m", "hoping", "for", "lots", "of", "courtroom", "drama", "with", "everybody", "'s", "favorite", "attorney", "/", "stud", "muffin", ".", "And", "lots", "of", "Zach", ",", "too", "!"]
# ::lemmas ["i", "be", "hope", "for", "lot", "of", "courtroom", "drama", "with", "everybody", "'s", "favorite", "attorney", "/", "stud", "muffin", ".", "and", "lot", "of", "Zach", ",", "too", "!"]
(c33-2 / multi-sentence
       :snt1 (c33-7 / hope-01
                    :ARG0 (c33-12 / i)
                    :ARG1 (c33-15 / drama
                                  :mod (c33-10 / courtroom)
                                  :quant (c33-8 / lot)
                                  :accompanier (c33-9 / person
                                                      :name (c33-3 / name
                                                                   :op1 "Munin")
                                                      :mod (c33-0 / favorite)
                                                      :poss (c33-6 / everybody)
                                                      :mod (c33-4 / slash
                                                                  :op1 (c33-13 / attorney)
                                                                  :op2 (c33-5 / person
                                                                              :ARG0-of (c33-1 / study-01))))))
       :snt2 (c33-14 / and
                     :op2 (c33-17 / person
                                  :name c33-3
                                  :op1 "Zach")
                     :quant (c33-16 / lot)
                     :mod (c33-11 / too)))

# ::snt Right, right after I was done watching I saw news reports of assault incidents at schools ,sad shit.
# ::tokens ["Right", ",", "right", "after", "I", "was", "done", "watching", "I", "saw", "news", "reports", "of", "assault", "incidents", "at", "schools", ",", "sad", "shit", "."]
# ::lemmas ["right", ",", "right", "after", "i", "be", "do", "watch", "i", "see", "news", "report", "of", "assault", "incident", "at", "school", ",", "sad", "shit", "."]
(c34-3 / see-01
       :ARG0 (c34-8 / i)
       :ARG1 (c34-5 / report-01
                    :ARG1 (c34-4 / incident
                                 :mod (c34-9 / assault-01)
                                 :location (c34-0 / school))
                    :mod (c34-2 / news)
                    :mod (c34-12 / shit
                                 :ARG1-of (c34-6 / sad-02)))
       :time (c34-10 / after
                     :op1 (c34-1 / finish-01
                                 :ARG0 c34-8
                                 :ARG1 (c34-7 / watch-01
                                              :ARG0 c34-8))
                     :mod (c34-11 / right)))

# ::snt yea, im kinda glad they didn't tie everything up at the end of season .. It also looks like more is going to happen
# ::tokens ["yea", ",", "i", "m", "kinda", "glad", "they", "did", "n't", "tie", "everything", "up", "at", "the", "end", "of", "season", "..", "It", "also", "looks", "like", "more", "is", "going", "to", "happen"]
# ::lemmas ["yea", ",", "i", "m", "kinda", "glad", "they", "do", "not", "tie", "everything", "up", "at", "the", "end", "of", "season", "..", "it", "also", "look", "like", "more", "be", "go", "to", "happen"]
(c35-0 / multi-sentence
       :snt1 (c35-11 / glad-02
                     :ARG0 (c35-8 / tie-up-05
                                  :ARG0 (c35-10 / they)
                                  :ARG1 (c35-4 / everything)
                                  :time (c35-12 / end-01
                                                :ARG1 (c35-1 / season))
                                  :polarity -)
                     :ARG1 (c35-9 / i)
                     :degree (c35-6 / kind-of))
       :snt2 (c35-7 / look-02
                    :ARG0 (c35-2 / it)
                    :ARG1 (c35-5 / more)
                    :mod (c35-3 / also)))

# ::snt Right ? Damn good show. Now that the tapes are out hopefully the writers can keep the suspense up.
# ::tokens ["Right", "?", "Damn", "good", "show", ".", "Now", "that", "the", "tapes", "are", "out", "hopefully", "the", "writers", "can", "keep", "the", "suspense", "up", "."]
# ::lemmas ["right", "?", "damn", "good", "show", ".", "now", "that", "the", "tape", "be", "out", "hopefully", "the", "writer", "can", "keep", "the", "suspense", "up", "."]
(c36-2 / multi-sentence
       :snt1 (c36-6 / right-02
                    :polarity (c36-12 / amr-unknown))
       :snt2 (c36-4 / show-04
                    :ARG1-of (c36-13 / good-02
                                     :degree (c36-14 / damn)))
       :snt3 (c36-7 / hope-01
                    :ARG1 (c36-8 / possible-01
                                 :ARG1 (c36-9 / keep-02
                                              :ARG0 (c36-3 / person
                                                           :ARG0-of (c36-10 / write-01))
                                              :ARG1 (c36-0 / suspense-01)
                                              :ARG2 (c36-15 / up))
                                 :time (c36-5 / now
                                              :time-of (c36-1 / out-01
                                                              :ARG1 (c36-11 / tape-02))))))

# ::snt This was a good show.
# ::tokens ["This", "was", "a", "good", "show", "."]
# ::lemmas ["this", "be", "a", "good", "show", "."]
(c37-2 / show-04
       :ARG1-of (c37-0 / good-02)
       :domain (c37-1 / this))

# ::snt Thank you for the mention
# ::tokens ["Thank", "you", "for", "the", "mention"]
# ::lemmas ["thank", "you", "for", "the", "mention"]
(c38-3 / thank-01
       :ARG0 (c38-2 / i)
       :ARG1 (c38-0 / you)
       :ARG2 (c38-1 / mention-01
                    :ARG0 c38-0))

# ::snt Is Tyler about to that kill streak?
# ::tokens ["Is", "Tyler", "about", "to", "that", "kill", "streak", "?"]
# ::lemmas ["be", "Tyler", "about", "to", "that", "kill", "streak", "?"]
(c39-2 / about-to
       :polarity (c39-5 / amr-unknown)
       :op1 (c39-1 / streak
                   :mod (c39-3 / kill-01)
                   :mod (c39-6 / that)
                   :poss (c39-4 / person
                                :name (c39-0 / name
                                             :op1 "Tyler"))))

# ::snt YESSSSSSSSS
# ::tokens ["YESSSSSSSSS"]
# ::lemmas ["YESSSSSSSSS"]
(c40-0 / yes)

# ::snt Omg stop I can't wait
# ::tokens ["Omg", "stop", "I", "ca", "n't", "wait"]
# ::lemmas ["Omg", "stop", "i", "can", "not", "wait"]
(c41-4 / cause-01
       :ARG0 (c41-3 / possible-01
                    :ARG1 (c41-5 / wait-01
                                 :ARG1 (c41-6 / i))
                    :polarity -)
       :ARG1 (c41-2 / stop-01
                    :ARG0 (c41-1 / you)
                    :mod (c41-0 / oh-my-god
                                :mode expressive)
                    :mode imperative))

# ::snt Date?!
# ::tokens ["Date", "?", "!"]
# ::lemmas ["date", "?", "!"]
(c42-0 / date
       :mode expressive)

# ::snt wooooof
# ::tokens ["wooooof"]
# ::lemmas ["wooooof"]
(c45-0 / woe
       :mode expressive)

# ::snt and I'm freaking dying inside. I need answers!
# ::tokens ["and", "I", "'m", "freaking", "dying", "inside", ".", "I", "need", "answers", "!"]
# ::lemmas ["and", "i", "be", "freak", "die", "inside", ".", "i", "need", "answer", "!"]
(c47-1 / multi-sentence
       :snt1 (c47-5 / and
                    :op2 (c47-7 / die-01
                                :ARG1 (c47-4 / i)
                                :mod (c47-0 / freaking
                                            :mode expressive)
                                :location (c47-3 / inside)))
       :snt2 (c47-2 / need-01
                    :ARG0 (c47-8 / i)
                    :ARG1 (c47-6 / answer-01)))

# ::snt reasons why made me realize just how important every little thing you say to someone really is. And to be kind which could save a life
# ::tokens ["reasons", "why", "made", "me", "realize", "just", "how", "important", "every", "little", "thing", "you", "say", "to", "someone", "really", "is", ".", "And", "to", "be", "kind", "which", "could", "save", "a", "life"]
# ::lemmas ["reason", "why", "make", "i", "realize", "just", "how", "important", "every", "little", "thing", "you", "say", "to", "someone", "really", "be", ".", "and", "to", "be", "kind", "which", "could", "save", "a", "life"]
(c49-13 / multi-sentence
        :snt1 (c49-7 / make-02
                     :ARG0 (c49-15 / reason)
                     :ARG1 (c49-2 / realize-01
                                  :ARG0 (c49-18 / i)
                                  :ARG1 (c49-6 / important-01
                                               :ARG1 (c49-11 / thing
                                                             :mod (c49-16 / every)
                                                             :mod (c49-1 / little)
                                                             :ARG1-of (c49-0 / say-01
                                                                             :ARG0 (c49-5 / you)
                                                                             :ARG2 (c49-4 / someone)))
                                               :degree (c49-3 / so)
                                               :mod (c49-9 / just))))
        :snt2 (c49-10 / and
                      :op2 (c49-8 / kind-01
                                  :ARG0-of (c49-14 / save-02
                                                   :ARG1 (c49-12 / life)
                                                   :ARG1-of (c49-17 / possible-01)))))

# ::snt Yess great news
# ::tokens ["Yess", "great", "news"]
# ::lemmas ["yess", "great", "news"]
(c50-2 / news
       :mod (c50-0 / great)
       :mod (c50-1 / yess))
