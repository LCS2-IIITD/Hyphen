# ::snt cute
# ::tokens ["cute"]
# ::lemmas ["cute"]
(c1-0 / cute)

# ::snt *yes
# ::tokens ["*", "yes"]
# ::lemmas ["*", "yes"]
(c2-0 / yes)

# ::snt Shes a queen
# ::tokens ["She", "s", "a", "queen"]
# ::lemmas ["she", "s", "a", "queen"]
(c3-1 / have-rel-role-91
      :ARG0 (c3-0 / he)
      :ARG2 (c3-2 / queen))

# ::snt She doesnt need jimmy to sell her album, its gonna sell anyways
# ::tokens ["She", "does", "nt", "need", "jimmy", "to", "sell", "her", "album", ",", "its", "gon", "na", "sell", "anyways"]
# ::lemmas ["she", "do", "not", "need", "jimmy", "to", "sell", "her", "album", ",", "its", "going", "to", "sell", "anyways"]
(c4-1 / need-01
      :ARG0 (c4-2 / she)
      :ARG1 (c4-4 / person
                  :name (c4-3 / name
                              :op1 "Jimmy"))
      :purpose (c4-0 / sell-01
                     :ARG0 c4-2
                     :ARG1 (c4-7 / album
                                 :poss c4-2))
      :ARG0-of (c4-5 / cause-01
                     :ARG1 (c4-8 / sell-01
                                 :ARG1 c4-7
                                 :mod (c4-6 / anyway)))
      :polarity -)

# ::snt I can't get enough.
# ::tokens ["I", "ca", "n't", "get", "enough", "."]
# ::lemmas ["i", "can", "not", "get", "enough", "."]
(c5-2 / possible-01
      :ARG1 (c5-5 / get-01
                  :ARG0 (c5-3 / i)
                  :ARG1 (c5-4 / thing
                              :ARG1-of (c5-1 / have-quant-91
                                             :ARG3 (c5-0 / enough))))
      :polarity -)

# ::snt love Love LOVE this. This girl can certainly sing.
# ::tokens ["love", "Love", "LOVE", "this", ".", "This", "girl", "can", "certainly", "sing", "."]
# ::lemmas ["love", "Love", "LOVE", "this", ".", "this", "girl", "can", "certainly", "sing", "."]
(c6-0 / multi-sentence
      :snt1 (c6-3 / love-01
                  :ARG1 (c6-7 / love-01))
      :snt2 (c6-2 / possible-01
                  :ARG1 (c6-1 / sing-01
                              :ARG0 (c6-6 / girl
                                          :mod (c6-5 / this))
                              :mod (c6-4 / certain))))

# ::snt This is gem
# ::tokens ["This", "is", "gem"]
# ::lemmas ["this", "be", "gem"]
(c7-0 / gem
      :domain (c7-1 / this))
