# ::snt Wow I never heard about all of the shitty things he has said
# ::tokens ["Wow", "I", "never", "heard", "about", "all", "of", "the", "shitty", "things", "he", "has", "said"]
# ::lemmas ["wow", "i", "never", "hear", "about", "all", "of", "the", "shitty", "thing", "he", "have", "say"]
(c1-3 / hear-01
      :ARG0 (c1-7 / i)
      :ARG1 (c1-6 / thing
                  :mod (c1-8 / all)
                  :mod (c1-1 / shitty)
                  :ARG1-of (c1-0 / say-01
                                 :ARG0 (c1-5 / he)))
      :time (c1-2 / ever)
      :mod (c1-4 / wow
                 :mode expressive)
      :polarity -)

# ::snt What's wrong with having boundaries
# ::tokens ["What", "'s", "wrong", "with", "having", "boundaries"]
# ::lemmas ["what", "be", "wrong", "with", "have", "boundary"]
(c2-0 / wrong-02
      :ARG1 (c2-3 / amr-unknown)
      :ARG2 (c2-2 / have-03
                  :ARG1 (c2-1 / boundary)))

# ::snt Well as a popular leader myself. If I don't set ground rules ppl don't make decisions they continuously bother me. I understand
# ::tokens ["Well", "as", "a", "popular", "leader", "myself", ".", "If", "I", "do", "n't", "set", "ground", "rules", "ppl", "do", "n't", "make", "decisions", "they", "continuously", "bother", "me", ".", "I", "understand"]
# ::lemmas ["well", "as", "a", "popular", "leader", "myself", ".", "if", "i", "do", "not", "set", "ground", "rule", "ppl", "do", "not", "make", "decision", "they", "continuously", "bother", "i", ".", "i", "understand"]
(c3-1 / multi-sentence
      :snt1 (c3-8 / person
                  :ARG0-of (c3-9 / lead-02)
                  :ARG1-of (c3-2 / popular-02)
                  :domain (c3-11 / i))
      :snt2 (c3-0 / bother-01
                  :ARG0 (c3-14 / decide-01
                               :ARG0 (c3-12 / person
                                            :ARG0-of (c3-7 / have-rel-role-91
                                                           :ARG1 (c3-5 / and
                                                                       :op1 c3-11
                                                                       :op2 c3-12)))
                               :polarity -)
                  :ARG1 c3-11
                  :ARG1-of (c3-10 / continue-01)
                  :condition (c3-3 / set-02
                                   :ARG0 (c3-4 / i)
                                   :ARG1 (c3-6 / rule
                                               :mod (c3-13 / ground))
                                   :polarity -))
      :snt3 (c3-16 / understand-01
                   :ARG0 (c3-15 / i)))

# ::snt I don't see the big issue
# ::tokens ["I", "do", "n't", "see", "the", "big", "issue"]
# ::lemmas ["i", "do", "not", "see", "the", "big", "issue"]
(c4-3 / see-01
      :ARG0 (c4-2 / i)
      :ARG1 (c4-0 / issue-02
                  :mod (c4-1 / big))
      :polarity -)

# ::snt happens to everyone
# ::tokens ["happens", "to", "everyone"]
# ::lemmas ["happen", "to", "everyone"]
(c5-1 / happy-01
      :ARG1 (c5-0 / everyone))

# ::snt He's just not that interesting.
# ::tokens ["He", "'s", "just", "not", "that", "interesting", "."]
# ::lemmas ["he", "be", "just", "not", "that", "interesting", "."]
(c6-2 / interest-01
      :ARG1 (c6-0 / he)
      :mod (c6-1 / just)
      :degree (c6-3 / that)
      :polarity -)

# ::snt Screw him
# ::tokens ["Screw", "him"]
# ::lemmas ["screw", "he"]
(c7-1 / screw-02
      :ARG1 (c7-0 / he))

# ::snt My son &amp; , &amp; everyone deserves/wants ALONE time. Nothing wrong w/it..move on people!
# ::tokens ["My", "son", "&", "amp", ";", ",", "&", "amp", ";", "everyone", "deserves", "/", "wants", "ALONE", "time", ".", "Nothing", "wrong", "w", "/", "it", "..", "move", "on", "people", "!"]
# ::lemmas ["my", "son", "&", "amp", ";", ",", "&", "amp", ";", "everyone", "deserve", "/", "want", "alone", "time", ".", "nothing", "wrong", "w", "/", "it", "..", "move", "on", "people", "!"]
(c8-1 / multi-sentence
      :snt1 (c8-2 / slash
                  :op1 (c8-9 / deserve-01
                             :ARG0 (c8-4 / everyone)
                             :ARG1 (c8-8 / time
                                         :mod (c8-3 / alone)))
                  :op2 (c8-7 / want-01
                             :ARG0 c8-4
                             :ARG1 c8-8))
      :snt2 (c8-5 / move-01
                  :ARG0 (c8-0 / you)
                  :ARG1 (c8-6 / person)
                  :mode imperative))

# ::snt No longer a fan of this ahole
# ::tokens ["No", "longer", "a", "fan", "of", "this", "ahole"]
# ::lemmas ["no", "long", "a", "fan", "of", "this", "ahole"]
(c9-0 / fan
      :domain (c9-1 / you)
      :topic (c9-3 / ahole
                   :mod (c9-4 / this))
      :time (c9-2 / no-longer))

# ::snt Today must be a slow news day for you to be still dragging this.
# ::tokens ["Today", "must", "be", "a", "slow", "news", "day", "for", "you", "to", "be", "still", "dragging", "this", "."]
# ::lemmas ["Today", "must", "be", "a", "slow", "news", "day", "for", "you", "to", "be", "still", "drag", "this", "."]
(c10-5 / infer-01
       :ARG1 (c10-7 / day
                    :mod (c10-2 / news)
                    :ARG1-of (c10-3 / slow-05)
                    :domain (c10-6 / today))
       :ARG2 (c10-4 / drag-01
                    :ARG0 (c10-1 / you)
                    :ARG1 (c10-8 / this)
                    :mod (c10-0 / still)))

# ::snt Steve Harvey "jumped the shark" when he met with Trump.
# ::tokens ["Steve", "Harvey", "\"", "jumped", "the", "shark", "\"", "when", "he", "met", "with", "Trump", "."]
# ::lemmas ["Steve", "Harvey", "\"", "jump", "the", "shark", "\"", "when", "he", "meet", "with", "Trump", "."]
(c11-3 / stump-01
       :ARG0 (c11-6 / person
                    :name (c11-2 / name
                                 :op1 "Steve"
                                 :op2 "Harvey"))
       :ARG1 (c11-0 / shark)
       :time (c11-1 / meet-03
                    :ARG0 c11-6
                    :ARG1 (c11-4 / person
                                 :name (c11-5 / name
                                              :op1 "Trump"))))

# ::snt Survey says Steve Harvey needs to work on his personal skills
# ::tokens ["Survey", "says", "Steve", "Harvey", "needs", "to", "work", "on", "his", "personal", "skills"]
# ::lemmas ["Survey", "say", "Steve", "Harvey", "need", "to", "work", "on", "his", "personal", "skill"]
(c12-3 / say-01
       :ARG0 (c12-0 / survey-01)
       :ARG1 (c12-1 / need-01
                    :ARG0 (c12-5 / person
                                 :name (c12-4 / name
                                              :op1 "Steve"
                                              :op2 "Harvey"))
                    :ARG1 (c12-6 / work-01
                                 :ARG0 c12-5
                                 :ARG1 (c12-7 / skill
                                              :ARG1-of (c12-2 / personal-02
                                                              :ARG2 c12-5)))))
