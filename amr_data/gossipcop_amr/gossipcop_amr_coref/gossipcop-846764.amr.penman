# ::snt So what if the credit card holder can't be present with you
# ::tokens ["So", "what", "if", "the", "credit", "card", "holder", "ca", "n't", "be", "present", "with", "you"]
# ::lemmas ["so", "what", "if", "the", "credit", "card", "holder", "can", "not", "be", "present", "with", "you"]
(c1-6 / infer-01
      :ARG1 (c1-2 / amr-unknown)
      :condition (c1-4 / possible-01
                       :ARG1 (c1-1 / present-02
                                   :ARG1 (c1-7 / person
                                               :ARG0-of (c1-3 / hold-01
                                                              :ARG1 (c1-5 / card
                                                                          :mod (c1-8 / credit-01))))
                                   :ARG2 (c1-0 / you))
                       :polarity -))

# ::snt is for nz and is for aus
# ::tokens ["is", "for", "nz", "and", "is", "for", "aus"]
# ::lemmas ["be", "for", "nz", "and", "be", "for", "aus"]
(c3-6 / and
      :op1 (c3-2 / have-purpose-91
                 :ARG2 (c3-3 / political-party
                             :name (c3-0 / name
                                         :op1 "Nazi")))
      :op2 (c3-5 / have-purpose-91
                 :ARG2 (c3-1 / political-party
                             :name (c3-4 / name
                                         :op1 "Aus"))))

# ::snt pm nzt
# ::tokens ["pm", "nzt"]
# ::lemmas ["pm", "nzt"]
(c4-1 / post-scriptum
      :domain (c4-2 / person
                    :name (c4-0 / name
                                :op1 "nt")))

# ::snt thanks!
# ::tokens ["thanks", "!"]
# ::lemmas ["thank", "!"]
(c5-1 / thank-01
      :ARG1 (c5-0 / you)
      :mode expressive)

# ::snt not on sale until friday!
# ::tokens ["not", "on", "sale", "until", "friday", "!"]
# ::lemmas ["not", "on", "sale", "until", "friday", "!"]
(c6-3 / sell-01
      :time (c6-2 / until
                  :op1 (c6-0 / date-entity
                             :weekday (c6-1 / friday)))
      :polarity -)

# ::snt OH MY FUCKING GOD
# ::tokens ["OH", "MY", "FUCKING", "GOD"]
# ::lemmas ["OH", "MY", "fucking", "GOD"]
(c7-2 / person
      :name (c7-0 / name
                  :op1 "God")
      :mod (c7-1 / fucking
                 :mode expressive)
      :poss (c7-3 / i))

# ::snt Are the tickets being sold on Ticketmaster? Cos I can't find his show on there :/
# ::tokens ["Are", "the", "tickets", "being", "sold", "on", "Ticketmaster", "?", "Cos", "I", "ca", "n't", "find", "his", "show", "on", "there", ":/"]
# ::lemmas ["be", "the", "ticket", "be", "sell", "on", "Ticketmaster", "?", "cos", "i", "can", "not", "find", "his", "show", "on", "there", ":/"]
(c8-2 / multi-sentence
      :snt1 (c8-4 / sell-01
                  :ARG1 (c8-8 / ticket)
                  :polarity (c8-10 / amr-unknown)
                  :medium (c8-7 / company
                                :name (c8-3 / name
                                            :op1 "Ticketmaster")))
      :snt2 (c8-12 / cause-01
                   :ARG0 (c8-6 / possible-01
                               :ARG1 (c8-0 / find-01
                                           :ARG0 (c8-9 / i)
                                           :ARG1 (c8-1 / show-04
                                                       :ARG0 (c8-5 / he)
                                                       :location (c8-11 / there)))
                               :polarity -)))

# ::snt Do we get to choose where we are seated or does the website just throw tickets to you and you'll just have to pray for the best?
# ::tokens ["Do", "we", "get", "to", "choose", "where", "we", "are", "seated", "or", "does", "the", "website", "just", "throw", "tickets", "to", "you", "and", "you", "'ll", "just", "have", "to", "pray", "for", "the", "best", "?"]
# ::lemmas ["do", "we", "get", "to", "choose", "where", "we", "be", "seat", "or", "do", "the", "website", "just", "throw", "ticket", "to", "you", "and", "you", "'ll", "just", "have", "to", "pray", "for", "the", "good", "?"]
(c11-9 / amr-choice
       :op1 (c11-10 / get-22
                    :ARG0 (c11-17 / we)
                    :ARG1 (c11-13 / choose-01
                                  :ARG0 c11-17
                                  :ARG1 (c11-1 / location
                                               :ARG2-of (c11-0 / seat-01
                                                               :ARG1 c11-17))))
       :op2 (c11-8 / throw-01
                   :ARG0 (c11-2 / website)
                   :ARG1 (c11-14 / ticket)
                   :ARG2 (c11-5 / you)
                   :mod (c11-7 / just)
                   :ARG0-of (c11-11 / cause-01
                                    :ARG1 (c11-4 / obligate-01
                                                 :ARG1 c11-5
                                                 :ARG2 (c11-16 / pray-01
                                                               :ARG0 c11-5
                                                               :ARG1 (c11-18 / thing
                                                                             :ARG1-of (c11-6 / have-degree-91
                                                                                             :ARG2 (c11-3 / good-02
                                                                                                          :ARG1 c11-18)
                                                                                             :ARG3 (c11-12 / most)))
                                                               :mod (c11-15 / just))))))

# ::snt Have they provided an onsale time? I'm gonna need to clear my work calendar!
# ::tokens ["Have", "they", "provided", "an", "onsale", "time", "?", "I", "'m", "gon", "na", "need", "to", "clear", "my", "work", "calendar", "!"]
# ::lemmas ["have", "they", "provide", "an", "onsale", "time", "?", "i", "be", "going", "to", "need", "to", "clear", "my", "work", "calendar", "!"]
(c12-0 / multi-sentence
       :snt1 (c12-4 / provide-01
                    :polarity (c12-3 / amr-unknown)
                    :ARG0 (c12-8 / they)
                    :ARG1 (c12-10 / time
                                  :time-of (c12-2 / sell-01)))
       :snt2 (c12-1 / need-01
                    :ARG0 (c12-7 / i)
                    :ARG1 (c12-5 / clear-01
                                 :ARG0 c12-7
                                 :ARG1 (c12-9 / calendar
                                              :mod (c12-6 / work-01
                                                          :ARG0 c12-7)))))

# ::snt WHY DOES HARRY MAKE IT SO COMPLITCATEDNDJDDJ
# ::tokens ["WHY", "DOES", "HARRY", "MAKE", "IT", "SO", "COMPLITCATEDNDJDDJ"]
# ::lemmas ["why", "do", "HARRY", "make", "it", "so", "complitcatedndjddj"]
(c13-3 / say-01
       :ARG0 (c13-8 / i)
       :ARG1 (c13-2 / make-02
                    :ARG0 (c13-6 / person
                                 :name (c13-1 / name
                                              :op1 "Harry"))
                    :ARG1 (c13-5 / have-degree-91
                                 :ARG1 (c13-4 / it)
                                 :ARG2 (c13-7 / comfy)
                                 :ARG3 (c13-0 / so)))
       :ARG2 c13-6
       :name c13-1
       :op1 "NDJDDJ")

# ::snt WHAT DOES IT MEAN BY THE MATCHING VALID PHOTO ID
# ::tokens ["WHAT", "DOES", "IT", "MEAN", "BY", "THE", "MATCHING", "VALID", "PHOTO", "ID"]
# ::lemmas ["what", "do", "it", "mean", "by", "the", "matching", "VALID", "PHOTO", "ID"]
(c14-0 / mean-01
       :ARG1 (c14-4 / it)
       :ARG2 (c14-5 / amr-unknown)
       :ARG1-of (c14-3 / cause-01
                       :ARG0 (c14-6 / document-01
                                    :ARG1 (c14-2 / photograph-01
                                                 :ARG1-of (c14-1 / value-02)))))

# ::snt WE'RE OKAY HONEY DW
# ::tokens ["WE'RE", "OKAY", "HONEY", "DW"]
# ::lemmas ["WE'RE", "OKAY", "HONEY", "dw"]
(c15-3 / say-01
       :ARG0 (c15-6 / i)
       :ARG1 (c15-0 / okay-04
                    :ARG1 (c15-5 / we)
                    :ARG2 (c15-1 / money))
       :ARG2 (c15-4 / person
                    :name (c15-2 / name
                                 :op1 "DW")))

# ::snt OKAY I WAS SHAKING IN MY BOOTS
# ::tokens ["OKAY", "I", "WAS", "SHAKING", "IN", "MY", "BOOTS"]
# ::lemmas ["okay", "i", "be", "shake", "in", "my", "boots"]
(c16-3 / shake-01
       :ARG1 (c16-2 / i
                    :part (c16-1 / boot
                                 :location-of c16-3))
       :ARG1-of (c16-0 / okay-04))

# ::snt AUCKLAND IS
# ::tokens ["AUCKLAND", "IS"]
# ::lemmas ["AUCKLAND", "be"]
(c17-0 / city
       :name (c17-1 / name
                    :op1 "AUCKLAND"))

# ::snt YOU CAN'T BUY MORE THAN TICKETS?!
# ::tokens ["YOU", "CAN'T", "BUY", "MORE", "THAN", "TICKETS", "?", "!"]
# ::lemmas ["you", "can't", "BUY", "more", "than", "tickets", "?", "!"]
(c19-5 / possible-01
       :ARG1 (c19-0 / buy-01
                    :ARG0 (c19-1 / you)
                    :ARG1 (c19-6 / thing
                                 :ARG1-of (c19-4 / have-quant-91
                                                 :ARG3 (c19-2 / more)
                                                 :ARG4 (c19-7 / ticket))))
       :polarity (c19-3 / amr-unknown)
       :polarity -)

# ::snt x
# ::tokens ["x"]
# ::lemmas ["x"]
(c20-0 / string-entity
       :value "x")

# ::snt Here's some important ticket info for AUS+NZ // theres no pre-sale for ' tour - on-sale Friday (May )
# ::tokens ["Here", "'s", "some", "important", "ticket", "info", "for", "AUS+NZ", "//", "there", "s", "no", "pre", "-", "sale", "for", "'", "tour", "-", "on", "-", "sale", "Friday", "(", "May", ")"]
# ::lemmas ["here", "be", "some", "important", "ticket", "info", "for", "AUS+NZ", "//", "there", "s", "no", "pre", "-", "sale", "for", "'", "tour", "-", "on", "-", "sale", "Friday", "(", "May", ")"]
(c21-3 / multi-sentence
       :snt1 (c21-11 / information
                     :topic (c21-12 / ticket)
                     :ARG1-of (c21-6 / important-01)
                     :quant (c21-5 / some)
                     :beneficiary (c21-7 / and
                                         :op1 (c21-10 / company
                                                      :name (c21-4 / name
                                                                   :op1 "AUS+NZ"))
                                         :op2 (c21-14 / company
                                                      :name (c21-9 / name
                                                                   :op1 "AUS"))))
       :snt2 (c21-0 / sell-01
                    :time (c21-2 / before
                                 :op1 (c21-15 / sell-01
                                              :ARG1 (c21-13 / tour)))
                    :time (c21-8 / date-entity
                                 :weekday (c21-1 / friday)
                                 :month 5)
                    :polarity -))

# ::snt THANK GOD
# ::tokens ["THANK", "GOD"]
# ::lemmas ["thank", "GOD"]
(c22-2 / thank-01
       :ARG1 (c22-1 / person
                    :name (c22-0 / name
                                 :op1 "God")))

# ::snt about to post info now
# ::tokens ["about", "to", "post", "info", "now"]
# ::lemmas ["about", "to", "post", "info", "now"]
(c23-2 / post-01
       :ARG0 (c23-3 / i)
       :ARG1 (c23-1 / information)
       :time (c23-4 / about-to)
       :time (c23-0 / now))

# ::snt CAN YOU PLEASE SLIDE INTO MY DMS I GOT ALOT OF QUESTIONS AND ITS GIVING ME STRESS
# ::tokens ["CAN", "YOU", "PLEASE", "SLIDE", "INTO", "MY", "DMS", "I", "GOT", "ALOT", "OF", "QUESTIONS", "AND", "ITS", "GIVING", "ME", "STRESS"]
# ::lemmas ["can", "you", "please", "SLIDE", "INTO", "my", "dms", "i", "get", "ALOT", "of", "question", "and", "its", "give", "ME", "stress"]
(c24-3 / multi-sentence
       :snt1 (c24-10 / truth-value
                     :polarity-of (c24-7 / possible-01
                                         :ARG1 (c24-4 / slide-01
                                                      :ARG0 (c24-2 / you)
                                                      :ARG1 (c24-9 / i)
                                                      :destination (c24-1 / bedroom
                                                                          :poss c24-9))
                                         :polite +))
       :snt2 (c24-6 / and
                    :op1 (c24-11 / get-01
                                 :ARG0 (c24-5 / i)
                                 :ARG1 (c24-12 / question-01
                                               :quant (c24-8 / lot)))
                    :op2 (c24-13 / give-01
                                 :ARG0 (c24-14 / it)
                                 :ARG1 (c24-0 / strong-02
                                              :ARG1 c24-5)
                                 :ARG2 c24-5)))

# ::snt IM SO CONFUSED ABOUT NZ TICKETS aND EVERYTHING ABOUT PRESALE PLS HELP
# ::tokens ["IM", "SO", "CONFUSED", "ABOUT", "NZ", "TICKETS", "aND", "EVERYTHING", "ABOUT", "PRESALE", "PLS", "HELP"]
# ::lemmas ["IM", "SO", "CONFUSED", "about", "NZ", "tickets", "and", "everything", "about", "PRESALE", "PLS", "HELP"]
(c25-5 / consent-01
       :ARG0 (c25-6 / i)
       :ARG1 (c25-7 / trade-01
                    :mod (c25-9 / country
                                :name (c25-0 / name
                                             :op1 "NZ")))
       :degree (c25-1 / so)
       :topic (c25-2 / everything
                     :topic (c25-3 / help-01
                                   :ARG0 (c25-8 / government-organization
                                                :name (c25-4 / name
                                                             :op1 "Presale"
                                                             :op2 "PLS")))))

# ::snt im just about to post that info, hold uppp
# ::tokens ["i", "m", "just", "about", "to", "post", "that", "info", ",", "hold", "uppp"]
# ::lemmas ["i", "m", "just", "about", "to", "post", "that", "info", ",", "hold", "uppp"]
(c26-3 / and
       :op1 (c26-5 / post-01
                   :ARG0 (c26-7 / i)
                   :ARG1 (c26-2 / information
                                :mod (c26-8 / that))
                   :time (c26-9 / about-to)
                   :mod (c26-6 / just))
       :op2 (c26-4 / hold-01
                   :ARG0 (c26-0 / you)
                   :ARG1 (c26-10 / thing
                                 :name (c26-1 / name
                                              :op1 "UPP"))
                   :mode imperative))

# ::snt any idea what the 'fan registration' equivalent will be for nz?
# ::tokens ["any", "idea", "what", "the", "'", "fan", "registration", "'", "equivalent", "will", "be", "for", "nz", "?"]
# ::lemmas ["any", "idea", "what", "the", "'", "fan", "registration", "'", "equivalent", "will", "be", "for", "nz", "?"]
(c27-5 / know-01
       :ARG0 (c27-1 / you)
       :ARG1 (c27-7 / thing
                    :ARG2-of (c27-4 / equal-01
                                    :ARG1 (c27-2 / register-02
                                                 :ARG0 (c27-0 / fan))))
       :polarity (c27-3 / amr-unknown)
       :mod (c27-6 / any))

# ::snt everywhere but south america
# ::tokens ["everywhere", "but", "south", "america"]
# ::lemmas ["everywhere", "but", "south", "america"]
(c28-1 / except-01
       :ARG1 (c28-0 / country-region
                    :name (c28-2 / name
                                 :op1 "South"
                                 :op2 "America"))
       :location (c28-3 / everywhere))

# ::snt Hey! If you wanna enjoy a cover that I made "Sign Of The Times"by Harry StylesHere it is: Have a beautiful day!
# ::tokens ["Hey", "!", "If", "you", "wanna", "enjoy", "a", "cover", "that", "I", "made", "\"", "Sign", "Of", "The", "Times\"by", "Harry", "StylesHere", "it", "is", ":", "Have", "a", "beautiful", "day", "!"]
# ::lemmas ["hey", "!", "if", "you", "wanna", "enjoy", "a", "cover", "that", "i", "make", "\"", "Sign", "of", "the", "times\"by", "Harry", "StylesHere", "it", "be", ":", "have", "a", "beautiful", "day", "!"]
(c29-2 / multi-sentence
       :snt1 (c29-5 / hey
                    :mode expressive)
       :snt2 (c29-11 / have-condition-91
                     :ARG1 (c29-4 / have-03
                                  :ARG0 (c29-1 / you)
                                  :ARG1 (c29-13 / day
                                                :ARG1-of (c29-0 / beautiful-02))
                                  :mode imperative)
                     :ARG2 (c29-9 / want-01
                                  :ARG0 c29-1
                                  :ARG1 (c29-6 / enjoy-01
                                               :ARG0 c29-1
                                               :ARG1 (c29-10 / cover-03
                                                             :ARG0 (c29-12 / i)
                                                             :ARG1 (c29-7 / publication
                                                                          :name (c29-3 / name
                                                                                       :op1 "Sign"
                                                                                       :op2 "Of"
                                                                                       :op3 "The"
                                                                                       :op4 "Times")
                                                                          :ARG1-of (c29-8 / make-01
                                                                                          :ARG0 c29-12)))))
                     :location (c29-14 / here)))

# ::snt NOOOOOO STOP ANNOUNCING IT MY CHANCES ARE LIKE / TWITTER RIGHT NOW
# ::tokens ["NOOOOOO", "STOP", "ANNOUNCING", "IT", "MY", "CHANCES", "ARE", "LIKE", "/", "TWITTER", "RIGHT", "NOW"]
# ::lemmas ["noooooo", "stop", "announce", "IT", "my", "chances", "be", "like", "/", "TWITTER", "right", "now"]
(c30-3 / stop-01
       :ARG0 (c30-1 / you)
       :ARG1 (c30-9 / announce-01
                    :ARG0 c30-1
                    :ARG1 (c30-8 / and
                                 :op1 (c30-4 / resemble-01
                                             :ARG1 (c30-6 / choose-01
                                                          :ARG0 (c30-10 / i))
                                             :ARG2 (c30-0 / slash
                                                          :op1 (c30-7 / thing
                                                                      :quant 2)
                                                          :op2 (c30-12 / thing
                                                                       :quant 1)))
                                 :time (c30-2 / now
                                              :mod (c30-11 / right))))
       :mod (c30-5 / no)
       :mode imperative)

# ::snt Use the code for free ride: uberFREERIDE
# ::tokens ["Use", "the", "code", "for", "free", "ride", ":", "uberFREERIDE"]
# ::lemmas ["use", "the", "code", "for", "free", "ride", ":", "uberfreeride"]
(c31-5 / use-01
       :ARG0 (c31-1 / you)
       :ARG1 (c31-4 / code
                    :purpose (c31-2 / ride-01
                                    :ARG1-of (c31-0 / free-03))
                    :mod (c31-3 / uber))
       :mode imperative)

# ::snt I vote for for the Top Social Artist Award FIGHTING ARMY'S
# ::tokens ["I", "vote", "for", "for", "the", "Top", "Social", "Artist", "Award", "FIGHTING", "ARMY", "'S"]
# ::lemmas ["i", "vote", "for", "for", "the", "Top", "Social", "Artist", "Award", "FIGHTING", "ARMY", "'S"]
(c32-2 / vote-01
       :ARG0 (c32-4 / i)
       :ARG1 (c32-5 / award
                    :name (c32-1 / name
                                 :op1 "Top"
                                 :op2 "Social"
                                 :op3 "Artist"
                                 :op4 "Award")
                    :beneficiary (c32-3 / person
                                        :ARG0-of (c32-0 / fight-01
                                                        :ARG2 (c32-6 / arm)))))

# ::snt woww
# ::tokens ["woww"]
# ::lemmas ["woww"]
(c34-0 / wow
       :mode expressive)

# ::snt This is really exciting but I can't help but think it's strange to release tickets for sale before the album is out
# ::tokens ["This", "is", "really", "exciting", "but", "I", "ca", "n't", "help", "but", "think", "it", "'s", "strange", "to", "release", "tickets", "for", "sale", "before", "the", "album", "is", "out"]
# ::lemmas ["this", "be", "really", "exciting", "but", "i", "can", "not", "help", "but", "think", "it", "be", "strange", "to", "release", "ticket", "for", "sale", "before", "the", "album", "be", "out"]
(c35-9 / contrast-01
       :ARG1 (c35-6 / excite-01
                    :ARG0 (c35-11 / this)
                    :degree (c35-4 / really))
       :ARG2 (c35-8 / possible-01
                    :ARG1 (c35-7 / help-02
                                 :ARG0 (c35-10 / i)
                                 :ARG1 (c35-14 / think-01
                                               :ARG0 c35-10
                                               :ARG1 (c35-3 / strange
                                                            :domain (c35-13 / release-01
                                                                            :ARG1 (c35-12 / ticket
                                                                                          :ARG1-of (c35-0 / sell-01))
                                                                            :time (c35-2 / before
                                                                                         :op1 (c35-1 / out-01
                                                                                                     :ARG1 (c35-5 / album)))))))
                    :polarity -))

# ::snt delete ur fucking account
# ::tokens ["delete", "ur", "fucking", "account"]
# ::lemmas ["delete", "ur", "fucking", "account"]
(c36-0 / delete-01
       :ARG0 (c36-2 / you)
       :ARG1 (c36-3 / account
                    :poss c36-2
                    :mod (c36-1 / fucking
                                :mode expressive))
       :mode imperative)

# ::snt dude u wanna fuck off
# ::tokens ["dude", "u", "wanna", "fuck", "off"]
# ::lemmas ["dude", "u", "wanna", "fuck", "off"]
(c37-1 / say-01
       :ARG0 (c37-3 / i)
       :ARG1 (c37-2 / want-01
                    :ARG0 (c37-4 / dude)
                    :ARG1 (c37-0 / fuck-off-03
                                 :ARG0 c37-4))
       :ARG2 c37-4)

# ::snt And no indonesia tour i wanna kill harry
# ::tokens ["And", "no", "indonesia", "tour", "i", "wanna", "kill", "harry"]
# ::lemmas ["and", "no", "indonesia", "tour", "i", "wanna", "kill", "harry"]
(c38-1 / and
       :op2 (c38-8 / tour
                   :mod (c38-5 / country
                               :name (c38-0 / name
                                            :op1 "India"))
                   :ARG2-of (c38-3 / kill-01
                                   :ARG0 (c38-7 / i)
                                   :ARG1 (c38-4 / person
                                                :name (c38-2 / name
                                                             :op1 "Harry"))
                                   :ARG1-of (c38-6 / want-01
                                                   :ARG0 c38-7))
                   :polarity -))

# ::snt can't wait men.
# ::tokens ["ca", "n't", "wait", "men", "."]
# ::lemmas ["can", "not", "wait", "man", "."]
(c39-3 / say-01
       :ARG1 (c39-2 / possible-01
                    :ARG1 (c39-1 / wait-01
                                 :ARG1 (c39-0 / man
                                              :ARG2-of c39-3))
                    :polarity -))

# ::snt Why is Not In The List huh
# ::tokens ["Why", "is", "Not", "In", "The", "List", "huh"]
# ::lemmas ["why", "be", "Not", "In", "The", "List", "huh"]
(c41-0 / cause-01
       :ARG0 (c41-3 / amr-unknown)
       :ARG1 (c41-2 / list-01
                    :polarity -)
       :mod (c41-1 / huh
                   :mode expressive))

# ::snt delete
# ::tokens ["delete"]
# ::lemmas ["delete"]
(c43-0 / delete-01)

# ::snt Delete this
# ::tokens ["Delete", "this"]
# ::lemmas ["Delete", "this"]
(c44-0 / delete-01
       :ARG0 (c44-1 / you)
       :ARG1 (c44-2 / this)
       :mode imperative)

# ::snt What tour
# ::tokens ["What", "tour"]
# ::lemmas ["what", "tour"]
(c45-1 / tour
       :mod (c45-0 / amr-unknown))

# ::snt y'all do know that harry announced this tour to his m instagram followers and his m twitter followers right
# ::tokens ["y'", "all", "do", "know", "that", "harry", "announced", "this", "tour", "to", "his", "m", "instagram", "followers", "and", "his", "m", "twitter", "followers", "right"]
# ::lemmas ["you", "all", "do", "know", "that", "harry", "announce", "this", "tour", "to", "his", "m", "instagram", "follower", "and", "his", "m", "twitter", "follower", "right"]
(c46-7 / know-01
       :ARG0 (c46-1 / you
                    :mod (c46-14 / all))
       :ARG1 (c46-13 / announce-01
                     :ARG0 (c46-6 / person
                                  :name (c46-2 / name
                                               :op1 " harry"))
                     :ARG1 (c46-12 / tour
                                   :mod (c46-17 / this))
                     :ARG2 (c46-11 / and
                                   :op1 (c46-3 / person
                                               :ARG0-of (c46-0 / follow-02
                                                               :ARG1 c46-6
                                                               :medium (c46-16 / publication
                                                                               :name (c46-5 / name
                                                                                            :op1 "Instagram"))))
                                   :op2 (c46-10 / person
                                                :ARG0-of (c46-8 / follow-02
                                                                :ARG1 c46-6
                                                                :medium (c46-15 / publication
                                                                                :name (c46-9 / name
                                                                                             :op1 "Twitter")))))
                     :ARG1-of (c46-4 / right-06)))

# ::snt why you gotta be so damn loud about it though
# ::tokens ["why", "you", "got", "ta", "be", "so", "damn", "loud", "about", "it", "though"]
# ::lemmas ["why", "you", "got", "to", "be", "so", "damn", "loud", "about", "it", "though"]
(c47-2 / have-concession-91
       :ARG1 (c47-4 / cause-01
                    :ARG0 (c47-6 / amr-unknown)
                    :ARG1 (c47-3 / loud
                                 :domain (c47-0 / you)
                                 :degree (c47-7 / damn
                                                :degree (c47-1 / so))
                                 :topic (c47-5 / it))))

# ::snt And the most?
# ::tokens ["And", "the", "most", "?"]
# ::lemmas ["and", "the", "most", "?"]
(c48-3 / and
       :op2 (c48-0 / have-quant-91
                   :ARG3 (c48-1 / most)
                   :ARG5 (c48-2 / amr-unknown)))

# ::snt SHUT UP
# ::tokens ["SHUT", "UP"]
# ::lemmas ["SHUT", "UP"]
(c49-1 / shut-up-06
       :ARG0 (c49-0 / you)
       :mode imperative)

# ::snt fuck off u dumb cunts
# ::tokens ["fuck", "off", "u", "dumb", "cunts"]
# ::lemmas ["fuck", "off", "u", "dumb", "cunt"]
(c50-2 / say-01
       :ARG0 (c50-4 / i)
       :ARG1 (c50-0 / fuck-off-03
                    :ARG0 (c50-1 / you
                                 :mod (c50-3 / cunt
                                             :mod (c50-5 / dumb))
                                 :ARG2-of c50-2)
                    :mode imperative))
