# ::snt Thanks
# ::tokens ["Thanks"]
# ::lemmas ["thank"]
(c1-2 / thank-01
      :ARG0 (c1-1 / i)
      :ARG1 (c1-0 / you))

# ::snt BS
# ::tokens ["BS"]
# ::lemmas ["BS"]
(c2-0 / bullshit
      :mode expressive)

# ::snt Love your Twitter name btw!
# ::tokens ["Love", "your", "Twitter", "name", "btw", "!"]
# ::lemmas ["Love", "your", "Twitter", "name", "btw", "!"]
(c3-3 / love-01
      :ARG1 (c3-2 / name
                  :poss (c3-1 / you)
                  :mod (c3-4 / publication
                             :name c3-2
                             :op1 "Twitter"))
      :mod (c3-0 / by-the-way))

# ::snt Dont believe you. You and George laughable. The whole world knew and you didt. Funny but you are accountable. Live with that..daughters?
# ::tokens ["Do", "nt", "believe", "you", ".", "You", "and", "George", "laughable", ".", "The", "whole", "world", "knew", "and", "you", "didt", ".", "Funny", "but", "you", "are", "accountable", ".", "Live", "with", "that", "..", "daughters", "?"]
# ::lemmas ["do", "not", "believe", "you", ".", "you", "and", "George", "laughable", ".", "the", "whole", "world", "know", "and", "you", "didt", ".", "funny", "but", "you", "be", "accountable", ".", "live", "with", "that", "..", "daughter", "?"]
(c4-12 / multi-sentence
       :snt1 (c4-11 / believe-01
                    :ARG0 (c4-20 / i)
                    :ARG1 (c4-3 / you)
                    :polarity -)
       :snt2 (c4-0 / laughable-03
                   :ARG1 (c4-8 / and
                               :op1 c4-3
                               :op2 (c4-18 / person
                                           :name (c4-17 / name
                                                        :op1 "George"))))
       :snt3 (c4-7 / and
                   :op1 (c4-5 / know-01
                              :ARG0 (c4-19 / world
                                           :mod (c4-1 / whole)))
                   :op2 (c4-15 / know-01
                               :ARG0 (c4-9 / you)
                               :polarity -))
       :snt4 (c4-14 / contrast-01
                    :ARG1 (c4-16 / funny-02)
                    :ARG2 (c4-6 / accountable-02
                                :ARG0 c4-9))
       :snt5 (c4-10 / live-02
                    :ARG0 (c4-2 / you
                                :ARG0-of (c4-4 / have-rel-role-91
                                               :ARG2 (c4-21 / daughter)))
                    :polarity (c4-13 / amr-unknown)
                    :mode imperative))

# ::snt We are not stupid!!!
# ::tokens ["We", "are", "not", "stupid", "!", "!", "!"]
# ::lemmas ["we", "be", "not", "stupid", "!", "!", "!"]
(c5-1 / stupid
      :domain (c5-0 / we)
      :polarity -
      :mode expressive)

# ::snt Damon must have known. I don't believe him. Really disappointed.
# ::tokens ["Damon", "must", "have", "known", ".", "I", "do", "n't", "believe", "him", ".", "Really", "disappointed", "."]
# ::lemmas ["Damon", "must", "have", "know", ".", "i", "do", "not", "believe", "he", ".", "really", "disappointed", "."]
(c6-3 / multi-sentence
      :snt1 (c6-0 / obligate-01
                  :ARG1 (c6-7 / know-01
                              :ARG0 (c6-6 / person
                                          :name (c6-2 / name
                                                      :op1 "Damon"))))
      :snt2 (c6-1 / believe-01
                  :ARG0 (c6-8 / i)
                  :ARG1 (c6-5 / he)
                  :polarity -)
      :snt3 (c6-9 / disappoint-01
                  :degree (c6-4 / really)))

# ::snt He was touched too
# ::tokens ["He", "was", "touched", "too"]
# ::lemmas ["he", "be", "touch", "too"]
(c7-2 / touch-01
      :ARG1 (c7-0 / he)
      :mod (c7-1 / too))

# ::snt Really Matt? This is very serious, you know?
# ::tokens ["Really", "Matt", "?", "This", "is", "very", "serious", ",", "you", "know", "?"]
# ::lemmas ["really", "Matt", "?", "this", "be", "very", "serious", ",", "you", "know", "?"]
(c8-2 / multi-sentence
      :snt1 (c8-7 / person
                  :name (c8-1 / name
                              :op1 "Matt")
                  :ARG1-of (c8-4 / real-04))
      :snt2 (c8-3 / serious-02
                  :ARG1 (c8-9 / this)
                  :degree (c8-5 / very)
                  :ARG1-of (c8-8 / know-01
                                 :ARG0 (c8-0 / you)
                                 :polarity (c8-6 / amr-unknown))))

# ::snt Its always been this way!! People are getting tired of getting paid off for their silence and the hurting of others!! It needs to STOP!
# ::tokens ["Its", "always", "been", "this", "way", "!", "!", "People", "are", "getting", "tired", "of", "getting", "paid", "off", "for", "their", "silence", "and", "the", "hurting", "of", "others", "!", "!", "It", "needs", "to", "STOP", "!"]
# ::lemmas ["its", "always", "be", "this", "way", "!", "!", "people", "be", "get", "tired", "of", "getting", "pay", "off", "for", "their", "silence", "and", "the", "hurting", "of", "other", "!", "!", "it", "need", "to", "stop", "!"]
(c9-2 / multi-sentence
      :snt1 (c9-10 / way
                   :domain (c9-12 / it)
                   :time (c9-6 / always)
                   :mod (c9-13 / this))
      :snt2 (c9-16 / tire-03
                   :ARG0 (c9-9 / pay-off-02
                               :ARG2 (c9-3 / person)
                               :ARG3 (c9-14 / and
                                            :op1 (c9-4 / silence
                                                       :poss c9-3)
                                            :op2 (c9-8 / hurt-01
                                                       :ARG0 c9-3
                                                       :ARG1 (c9-15 / person
                                                                    :mod (c9-0 / other)))))
                   :ARG1 (c9-11 / person))
      :snt3 (c9-5 / need-01
                  :ARG1 (c9-1 / STOP-01
                              :ARG1 (c9-7 / it))))

# ::snt When Rock and Seth McFarland make jokes about pervy Weinstein, I kinda find that statement a little hard to swallow
# ::tokens ["When", "Rock", "and", "Seth", "McFarland", "make", "jokes", "about", "pervy", "Weinstein", ",", "I", "kinda", "find", "that", "statement", "a", "little", "hard", "to", "swallow"]
# ::lemmas ["when", "Rock", "and", "Seth", "McFarland", "make", "joke", "about", "pervy", "Weinstein", ",", "i", "kinda", "find", "that", "statement", "a", "little", "hard", "to", "swallow"]
(c10-0 / find-01
       :ARG0 (c10-14 / i)
       :ARG1 (c10-6 / hard-02
                    :ARG1 (c10-4 / swallow-01
                                 :ARG1 (c10-15 / thing
                                               :ARG1-of (c10-1 / state-01)
                                               :mod (c10-17 / that)))
                    :degree (c10-7 / little))
       :degree (c10-8 / kind-of)
       :time (c10-13 / joke-01
                     :ARG0 (c10-5 / and
                                  :op1 (c10-9 / person
                                              :name (c10-2 / name
                                                           :op1 "Rock"))
                                  :op2 (c10-3 / person
                                              :name (c10-10 / name
                                                            :op1 "Seth"
                                                            :op2 "McFarland")))
                     :ARG2 (c10-16 / person
                                   :name (c10-11 / name
                                                 :op1 "Weinstein")
                                   :mod (c10-12 / pervy))))

# ::snt Yeah! Right! Really! Naw! Go on! More movies! Matt?
# ::tokens ["Yeah", "!", "Right", "!", "Really", "!", "Naw", "!", "Go", "on", "!", "More", "movies", "!", "Matt", "?"]
# ::lemmas ["yeah", "!", "right", "!", "really", "!", "Naw", "!", "go", "on", "!", "more", "movie", "!", "Matt", "?"]
(c11-1 / multi-sentence
       :snt1 (c11-0 / yeah
                    :mode expressive)
       :snt2 (c11-4 / right-06
                    :ARG1-of (c11-9 / real-04)
                    :mode expressive)
       :snt3 (c11-8 / go-on-15
                    :ARG0 (c11-3 / you)
                    :snt4-of c11-1
                    :mode imperative)
       :ARG0 c11-3
       :snt5 (c11-5 / movie
                    :quant (c11-10 / more))
       :snt6 (c11-6 / person
                    :name (c11-2 / name
                                 :op1 "Matt")
                    :polarity (c11-7 / amr-unknown))
       :mode imperative)

# ::snt What else is he going to say? DUH
# ::tokens ["What", "else", "is", "he", "going", "to", "say", "?", "DUH"]
# ::lemmas ["what", "else", "be", "he", "go", "to", "say", "?", "DUH"]
(c14-0 / multi-sentence
       :snt1 (c14-1 / say-01
                    :ARG0 (c14-3 / he)
                    :ARG1 (c14-4 / amr-unknown
                                 :mod (c14-2 / else)))
       :snt2 (c14-5 / duh
                    :mode expressive))

# ::snt "Everybody" knew they chose to look the other way now scrambling to cover their own image
# ::tokens ["\"", "Everybody", "\"", "knew", "they", "chose", "to", "look", "the", "other", "way", "now", "scrambling", "to", "cover", "their", "own", "image"]
# ::lemmas ["\"", "everybody", "\"", "know", "they", "choose", "to", "look", "the", "other", "way", "now", "scramble", "to", "cover", "their", "own", "image"]
(c15-4 / know-01
       :ARG0 (c15-3 / everybody)
       :ARG1 (c15-6 / choose-01
                    :ARG0 c15-3
                    :ARG1 (c15-5 / look-01
                                 :ARG0 c15-3
                                 :ARG1 (c15-7 / way
                                              :mod (c15-0 / other)))
                    :time (c15-1 / now)
                    :ARG0-of (c15-10 / cause-01
                                     :ARG1 (c15-2 / scramble-01
                                                  :ARG0 c15-3
                                                  :ARG1 (c15-8 / cover-03
                                                               :ARG0 c15-3
                                                               :ARG1 (c15-9 / image
                                                                            :poss c15-3))))))

# ::snt Riiiiiiiiiiiight
# ::tokens ["Riiiiiiiiiiiight"]
# ::lemmas ["riiiiiiiiiiiight"]
(c16-0 / right-06)

# ::snt Speaks with forked tongue. Hypocrisy at its finest from Hollywood.
# ::tokens ["Speaks", "with", "forked", "tongue", ".", "Hypocrisy", "at", "its", "finest", "from", "Hollywood", "."]
# ::lemmas ["speak", "with", "fork", "tongue", ".", "Hypocrisy", "at", "its", "fine", "from", "Hollywood", "."]
(c18-1 / multi-sentence
       :snt1 (c18-3 / speak-01
                    :manner (c18-8 / tongue
                                   :ARG1-of (c18-0 / fork-03)))
       :snt2 (c18-4 / hypocrisy
                    :source (c18-5 / market-sector
                                   :name (c18-2 / name
                                                :op1 "Hollywood"))
                    :ARG1-of (c18-7 / have-degree-91
                                    :ARG2 (c18-6 / fine-03
                                                 :ARG1 c18-4)
                                    :ARG3 (c18-9 / most))))

# ::snt Um, everyone knew.
# ::tokens ["Um", ",", "everyone", "knew", "."]
# ::lemmas ["um", ",", "everyone", "know", "."]
(c19-2 / know-01
       :ARG0 (c19-0 / everyone)
       :mod (c19-1 / um
                   :mode expressive))

# ::snt Yeah, right and he dont know about his BFF Casey Afleck alleged misconduct either because now every men in Hollywood is blind, deaf &amp; mute
# ::tokens ["Yeah", ",", "right", "and", "he", "do", "nt", "know", "about", "his", "BFF", "Casey", "Afleck", "alleged", "misconduct", "either", "because", "now", "every", "men", "in", "Hollywood", "is", "blind", ",", "deaf", "&", "amp", ";", "mute"]
# ::lemmas ["yeah", ",", "right", "and", "he", "do", "not", "know", "about", "his", "BFF", "Casey", "Afleck", "allege", "misconduct", "either", "because", "now", "every", "man", "in", "Hollywood", "be", "blind", ",", "deaf", "&", "amp", ";", "mute"]
(c20-6 / and
       :op1 (c20-14 / right-06)
       :op2 (c20-2 / know-01
                   :ARG0 (c20-1 / he)
                   :ARG1 (c20-8 / misconduct-01
                                :ARG0 (c20-17 / person
                                              :name (c20-13 / name
                                                            :op1 "Casey"
                                                            :op2 "Afleck")
                                              :ARG0-of (c20-19 / have-rel-role-91
                                                               :ARG1 c20-1
                                                               :ARG2 (c20-7 / boyfriend)))
                                :ARG1-of (c20-5 / allege-01))
                   :ARG1-of (c20-11 / cause-01
                                    :ARG0 (c20-4 / and
                                                 :op1 (c20-0 / blind-02
                                                             :ARG1 (c20-3 / man
                                                                          :mod (c20-16 / every)
                                                                          :location (c20-12 / market-sector
                                                                                            :name (c20-9 / name
                                                                                                         :op1 "Hollywood"))))
                                                 :op2 (c20-15 / deaf-02
                                                              :ARG1 c20-3)
                                                 :op3 (c20-20 / amphetamine
                                                              :domain c20-3)
                                                 :op4 (c20-10 / mute-01
                                                              :ARG1 c20-3)
                                                 :time (c20-18 / now)))
                   :polarity -))

# ::snt Mte
# ::tokens ["Mte"]
# ::lemmas ["Mte"]
(c21-1 / person
       :name (c21-0 / name
                    :op1 "Ms"))

# ::snt don't believe it.
# ::tokens ["do", "n't", "believe", "it", "."]
# ::lemmas ["do", "not", "believe", "it", "."]
(c23-0 / believe-01
       :ARG1 (c23-1 / it)
       :polarity -)

# ::snt Just Like he stopped Casey Affleck.
# ::tokens ["Just", "Like", "he", "stopped", "Casey", "Affleck", "."]
# ::lemmas ["just", "like", "he", "stop", "Casey", "Affleck", "."]
(c25-2 / resemble-01
       :ARG2 (c25-1 / stop-01
                    :ARG0 (c25-3 / he)
                    :ARG1 (c25-4 / person
                                 :name (c25-0 / name
                                              :op1 "Casey"
                                              :op2 "Affleck")))
       :mod (c25-5 / just))

# ::snt BULLSHIT
# ::tokens ["BULLSHIT"]
# ::lemmas ["BULLSHIT"]
(c26-0 / bullshit-01)
