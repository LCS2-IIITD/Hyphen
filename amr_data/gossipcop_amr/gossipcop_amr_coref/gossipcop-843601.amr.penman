# ::snt "Only $43?" You do realize this is a little absurd... a t shirt with the sleeves cut off for $43 is not "Saturday savings"
# ::tokens ["\"", "Only", "$", "43", "?", "\"", "You", "do", "realize", "this", "is", "a", "little", "absurd", "...", "a", "t", "shirt", "with", "the", "sleeves", "cut", "off", "for", "$", "43", "is", "not", "\"", "Saturday", "savings", "\""]
# ::lemmas ["\"", "Only", "$", "43", "?", "\"", "you", "do", "realize", "this", "be", "a", "little", "absurd", "...", "a", "t", "shirt", "with", "the", "sleeve", "cut", "off", "for", "$", "43", "be", "not", "\"", "Saturday", "saving", "\""]
(c1-4 / realize-01
      :ARG0 (c1-1 / you)
      :ARG1 (c1-5 / absurd
                  :domain (c1-9 / this)
                  :degree (c1-6 / little))
      :ARG1-of (c1-7 / cause-01
                     :ARG0 (c1-2 / save-01
                                 :ARG3 (c1-0 / shirt
                                             :mod (c1-12 / t)
                                             :ARG1-of (c1-11 / cut-off-04
                                                             :ARG3 (c1-13 / sleeve)))
                                 :time (c1-10 / date-entity
                                              :weekday (c1-3 / saturday))
                                 :polarity -))
      :polarity (c1-8 / amr-unknown))

# ::snt ONLY $43!!! With $43 I can make that tank top, put some gas in my car, and buy myself something to eat.
# ::tokens ["ONLY", "$", "43", "!", "!", "!", "With", "$", "43", "I", "can", "make", "that", "tank", "top", ",", "put", "some", "gas", "in", "my", "car", ",", "and", "buy", "myself", "something", "to", "eat", "."]
# ::lemmas ["ONLY", "$", "43", "!", "!", "!", "with", "$", "43", "i", "can", "make", "that", "tank", "top", ",", "put", "some", "gas", "in", "my", "car", ",", "and", "buy", "myself", "something", "to", "eat", "."]
(c2-11 / multi-sentence
       :snt1 (c2-14 / cost-01
                    :ARG1 (c2-20 / it)
                    :ARG2 (c2-4 / monetary-quantity
                                :unit (c2-22 / dollar)
                                :quant 43)
                    :mod (c2-18 / every))
       :snt2 (c2-19 / possible-01
                    :ARG1 (c2-7 / and
                                :op1 (c2-17 / make-01
                                            :ARG0 (c2-3 / i)
                                            :ARG1 (c2-5 / top
                                                        :mod (c2-16 / tank)
                                                        :mod (c2-21 / that)))
                                :op2 (c2-12 / put-01
                                            :ARG0 c2-3
                                            :ARG1 (c2-6 / gas
                                                        :quant (c2-0 / some))
                                            :ARG2 (c2-9 / car
                                                        :poss c2-3))
                                :op3 (c2-10 / buy-01
                                            :ARG0 c2-3
                                            :ARG1 (c2-2 / something
                                                        :ARG1-of (c2-8 / eat-01
                                                                       :ARG0 c2-3))
                                            :ARG2 c2-3))
                    :ARG1-of (c2-1 / cause-01
                                   :ARG0 (c2-13 / monetary-quantity
                                                :unit (c2-15 / dollar)
                                                :quant 43))))

# ::snt ONLY $43 for a TANK TOP?! Psh.
# ::tokens ["ONLY", "$", "43", "for", "a", "TANK", "TOP", "?", "!", "Psh", "."]
# ::lemmas ["ONLY", "$", "43", "for", "a", "tank", "top", "?", "!", "Psh", "."]
(c3-2 / rate-entity-91
      :polarity (c3-3 / amr-unknown)
      :ARG1 (c3-1 / monetary-quantity
                  :unit (c3-5 / dollar)
                  :quant 43)
      :ARG2 (c3-4 / top
                  :mod (c3-6 / tank))
      :mod (c3-0 / off))

# ::snt Yes agreed
# ::tokens ["Yes", "agreed"]
# ::lemmas ["yes", "agree"]
(c4-0 / agree-01)
