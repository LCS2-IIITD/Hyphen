# ::snt Better quality
# ::tokens ["Better", "quality"]
# ::lemmas ["well", "quality"]
(c1-3 / quality
      :ARG1-of (c1-1 / have-degree-91
                     :ARG2 (c1-0 / good-02
                                 :ARG1 c1-3)
                     :ARG3 (c1-2 / more)))

# ::snt :Top row: , Richard Edson, Susan Watkins, Kevin Dillon, Bottom row: Dale Dye JD Rock Galloti
# ::tokens [":", "Top", "row", ":", ",", "Richard", "Edson", ",", "Susan", "Watkins", ",", "Kevin", "Dillon", ",", "Bottom", "row", ":", "Dale", "Dye", "JD", "Rock", "Galloti"]
# ::lemmas [":", "top", "row", ":", ",", "Richard", "Edson", ",", "Susan", "Watkins", ",", "Kevin", "Dillon", ",", "Bottom", "row", ":", "Dale", "Dye", "JD", "Rock", "Galloti"]
(c2-4 / and
      :op1 (c2-3 / row
                 :mod (c2-13 / top)
                 :domain (c2-12 / and
                                :op1 (c2-6 / person
                                           :name (c2-1 / name
                                                       :op1 "Richard"
                                                       :op2 "Edson"))
                                :op2 (c2-2 / person
                                           :name (c2-5 / name
                                                       :op1 "Susan"
                                                       :op2 "Watkins"))
                                :op3 (c2-16 / person
                                            :name (c2-7 / name
                                                        :op1 "Kevin"
                                                        :op2 "Dillon"))))
      :op2 (c2-15 / row
                  :mod (c2-0 / bottom)
                  :domain (c2-9 / and
                                :op1 (c2-8 / person
                                           :name (c2-10 / name
                                                        :op1 "Dale"
                                                        :op2 "Dye"))
                                :op2 (c2-14 / person
                                            :name (c2-11 / name
                                                         :op1 "JD"
                                                         :op2 "Rock"
                                                         :op3 "Galloti")))))

# ::snt Johnny Depp was in Platoon, I had know idea. I have it on Blu-ray so I'll have to watch it again, maybe even tonight.
# ::tokens ["Johnny", "Depp", "was", "in", "Platoon", ",", "I", "had", "know", "idea", ".", "I", "have", "it", "on", "Blu", "-", "ray", "so", "I", "'ll", "have", "to", "watch", "it", "again", ",", "maybe", "even", "tonight", "."]
# ::lemmas ["Johnny", "Depp", "be", "in", "Platoon", ",", "i", "have", "know", "idea", ".", "i", "have", "it", "on", "Blu", "-", "ray", "so", "i", "'ll", "have", "to", "watch", "it", "again", ",", "maybe", "even", "tonight", "."]
(c3-10 / multi-sentence
       :snt1 (c3-9 / be-located-at-91
                   :ARG1 (c3-16 / person
                                :name (c3-14 / name
                                             :op1 "Johnny"
                                             :op2 "Depp"))
                   :ARG2 (c3-18 / work-of-art
                                :name (c3-12 / name
                                             :op1 "Platoon"))
                   :ARG0-of (c3-13 / cause-01
                                   :ARG1 (c3-5 / know-01
                                               :ARG0 (c3-19 / i)
                                               :ARG1 (c3-3 / idea))))
       :snt2 (c3-4 / have-03
                   :ARG0 (c3-7 / i)
                   :ARG1 c3-18
                   :medium (c3-0 / blu-ray)
                   :ARG0-of (c3-8 / cause-01
                                  :ARG1 (c3-2 / obligate-01
                                              :ARG1 c3-7
                                              :ARG2 (c3-1 / watch-01
                                                          :ARG0 c3-7
                                                          :ARG1 c3-18
                                                          :mod (c3-6 / again)
                                                          :time (c3-20 / date-entity
                                                                       :dayperiod (c3-17 / night)
                                                                       :mod (c3-15 / even)
                                                                       :ARG1-of (c3-11 / possible-01)))))))

# ::snt ^ ^ ^ ^
# ::tokens ["^", "^", "^", "^"]
# ::lemmas ["^", "^", "^", "^"]
(c4-0 / string-entity
      :value "^ ^ ^ ^")

# ::snt (*`*)
# ::tokens ["(", "*", "`", "*", ")"]
# ::lemmas ["(", "*", "`", "*", ")"]
(c5-0 / amr-empty)

# ::snt ^ ^
# ::tokens ["^", "^"]
# ::lemmas ["^", "^"]
(c6-0 / ^)
