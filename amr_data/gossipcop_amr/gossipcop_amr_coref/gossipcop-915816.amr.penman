# ::snt He want him some will Smith now just wait for it will &amp; jada abt get divorce so Duane &amp; will can be together
# ::tokens ["He", "want", "him", "some", "will", "Smith", "now", "just", "wait", "for", "it", "will", "&", "amp", ";", "jada", "abt", "get", "divorce", "so", "Duane", "&", "amp", ";", "will", "can", "be", "together"]
# ::lemmas ["he", "want", "he", "some", "will", "Smith", "now", "just", "wait", "for", "it", "will", "&", "amp", ";", "jada", "abt", "get", "divorce", "so", "Duane", "&", "amp", ";", "will", "can", "be", "together"]
(c1-10 / multi-sentence
       :snt1 (c1-18 / want-01
                    :ARG0 (c1-5 / he)
                    :ARG1 (c1-0 / some)
                    :ARG2 (c1-16 / person
                                 :name (c1-15 / name
                                              :op1 "Smith"))
                    :time (c1-12 / now))
       :snt2 (c1-1 / wait-01
                   :ARG1 (c1-4 / you)
                   :ARG2 (c1-19 / it)
                   :mod (c1-6 / just)
                   :mode imperative)
       :snt3 (c1-8 / get-01
                   :ARG0 (c1-11 / person
                                :name (c1-17 / name
                                             :op1 "Jada"))
                   :ARG1 (c1-20 / divorce-01
                                :ARG0 c1-11
                                :ARG1 (c1-3 / person
                                            :name (c1-14 / name
                                                         :op1 "Duane")))
                   :ARG0-of (c1-13 / cause-01
                                   :ARG1 (c1-2 / possible-01
                                               :ARG1 (c1-7 / together
                                                           :domain (c1-9 / and
                                                                         :op1 c1-11
                                                                         :op2 c1-3))))))

# ::snt Hope they can work it out b4 the divorce paper are finalized. A little counseling or therapy should help them out.
# ::tokens ["Hope", "they", "can", "work", "it", "out", "b4", "the", "divorce", "paper", "are", "finalized", ".", "A", "little", "counseling", "or", "therapy", "should", "help", "them", "out", "."]
# ::lemmas ["hope", "they", "can", "work", "it", "out", "b4", "the", "divorce", "paper", "be", "finalize", ".", "a", "little", "counseling", "or", "therapy", "should", "help", "they", "out", "."]
(c2-2 / multi-sentence
      :snt1 (c2-6 / hope-01
                  :ARG0 (c2-12 / i)
                  :ARG1 (c2-7 / possible-01
                              :ARG1 (c2-9 / work-out-02
                                          :ARG0 (c2-13 / they)
                                          :ARG1 (c2-4 / it)
                                          :time (c2-0 / finalize-01
                                                      :ARG1 (c2-3 / paper
                                                                  :topic (c2-15 / divorce-01))))))
      :snt2 (c2-5 / recommend-01
                  :ARG1 (c2-11 / help-out-03
                               :ARG0 (c2-1 / or
                                           :op1 (c2-10 / counsel-01
                                                       :ARG1 (c2-16 / they)
                                                       :quant (c2-8 / little))
                                           :op2 (c2-14 / therapy
                                                       :quant c2-8))
                               :ARG2 c2-16)))

# ::snt Wow. This is a surprise.
# ::tokens ["Wow", ".", "This", "is", "a", "surprise", "."]
# ::lemmas ["wow", ".", "this", "be", "a", "surprise", "."]
(c3-2 / surprise-01
      :ARG0 (c3-1 / this)
      :mod (c3-0 / wow
                 :mode expressive))

# ::snt I agree with you. Im sorry for their families but I just hope and praying that theyll be able to make everything work as co-parents for the sake of their two (2) beautiful boys. Other than that... I think theyre going to be fine with the separation.
# ::tokens ["I", "agree", "with", "you", ".", "I", "m", "sorry", "for", "their", "families", "but", "I", "just", "hope", "and", "praying", "that", "they", "ll", "be", "able", "to", "make", "everything", "work", "as", "co", "-", "parents", "for", "the", "sake", "of", "their", "two", "(", "2", ")", "beautiful", "boys", ".", "Other", "than", "that", "...", "I", "think", "they", "re", "going", "to", "be", "fine", "with", "the", "separation", "."]
# ::lemmas ["i", "agree", "with", "you", ".", "i", "m", "sorry", "for", "their", "family", "but", "i", "just", "hope", "and", "pray", "that", "they", "ll", "be", "able", "to", "make", "everything", "work", "as", "co", "-", "parent", "for", "the", "sake", "of", "their", "two", "(", "2", ")", "beautiful", "boy", ".", "other", "than", "that", "...", "i", "think", "they", "re", "go", "to", "be", "fine", "with", "the", "separation", "."]
(c4-21 / multi-sentence
       :snt1 (c4-15 / agree-01
                    :ARG0 (c4-30 / i)
                    :ARG2 (c4-7 / you))
       :snt2 (c4-23 / contrast-01
                    :ARG1 (c4-1 / sorry-01
                                :ARG1 (c4-8 / i)
                                :ARG2 (c4-25 / family
                                             :poss (c4-14 / they)))
                    :ARG2 (c4-13 / and
                                 :op1 (c4-9 / hope-01
                                            :ARG0 c4-8
                                            :ARG1 (c4-27 / possible-01
                                                         :ARG1 (c4-10 / make-02
                                                                      :ARG0 (c4-24 / they)
                                                                      :ARG1 (c4-29 / work-09
                                                                                   :ARG1 (c4-26 / everything)
                                                                                   :manner (c4-19 / coparent)
                                                                                   :purpose (c4-6 / sake
                                                                                                  :poss (c4-11 / and
                                                                                                               :op1 (c4-20 / boy
                                                                                                                           :ARG1-of (c4-3 / beautiful-02)
                                                                                                                           :ARG1-of (c4-18 / include-91
                                                                                                                                           :ARG2 (c4-4 / boy
                                                                                                                                                       :quant 2))
                                                                                                                           :quant 2))))))
                                            :op2 (c4-22 / pray-01
                                                        :ARG0 c4-8
                                                        :ARG1 c4-27)
                                            :mod (c4-12 / just)))
                    :snt3 (c4-16 / except-01
                                 :ARG1 (c4-31 / that)
                                 :ARG2 (c4-2 / think-01
                                             :ARG0 (c4-0 / i)
                                             :ARG1 (c4-28 / fine-04
                                                          :ARG1 (c4-5 / separate-01)
                                                          :ARG2 (c4-17 / they))))))

# ::snt Hate to hear this. Prayers for both.
# ::tokens ["Hate", "to", "hear", "this", ".", "Prayers", "for", "both", "."]
# ::lemmas ["hate", "to", "hear", "this", ".", "prayer", "for", "both", "."]
(c5-1 / multi-sentence
      :snt1 (c5-2 / hate-01
                  :ARG0 (c5-5 / i)
                  :ARG1 (c5-4 / hear-01
                              :ARG0 c5-5
                              :ARG1 (c5-6 / this)))
      :snt2 (c5-3 / pray-01
                  :beneficiary (c5-0 / both)))

# ::snt Sorry to hear this. Black Love is hard to find these days unfortunately
# ::tokens ["Sorry", "to", "hear", "this", ".", "Black", "Love", "is", "hard", "to", "find", "these", "days", "unfortunately"]
# ::lemmas ["sorry", "to", "hear", "this", ".", "Black", "Love", "be", "hard", "to", "find", "these", "days", "unfortunately"]
(c6-2 / multi-sentence
      :snt1 (c6-3 / sorry-01
                  :ARG1 (c6-8 / i)
                  :ARG2 (c6-4 / hear-01
                              :ARG0 c6-8
                              :ARG1 (c6-9 / this)))
      :snt2 (c6-7 / hard-02
                  :ARG1 (c6-0 / find-01
                              :ARG1 (c6-5 / love
                                          :ARG1-of (c6-1 / black-05)))
                  :time (c6-10 / day
                               :mod (c6-11 / this))
                  :ARG2-of (c6-6 / fortunate-01
                                 :polarity -)))

# ::snt For real
# ::tokens ["For", "real"]
# ::lemmas ["for", "real"]
(c7-0 / real-04)

# ::snt I hate to hear that. Don't like to see long-time couples throw in the towel.
# ::tokens ["I", "hate", "to", "hear", "that", ".", "Do", "n't", "like", "to", "see", "long", "-", "time", "couples", "throw", "in", "the", "towel", "."]
# ::lemmas ["i", "hate", "to", "hear", "that", ".", "do", "not", "like", "to", "see", "long", "-", "time", "couple", "throw", "in", "the", "towel", "."]
(c8-0 / multi-sentence
      :snt1 (c8-2 / hate-01
                  :ARG0 (c8-6 / i)
                  :ARG1 (c8-5 / hear-01
                              :ARG0 c8-6
                              :ARG1 (c8-7 / that)))
      :snt2 (c8-9 / dislike-01
                  :ARG0 c8-6
                  :ARG1 (c8-1 / see-01
                              :ARG0 c8-6
                              :ARG1 (c8-10 / throw-in-02
                                           :ARG0 (c8-4 / couple
                                                       :ARG1-of (c8-3 / long-03))
                                           :ARG1 (c8-8 / towel)))))

# ::snt after she discovered her singing talent.
# ::tokens ["after", "she", "discovered", "her", "singing", "talent", "."]
# ::lemmas ["after", "she", "discover", "her", "singing", "talent", "."]
(c9-1 / be-temporally-at-91
      :ARG2 (c9-3 / after
                  :op1 (c9-5 / discover-01
                             :ARG0 (c9-2 / she)
                             :ARG1 (c9-4 / talent
                                         :topic (c9-0 / sing-01
                                                      :ARG0 c9-2)))))

# ::snt Not surprised that how celebs role.
# ::tokens ["Not", "surprised", "that", "how", "celebs", "role", "."]
# ::lemmas ["not", "surprised", "that", "how", "celebs", "role", "."]
(c10-3 / surprise-01
       :ARG0 (c10-0 / role
                    :mod (c10-2 / celebrity)
                    :mod (c10-1 / so))
       :polarity -)

# ::snt Wow!
# ::tokens ["Wow", "!"]
# ::lemmas ["wow", "!"]
(c12-0 / wow-01
       :mode expressive)

# ::snt Wow......shout to the real husbands of Hollywood
# ::tokens ["Wow", "......", "shout", "to", "the", "real", "husbands", "of", "Hollywood"]
# ::lemmas ["wow", "......", "shout", "to", "the", "real", "husband", "of", "Hollywood"]
(c13-2 / shout-01
       :ARG2 (c13-5 / person
                    :ARG0-of (c13-4 / have-rel-role-91
                                    :ARG1 (c13-0 / market-sector
                                                 :name (c13-1 / name
                                                              :op1 "Hollywood"))
                                    :ARG2 (c13-7 / husband
                                                 :ARG1-of (c13-3 / real-04))))
       :mod (c13-6 / wow
                   :mode expressive)
       :mode expressive)

# ::snt Sorry to hear that wish yall could try a lol. Harder
# ::tokens ["Sorry", "to", "hear", "that", "wish", "y", "all", "could", "try", "a", "lol", ".", "Harder"]
# ::lemmas ["sorry", "to", "hear", "that", "wish", "you", "all", "could", "try", "a", "lol", ".", "hard"]
(c14-1 / multi-sentence
       :snt1 (c14-2 / sorry-01
                    :ARG1 (c14-10 / i)
                    :ARG2 (c14-5 / hear-01
                                 :ARG0 c14-10
                                 :ARG1 (c14-8 / wish-01
                                              :ARG0 (c14-0 / you)
                                              :ARG1 (c14-6 / possible-01
                                                           :ARG1 (c14-11 / try-01
                                                                         :ARG0 (c14-12 / you
                                                                                       :mod (c14-3 / all))
                                                                         :ARG1 (c14-13 / thing))))))
       :snt2 (c14-9 / hard-02
                    :ARG2-of (c14-4 / have-degree-91
                                    :ARG3 (c14-7 / more))))

# ::snt Sorry to hear this
# ::tokens ["Sorry", "to", "hear", "this"]
# ::lemmas ["sorry", "to", "hear", "this"]
(c15-2 / sorry-01
       :ARG2 (c15-0 / hear-01
                    :ARG1 (c15-1 / this)))

# ::snt He must be broke
# ::tokens ["He", "must", "be", "broke"]
# ::lemmas ["he", "must", "be", "break"]
(c16-2 / infer-01
       :ARG1 (c16-0 / broke-23
                    :ARG1 (c16-1 / he)))

# ::snt .Martin's got ALL that Money tho...
# ::tokens [".Martin", "'s", "got", "ALL", "that", "Money", "tho", "..."]
# ::lemmas [".martin", "be", "get", "all", "that", "money", "tho", "..."]
(c17-2 / have-concession-91
       :ARG1 (c17-6 / get-01
                    :ARG0 (c17-3 / person
                                 :name (c17-0 / name
                                              :op1 "Martin"))
                    :ARG1 (c17-1 / money
                                 :mod (c17-5 / all)
                                 :mod (c17-4 / that))))

# ::snt Who?
# ::tokens ["Who", "?"]
# ::lemmas ["who", "?"]
(c18-0 / amr-unknown)

# ::snt If someone would have told me I'd be alive to see this day happen I would have slapped them foolishness! I CAN NOT BELIEVE THIS!!!!
# ::tokens ["If", "someone", "would", "have", "told", "me", "I", "'d", "be", "alive", "to", "see", "this", "day", "happen", "I", "would", "have", "slapped", "them", "foolishness", "!", "I", "CAN", "NOT", "BELIEVE", "THIS", "!", "!", "!", "!"]
# ::lemmas ["if", "someone", "would", "have", "tell", "i", "i", "would", "be", "alive", "to", "see", "this", "day", "happen", "i", "would", "have", "slap", "they", "foolishness", "!", "i", "can", "not", "believe", "this", "!", "!", "!", "!"]
(c19-3 / multi-sentence
       :snt1 (c19-4 / slap-01
                    :ARG0 (c19-8 / i)
                    :ARG1 (c19-0 / someone)
                    :manner (c19-1 / foolishness)
                    :condition (c19-9 / tell-01
                                      :ARG0 c19-0
                                      :ARG1 (c19-6 / live-01
                                                   :ARG0 c19-8
                                                   :purpose (c19-13 / see-01
                                                                    :ARG0 c19-8
                                                                    :ARG1 (c19-11 / day
                                                                                  :mod (c19-12 / this))))
                                      :ARG2 c19-8))
       :snt2 (c19-7 / possible-01
                    :ARG1 (c19-2 / believe-01
                                 :ARG0 (c19-5 / i)
                                 :ARG1 (c19-10 / this))
                    :polarity -))

# ::snt Hollywood divorce
# ::tokens ["Hollywood", "divorce"]
# ::lemmas ["Hollywood", "divorce"]
(c20-0 / divorce-01
       :ARG0 (c20-2 / market-sector
                    :name (c20-1 / name
                                 :op1 "Hollywood")))

# ::snt Whoa!
# ::tokens ["Whoa", "!"]
# ::lemmas ["whoa", "!"]
(c22-0 / whoa
       :mode expressive)

# ::snt Mmmm
# ::tokens ["Mmmm"]
# ::lemmas ["mmmm"]
(c23-0 / hmm
       :mode expressive)

# ::snt Nahh
# ::tokens ["Nahh"]
# ::lemmas ["Nahh"]
(c24-0 / nahh)

# ::snt Aww! Sad.
# ::tokens ["Aww", "!", "Sad", "."]
# ::lemmas ["Aww", "!", "Sad", "."]
(c25-1 / sad-02
       :mod (c25-0 / aw
                   :mode expressive))

# ::snt Who?
# ::tokens ["Who", "?"]
# ::lemmas ["who", "?"]
(c26-0 / amr-unknown)

# ::snt Why?.
# ::tokens ["Why", "?", "."]
# ::lemmas ["why", "?", "."]
(c27-0 / cause-01
       :ARG0 (c27-1 / amr-unknown))

# ::snt Gorgeous angel
# ::tokens ["Gorgeous", "angel"]
# ::lemmas ["gorgeous", "angel"]
(c28-1 / angel
       :ARG1-of (c28-0 / beautiful-02)
       :mode expressive)

# ::snt Did her and Jada decide to finally be together exclusively and ditch Will and Duane?
# ::tokens ["Did", "her", "and", "Jada", "decide", "to", "finally", "be", "together", "exclusively", "and", "ditch", "Will", "and", "Duane", "?"]
# ::lemmas ["do", "she", "and", "Jada", "decide", "to", "finally", "be", "together", "exclusively", "and", "ditch", "Will", "and", "Duane", "?"]
(c29-14 / decide-01
        :ARG0 (c29-13 / and
                      :op1 (c29-3 / she)
                      :op2 (c29-7 / person
                                  :name (c29-1 / name
                                               :op1 "Jada")))
        :ARG1 (c29-12 / and
                      :op1 (c29-11 / together
                                   :domain c29-13
                                   :mod (c29-0 / final)
                                   :ARG1-of (c29-5 / exclusive-02))
                      :op2 (c29-9 / ditch-01
                                  :ARG0 c29-13
                                  :ARG1 (c29-10 / and
                                                :op1 (c29-2 / person
                                                            :name (c29-6 / name
                                                                         :op1 "Will"))
                                                :op2 (c29-15 / person
                                                             :name (c29-8 / name
                                                                          :op1 "Duane")))))
        :polarity (c29-4 / amr-unknown))

# ::snt Noooooooooooo!
# ::tokens ["Noooooooooooo", "!"]
# ::lemmas ["Noooooooooooo", "!"]
(c30-0 / no
       :mode expressive)

# ::snt SO SORRY TO HEAR THAT, GOD BLESS YOU AND YOUR FAMILY
# ::tokens ["SO", "SORRY", "TO", "HEAR", "THAT", ",", "GOD", "BLESS", "YOU", "AND", "YOUR", "FAMILY"]
# ::lemmas ["so", "sorry", "to", "hear", "that", ",", "GOD", "bless", "you", "and", "your", "FAMILY"]
(c31-9 / cause-01
       :ARG1 (c31-5 / rejoice-01
                    :ARG0 (c31-7 / hear-01
                                 :ARG1 (c31-11 / that))
                    :ARG1 (c31-8 / person
                                 :name (c31-3 / name
                                              :op1 "God")
                                 :ARG0-of (c31-1 / bless-01
                                                 :ARG1 (c31-6 / and
                                                              :op1 (c31-2 / you)
                                                              :op2 (c31-0 / family
                                                                          :ARG1-of (c31-10 / have-org-role-91
                                                                                           :ARG0 c31-2
                                                                                           :ARG2 (c31-4 / member))))))))

# ::snt Explains a lot
# ::tokens ["Explains", "a", "lot"]
# ::lemmas ["explain", "a", "lot"]
(c32-0 / explain-01
       :ARG1 (c32-1 / lot))

# ::snt yrs a long time
# ::tokens ["yrs", "a", "long", "time"]
# ::lemmas ["yrs", "a", "long", "time"]
(c33-1 / time
       :ARG1-of (c33-0 / long-03))

# ::snt Whyd yall pick THAT pic of him though?
# ::tokens ["Why", "d", "y", "all", "pick", "THAT", "pic", "of", "him", "though", "?"]
# ::lemmas ["why", "d", "you", "all", "pick", "that", "pic", "of", "he", "though", "?"]
(c34-3 / pick-01
       :ARG0 (c34-0 / you
                    :mod (c34-7 / all))
       :ARG1 (c34-1 / picture
                    :topic (c34-2 / he)
                    :mod (c34-5 / that))
       :ARG1-of (c34-4 / have-concession-91)
       :polarity (c34-6 / amr-unknown))

# ::snt LMBOOOOOOOO not the Boo Boo..you home gif?
# ::tokens ["LMBOOOOOOOO", "not", "the", "Boo", "Boo", "..", "you", "home", "gif", "?"]
# ::lemmas ["lmboooooooo", "not", "the", "Boo", "Boo", "..", "you", "home", "gif", "?"]
(c35-2 / multi-sentence
       :snt1 (c35-5 / laugh-01
                    :ARG0 (c35-6 / i)
                    :ARG2 (c35-4 / person
                                 :name (c35-1 / name
                                              :op1 "Boo"
                                              :op2 "Boo"))
                    :mod (c35-9 / loud)
                    :mode expressive)
       :snt2 (c35-8 / gif
                    :domain (c35-0 / you)
                    :mod (c35-3 / home))
       :polarity (c35-7 / amr-unknown))

# ::snt Lmao at Duanes face... he looks appalled lmaooooo
# ::tokens ["Lmao", "at", "Duanes", "face", "...", "he", "looks", "appalled", "lmaooooo"]
# ::lemmas ["Lmao", "at", "Duanes", "face", "...", "he", "look", "appalled", "lmaooooo"]
(c37-3 / look-02
       :ARG0 (c37-2 / person
                    :name (c37-1 / name
                                 :op1 "Duanes")
                    :part (c37-0 / face))
       :ARG1 (c37-7 / appalled-01
                    :ARG1 c37-2)
       :mod (c37-8 / laugh-01
                   :ARG0 (c37-6 / i)
                   :manner (c37-4 / loud)
                   :mode expressive)
       :mod (c37-5 / laugh-01
                   :ARG0 c37-6
                   :manner (c37-9 / loud)
                   :mode expressive))

# ::snt say it ain't so
# ::tokens ["say", "it", "ai", "n't", "so"]
# ::lemmas ["say", "it", "be", "not", "so"]
(c38-1 / say-01
       :ARG1 (c38-0 / so
                    :polarity -))

# ::snt Whuuuuuuuttttttt
# ::tokens ["Whuuuuuuuttttttt"]
# ::lemmas ["Whuuuuuuuttttttt"]
(c39-0)

# ::snt It was only a matter of time...
# ::tokens ["It", "was", "only", "a", "matter", "of", "time", "..."]
# ::lemmas ["it", "be", "only", "a", "matter", "of", "time", "..."]
(c40-1 / matter
       :domain (c40-2 / it)
       :mod (c40-0 / only)
       :topic (c40-3 / time))

# ::snt Who
# ::tokens ["Who"]
# ::lemmas ["who"]
(c41-0 / amr-unknown)

# ::snt And now reporting on behalf of TMZ and Black Twitter: and .
# ::tokens ["And", "now", "reporting", "on", "behalf", "of", "TMZ", "and", "Black", "Twitter", ":", "and", "."]
# ::lemmas ["and", "now", "report", "on", "behalf", "of", "TMZ", "and", "Black", "Twitter", ":", "and", "."]
(c42-7 / and
       :op2 (c42-2 / report-01
                   :time (c42-0 / now)
                   :prep-on-behalf-of (c42-6 / and
                                             :op1 (c42-4 / publication
                                                         :name (c42-3 / name
                                                                      :op1 "TMZ"))
                                             :op2 (c42-1 / publication
                                                         :name (c42-5 / name
                                                                      :op1 "Black"
                                                                      :op2 "Twitter")))))

# ::snt Celebrity marriages.... They never last
# ::tokens ["Celebrity", "marriages", "....", "They", "never", "last"]
# ::lemmas ["celebrity", "marriage", "....", "they", "never", "last"]
(c43-0 / multi-sentence
       :snt1 (c43-2 / marry-01
                    :mod (c43-4 / celebrity))
       :snt2 (c43-3 / last-04
                    :ARG1 c43-2
                    :polarity -)
       :time (c43-1 / ever))

# ::snt Sorry to hear that
# ::tokens ["Sorry", "to", "hear", "that"]
# ::lemmas ["sorry", "to", "hear", "that"]
(c44-2 / sorry-01
       :ARG2 (c44-0 / hear-01
                    :ARG1 (c44-1 / that)))

# ::snt Good grief, bye.
# ::tokens ["Good", "grief", ",", "bye", "."]
# ::lemmas ["good", "grief", ",", "bye", "."]
(c45-3 / say-01
       :ARG1 (c45-0 / grief
                    :ARG1-of (c45-2 / good-02))
       :ARG2 (c45-1 / bye))

# ::snt Like them, nobody.
# ::tokens ["Like", "them", ",", "nobody", "."]
# ::lemmas ["like", "they", ",", "nobody", "."]
(c46-1 / nobody
       :ARG1-of (c46-0 / resemble-01
                       :ARG2 (c46-2 / they)))

# ::snt Dude hasn't been in a movie since Above The Rim! Thats a long time to be unemployed! That silly show on BET doesn't count..
# ::tokens ["Dude", "has", "n't", "been", "in", "a", "movie", "since", "Above", "The", "Rim", "!", "That", "s", "a", "long", "time", "to", "be", "unemployed", "!", "That", "silly", "show", "on", "BET", "does", "n't", "count", ".."]
# ::lemmas ["dude", "have", "not", "be", "in", "a", "movie", "since", "Above", "The", "Rim", "!", "that", "s", "a", "long", "time", "to", "be", "unemployed", "!", "that", "silly", "show", "on", "BET", "do", "not", "count", ".."]
(c47-2 / multi-sentence
       :snt1 (c47-1 / be-located-at-91
                    :ARG1 (c47-14 / dude)
                    :ARG2 (c47-6 / movie)
                    :time (c47-4 / since
                                 :op1 (c47-10 / work-of-art
                                              :name (c47-3 / name
                                                           :op1 "Above"
                                                           :op2 "The"
                                                           :op3 "Rim")))
                    :polarity -)
       :snt2 (c47-13 / time
                     :ARG1-of (c47-7 / long-03)
                     :time-of (c47-5 / employ-01
                                     :polarity -)
                     :domain (c47-15 / that))
       :snt3 (c47-11 / count-04
                     :ARG1 (c47-0 / show
                                  :mod (c47-16 / silly)
                                  :medium (c47-8 / publication
                                                 :name (c47-9 / name
                                                              :op1 "BET"))
                                  :mod (c47-12 / that))
                     :polarity -))

# ::snt Good call, cut the dead weight before the Martin reboot cash starts rolling in!
# ::tokens ["Good", "call", ",", "cut", "the", "dead", "weight", "before", "the", "Martin", "reboot", "cash", "starts", "rolling", "in", "!"]
# ::lemmas ["good", "call", ",", "cut", "the", "dead", "weight", "before", "the", "Martin", "reboot", "cash", "start", "roll", "in", "!"]
(c48-9 / and
       :op1 (c48-6 / call-10
                   :ARG1-of (c48-10 / good-02))
       :op2 (c48-13 / cut-03
                    :ARG0 (c48-1 / you)
                    :ARG1 (c48-7 / weight
                                 :ARG1-of (c48-11 / die-01))
                    :time (c48-0 / before
                                 :op1 (c48-3 / start-01
                                             :ARG1 (c48-4 / roll-in-02
                                                          :ARG1 (c48-8 / cash
                                                                       :mod (c48-12 / reboot
                                                                                    :mod (c48-5 / person
                                                                                                :name (c48-2 / name
                                                                                                             :op1 "Martin")))))))
                    :mode imperative))

# ::snt Ya what about it?
# ::tokens ["Ya", "what", "about", "it", "?"]
# ::lemmas ["ya", "what", "about", "it", "?"]
(c49-3 / say-01
       :ARG1 (c49-0 / amr-unknown
                    :topic (c49-2 / it))
       :ARG2 (c49-1 / you))

# ::snt OMG, my world is coming to an end. Who are they (don't care)?
# ::tokens ["OMG", ",", "my", "world", "is", "coming", "to", "an", "end", ".", "Who", "are", "they", "(", "do", "n't", "care", ")", "?"]
# ::lemmas ["OMG", ",", "my", "world", "be", "come", "to", "an", "end", ".", "who", "be", "they", "(", "do", "not", "care", ")", "?"]
(c50-1 / multi-sentence
       :snt1 (c50-3 / end-01
                    :ARG1 (c50-4 / world
                                 :poss (c50-6 / i))
                    :mod (c50-0 / oh-my-god
                                :mode expressive))
       :snt2 (c50-7 / they
                    :domain (c50-2 / amr-unknown)
                    :ARG1-of (c50-5 / care-01
                                    :ARG0 c50-6
                                    :polarity -)))
