# ::snt He looks like he's years old. My man has done WAY too many drugs. Good lord
# ::tokens ["He", "looks", "like", "he", "'s", "years", "old", ".", "My", "man", "has", "done", "WAY", "too", "many", "drugs", ".", "Good", "lord"]
# ::lemmas ["he", "look", "like", "he", "be", "years", "old", ".", "my", "man", "have", "do", "WAY", "too", "many", "drug", ".", "good", "lord"]
(c1-1 / multi-sentence
      :snt1 (c1-4 / look-02
                  :ARG0 (c1-3 / he)
                  :ARG1 (c1-2 / age-01
                              :ARG1 c1-3
                              :ARG2 (c1-10 / temporal-quantity
                                           :unit (c1-0 / year)
                                           :quant 1)))
      :snt2 (c1-12 / do-02
                   :ARG0 (c1-5 / man
                               :poss (c1-9 / i))
                   :ARG1 (c1-7 / drug
                               :ARG1-of (c1-8 / have-quant-91
                                              :ARG2 (c1-14 / many)
                                              :ARG3 (c1-15 / too
                                                           :mod (c1-6 / way)))))
      :snt3 (c1-13 / lord
                   :ARG1-of (c1-11 / good-02)))

# ::snt God bless him he wears his life
# ::tokens ["God", "bless", "him", "he", "wears", "his", "life"]
# ::lemmas ["God", "bless", "he", "he", "wear", "his", "life"]
(c2-0 / bless-01
      :ARG0 (c2-3 / person
                  :name (c2-1 / name
                              :op1 "God"))
      :ARG1 (c2-2 / he)
      :ARG0-of (c2-5 / cause-01
                     :ARG1 (c2-6 / wear-01
                                 :ARG0 c2-2
                                 :ARG1 (c2-4 / life
                                             :poss c2-2))))

# ::snt Lmao they are around this time of the month to get that bonus check
# ::tokens ["Lmao", "they", "are", "around", "this", "time", "of", "the", "month", "to", "get", "that", "bonus", "check"]
# ::lemmas ["Lmao", "they", "be", "around", "this", "time", "of", "the", "month", "to", "get", "that", "bonus", "check"]
(c3-9 / and
      :op1 (c3-5 / laugh-01
                 :ARG0 (c3-8 / i)
                 :manner (c3-12 / loud)
                 :mode expressive)
      :op2 (c3-0 / be-temporally-at-91
                 :ARG1 (c3-7 / they)
                 :ARG2 (c3-10 / around
                              :op1 (c3-13 / time
                                          :part-of (c3-1 / month)
                                          :mod (c3-11 / this)))
                 :purpose (c3-2 / get-01
                                :ARG0 c3-7
                                :ARG1 (c3-6 / check
                                            :mod (c3-4 / bonus)
                                            :mod (c3-3 / that)))))

# ::snt Again Aaron
# ::tokens ["Again", "Aaron"]
# ::lemmas ["again", "Aaron"]
(c4-1 / person
      :name (c4-0 / name
                  :op1 "Aaron")
      :mod (c4-2 / again))

# ::snt Lol your cops must be EVERYWHERE!!!
# ::tokens ["Lol", "your", "cops", "must", "be", "EVERYWHERE", "!", "!", "!"]
# ::lemmas ["Lol", "your", "cop", "must", "be", "EVERYWHERE", "!", "!", "!"]
(c5-0 / obligate-01
      :ARG2 (c5-1 / be-located-at-91
                  :ARG1 (c5-5 / cop
                              :poss (c5-2 / you))
                  :ARG2 (c5-3 / everywhere))
      :ARG2-of (c5-4 / laugh-01
                     :manner (c5-6 / loud)
                     :mode expressive))

# ::snt Look at his face?! Wtf kind of drugs is he on?! Damn
# ::tokens ["Look", "at", "his", "face", "?", "!", "Wtf", "kind", "of", "drugs", "is", "he", "on", "?", "!", "Damn"]
# ::lemmas ["look", "at", "his", "face", "?", "!", "wtf", "kind", "of", "drug", "be", "he", "on", "?", "!", "damn"]
(c6-3 / multi-sentence
      :snt1 (c6-5 / look-01
                  :ARG0 (c6-2 / you)
                  :ARG1 (c6-0 / face
                              :part-of (c6-4 / he))
                  :mode imperative)
      :snt2 (c6-1 / on-01
                  :ARG1 (c6-9 / he)
                  :ARG2 (c6-10 / drug
                               :mod (c6-6 / kind
                                          :mod (c6-7 / fuck
                                                     :mode expressive))))
      :snt3 (c6-8 / damn-01))

# ::snt Someone save him.
# ::tokens ["Someone", "save", "him", "."]
# ::lemmas ["someone", "save", "he", "."]
(c8-2 / save-02
      :ARG0 (c8-0 / someone)
      :ARG1 (c8-1 / he))

# ::snt This is what u get for unfollowing me
# ::tokens ["This", "is", "what", "u", "get", "for", "unfollowing", "me"]
# ::lemmas ["this", "be", "what", "u", "get", "for", "unfollowe", "i"]
(c9-4 / get-01
      :ARG0 (c9-1 / you)
      :ARG1 (c9-3 / this)
      :ARG3 (c9-0 / follow-02
                  :ARG0 c9-1
                  :ARG1 (c9-2 / i)
                  :polarity -))

# ::snt SMH he needs to take some responsibility for his life and not blame others.
# ::tokens ["SMH", "he", "needs", "to", "take", "some", "responsibility", "for", "his", "life", "and", "not", "blame", "others", "."]
# ::lemmas ["smh", "he", "need", "to", "take", "some", "responsibility", "for", "his", "life", "and", "not", "blame", "other", "."]
(c10-6 / and
       :op1 (c10-3 / need-01
                   :ARG0 (c10-7 / he)
                   :ARG1 (c10-10 / take-01
                                 :ARG0 c10-7
                                 :ARG1 (c10-5 / responsible-01
                                              :ARG0 c10-7
                                              :ARG1 (c10-8 / life
                                                           :poss c10-7)
                                              :mod (c10-4 / some))))
       :op2 (c10-2 / blame-01
                   :ARG0 c10-7
                   :ARG1 (c10-9 / person
                                :mod (c10-0 / other))
                   :polarity -)
       :mod (c10-1 / shit
                   :mode expressive))

# ::snt Damn why its always in ga?
# ::tokens ["Damn", "why", "its", "always", "in", "ga", "?"]
# ::lemmas ["damn", "why", "its", "always", "in", "ga", "?"]
(c11-2 / cause-01
       :ARG0 (c11-1 / amr-unknown)
       :ARG1 (c11-4 / in-
                    :domain (c11-0 / it)
                    :time (c11-3 / always))
       :mod (c11-5 / damn
                   :mode expressive))

# ::snt For a sec I thought that was Justin Bieber
# ::tokens ["For", "a", "sec", "I", "thought", "that", "was", "Justin", "Bieber"]
# ::lemmas ["for", "a", "sec", "i", "think", "that", "be", "Justin", "Bieber"]
(c12-3 / think-01
       :ARG0 (c12-4 / i)
       :ARG1 (c12-2 / person
                    :name (c12-0 / name
                                 :op1 "Justin"
                                 :op2 "Bieber")
                    :domain (c12-5 / that))
       :duration (c12-6 / temporal-quantity
                        :unit (c12-1 / second)
                        :quant 1))

# ::snt This was set up... you don't post videos of yourself with a open container in the car! Lesson learned
# ::tokens ["This", "was", "set", "up", "...", "you", "do", "n't", "post", "videos", "of", "yourself", "with", "a", "open", "container", "in", "the", "car", "!", "Lesson", "learned"]
# ::lemmas ["this", "be", "set", "up", "...", "you", "do", "not", "post", "video", "of", "yourself", "with", "a", "open", "container", "in", "the", "car", "!", "Lesson", "learn"]
(c13-2 / multi-sentence
       :snt1 (c13-3 / set-up-03
                    :ARG1 (c13-8 / this))
       :snt2 (c13-5 / post-01
                    :ARG0 (c13-1 / you)
                    :ARG1 (c13-4 / video
                                 :topic c13-1
                                 :location (c13-7 / car)
                                 :instrument (c13-10 / container
                                                     :ARG1-of (c13-0 / open-01)))
                    :polarity -)
       :snt3 (c13-6 / learn-01
                    :ARG1 (c13-9 / lesson)))

# ::snt oh lord!
# ::tokens ["oh", "lord", "!"]
# ::lemmas ["oh", "lord", "!"]
(c14-1 / lord
       :mod (c14-0 / oh))

# ::snt Lmao karma
# ::tokens ["Lmao", "karma"]
# ::lemmas ["Lmao", "karma"]
(c16-2 / karma
       :mod (c16-3 / laugh-01
                   :ARG0 (c16-0 / i)
                   :manner (c16-1 / loud)
                   :mode expressive))

# ::snt We don't make the rules
# ::tokens ["We", "do", "n't", "make", "the", "rules"]
# ::lemmas ["we", "do", "not", "make", "the", "rule"]
(c17-0 / rule-01
       :ARG0 (c17-1 / we)
       :polarity -)

# ::snt What a shame and he's Nick Carter' s brother!
# ::tokens ["What", "a", "shame", "and", "he", "'s", "Nick", "Carter", "'", "s", "brother", "!"]
# ::lemmas ["what", "a", "shame", "and", "he", "be", "Nick", "Carter", "'", "s", "brother", "!"]
(c19-7 / and
       :op1 (c19-3 / shame
                   :degree (c19-0 / so))
       :op2 (c19-4 / have-rel-role-91
                   :ARG0 (c19-6 / he)
                   :ARG1 (c19-5 / person
                                :name (c19-2 / name
                                             :op1 "Nick"
                                             :op2 "Carter"))
                   :ARG2 (c19-1 / brother)))

# ::snt That's what happens when you unfollow us
# ::tokens ["That", "'s", "what", "happens", "when", "you", "unfollow", "us"]
# ::lemmas ["that", "be", "what", "happen", "when", "you", "unfollow", "we"]
(c20-2 / event
       :mod (c20-4 / that)
       :time (c20-0 / follow-02
                    :ARG0 (c20-1 / you)
                    :ARG1 (c20-3 / we)))

# ::snt he looks soooo old!
# ::tokens ["he", "looks", "soooo", "old", "!"]
# ::lemmas ["he", "look", "soooo", "old", "!"]
(c21-2 / look-02
       :ARG0 (c21-1 / he)
       :ARG1 (c21-0 / old
                    :degree (c21-3 / so)))

# ::snt What happened to this kid?!?!?
# ::tokens ["What", "happened", "to", "this", "kid", "?", "!", "?", "!", "?"]
# ::lemmas ["what", "happen", "to", "this", "kid", "?", "!", "?", "!", "?"]
(c22-2 / amr-unknown
       :beneficiary (c22-1 / kid
                           :mod (c22-0 / this))
       :mode expressive)

# ::snt OMG he looks old AF!!! I guess he has to thank his addictions for that, fame is actually a horrible thing.
# ::tokens ["OMG", "he", "looks", "old", "AF", "!", "!", "!", "I", "guess", "he", "has", "to", "thank", "his", "addictions", "for", "that", ",", "fame", "is", "actually", "a", "horrible", "thing", "."]
# ::lemmas ["OMG", "he", "look", "old", "AF", "!", "!", "!", "i", "guess", "he", "have", "to", "thank", "his", "addiction", "for", "that", ",", "fame", "be", "actually", "a", "horrible", "thing", "."]
(c23-3 / multi-sentence
       :snt1 (c23-7 / look-02
                    :ARG0 (c23-6 / he)
                    :ARG1 (c23-1 / old)
                    :mod (c23-0 / oh-my-god
                                :mode expressive)
                    :mode expressive)
       :snt2 (c23-12 / guess-01
                     :ARG0 (c23-10 / i)
                     :ARG1 (c23-14 / obligate-01
                                   :ARG1 (c23-9 / he)
                                   :ARG2 (c23-11 / thank-01
                                                 :ARG0 c23-9
                                                 :ARG1 (c23-4 / addict-01
                                                              :ARG1 c23-9)
                                                 :ARG2 (c23-15 / that)))
                     :ARG1-of (c23-8 / cause-01
                                     :ARG0 (c23-5 / horrible
                                                  :domain (c23-2 / fame-01)
                                                  :ARG1-of (c23-13 / actual-02)))))

# ::snt Omggg
# ::tokens ["Omggg"]
# ::lemmas ["Omggg"]
(c24-0 / omggg
       :mode expressive)

# ::snt Such a shame...
# ::tokens ["Such", "a", "shame", "..."]
# ::lemmas ["such", "a", "shame", "..."]
(c25-1 / shame
       :mod (c25-0 / such))

# ::snt Marijuana. ..yayyyyyyyy Boi
# ::tokens ["Marijuana", ".", "..", "yayyyyyyyy", "Boi"]
# ::lemmas ["Marijuana", ".", "..", "yayyyyyyyy", "Boi"]
(c26-1 / multi-sentence
       :snt1 (c26-3 / marijuana)
       :snt2 (c26-2 / say-01
                    :ARG2 (c26-4 / person
                                 :name (c26-0 / name
                                              :op1 "Boomi"))))

# ::snt Omg!
# ::tokens ["Omg", "!"]
# ::lemmas ["Omg", "!"]
(c27-0 / oh-my-god
       :mode expressive)

# ::snt Knock me over with a feather!
# ::tokens ["Knock", "me", "over", "with", "a", "feather", "!"]
# ::lemmas ["knock", "i", "over", "with", "a", "feather", "!"]
(c28-2 / knock-over-05
       :ARG0 (c28-1 / you)
       :ARG1 (c28-3 / i)
       :instrument (c28-0 / feather)
       :mode imperative)
