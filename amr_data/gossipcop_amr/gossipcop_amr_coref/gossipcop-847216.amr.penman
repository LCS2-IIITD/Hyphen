# ::snt haiz
# ::tokens ["haiz"]
# ::lemmas ["haiz"]
(c1-0 / haiz)

# ::snt You should've stayed on greys anatomy
# ::tokens ["You", "should", "'ve", "stayed", "on", "greys", "anatomy"]
# ::lemmas ["you", "should", "'ve", "stay", "on", "grey", "anatomy"]
(c2-3 / recommend-01
      :ARG1 (c2-2 / stay-01
                  :ARG1 (c2-0 / you)
                  :location (c2-5 / anatomy
                                  :poss (c2-4 / person
                                              :name (c2-1 / name
                                                          :op1 "Greys"))))
      :ARG2 c2-0)

# ::snt Get better Eric! Wishing him well!
# ::tokens ["Get", "better", "Eric", "!", "Wishing", "him", "well", "!"]
# ::lemmas ["get", "well", "Eric", "!", "wish", "he", "well", "!"]
(c3-1 / multi-sentence
      :snt1 (c3-2 / say-01
                  :ARG1 (c3-9 / get-03
                              :ARG1 (c3-4 / person
                                          :name (c3-0 / name
                                                      :op1 "Eric"))
                              :ARG2 (c3-3 / have-degree-91
                                          :ARG1 c3-4
                                          :ARG2 (c3-8 / good-02
                                                      :ARG1 c3-4)
                                          :ARG3 (c3-5 / more))
                              :mode imperative)
                  :ARG2 c3-4)
      :snt2 (c3-7 / wish-01
                  :ARG1 (c3-6 / well-09
                              :ARG1 c3-4)
                  :ARG2 c3-4))

# ::snt Get better Eric
# ::tokens ["Get", "better", "Eric"]
# ::lemmas ["get", "well", "Eric"]
(c5-2 / say-01
      :ARG0 (c5-5 / i)
      :ARG1 (c5-7 / get-03
                  :ARG1 (c5-4 / person
                              :name (c5-0 / name
                                          :op1 "Eric"))
                  :ARG2 (c5-3 / have-degree-91
                              :ARG1 c5-4
                              :ARG2 (c5-6 / good-02
                                          :ARG1 c5-4)
                              :ARG3 (c5-1 / more)))
      :ARG2 c5-4)

# ::snt I feel for him because I know it's not easy dealing with depression!!
# ::tokens ["I", "feel", "for", "him", "because", "I", "know", "it", "'s", "not", "easy", "dealing", "with", "depression", "!", "!"]
# ::lemmas ["i", "feel", "for", "he", "because", "i", "know", "it", "be", "not", "easy", "deal", "with", "depression", "!", "!"]
(c6-0 / feel-01
      :ARG0 (c6-6 / i)
      :ARG2 (c6-2 / he)
      :ARG1-of (c6-4 / cause-01
                     :ARG0 (c6-3 / know-01
                                 :ARG0 c6-6
                                 :ARG1 (c6-1 / easy-05
                                             :ARG1 (c6-7 / deal-01
                                                         :ARG2 (c6-5 / depress-01))
                                             :polarity -))))

# ::snt Shouldn't this be private?
# ::tokens ["Should", "n't", "this", "be", "private", "?"]
# ::lemmas ["should", "not", "this", "be", "private", "?"]
(c7-0 / recommend-01
      :ARG1 (c7-2 / private-02
                  :ARG1 (c7-3 / this))
      :ARG1-of (c7-1 / request-confirmation-91)
      :polarity -)

# ::snt It will get better Eric!
# ::tokens ["It", "will", "get", "better", "Eric", "!"]
# ::lemmas ["it", "will", "get", "well", "Eric", "!"]
(c8-2 / say-01
      :ARG0 (c8-6 / i)
      :ARG1 (c8-8 / get-03
                  :ARG2 (c8-4 / have-degree-91
                              :ARG1 (c8-3 / it)
                              :ARG2 (c8-7 / good-02
                                          :ARG1 c8-3)
                              :ARG3 (c8-0 / more)))
      :ARG2 (c8-5 / person
                  :name (c8-1 / name
                              :op1 "Eric")))

# ::snt Hey guy, Go run, work out, go do something fun! You have so much going for you! Be positive and conquer this thing! Luv U
# ::tokens ["Hey", "guy", ",", "Go", "run", ",", "work", "out", ",", "go", "do", "something", "fun", "!", "You", "have", "so", "much", "going", "for", "you", "!", "Be", "positive", "and", "conquer", "this", "thing", "!", "Luv", "U"]
# ::lemmas ["hey", "guy", ",", "go", "run", ",", "work", "out", ",", "go", "do", "something", "fun", "!", "you", "have", "so", "much", "go", "for", "you", "!", "be", "positive", "and", "conquer", "this", "thing", "!", "Luv", "u"]
(c9-14 / multi-sentence
       :snt1 (c9-0 / say-01
                   :ARG0 (c9-23 / i)
                   :ARG1 (c9-9 / and
                               :op1 (c9-10 / go-05
                                           :ARG0 (c9-1 / guy)
                                           :ARG1 (c9-20 / run-02
                                                        :ARG0 c9-1)
                                           :mode imperative)
                               :op2 (c9-22 / work-out-02
                                           :ARG0 c9-1
                                           :mode imperative)
                               :op3 (c9-2 / go-05
                                          :ARG0 c9-1
                                          :ARG1 (c9-24 / do-02
                                                       :ARG0 c9-1
                                                       :ARG1 (c9-4 / something
                                                                   :ARG1-of (c9-18 / fun-01)))
                                          :mode imperative))
                   :ARG2 c9-1
                   :mod (c9-6 / hey
                              :mode expressive))
       :snt2 (c9-12 / go-05
                    :ARG0 (c9-5 / you)
                    :ARG1 (c9-7 / much
                                :degree (c9-3 / so))
                    :beneficiary c9-5
                    :mode imperative)
       :snt3 (c9-8 / and
                   :op1 (c9-21 / positive
                               :domain (c9-11 / you)
                               :mode imperative)
                   :op2 (c9-16 / conquer-01
                               :ARG0 c9-11
                               :ARG1 (c9-13 / thing
                                            :mod (c9-17 / this))
                               :mode imperative))
       :snt4 (c9-15 / person
                    :name (c9-19 / name
                                 :op1 "Luv"
                                 :op2 "U")))

# ::snt Rim sorry you're going to watch just watch storytelling
# ::tokens ["Rim", "sorry", "you", "'re", "going", "to", "watch", "just", "watch", "storytelling"]
# ::lemmas ["rim", "sorry", "you", "be", "go", "to", "watch", "just", "watch", "storytelle"]
(c10-2 / sorry-01
       :ARG1 (c10-5 / i)
       :ARG2 (c10-3 / watch-01
                    :ARG0 (c10-1 / you)
                    :ARG1 (c10-6 / tell-01
                                 :ARG1 (c10-0 / story))
                    :mod (c10-4 / just)))
