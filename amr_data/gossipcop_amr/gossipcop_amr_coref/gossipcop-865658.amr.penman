# ::snt Because that's the law? It's really not a particularly difficult concept.
# ::tokens ["Because", "that", "'s", "the", "law", "?", "It", "'s", "really", "not", "a", "particularly", "difficult", "concept", "."]
# ::lemmas ["because", "that", "be", "the", "law", "?", "it", "be", "really", "not", "a", "particularly", "difficult", "concept", "."]
(c1-0 / multi-sentence
      :snt1 (c1-5 / cause-01
                  :polarity (c1-1 / amr-unknown)
                  :ARG0 (c1-3 / law
                              :domain (c1-6 / that)))
      :snt2 (c1-8 / concept
                  :mod (c1-7 / difficult
                             :mod (c1-4 / particular))
                  :ARG1-of (c1-2 / real-04)
                  :polarity -))

# ::snt Ironic
# ::tokens ["Ironic"]
# ::lemmas ["ironic"]
(c2-0 / irony)

# ::snt Dog faced fat all for money
# ::tokens ["Dog", "faced", "fat", "all", "for", "money"]
# ::lemmas ["dog", "face", "fat", "all", "for", "money"]
(c3-0 / fat-03
      :ARG1 (c3-2 / dog)
      :mod (c3-3 / all)
      :purpose (c3-1 / money))

# ::snt But how is Rob suppose to be visiting Dream if there's a restraining order against him
# ::tokens ["But", "how", "is", "Rob", "suppose", "to", "be", "visiting", "Dream", "if", "there", "'s", "a", "restraining", "order", "against", "him"]
# ::lemmas ["but", "how", "be", "Rob", "suppose", "to", "be", "visit", "dream", "if", "there", "be", "a", "restraining", "order", "against", "he"]
(c4-8 / contrast-01
      :ARG2 (c4-3 / suppose-02
                  :ARG1 (c4-7 / person
                              :name (c4-1 / name
                                          :op1 "Rob"))
                  :ARG2 (c4-5 / visit-01
                              :ARG0 c4-7
                              :ARG1 (c4-2 / person
                                          :name (c4-6 / name
                                                      :op1 "Dream")))
                  :manner (c4-9 / amr-unknown)
                  :condition (c4-0 / order-01
                                   :ARG2 (c4-4 / restrain-01
                                               :ARG1 c4-7)
                                   :prep-against c4-2)))

# ::snt I do, what's your point? Can hypocrites not make spot on analysis?
# ::tokens ["I", "do", ",", "what", "'s", "your", "point", "?", "Can", "hypocrites", "not", "make", "spot", "on", "analysis", "?"]
# ::lemmas ["i", "do", ",", "what", "be", "your", "point", "?", "can", "hypocrite", "not", "make", "spot", "on", "analysis", "?"]
(c5-1 / multi-sentence
      :snt1 (c5-9 / do-02
                  :ARG0 (c5-6 / i))
      :snt2 (c5-5 / point-04
                  :ARG0 (c5-0 / you)
                  :ARG1 (c5-7 / amr-unknown))
      :snt3 (c5-2 / possible-01
                  :ARG1 (c5-8 / analyze-01
                              :ARG0 (c5-4 / hypocrite)
                              :manner (c5-3 / spot-on)
                              :polarity -)
                  :polarity c5-7))

# ::snt Bloody Sl**
# ::tokens ["Bloody", "Sl", "*", "*"]
# ::lemmas ["Bloody", "Sl", "*", "*"]
(c6-1 / shit
      :mod (c6-0 / blood)
      :mode expressive)

# ::snt Good...he's really a "she thang" anyway that desires more of the same tool he used on blacc..lol
# ::tokens ["Good", "...", "he", "'s", "really", "a", "\"", "she", "thang", "\"", "anyway", "that", "desires", "more", "of", "the", "same", "tool", "he", "used", "on", "blacc", "..", "lol"]
# ::lemmas ["good", "...", "he", "be", "really", "a", "\"", "she", "thang", "\"", "anyway", "that", "desire", "more", "of", "the", "same", "tool", "he", "use", "on", "blacc", "..", "lol"]
(c7-1 / multi-sentence
      :snt1 (c7-13 / good-02)
      :snt2 (c7-5 / have-mod-91
                  :ARG1 (c7-9 / he)
                  :ARG2 (c7-3 / she)
                  :ARG1-of (c7-4 / real-04)
                  :mod (c7-12 / anyway)
                  :ARG0-of (c7-14 / desire-01
                                  :ARG1 (c7-10 / tool
                                               :ARG1-of (c7-0 / same-01
                                                              :ARG2 (c7-17 / tool
                                                                           :ARG1-of (c7-16 / use-01
                                                                                           :ARG0 c7-9
                                                                                           :ARG2 (c7-6 / product
                                                                                                       :name (c7-2 / name
                                                                                                                   :op1 "Blacc")))))
                                               :mod (c7-7 / more))))
      :snt3 (c7-8 / laugh-01
                  :ARG0 (c7-11 / i)
                  :manner (c7-15 / loud)
                  :mode expressive))

# ::snt What people would do for money
# ::tokens ["What", "people", "would", "do", "for", "money"]
# ::lemmas ["what", "people", "would", "do", "for", "money"]
(c8-3 / thing
      :ARG1-of (c8-1 / do-02
                     :ARG0 (c8-2 / person)
                     :ARG2 (c8-0 / money)))

# ::snt Who cares about this ghetto gold digger. That what happens when you go slumming...you pick up trash like Angela.
# ::tokens ["Who", "cares", "about", "this", "ghetto", "gold", "digger", ".", "That", "what", "happens", "when", "you", "go", "slumming", "...", "you", "pick", "up", "trash", "like", "Angela", "."]
# ::lemmas ["who", "care", "about", "this", "ghetto", "gold", "digger", ".", "that", "what", "happen", "when", "you", "go", "slum", "...", "you", "pick", "up", "trash", "like", "Angela", "."]
(c9-1 / multi-sentence
      :snt1 (c9-8 / care-01
                  :ARG0 (c9-11 / amr-unknown)
                  :ARG1 (c9-7 / person
                              :ARG0-of (c9-13 / dig-01
                                              :ARG1 (c9-12 / gold))
                              :mod (c9-10 / ghetto)
                              :mod (c9-9 / this)))
      :snt2 (c9-6 / event
                  :mod (c9-2 / pick-up-04
                             :ARG0 (c9-0 / you)
                             :ARG1 (c9-17 / trash)
                             :ARG1-of (c9-5 / resemble-01
                                            :ARG2 (c9-15 / person
                                                         :name (c9-3 / name
                                                                     :op1 "Angela")))
                             :time (c9-16 / go-05
                                          :ARG0 c9-0
                                          :ARG1 (c9-4 / slum-01
                                                      :ARG0 c9-0)))
                  :mod (c9-14 / that)))

# ::snt They should all go away ! They are all trash ! Yes you too Kris ! Trash in designer clothes !
# ::tokens ["They", "should", "all", "go", "away", "!", "They", "are", "all", "trash", "!", "Yes", "you", "too", "Kris", "!", "Trash", "in", "designer", "clothes", "!"]
# ::lemmas ["they", "should", "all", "go", "away", "!", "they", "be", "all", "trash", "!", "yes", "you", "too", "Kris", "!", "trash", "in", "designer", "clothe", "!"]
(c10-9 / multi-sentence
       :snt1 (c10-14 / recommend-01
                     :ARG1 (c10-8 / go-02
                                  :ARG0 (c10-4 / they
                                               :mod (c10-7 / all))
                                  :direction (c10-3 / away)))
       :snt2 (c10-12 / trash
                     :domain c10-4)
       :snt3 (c10-0 / say-01
                    :ARG0 (c10-16 / i)
                    :ARG1 (c10-17 / trash
                                  :domain (c10-2 / you
                                                 :mod (c10-1 / too))
                                  :mod (c10-5 / yes))
                    :ARG2 (c10-15 / person
                                  :name (c10-13 / name
                                                :op1 "Kris")))
       :snt4 (c10-6 / trash
                    :prep-in (c10-11 / clothes
                                     :poss (c10-10 / person
                                                   :ARG0-of (c10-18 / design-01)))))

# ::snt Amen
# ::tokens ["Amen"]
# ::lemmas ["amen"]
(c11-0 / man)

# ::snt This so good
# ::tokens ["This", "so", "good"]
# ::lemmas ["this", "so", "good"]
(c12-0 / good-02
       :ARG1 (c12-2 / this)
       :degree (c12-1 / so))

# ::snt Before anyone slams Chyna, She has her own money . Rob knew what he was getting into and he was stupid enuff to take the bait.
# ::tokens ["Before", "anyone", "slams", "Chyna", ",", "She", "has", "her", "own", "money", ".", "Rob", "knew", "what", "he", "was", "getting", "into", "and", "he", "was", "stupid", "enuff", "to", "take", "the", "bait", "."]
# ::lemmas ["before", "anyone", "slam", "Chyna", ",", "she", "have", "her", "own", "money", ".", "Rob", "know", "what", "he", "be", "get", "into", "and", "he", "be", "stupid", "enuff", "to", "take", "the", "bait", "."]
(c13-2 / multi-sentence
       :snt1 (c13-8 / have-03
                    :ARG0 (c13-7 / person
                                 :name (c13-1 / name
                                              :op1 "Chyna"))
                    :ARG1 (c13-6 / money
                                 :poss c13-7)
                    :time (c13-0 / before
                                 :op1 (c13-3 / slam-02
                                             :ARG0 (c13-15 / anyone)
                                             :ARG1 c13-7)))
       :snt2 (c13-14 / and
                     :op1 (c13-9 / know-01
                                 :ARG0 (c13-4 / person
                                              :name (c13-10 / name
                                                            :op1 "Rob"))
                                 :ARG1 (c13-16 / get-05
                                               :ARG1 c13-4
                                               :ARG2 (c13-17 / into)))
                     :op2 (c13-5 / enuff
                                 :domain c13-4
                                 :ARG0-of (c13-11 / cause-01
                                                  :ARG1 (c13-13 / take-01
                                                                :ARG0 c13-4
                                                                :ARG1 (c13-12 / bait))))))

# ::snt You get a none not moral value girl and this is what you get rob hope you know better next time sorry your baby has this for a mama
# ::tokens ["You", "get", "a", "none", "not", "moral", "value", "girl", "and", "this", "is", "what", "you", "get", "rob", "hope", "you", "know", "better", "next", "time", "sorry", "your", "baby", "has", "this", "for", "a", "mama"]
# ::lemmas ["you", "get", "a", "none", "not", "moral", "value", "girl", "and", "this", "be", "what", "you", "get", "rob", "hope", "you", "know", "well", "next", "time", "sorry", "your", "baby", "have", "this", "for", "a", "mama"]
(c14-15 / multi-sentence
        :snt1 (c14-10 / and
                      :op1 (c14-11 / get-01
                                   :ARG0 (c14-2 / you)
                                   :ARG1 (c14-0 / girl
                                                :mod (c14-3 / value
                                                            :ARG1-of (c14-5 / moral-02)
                                                            :polarity -)))
                      :op2 (c14-1 / get-01
                                  :ARG0 c14-2
                                  :ARG1 (c14-9 / this)))
        :snt2 (c14-6 / hope-01
                     :ARG0 (c14-24 / i)
                     :ARG1 (c14-7 / know-01
                                  :ARG0 (c14-12 / you)
                                  :ARG1 (c14-23 / have-03
                                                :ARG0 (c14-22 / person
                                                              :ARG0-of (c14-4 / have-rel-role-91
                                                                              :ARG1 c14-12
                                                                              :ARG2 (c14-14 / baby)))
                                                :ARG1 (c14-18 / this)
                                                :beneficiary (c14-16 / person
                                                                     :ARG0-of (c14-19 / have-rel-role-91
                                                                                      :ARG1 c14-12
                                                                                      :ARG2 (c14-20 / mama)))
                                                :ARG1-of (c14-8 / have-degree-91
                                                                :ARG2 (c14-13 / good-02
                                                                              :ARG1 c14-7)
                                                                :ARG3 (c14-17 / more)))
                                  :time (c14-25 / time
                                                :mod (c14-21 / next)))))

# ::snt You have got to be kidding me??? My, my look how conservatively dressed she is, instead of letting her 'real' self be shown...
# ::tokens ["You", "have", "got", "to", "be", "kidding", "me", "?", "?", "?", "My", ",", "my", "look", "how", "conservatively", "dressed", "she", "is", ",", "instead", "of", "letting", "her", "'", "real", "'", "self", "be", "shown", "..."]
# ::lemmas ["you", "have", "get", "to", "be", "kid", "i", "?", "?", "?", "my", ",", "my", "look", "how", "conservatively", "dress", "she", "be", ",", "instead", "of", "let", "she", "'", "real", "'", "self", "be", "show", "..."]
(c15-3 / multi-sentence
       :snt1 (c15-12 / get-06
                     :ARG0 (c15-2 / you)
                     :ARG1 (c15-7 / kid-01
                                  :ARG0 c15-2
                                  :ARG1 (c15-10 / i)))
       :snt2 (c15-8 / look-01
                    :ARG0 (c15-5 / i)
                    :ARG1 (c15-11 / thing
                                  :degree-of (c15-13 / dress-01
                                                     :ARG1 (c15-4 / she)
                                                     :manner (c15-9 / conservative)))
                    :ARG1-of (c15-15 / instead-of-91
                                     :ARG2 (c15-14 / let-01
                                                   :ARG0 c15-5
                                                   :ARG1 (c15-0 / show-01
                                                                :ARG1 (c15-16 / self
                                                                              :poss c15-4
                                                                              :ARG1-of (c15-6 / real-04)))))
                    :mod (c15-1 / i)))

# ::snt Circus is in Town! With a whole bunch of Stupids!
# ::tokens ["Circus", "is", "in", "Town", "!", "With", "a", "whole", "bunch", "of", "Stupids", "!"]
# ::lemmas ["Circus", "be", "in", "Town", "!", "with", "a", "whole", "bunch", "of", "Stupids", "!"]
(c16-0 / be-located-at-91
       :ARG1 (c16-3 / broadcast-program
                    :name (c16-1 / name
                                 :op1 "Circus"))
       :ARG2 (c16-5 / town)
       :accompanier (c16-6 / bunch
                           :mod (c16-4 / whole)
                           :consist-of (c16-2 / stupid))
       :mode expressive)

# ::snt Who cares???
# ::tokens ["Who", "cares", "?", "?", "?"]
# ::lemmas ["who", "care", "?", "?", "?"]
(c17-0 / care-01
       :ARG0 (c17-1 / amr-unknown))

# ::snt all day.
# ::tokens ["all", "day", "."]
# ::lemmas ["all", "day", "."]
(c18-0 / day
       :mod (c18-1 / all))

# ::snt Now needs one on her an his bank account
# ::tokens ["Now", "needs", "one", "on", "her", "an", "his", "bank", "account"]
# ::lemmas ["now", "need", "one", "on", "she", "an", "his", "bank", "account"]
(c19-2 / need-01
       :ARG0 (c19-3 / he)
       :ARG1 (c19-0 / one
                    :location (c19-5 / account
                                     :mod (c19-1 / bank)
                                     :poss c19-3))
       :time (c19-4 / now))

# ::snt I can't believe anyone believes she's the victim
# ::tokens ["I", "ca", "n't", "believe", "anyone", "believes", "she", "'s", "the", "victim"]
# ::lemmas ["i", "can", "not", "believe", "anyone", "believe", "she", "be", "the", "victim"]
(c20-4 / possible-01
       :ARG1 (c20-0 / believe-01
                    :ARG0 (c20-5 / i)
                    :ARG1 (c20-3 / believe-01
                                 :ARG0 (c20-6 / anyone)
                                 :ARG1 (c20-2 / victim
                                              :domain (c20-1 / she))))
       :polarity -)

# ::snt What r u kidding me?She started it by sending him a video kissing a guy.has naked pictures out there on her own.SMH trying to look innocent
# ::tokens ["What", "r", "u", "kidding", "me?She", "started", "it", "by", "sending", "him", "a", "video", "kissing", "a", "guy.has", "naked", "pictures", "out", "there", "on", "her", "own", ".", "SMH", "trying", "to", "look", "innocent"]
# ::lemmas ["what", "r", "u", "kidding", "me?she", "start", "it", "by", "send", "he", "a", "video", "kiss", "a", "guy.has", "naked", "picture", "out", "there", "on", "her", "own", ".", "smh", "try", "to", "look", "innocent"]
(c21-16 / multi-sentence
        :snt1 (c21-9 / kid-01
                     :polarity (c21-11 / amr-unknown)
                     :ARG0 (c21-5 / you)
                     :ARG1 (c21-24 / i)
                     :ARG2 (c21-10 / amr-unknown))
        :snt2 (c21-0 / start-01
                     :ARG0 (c21-3 / she)
                     :ARG1 (c21-6 / it)
                     :ARG2 (c21-2 / send-01
                                  :ARG0 c21-3
                                  :ARG1 (c21-7 / video
                                               :topic (c21-19 / kiss-01
                                                              :ARG0 c21-3
                                                              :ARG1 (c21-12 / guy)))
                                  :ARG2 (c21-8 / he)))
        :snt3 (c21-23 / have-03
                      :ARG0 (c21-21 / she)
                      :ARG1 (c21-22 / picture
                                    :mod (c21-20 / naked))
                      :location (c21-4 / out-there)
                      :mod (c21-15 / by-oneself))
        :snt4 (c21-13 / try-01
                      :ARG0 (c21-17 / person
                                    :name (c21-18 / name
                                                  :op1 "SMH"))
                      :ARG1 (c21-1 / look-02
                                   :ARG0 c21-17
                                   :ARG1 (c21-14 / innocent-01
                                                 :ARG1 c21-17))))

# ::snt Why can't these women actually do something w/their lives. Instead of whining about what they have created.
# ::tokens ["Why", "ca", "n't", "these", "women", "actually", "do", "something", "w", "/", "their", "lives", ".", "Instead", "of", "whining", "about", "what", "they", "have", "created", "."]
# ::lemmas ["why", "can", "not", "these", "woman", "actually", "do", "something", "w", "/", "their", "life", ".", "instead", "of", "whine", "about", "what", "they", "have", "create", "."]
(c22-0 / multi-sentence
       :snt1 (c22-5 / cause-01
                    :ARG0 (c22-9 / amr-unknown)
                    :ARG1 (c22-2 / possible-01
                                 :ARG1 (c22-11 / do-02
                                               :ARG0 (c22-6 / woman
                                                            :mod (c22-7 / this))
                                               :ARG1 (c22-1 / something)
                                               :ARG2 (c22-3 / life
                                                            :poss c22-6)
                                               :ARG1-of (c22-8 / actual-02))
                                 :polarity -))
       :snt2 (c22-10 / instead-of-91
                     :ARG2 (c22-4 / whine-01
                                  :ARG0 c22-6
                                  :ARG3 (c22-13 / thing
                                                :ARG1-of (c22-12 / create-01
                                                                 :ARG0 c22-6)))))

# ::snt Plus you know how the saying goes.. Can't turn a ho to a house wife.. J/S
# ::tokens ["Plus", "you", "know", "how", "the", "saying", "goes", "..", "Ca", "n't", "turn", "a", "ho", "to", "a", "house", "wife", "..", "J", "/", "S"]
# ::lemmas ["plus", "you", "know", "how", "the", "saying", "go", "..", "can", "not", "turn", "a", "ho", "to", "a", "house", "wife", "..", "J", "/", "S"]
(c23-1 / multi-sentence
       :snt1 (c23-5 / and
                    :op2 (c23-8 / know-01
                                :ARG0 (c23-0 / you)
                                :ARG1 (c23-14 / thing
                                              :manner-of (c23-15 / go-06
                                                                 :ARG0 (c23-17 / thing
                                                                               :ARG1-of (c23-3 / say-01))
                                                                 :ARG1 (c23-9 / possible-01
                                                                              :ARG1 (c23-13 / turn-02
                                                                                            :ARG1 (c23-2 / person
                                                                                                         :mod (c23-7 / ho))
                                                                                            :ARG2 (c23-16 / person
                                                                                                          :ARG0-of (c23-12 / have-rel-role-91
                                                                                                                           :ARG2 (c23-10 / wife))
                                                                                                          :mod (c23-6 / house)))
                                                                              :polarity -)))))
       :snt2 (c23-11 / person
                     :name (c23-4 / name
                                  :op1 "J/S")))

# ::snt He should of known something was up..a girl like her wanting to be w a guy like himgetting pregnant was an opportunity in &amp; now he's stuck
# ::tokens ["He", "should", "of", "known", "something", "was", "up", "..", "a", "girl", "like", "her", "wanting", "to", "be", "w", "a", "guy", "like", "himgetting", "pregnant", "was", "an", "opportunity", "in", "&", "amp", ";", "now", "he", "'s", "stuck"]
# ::lemmas ["he", "should", "of", "know", "something", "be", "up", "..", "a", "girl", "like", "she", "want", "to", "be", "w", "a", "guy", "like", "himgette", "pregnant", "be", "an", "opportunity", "in", "&", "amp", ";", "now", "he", "be", "stick"]
(c24-3 / multi-sentence
       :snt1 (c24-6 / recommend-01
                    :ARG1 (c24-9 / know-01
                                 :ARG0 (c24-8 / he)
                                 :ARG1 (c24-17 / up-02
                                               :ARG1 (c24-5 / something))))
       :snt2 (c24-0 / opportunity
                    :domain (c24-15 / girl
                                    :ARG1-of (c24-16 / resemble-01
                                                     :ARG2 (c24-11 / want-01
                                                                   :ARG0 c24-15
                                                                   :ARG1 (c24-2 / be-with-10
                                                                                :ARG0 c24-15
                                                                                :ARG1 (c24-13 / guy
                                                                                              :ARG1-of (c24-10 / resemble-01
                                                                                                               :ARG2 (c24-14 / impregnate-01
                                                                                                                             :ARG1 (c24-12 / he))))))))
                    :snt3 (c24-1 / stick-01
                                 :ARG1 (c24-7 / he)
                                 :time (c24-4 / now))))

# ::snt He needs one against that hoe
# ::tokens ["He", "needs", "one", "against", "that", "hoe"]
# ::lemmas ["he", "need", "one", "against", "that", "hoe"]
(c25-2 / need-01
       :ARG0 (c25-3 / he)
       :ARG1 (c25-1 / one
                    :ARG0-of (c25-0 / oppose-01
                                    :ARG1 (c25-4 / hoe
                                                 :mod (c25-5 / that)))))

# ::snt Yes dear, good to know.
# ::tokens ["Yes", "dear", ",", "good", "to", "know", "."]
# ::lemmas ["yes", "dear", ",", "good", "to", "know", "."]
(c26-3 / say-01
       :ARG1 (c26-0 / good-02
                    :ARG1 (c26-2 / know-01))
       :ARG2 (c26-1 / dear))

# ::snt You're very angry and disgusting maybe you should take a note out of you're own mental health book and calm yourself breath deep
# ::tokens ["You", "'re", "very", "angry", "and", "disgusting", "maybe", "you", "should", "take", "a", "note", "out", "of", "you", "'re", "own", "mental", "health", "book", "and", "calm", "yourself", "breath", "deep"]
# ::lemmas ["you", "be", "very", "angry", "and", "disgusting", "maybe", "you", "should", "take", "a", "note", "out", "of", "you", "be", "own", "mental", "health", "book", "and", "calm", "yourself", "breath", "deep"]
(c27-7 / possible-01
       :ARG1 (c27-4 / recommend-01
                    :ARG1 (c27-14 / and
                                  :op1 (c27-13 / anger-01
                                               :ARG1 (c27-1 / you)
                                               :degree (c27-5 / very))
                                  :op2 (c27-15 / disgust-01
                                               :ARG1 c27-1))
                    :ARG2 c27-1)
       :ARG1-of (c27-9 / cause-01
                       :ARG0 (c27-10 / and
                                     :op1 (c27-12 / take-01
                                                  :ARG0 c27-1
                                                  :ARG1 (c27-2 / note)
                                                  :ARG2 (c27-0 / book
                                                               :topic (c27-6 / health
                                                                             :mod (c27-3 / mental))
                                                               :poss c27-1))
                                     :op2 (c27-16 / calm-03
                                                  :ARG0 c27-1
                                                  :ARG1 (c27-8 / breathe-01
                                                               :ARG0 c27-1)
                                                  :ARG1-of (c27-11 / deep-02)))))

# ::snt Very nice and interesting
# ::tokens ["Very", "nice", "and", "interesting"]
# ::lemmas ["very", "nice", "and", "interesting"]
(c29-3 / and
       :op1 (c29-1 / nice-01
                   :degree (c29-0 / very))
       :op2 (c29-2 / interest-01
                   :degree c29-0))

# ::snt She just wants more money. Once a gold digger always a gold digger.
# ::tokens ["She", "just", "wants", "more", "money", ".", "Once", "a", "gold", "digger", "always", "a", "gold", "digger", "."]
# ::lemmas ["she", "just", "want", "more", "money", ".", "once", "a", "gold", "digger", "always", "a", "gold", "digger", "."]
(c30-0 / multi-sentence
       :snt1 (c30-5 / want-01
                    :ARG0 (c30-2 / she)
                    :ARG1 (c30-3 / money
                                 :mod (c30-12 / more))
                    :mod (c30-7 / just))
       :snt2 (c30-4 / person
                    :ARG0-of (c30-11 / dig-01
                                     :ARG1 (c30-10 / gold))
                    :time (c30-9 / always)
                    :domain (c30-1 / person
                                   :ARG0-of (c30-6 / dig-01
                                                   :ARG1 (c30-8 / gold)))))

# ::snt NOT SURPRISE
# ::tokens ["NOT", "SURPRISE"]
# ::lemmas ["not", "surprise"]
(c31-0 / surprise-01
       :polarity -)

# ::snt Qu manera de salirse con la suya esta chanaaaaaa
# ::tokens ["Qu", "manera", "de", "salirse", "con", "la", "suya", "esta", "chanaaaaaa"]
# ::lemmas ["Qu", "manera", "de", "salirse", "con", "la", "suya", "esta", "chanaaaaaa"]
(c32-2 / say-01
       :ARG0 (c32-4 / i)
       :ARG1 (c32-1 / manera
                    :mod (c32-0 / salirse-00
                                :ARG1 (c32-3 / con-la-ya
                                             :mod (c32-5 / chanaaaaaa
                                                         :mode expressive)
                                             :ARG2-of c32-2))))

# ::snt That's right
# ::tokens ["That", "'s", "right"]
# ::lemmas ["that", "be", "right"]
(c33-0 / right-06
       :ARG2 (c33-1 / that))

# ::snt He needs one against her!!
# ::tokens ["He", "needs", "one", "against", "her", "!", "!"]
# ::lemmas ["he", "need", "one", "against", "she", "!", "!"]
(c34-2 / need-01
       :ARG0 (c34-1 / he)
       :ARG1 (c34-0 / one
                    :prep-against (c34-3 / she))
       :mode expressive)

# ::snt Yeah it's temporary she only did that interview to pay her lawyers, she got cut off!
# ::tokens ["Yeah", "it", "'s", "temporary", "she", "only", "did", "that", "interview", "to", "pay", "her", "lawyers", ",", "she", "got", "cut", "off", "!"]
# ::lemmas ["yeah", "it", "be", "temporary", "she", "only", "do", "that", "interview", "to", "pay", "her", "lawyer", ",", "she", "got", "cut", "off", "!"]
(c35-6 / temporary
       :domain (c35-7 / it)
       :ARG1-of (c35-5 / cause-01
                       :ARG0 (c35-8 / and
                                    :op1 (c35-2 / interview-01
                                                :ARG1 (c35-1 / she)
                                                :mod (c35-0 / only)
                                                :purpose (c35-3 / pay-01
                                                                :ARG0 c35-1
                                                                :ARG2 (c35-4 / lawyer
                                                                             :poss c35-1)))
                                    :op2 (c35-9 / cut-off-04
                                                :ARG1 c35-1))))

# ::snt She's just milking her minutes of fame. She's ridiculous and disgusting and I hope she gets what she deserves.
# ::tokens ["She", "'s", "just", "milking", "her", "minutes", "of", "fame", ".", "She", "'s", "ridiculous", "and", "disgusting", "and", "I", "hope", "she", "gets", "what", "she", "deserves", "."]
# ::lemmas ["she", "be", "just", "milk", "her", "minute", "of", "fame", ".", "she", "be", "ridiculous", "and", "disgusting", "and", "i", "hope", "she", "get", "what", "she", "deserve", "."]
(c36-2 / multi-sentence
       :snt1 (c36-6 / milk-02
                    :ARG0 (c36-3 / she)
                    :ARG1 (c36-0 / fame
                                 :duration (c36-15 / multiple
                                                   :op1 (c36-12 / temporal-quantity
                                                                :unit (c36-8 / minute)
                                                                :quant 1)))
                    :mod (c36-10 / just))
       :snt2 (c36-4 / and
                    :op1 (c36-5 / ridiculous-02
                                :ARG1 (c36-1 / she))
                    :op2 (c36-14 / disgust-01
                                 :ARG1 c36-1)
                    :op3 (c36-7 / hope-01
                                :ARG0 (c36-11 / i)
                                :ARG1 (c36-13 / get-01
                                              :ARG0 c36-1
                                              :ARG1 (c36-16 / thing
                                                            :ARG1-of (c36-9 / deserve-01
                                                                            :ARG0 c36-1))))))

# ::snt Snoop Dog is right, Blac Chyna saw a sucker in Rob and did what she does, now she will have some financial security till Dream turns ...
# ::tokens ["Snoop", "Dog", "is", "right", ",", "Blac", "Chyna", "saw", "a", "sucker", "in", "Rob", "and", "did", "what", "she", "does", ",", "now", "she", "will", "have", "some", "financial", "security", "till", "Dream", "turns", "..."]
# ::lemmas ["Snoop", "Dog", "be", "right", ",", "Blac", "Chyna", "see", "a", "sucker", "in", "Rob", "and", "do", "what", "she", "do", ",", "now", "she", "will", "have", "some", "financial", "security", "till", "Dream", "turn", "..."]
(c37-7 / and
       :op1 (c37-17 / right-06
                    :ARG1 (c37-18 / person
                                  :name (c37-15 / name
                                                :op1 "Snoop"
                                                :op2 "Dog")))
       :op2 (c37-5 / and
                   :op1 (c37-0 / see-01
                               :ARG0 (c37-8 / person
                                            :name (c37-9 / name
                                                         :op1 "Blac"
                                                         :op2 "Chyna"))
                               :ARG1 (c37-3 / sucker
                                            :location (c37-1 / person
                                                             :name (c37-19 / name
                                                                           :op1 "Rob"))))
                   :op2 (c37-21 / do-02
                                :ARG0 c37-8
                                :ARG1 (c37-6 / thing
                                             :ARG1-of (c37-11 / do-02
                                                              :ARG0 c37-8))))
       :op3 (c37-4 / have-03
                   :ARG0 c37-8
                   :ARG1 (c37-2 / security
                                :mod (c37-14 / finance)
                                :quant (c37-16 / some))
                   :time (c37-13 / till
                                 :op1 (c37-20 / turn-02
                                              :ARG1 (c37-10 / dream-01)))
                   :time (c37-12 / now)))

# ::snt Looks responsible in that pic tho
# ::tokens ["Looks", "responsible", "in", "that", "pic", "tho"]
# ::lemmas ["look", "responsible", "in", "that", "pic", "tho"]
(c39-2 / look-02
       :ARG1 (c39-0 / responsible-01
                    :ARG0 (c39-3 / pic))
       :ARG1-of (c39-1 / have-concession-91))

# ::snt I'm happy Rob didn't do anything spontaneous he was being mean and vicious because he was hurt.
# ::tokens ["I", "'m", "happy", "Rob", "did", "n't", "do", "anything", "spontaneous", "he", "was", "being", "mean", "and", "vicious", "because", "he", "was", "hurt", "."]
# ::lemmas ["i", "be", "happy", "Rob", "do", "not", "do", "anything", "spontaneous", "he", "be", "be", "mean", "and", "vicious", "because", "he", "be", "hurt", "."]
(c40-4 / happy-01
       :ARG0 (c40-11 / do-02
                     :ARG0 (c40-5 / person
                                  :name (c40-0 / name
                                               :op1 "Rob"))
                     :ARG1 (c40-9 / anything
                                  :mod (c40-2 / spontaneous))
                     :ARG1-of (c40-6 / contrast-01
                                     :ARG2 (c40-8 / and
                                                  :op1 (c40-1 / mean-04
                                                              :ARG0 c40-5)
                                                  :op2 (c40-3 / vicious
                                                              :domain c40-5)
                                                  :ARG1-of (c40-12 / cause-01
                                                                   :ARG0 (c40-7 / hurt-01
                                                                                :ARG1 c40-5))))
                     :polarity -)
       :ARG1 (c40-10 / i))

# ::snt We all know anybody can get a restraining order in the states it don't mean much but China is nasty and used poor rob for fame and money
# ::tokens ["We", "all", "know", "anybody", "can", "get", "a", "restraining", "order", "in", "the", "states", "it", "do", "n't", "mean", "much", "but", "China", "is", "nasty", "and", "used", "poor", "rob", "for", "fame", "and", "money"]
# ::lemmas ["we", "all", "know", "anybody", "can", "get", "a", "restraining", "order", "in", "the", "state", "it", "do", "not", "mean", "much", "but", "China", "be", "nasty", "and", "use", "poor", "rob", "for", "fame", "and", "money"]
(c41-13 / contrast-01
        :ARG1 (c41-4 / know-01
                     :ARG0 (c41-20 / we
                                   :mod (c41-7 / all))
                     :ARG1 (c41-19 / possible-01
                                   :ARG1 (c41-8 / get-01
                                                :ARG0 (c41-6 / anybody)
                                                :ARG1 (c41-2 / order-01
                                                             :ARG2 (c41-18 / restrain-01))
                                                :location (c41-0 / state))))
        :ARG2 (c41-10 / mean-01
                      :ARG1 c41-2
                      :ARG2 (c41-3 / much)
                      :polarity -)
        :ARG1 c41-13
        :ARG2 (c41-5 / and
                     :op1 (c41-17 / nasty
                                  :domain (c41-9 / country
                                                 :name (c41-12 / name
                                                               :op1 "China")))
                     :op2 (c41-14 / use-01
                                  :ARG0 c41-9
                                  :ARG1 (c41-11 / person
                                                :mod (c41-1 / poor))
                                  :ARG2 (c41-21 / and
                                                :op1 (c41-16 / fame-01)
                                                :op2 (c41-15 / money)))))

# ::snt Shame on E news for even entertaining this .
# ::tokens ["Shame", "on", "E", "news", "for", "even", "entertaining", "this", "."]
# ::lemmas ["shame", "on", "e", "news", "for", "even", "entertain", "this", "."]
(c42-2 / shame-01
       :ARG1 (c42-0 / broadcast-program
                    :name (c42-1 / name
                                 :op1 "E"
                                 :op2 "News"))
       :ARG2 (c42-3 / entertain-01
                    :ARG0 c42-0
                    :ARG1 (c42-4 / this)
                    :mod (c42-5 / even)))

# ::snt What dose this lady really want?
# ::tokens ["What", "dose", "this", "lady", "really", "want", "?"]
# ::lemmas ["what", "dose", "this", "lady", "really", "want", "?"]
(c43-2 / want-01
       :ARG0 (c43-1 / lady
                    :mod (c43-3 / this))
       :ARG1 (c43-5 / dose
                    :mod (c43-4 / amr-unknown))
       :ARG1-of (c43-0 / real-04))

# ::snt WOW
# ::tokens ["WOW"]
# ::lemmas ["WOW"]
(c44-0 / wow
       :mode expressive)

# ::snt Hahaha she got cheek afta all she took from him!
# ::tokens ["Hahaha", "she", "got", "cheek", "afta", "all", "she", "took", "from", "him", "!"]
# ::lemmas ["Hahaha", "she", "get", "cheek", "afta", "all", "she", "take", "from", "he", "!"]
(c45-3 / cheek-01
       :ARG1 (c45-0 / she)
       :mod (c45-2 / haha
                   :mode expressive)
       :direction (c45-1 / aft
                         :op1 (c45-6 / thing
                                     :ARG1-of (c45-7 / take-01
                                                     :ARG0 c45-0
                                                     :ARG2 (c45-4 / he))
                                     :mod (c45-5 / all))))

# ::snt He is gonna mess himself up. Go jail or something it not see his kid
# ::tokens ["He", "is", "gon", "na", "mess", "himself", "up", ".", "Go", "jail", "or", "something", "it", "not", "see", "his", "kid"]
# ::lemmas ["he", "be", "going", "to", "mess", "himself", "up", ".", "go", "jail", "or", "something", "it", "not", "see", "his", "kid"]
(c46-3 / multi-sentence
       :snt1 (c46-6 / mess-up-02
                    :ARG0 (c46-7 / he
                                 :ARG1-of c46-6))
       :snt2 (c46-0 / or
                    :op1 (c46-13 / go-02
                                 :ARG0 (c46-2 / you)
                                 :ARG4 (c46-12 / jail)
                                 :mode imperative)
                    :op2 (c46-4 / something
                                :ARG0-of (c46-10 / cause-01
                                                 :ARG1 (c46-1 / see-01
                                                              :ARG0 c46-2
                                                              :ARG1 (c46-8 / person
                                                                           :ARG0-of (c46-11 / have-rel-role-91
                                                                                            :ARG1 (c46-5 / he)
                                                                                            :ARG2 (c46-9 / kid)))
                                                              :polarity -)))))

# ::snt yo, Headz cut off bro...
# ::tokens ["yo", ",", "Headz", "cut", "off", "bro", "..."]
# ::lemmas ["yo", ",", "Headz", "cut", "off", "bro", "..."]
(c47-4 / cut-off-04
       :ARG0 (c47-2 / headz)
       :ARG1 (c47-3 / person
                    :ARG0-of (c47-5 / have-rel-role-91
                                    :ARG2 (c47-0 / bro)))
       :mod (c47-1 / yo
                   :mode expressive)
       :mode expressive)

# ::snt Arse hole!
# ::tokens ["Arse", "hole", "!"]
# ::lemmas ["arse", "hole", "!"]
(c48-1 / hole
       :ARG0-of (c48-0 / embarrass-01)
       :mode expressive)

# ::snt Actually he is not
# ::tokens ["Actually", "he", "is", "not"]
# ::lemmas ["actually", "he", "be", "not"]
(c50-1 / have-polarity-91
       :ARG1 (c50-0 / he)
       :ARG1-of (c50-2 / actual-02)
       :ARG2 -)
