# ::snt I need more of the best, most fun music for scrambling up a wall
# ::tokens ["I", "need", "more", "of", "the", "best", ",", "most", "fun", "music", "for", "scrambling", "up", "a", "wall"]
# ::lemmas ["i", "need", "more", "of", "the", "good", ",", "most", "fun", "music", "for", "scramble", "up", "a", "wall"]
(c1-3 / need-01
      :ARG0 (c1-10 / i)
      :ARG1 (c1-2 / music
                  :quant (c1-6 / more)
                  :ARG1-of (c1-5 / have-degree-91
                                 :ARG2 (c1-11 / good-02
                                              :ARG1 c1-2)
                                 :ARG3 (c1-12 / most))
                  :ARG1-of (c1-0 / fun-01)
                  :ARG1-of (c1-9 / have-degree-91
                                 :ARG2 c1-11
                                 :ARG1 c1-2)
                  :ARG3 (c1-7 / most))
      :purpose (c1-4 / scramble-01
                     :ARG0 c1-10
                     :ARG1 (c1-8 / wall)
                     :direction (c1-1 / up)))

# ::snt We want Britney!!!!
# ::tokens ["We", "want", "Britney", "!", "!", "!", "!"]
# ::lemmas ["we", "want", "Britney", "!", "!", "!", "!"]
(c4-0 / want-01
      :ARG0 (c4-3 / we)
      :ARG1 (c4-2 / person
                  :name (c4-1 / name
                              :op1 "Britney")))

# ::snt Fully expect "no frauds" remy hurt my feelings tour continue drag on, hindering her to show ma who's has more industry pull eyeroll
# ::tokens ["Fully", "expect", "\"", "no", "frauds", "\"", "remy", "hurt", "my", "feelings", "tour", "continue", "drag", "on", ",", "hindering", "her", "to", "show", "ma", "who", "'s", "has", "more", "industry", "pull", "eyeroll"]
# ::lemmas ["fully", "expect", "\"", "no", "fraud", "\"", "remy", "hurt", "my", "feeling", "tour", "continue", "drag", "on", ",", "hinder", "she", "to", "show", "ma", "who", "be", "have", "more", "industry", "pull", "eyeroll"]
(c5-14 / expect-01
       :ARG0 (c5-17 / i)
       :ARG1 (c5-11 / continue-01
                    :ARG1 (c5-6 / tour-01
                                :ARG0 c5-17
                                :ARG1 (c5-5 / hurt-01
                                            :ARG0 (c5-15 / person
                                                         :ARG0-of (c5-18 / defraud-01)
                                                         :polarity -)
                                            :ARG1 c5-17)))
       :degree (c5-12 / full)
       :ARG0-of (c5-8 / cause-01
                      :ARG1 (c5-16 / hinder-01
                                   :ARG0 c5-6
                                   :ARG1 (c5-0 / show-01
                                               :ARG0 (c5-2 / she)
                                               :ARG1 (c5-10 / person
                                                            :name (c5-13 / name
                                                                         :op1 "Ma")
                                                            :ARG0-of (c5-4 / have-03
                                                                           :ARG1 (c5-7 / eyeroll
                                                                                       :ARG1-of (c5-1 / pull-01
                                                                                                      :ARG0 (c5-3 / industry))
                                                                                       :quant (c5-9 / more))))
                                               :ARG2 c5-2))))

# ::snt Looking at this picture just confirmed that I got a dirty mind. Lol
# ::tokens ["Looking", "at", "this", "picture", "just", "confirmed", "that", "I", "got", "a", "dirty", "mind", ".", "Lol"]
# ::lemmas ["look", "at", "this", "picture", "just", "confirm", "that", "i", "get", "a", "dirty", "mind", ".", "Lol"]
(c6-0 / multi-sentence
      :snt1 (c6-5 / confirm-01
                  :ARG0 (c6-3 / look-01
                              :ARG0 (c6-7 / i)
                              :ARG1 (c6-2 / picture
                                          :mod (c6-8 / this)))
                  :ARG1 (c6-9 / get-02
                              :ARG0 c6-7
                              :ARG1 (c6-1 / mind
                                          :ARG1-of (c6-10 / dirty-02)))
                  :time (c6-6 / just))
      :snt2 (c6-11 / laugh-01
                   :manner (c6-4 / loud)
                   :mode expressive))

# ::snt it was whacked NIKKI was a turn off
# ::tokens ["it", "was", "whacked", "NIKKI", "was", "a", "turn", "off"]
# ::lemmas ["it", "be", "whack", "NIKKI", "be", "a", "turn", "off"]
(c7-4 / turn-off-07
      :ARG1 (c7-3 / it
                  :ARG0-of (c7-1 / cause-01
                                 :ARG1 (c7-2 / whack-01
                                             :ARG1 (c7-5 / country
                                                         :name (c7-0 / name
                                                                     :op1 "NIKKI"))))))

# ::snt Yes something real to open up a show yay yay yay
# ::tokens ["Yes", "something", "real", "to", "open", "up", "a", "show", "yay", "yay", "yay"]
# ::lemmas ["yes", "something", "real", "to", "open", "up", "a", "show", "yay", "yay", "yay"]
(c11-3 / something
       :ARG1-of (c11-4 / real-04)
       :domain (c11-1 / open-up-03
                      :ARG1 (c11-0 / show-04))
       :ARG1-of (c11-2 / yay
                       :mode expressive))

# ::snt YUSSSSSSSSSSS
# ::tokens ["YUSSSSSSSSSSS"]
# ::lemmas ["YUSSSSSSSSSSS"]
(c14-0 / yuck
       :mode expressive)

# ::snt NEW UPDATE WE NEED TO STAY IN THE LEAD THEY ARE RIGHT BEHIND US! LETS START VOTING!RETWEET TOP
# ::tokens ["NEW", "UPDATE", "WE", "NEED", "TO", "STAY", "IN", "THE", "LEAD", "THEY", "ARE", "RIGHT", "BEHIND", "US", "!", "LETS", "START", "VOTING!RETWEET", "TOP"]
# ::lemmas ["NEW", "UPDATE", "WE", "NEED", "to", "stay", "in", "the", "lead", "they", "be", "right", "behind", "US", "!", "LETS", "START", "VOTING!RETWEET", "top"]
(c17-5 / multi-sentence
       :snt1 (c17-4 / need-01
                    :ARG0 (c17-10 / we)
                    :ARG1 (c17-6 / stay-01
                                 :ARG1 c17-10
                                 :ARG3 (c17-2 / be-located-at-91
                                              :ARG1 (c17-11 / they)
                                              :ARG2 (c17-7 / relative-position
                                                           :op1 c17-10
                                                           :direction (c17-0 / out))
                                              :ARG1-of (c17-12 / right-06)))
                    :ARG1-of (c17-13 / update-02
                                     :ARG1-of (c17-8 / new-01)))
       :snt2 (c17-1 / sell-01
                    :ARG0 (c17-3 / you)
                    :ARG1 (c17-14 / top)
                    :mode imperative)
       :snt3 (c17-15 / start-01
                     :ARG0 c17-3
                     :mode imperative)
       :ARG1 (c17-9 / win-01))

# ::snt This sunday is going to be craaaazy
# ::tokens ["This", "sunday", "is", "going", "to", "be", "craaaazy"]
# ::lemmas ["This", "sunday", "be", "go", "to", "be", "craaaazy"]
(c21-0 / craaaazy
       :domain (c21-2 / sunday
                      :mod (c21-1 / this)))

# ::snt Nicki Legendaj
# ::tokens ["Nicki", "Legendaj"]
# ::lemmas ["Nicki", "Legendaj"]
(c22-1 / person
       :name (c22-0 / name
                    :op1 "Nicki"
                    :op2 "Legendaj"))

# ::snt I am voting for Nicki Minaj for BILLBOARD CHART ACHIEVEMENT AWARD at the . RT to vote!
# ::tokens ["I", "am", "voting", "for", "Nicki", "Minaj", "for", "BILLBOARD", "CHART", "ACHIEVEMENT", "AWARD", "at", "the", ".", "RT", "to", "vote", "!"]
# ::lemmas ["i", "be", "vote", "for", "Nicki", "Minaj", "for", "BILLBOARD", "CHART", "ACHIEVEMENT", "AWARD", "at", "the", ".", "RT", "to", "vote", "!"]
(c23-2 / multi-sentence
       :snt1 (c23-4 / vote-01
                    :ARG0 (c23-9 / i)
                    :ARG1 (c23-7 / person
                                 :name (c23-1 / name
                                              :op1 "Nicki"
                                              :op2 "Minaj"))
                    :ARG3 (c23-10 / award
                                  :name (c23-6 / name
                                               :op1 "BILLBOARD"
                                               :op2 "Charter"
                                               :op3 "Award"))
                    :location (c23-5 / event))
       :snt2 (c23-3 / RT-01
                    :ARG0 (c23-0 / you)
                    :ARG1 (c23-8 / vote-01
                                 :ARG0 c23-0)
                    :mode imperative))

# ::snt my rap queen
# ::tokens ["my", "rap", "queen"]
# ::lemmas ["my", "rap", "queen"]
(c25-2 / queen
       :mod (c25-0 / rap)
       :poss (c25-1 / i))

# ::snt She's a hardworker who knows what she is doing
# ::tokens ["She", "'s", "a", "hardworker", "who", "knows", "what", "she", "is", "doing"]
# ::lemmas ["she", "be", "a", "hardworker", "who", "know", "what", "she", "be", "do"]
(c26-3 / person
       :ARG0-of (c26-4 / work-01
                       :manner (c26-1 / hard-02))
       :domain (c26-0 / she)
       :ARG0-of (c26-2 / know-01
                       :ARG1 (c26-5 / thing
                                    :ARG1-of (c26-6 / do-02
                                                    :ARG0 c26-0))))

# ::snt Maybe for you but ont for a lot of people. She'll bring fire to the stage as usual
# ::tokens ["Maybe", "for", "you", "but", "ont", "for", "a", "lot", "of", "people", ".", "She", "'ll", "bring", "fire", "to", "the", "stage", "as", "usual"]
# ::lemmas ["maybe", "for", "you", "but", "ont", "for", "a", "lot", "of", "people", ".", "she", "'ll", "bring", "fire", "to", "the", "stage", "as", "usual"]
(c27-4 / multi-sentence
       :snt1 (c27-10 / contrast-01
                     :ARG1 (c27-8 / possible-01
                                  :beneficiary (c27-3 / you))
                     :ARG2 (c27-5 / possible-01
                                  :beneficiary (c27-11 / person
                                                       :quant (c27-9 / lot))))
       :snt2 (c27-2 / bring-01
                    :ARG0 (c27-6 / she)
                    :ARG1 (c27-0 / fire)
                    :ARG2 (c27-1 / stage)
                    :mod (c27-7 / as-usual)))

# ::snt We never said she's going to do a mn performance just a medley but she can do it if she wants to
# ::tokens ["We", "never", "said", "she", "'s", "going", "to", "do", "a", "mn", "performance", "just", "a", "medley", "but", "she", "can", "do", "it", "if", "she", "wants", "to"]
# ::lemmas ["we", "never", "say", "she", "be", "go", "to", "do", "a", "mn", "performance", "just", "a", "medley", "but", "she", "can", "do", "it", "if", "she", "want", "to"]
(c28-7 / contrast-01
       :ARG1 (c28-3 / say-01
                    :ARG0 (c28-8 / we)
                    :ARG1 (c28-5 / perform-01
                                 :ARG0 (c28-0 / she)
                                 :ARG1 (c28-1 / medley
                                              :mod (c28-9 / just)))
                    :time (c28-4 / ever)
                    :polarity -)
       :ARG2 (c28-2 / possible-01
                    :ARG1 c28-5
                    :condition (c28-6 / want-01
                                      :ARG0 c28-0
                                      :ARG1 c28-5)))

# ::snt Nicki always is always in the best performances of the night so I don't understand why she shouldn't do a mn medley
# ::tokens ["Nicki", "always", "is", "always", "in", "the", "best", "performances", "of", "the", "night", "so", "I", "do", "n't", "understand", "why", "she", "should", "n't", "do", "a", "mn", "medley"]
# ::lemmas ["Nicki", "always", "be", "always", "in", "the", "good", "performance", "of", "the", "night", "so", "i", "do", "not", "understand", "why", "she", "should", "not", "do", "a", "mn", "medley"]
(c29-9 / cause-01
       :ARG0 (c29-6 / perform-01
                    :ARG0 (c29-1 / person
                                 :name (c29-0 / name
                                              :op1 "Nicki"))
                    :time (c29-12 / always)
                    :ARG1-of (c29-5 / have-degree-91
                                    :ARG2 (c29-13 / good-02
                                                  :ARG1 c29-6)
                                    :ARG3 (c29-2 / most)
                                    :ARG5 (c29-7 / night))
                    :time (c29-11 / always))
       :ARG1 (c29-15 / understand-01
                     :ARG0 (c29-14 / i)
                     :ARG1 (c29-10 / thing
                                   :ARG0-of (c29-16 / cause-01
                                                    :ARG1 (c29-3 / recommend-01
                                                                 :ARG1 (c29-4 / do-02
                                                                              :ARG0 c29-1
                                                                              :ARG1 (c29-8 / medley))
                                                                 :polarity -)))
                     :polarity -))

# ::snt No one mention that she's Beyonc tho. Y u have to insert her in this thread?
# ::tokens ["No", "one", "mention", "that", "she", "'s", "Beyonc", "tho", ".", "Y", "u", "have", "to", "insert", "her", "in", "this", "thread", "?"]
# ::lemmas ["no", "one", "mention", "that", "she", "be", "Beyonc", "tho", ".", "Y", "u", "have", "to", "insert", "she", "in", "this", "thread", "?"]
(c30-3 / multi-sentence
       :snt1 (c30-6 / have-concession-91
                    :ARG2 (c30-5 / mention-01
                                 :ARG0 (c30-2 / no-one)
                                 :ARG1 (c30-7 / person
                                              :name (c30-8 / name
                                                           :op1 "Beyonce")
                                              :domain (c30-4 / she))))
       :snt2 (c30-0 / obligate-01
                    :polarity (c30-11 / amr-unknown)
                    :ARG1 (c30-1 / you)
                    :ARG2 (c30-10 / insert-01
                                  :ARG0 c30-1
                                  :ARG1 c30-4
                                  :ARG2 (c30-9 / thread
                                               :mod (c30-12 / this)))))

# ::snt She should perform I mean, it's pretty much her memoirs right?!
# ::tokens ["She", "should", "perform", "I", "mean", ",", "it", "'s", "pretty", "much", "her", "memoirs", "right", "?", "!"]
# ::lemmas ["she", "should", "perform", "i", "mean", ",", "it", "be", "pretty", "much", "her", "memoir", "right", "?", "!"]
(c31-1 / mean-01
       :ARG0 (c31-6 / i)
       :ARG2 (c31-4 / recommend-01
                    :ARG0 c31-6
                    :ARG1 (c31-5 / perform-01
                                 :ARG0 (c31-3 / she)
                                 :ARG1 (c31-0 / book
                                              :poss c31-3
                                              :mod (c31-2 / pretty-much)
                                              :ARG1-of (c31-7 / request-confirmation-91)))))

# ::snt At least Nicki is the queen of her genre and Gaga is good but madonna better
# ::tokens ["At", "least", "Nicki", "is", "the", "queen", "of", "her", "genre", "and", "Gaga", "is", "good", "but", "madonna", "better"]
# ::lemmas ["at", "least", "Nicki", "be", "the", "queen", "of", "her", "genre", "and", "Gaga", "be", "good", "but", "madonna", "well"]
(c34-8 / and
       :op1 (c34-7 / queen
                   :domain (c34-4 / person
                                  :name (c34-0 / name
                                               :op1 "Nicki"))
                   :poss (c34-9 / genre
                                :poss c34-4)
                   :mod (c34-10 / at-least))
       :op2 (c34-6 / contrast-01
                   :ARG1 (c34-11 / good-02
                                 :ARG1 (c34-1 / person
                                              :name (c34-3 / name
                                                           :op1 "Gaga")))
                   :ARG2 (c34-12 / good-02
                                 :ARG1 c34-1
                                 :ARG2-of (c34-5 / have-degree-91
                                                 :ARG1 c34-1
                                                 :ARG3 (c34-2 / more)))))

# ::snt We need a medley of all her old ones and new ones.
# ::tokens ["We", "need", "a", "medley", "of", "all", "her", "old", "ones", "and", "new", "ones", "."]
# ::lemmas ["we", "need", "a", "medley", "of", "all", "her", "old", "one", "and", "new", "one", "."]
(c35-3 / need-01
       :ARG0 (c35-6 / we)
       :ARG1 (c35-2 / medley
                    :ARG2-of (c35-7 / include-91
                                    :ARG1 (c35-8 / and
                                                 :op1 (c35-0 / one
                                                             :mod (c35-1 / old)
                                                             :poss (c35-4 / she))
                                                 :op2 (c35-10 / one
                                                              :ARG1-of (c35-5 / new-01)
                                                              :poss c35-4)
                                                 :mod (c35-9 / all)))))

# ::snt She better perform a new single
# ::tokens ["She", "better", "perform", "a", "new", "single"]
# ::lemmas ["she", "well", "perform", "a", "new", "single"]
(c36-5 / perform-01
       :ARG0 (c36-3 / she)
       :ARG1 (c36-0 / single
                    :ARG1-of (c36-1 / new-01))
       :ARG1-of (c36-4 / have-degree-91
                       :ARG2 (c36-6 / good-02
                                    :ARG1 c36-5)
                       :ARG3 (c36-2 / more)))

# ::snt Yesssssss
# ::tokens ["Yesssssss"]
# ::lemmas ["Yesssssss"]
(c37-0 / yesssssss)

# ::snt we need demi, ariana, and MILEY TO PERFORM
# ::tokens ["we", "need", "demi", ",", "ariana", ",", "and", "MILEY", "TO", "PERFORM"]
# ::lemmas ["we", "need", "demi", ",", "ariana", ",", "and", "MILEY", "to", "perform"]
(c38-0 / need-01
       :ARG0 (c38-5 / we)
       :ARG1 (c38-3 / perform-01
                    :ARG0 (c38-8 / and
                                 :op1 (c38-1 / person
                                             :name (c38-2 / name
                                                          :op1 "Demi"))
                                 :op2 (c38-9 / person
                                             :name (c38-4 / name
                                                          :op1 "Ariana"))
                                 :op3 (c38-6 / person
                                             :name (c38-7 / name
                                                          :op1 "Mikeley")))))

# ::snt queen
# ::tokens ["queen"]
# ::lemmas ["queen"]
(c39-1 / person
       :name (c39-0 / name
                    :op1 "queen"))

# ::snt SIDE TO SIDE WHITH THE QUEENS IS COMING !
# ::tokens ["SIDE", "TO", "SIDE", "WHITH", "THE", "QUEENS", "IS", "COMING", "!"]
# ::lemmas ["SIDE", "to", "SIDE", "WHITH", "the", "QUEENS", "be", "come", "!"]
(c40-0 / be-located-at-91
       :ARG2 (c40-2 / side
                    :prep-to c40-2)
       :condition (c40-3 / come-01
                         :ARG1 (c40-4 / team
                                      :name (c40-1 / name
                                                   :op1 "QUEENS"))))

# ::snt She is apparently doing a mega mashup of hits. So yeah we are getting a medley basically!.
# ::tokens ["She", "is", "apparently", "doing", "a", "mega", "mashup", "of", "hits", ".", "So", "yeah", "we", "are", "getting", "a", "medley", "basically", "!", "."]
# ::lemmas ["she", "be", "apparently", "do", "a", "mega", "mashup", "of", "hit", ".", "so", "yeah", "we", "be", "get", "a", "medley", "basically", "!", "."]
(c41-2 / multi-sentence
       :snt1 (c41-8 / appear-02
                    :ARG1 (c41-10 / do-02
                                  :ARG0 (c41-3 / she)
                                  :ARG1 (c41-4 / mash-up-02
                                               :ARG1 (c41-5 / hit)
                                               :mod (c41-11 / mega))))
       :snt2 (c41-9 / get-01
                    :ARG0 (c41-7 / we)
                    :ARG1 (c41-6 / medley)
                    :mod (c41-1 / yeah
                                :mode expressive)
                    :mod (c41-0 / basic)))

# ::snt Yep that's what I heard but idk if it's true
# ::tokens ["Yep", "that", "'s", "what", "I", "heard", "but", "idk", "if", "it", "'s", "true"]
# ::lemmas ["yep", "that", "be", "what", "i", "hear", "but", "idk", "if", "it", "be", "true"]
(c42-2 / contrast-01
       :ARG1 (c42-1 / hear-01
                    :ARG0 (c42-3 / i)
                    :ARG1 (c42-4 / that))
       :ARG2 (c42-0 / idk
                    :condition (c42-5 / true-01
                                      :ARG1 c42-4)
                    :mode expressive))

# ::snt Every song? She better consume atleast mins. I'm sure the performance will be % dope!!!!
# ::tokens ["Every", "song", "?", "She", "better", "consume", "atleast", "mins", ".", "I", "'m", "sure", "the", "performance", "will", "be", "%", "dope", "!", "!", "!", "!"]
# ::lemmas ["every", "song", "?", "she", "well", "consume", "atleast", "min", ".", "i", "be", "sure", "the", "performance", "will", "be", "%", "dope", "!", "!", "!", "!"]
(c43-1 / multi-sentence
       :snt1 (c43-3 / song
                    :mod (c43-5 / every)
                    :polarity (c43-12 / amr-unknown))
       :snt2 (c43-9 / consume-01
                    :ARG0 (c43-0 / she)
                    :duration (c43-11 / at-least
                                      :op1 (c43-10 / temporal-quantity
                                                   :unit (c43-6 / minute)
                                                   :quant 1))
                    :ARG1-of (c43-7 / have-degree-91
                                    :ARG2 (c43-13 / good-02
                                                  :ARG1 c43-9)
                                    :ARG3 (c43-15 / more)))
       :snt3 (c43-16 / sure-02
                     :ARG0 (c43-14 / i)
                     :ARG1 (c43-4 / dope
                                  :degree (c43-8 / percentage-entity
                                                 :value " %")
                                  :domain (c43-2 / perform-01))))

# ::snt That's great gives me a few extra mins before sitting down to tune in
# ::tokens ["That", "'s", "great", "gives", "me", "a", "few", "extra", "mins", "before", "sitting", "down", "to", "tune", "in"]
# ::lemmas ["that", "be", "great", "give", "i", "a", "few", "extra", "min", "before", "sit", "down", "to", "tune", "in"]
(c44-8 / give-01
       :ARG0 (c44-5 / that
                    :mod (c44-6 / great))
       :ARG1 (c44-0 / few
                    :op1 (c44-7 / temporal-quantity
                                :unit (c44-2 / minute)
                                :quant 1)
                    :mod (c44-4 / extra))
       :ARG2 (c44-9 / i)
       :time (c44-1 / before
                    :op1 (c44-3 / sit-down-02
                                :ARG1 c44-9
                                :purpose (c44-10 / tune-in-02
                                                 :ARG0 c44-9))))

# ::snt She'll performa a medley and the rumors say it will be a medley of every songs she has released or been featured in
# ::tokens ["She", "'ll", "performa", "a", "medley", "and", "the", "rumors", "say", "it", "will", "be", "a", "medley", "of", "every", "songs", "she", "has", "released", "or", "been", "featured", "in"]
# ::lemmas ["she", "'ll", "performa", "a", "medley", "and", "the", "rumor", "say", "it", "will", "be", "a", "medley", "of", "every", "song", "she", "have", "release", "or", "be", "feature", "in"]
(c45-10 / and
        :op1 (c45-8 / perform-01
                    :ARG0 (c45-4 / she)
                    :ARG1 (c45-3 / medley))
        :op2 (c45-0 / say-01
                    :ARG0 (c45-5 / rumor-01)
                    :ARG1 (c45-7 / medley
                                 :ARG1-of (c45-9 / include-91
                                                 :ARG2 (c45-12 / song
                                                               :mod (c45-6 / every)
                                                               :ARG2-of (c45-1 / or
                                                                               :op1 (c45-11 / release-01
                                                                                            :ARG0 c45-4)
                                                                               :op2 (c45-2 / feature-01
                                                                                           :ARG1 c45-4))))
                                 :domain c45-3)))

# ::snt With what
# ::tokens ["With", "what"]
# ::lemmas ["with", "what"]
(c46-0 / concern-02
       :ARG1 (c46-1 / amr-unknown))

# ::snt WIG
# ::tokens ["WIG"]
# ::lemmas ["WIG"]
(c47-1 / person
       :name (c47-0 / name
                    :op1 "WIG"))

# ::snt yes that would be dope too
# ::tokens ["yes", "that", "would", "be", "dope", "too"]
# ::lemmas ["yes", "that", "would", "be", "dope", "too"]
(c48-0 / dope
       :domain (c48-2 / that)
       :mod (c48-1 / too))

# ::snt How bout a Medley?
# ::tokens ["How", "bout", "a", "Medley", "?"]
# ::lemmas ["how", "bout", "a", "Medley", "?"]
(c49-2 / suggest-01
       :ARG1 (c49-1 / person
                    :name (c49-0 / name
                                 :op1 "Medley")))

# ::snt will slay like the other performance! QUEEN
# ::tokens ["will", "slay", "like", "the", "other", "performance", "!", "QUEEN"]
# ::lemmas ["will", "slay", "like", "the", "other", "performance", "!", "queen"]
(c50-3 / slay-01
       :ARG1-of (c50-0 / resemble-01
                       :ARG2 (c50-2 / perform-01
                                    :mod (c50-1 / other)))
       :mode expressive)
