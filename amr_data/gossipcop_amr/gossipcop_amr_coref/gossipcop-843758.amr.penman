# ::snt WEEDOFF
# ::tokens ["WEEDOFF"]
# ::lemmas ["WEEDOFF"]
(c1-0 / bleed-off-02)

# ::snt ...Why did I even have to see this, let alone comment
# ::tokens ["...", "Why", "did", "I", "even", "have", "to", "see", "this", ",", "let", "alone", "comment"]
# ::lemmas ["...", "why", "do", "i", "even", "have", "to", "see", "this", ",", "let", "alone", "comment"]
(c2-5 / cause-01
      :ARG0 (c2-2 / amr-unknown)
      :ARG1 (c2-0 / obligate-01
                  :ARG1 (c2-8 / i)
                  :ARG2 (c2-7 / and
                              :op1 (c2-1 / see-01
                                         :ARG0 c2-8
                                         :ARG1 (c2-6 / this))
                              :op2 (c2-9 / comment-01
                                         :ARG0 c2-8
                                         :mod (c2-4 / let-alone)))
                  :mod (c2-3 / even)))

# ::snt And I thought she'd be the only one with a normal looking rear, guess not
# ::tokens ["And", "I", "thought", "she", "'d", "be", "the", "only", "one", "with", "a", "normal", "looking", "rear", ",", "guess", "not"]
# ::lemmas ["and", "i", "think", "she", "would", "be", "the", "only", "one", "with", "a", "normal", "looking", "rear", ",", "guess", "not"]
(c3-5 / and
      :op2 (c3-10 / think-01
                  :ARG0 (c3-9 / i)
                  :ARG1 (c3-1 / one
                              :mod (c3-0 / only)
                              :domain (c3-4 / she)
                              :ARG0-of (c3-7 / have-03
                                             :ARG1 (c3-6 / rear
                                                         :ARG1-of (c3-8 / look-02
                                                                        :ARG2 (c3-3 / normal-02)))))
                  :ARG1-of (c3-11 / guess-01
                                  :ARG0 (c3-2 / you)
                                  :polarity -)))

# ::snt Brought to you by Pepsi
# ::tokens ["Brought", "to", "you", "by", "Pepsi"]
# ::lemmas ["bring", "to", "you", "by", "Pepsi"]
(c4-1 / bring-01
      :ARG0 (c4-0 / company
                  :name (c4-3 / name
                              :op1 "Pepsi"))
      :ARG2 (c4-2 / you))

# ::snt Riddle me this butt is not the same but N the has some1 had surgery - welcome the family business
# ::tokens ["Riddle", "me", "this", "butt", "is", "not", "the", "same", "but", "N", "the", "has", "some1", "had", "surgery", "-", "welcome", "the", "family", "business"]
# ::lemmas ["riddle", "i", "this", "butt", "be", "not", "the", "same", "but", "N", "the", "have", "some1", "have", "surgery", "-", "welcome", "the", "family", "business"]
(c5-10 / multi-sentence
       :snt1 (c5-15 / riddle-00
                    :ARG0 (c5-4 / you)
                    :ARG1 (c5-19 / i)
                    :ARG2 (c5-0 / same-01
                                :ARG1 (c5-9 / butt
                                            :mod (c5-7 / this))
                                :ARG1-of (c5-12 / contrast-01
                                                :ARG2 (c5-6 / have-03
                                                            :ARG0 (c5-16 / person
                                                                         :name (c5-14 / name
                                                                                      :op1 "N"))
                                                            :ARG1 (c5-3 / surgery-01
                                                                        :ARG1 (c5-11 / person
                                                                                     :ARG1-of (c5-5 / include-91
                                                                                                    :ARG2 (c5-2 / person
                                                                                                                :ARG0-of (c5-18 / have-03
                                                                                                                                :ARG1 c5-3
                                                                                                                                :ARG1 c5-11)))
                                                                                     :quant 1))))
                                :polarity -)
                    :mode imperative)
       :snt2 (c5-17 / welcome-01
                    :ARG1 (c5-1 / business
                                :mod (c5-13 / family))
                    :ARG2 (c5-8 / you)))

# ::snt What cheeks...just cause it's skin where a but should be ummm nooooooo
# ::tokens ["What", "cheeks", "...", "just", "cause", "it", "'s", "skin", "where", "a", "but", "should", "be", "ummm", "nooooooo"]
# ::lemmas ["what", "cheek", "...", "just", "cause", "it", "be", "skin", "where", "a", "but", "should", "be", "ummm", "nooooooo"]
(c6-3 / cheek
      :mod (c6-7 / amr-unknown)
      :ARG1-of (c6-9 / cause-01
                     :ARG0 (c6-0 / be-located-at-91
                                 :ARG1 (c6-4 / contrast-01)
                                 :ARG2 (c6-1 / skin
                                             :part-of (c6-6 / it)))
                     :mod (c6-5 / just))
      :ARG1-of (c6-2 / recommend-01)
      :mod (c6-8 / ummm
                 :mode expressive))

# ::snt Ela continua sedutora e mgica.
# ::tokens ["Ela", "continua", "sedutora", "e", "mgica", "."]
# ::lemmas ["Ela", "continua", "sedutora", "e", "mgica", "."]
(c7-0 / continua
      :mod (c7-1 / emoticon
                 :value "Ela"))

# ::snt Nobody caaaaaaaaaaaares
# ::tokens ["Nobody", "caaaaaaaaaaaares"]
# ::lemmas ["nobody", "caaaaaaaaaaaare"]
(c8-0 / wish-01
      :ARG0 (c8-1 / nobody))

# ::snt Yum
# ::tokens ["Yum"]
# ::lemmas ["Yum"]
(c9-0 / yum)

# ::snt Not surprised at all
# ::tokens ["Not", "surprised", "at", "all"]
# ::lemmas ["not", "surprised", "at", "all"]
(c10-2 / surprise-01
       :ARG1 (c10-1 / i)
       :degree (c10-0 / at-all)
       :polarity -)
