# ::snt You people love to play games don't you! I have tweeted replies which evidently you won't acknowledge!
# ::tokens ["You", "people", "love", "to", "play", "games", "do", "n't", "you", "!", "I", "have", "tweeted", "replies", "which", "evidently", "you", "wo", "n't", "acknowledge", "!"]
# ::lemmas ["you", "people", "love", "to", "play", "game", "do", "not", "you", "!", "i", "have", "tweet", "reply", "which", "evidently", "you", "will", "not", "acknowledge", "!"]
(c1-1 / multi-sentence
      :snt1 (c1-8 / love-01
                  :ARG0 (c1-7 / person
                              :mod (c1-0 / you))
                  :ARG1 (c1-2 / play-01
                              :ARG0 c1-7
                              :ARG1 (c1-11 / game))
                  :ARG1-of (c1-4 / request-confirmation-91))
      :snt2 (c1-10 / tweet-01
                   :ARG0 (c1-9 / i)
                   :ARG1 (c1-12 / reply-01
                                :ARG1-of (c1-5 / acknowledge-01
                                               :ARG0 (c1-3 / you)
                                               :manner (c1-6 / evident)
                                               :polarity -))))

# ::snt Learn More
# ::tokens ["Learn", "More"]
# ::lemmas ["learn", "more"]
(c2-2 / learn-01
      :ARG0 (c2-1 / you)
      :ARG1 (c2-0 / more)
      :mode imperative)

# ::snt :cool!
# ::tokens [":", "cool", "!"]
# ::lemmas [":", "cool", "!"]
(c3-0 / cool-04)

# ::snt Hip hip hooray!!!
# ::tokens ["Hip", "hip", "hooray", "!", "!", "!"]
# ::lemmas ["Hip", "hip", "hooray", "!", "!", "!"]
(c5-1 / hooray
      :mod (c5-0 / hip)
      :mod c5-1
      :mode expressive)

# ::snt Klut seathul klinethun satellite kluthers
# ::tokens ["Klut", "seathul", "klinethun", "satellite", "kluthers"]
# ::lemmas ["Klut", "seathul", "klinethun", "satellite", "kluther"]
(c6-2 / string-entity
      :domain (c6-0 / satellite
                    :name (c6-1 / name
                                :op1 "Klinethun"))
      :value "Klut")

# ::snt She's the best!
# ::tokens ["She", "'s", "the", "best", "!"]
# ::lemmas ["she", "be", "the", "good", "!"]
(c7-1 / have-degree-91
      :ARG1 (c7-3 / she)
      :ARG2 (c7-0 / good-02)
      :ARG3 (c7-2 / most)
      :mode expressive)

# ::snt Queen
# ::tokens ["Queen"]
# ::lemmas ["queen"]
(c8-1 / person
      :ARG0-of (c8-0 / have-org-role-91
                     :ARG2 (c8-2 / queen)))

# ::snt Are you going to be performing too Kelly?
# ::tokens ["Are", "you", "going", "to", "be", "performing", "too", "Kelly", "?"]
# ::lemmas ["be", "you", "go", "to", "be", "perform", "too", "Kelly", "?"]
(c9-2 / say-01
      :ARG0 (c9-5 / i)
      :ARG1 (c9-4 / perform-01
                  :ARG0 (c9-1 / person
                              :name (c9-0 / name
                                          :op1 "Kelly"))
                  :mod (c9-6 / too)
                  :polarity (c9-3 / amr-unknown))
      :ARG2 c9-1)

# ::snt Get a big podium
# ::tokens ["Get", "a", "big", "podium"]
# ::lemmas ["get", "a", "big", "podium"]
(c10-0 / get-01
       :ARG0 (c10-2 / you)
       :ARG1 (c10-3 / podium
                    :mod (c10-1 / big))
       :mode imperative)

# ::snt is the perfect choice to host the Billboard awards.
# ::tokens ["is", "the", "perfect", "choice", "to", "host", "the", "Billboard", "awards", "."]
# ::lemmas ["be", "the", "perfect", "choice", "to", "host", "the", "Billboard", "award", "."]
(c11-3 / choose-01
       :ARG1 (c11-1 / host-01
                    :ARG1 (c11-4 / award
                                 :name (c11-0 / name
                                              :op1 "Billboard"
                                              :op2 " awards")))
       :ARG1-of (c11-2 / perfect-02))

# ::snt Go Kelly! woop woop!
# ::tokens ["Go", "Kelly", "!", "woop", "woop", "!"]
# ::lemmas ["go", "Kelly", "!", "woop", "woop", "!"]
(c13-0 / go-03
       :ARG1 (c13-2 / person
                    :name (c13-1 / name
                                 :op1 "Kelly"))
       :mod (c13-3 / woop-woop
                   :mode expressive)
       :mode expressive)
