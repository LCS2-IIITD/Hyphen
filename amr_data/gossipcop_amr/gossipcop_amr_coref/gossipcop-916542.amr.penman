# ::snt Waiting to see if Republicans will say "Stick to acting, not politics."(Yes. I know she's an outspoken conservative)
# ::tokens ["Waiting", "to", "see", "if", "Republicans", "will", "say", "\"", "Stick", "to", "acting", ",", "not", "politics", ".", "\"(Yes", ".", "I", "know", "she", "'s", "an", "outspoken", "conservative", ")"]
# ::lemmas ["wait", "to", "see", "if", "Republicans", "will", "say", "\"", "Stick", "to", "act", ",", "not", "politic", ".", "\"(yes", ".", "i", "know", "she", "be", "an", "outspoken", "conservative", ")"]
(c1-8 / wait-01
      :ARG2 (c1-4 / see-01
                  :ARG1 (c1-10 / truth-value
                               :polarity-of (c1-0 / say-01
                                                  :ARG0 (c1-7 / person
                                                              :ARG0-of (c1-6 / have-org-role-91
                                                                             :ARG1 (c1-3 / political-party
                                                                                         :name (c1-2 / name
                                                                                                     :op1 "Republican"
                                                                                                     :op2 "Party"))))
                                                  :ARG1 (c1-12 / stick-01
                                                               :ARG1 (c1-1 / you)
                                                               :ARG2 (c1-5 / act-02
                                                                           :ARG0 c1-1
                                                                           :ARG1-of (c1-9 / contrast-01
                                                                                          :ARG2 (c1-11 / politics
                                                                                                       :polarity -))))))))

# ::snt Haha you win
# ::tokens ["Haha", "you", "win"]
# ::lemmas ["haha", "you", "win"]
(c3-0 / win-01
      :ARG0 (c3-1 / you)
      :mod (c3-2 / haha))

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c4-2 / thank-01
      :ARG0 (c4-1 / i)
      :ARG1 (c4-0 / you))

# ::snt Come on.
# ::tokens ["Come", "on", "."]
# ::lemmas ["come", "on", "."]
(c5-0 / come-on-25
      :ARG1 (c5-1 / you)
      :mode imperative)

# ::snt No and Hell noooooooooooooo!! she is nooooooooo good !!
# ::tokens ["No", "and", "Hell", "noooooooooooooo", "!", "!", "she", "is", "nooooooooo", "good", "!", "!"]
# ::lemmas ["no", "and", "Hell", "noooooooooooooo", "!", "!", "she", "be", "nooooooooo", "good", "!", "!"]
(c6-1 / multi-sentence
      :snt1 (c6-0 / no)
      :snt2 (c6-3 / no
                  :mod (c6-4 / hell)
                  :mode expressive)
      :snt3 (c6-5 / good-02
                  :ARG1 (c6-2 / she)
                  :polarity -))

# ::snt Clueless is the word.
# ::tokens ["Clueless", "is", "the", "word", "."]
# ::lemmas ["Clueless", "be", "the", "word", "."]
(c7-0 / depend-01
      :ARG1-of (c7-1 / word-01)
      :polarity -)

# ::snt Hasnt she heard? CA will
# ::tokens ["Has", "nt", "she", "heard", "?", "CA", "will"]
# ::lemmas ["have", "not", "she", "hear", "?", "CA", "will"]
(c10-1 / multi-sentence
       :snt1 (c10-4 / hear-01
                    :ARG0 (c10-3 / she)
                    :polarity (c10-7 / amr-unknown))
       :snt2 (c10-5 / hear-01
                    :ARG0 (c10-0 / state
                                 :name (c10-2 / name
                                              :op1 "CA"))
                    :polarity (c10-6 / amr-unknown)))

# ::snt She is not qualified
# ::tokens ["She", "is", "not", "qualified"]
# ::lemmas ["she", "be", "not", "qualified"]
(c11-0 / qualify-02
       :ARG1 (c11-1 / she)
       :polarity -)

# ::snt I can't stop staring at her teeth
# ::tokens ["I", "ca", "n't", "stop", "staring", "at", "her", "teeth"]
# ::lemmas ["i", "can", "not", "stop", "stare", "at", "her", "tooth"]
(c12-2 / possible-01
       :ARG1 (c12-1 / stop-01
                    :ARG0 (c12-3 / i)
                    :ARG1 (c12-0 / stare-01
                                 :ARG0 c12-3
                                 :ARG1 (c12-4 / tooth
                                              :part-of (c12-5 / she))))
       :polarity -)

# ::snt Over my Drunken ready to fight body.
# ::tokens ["Over", "my", "Drunken", "ready", "to", "fight", "body", "."]
# ::lemmas ["over", "my", "Drunken", "ready", "to", "fight", "body", "."]
(c13-2 / ready-02
       :ARG1 (c13-3 / i)
       :ARG2 (c13-0 / fight-01
                    :ARG0 c13-3
                    :ARG1 (c13-1 / body))
       :manner (c13-4 / drunk
                      :domain c13-3))

# ::snt The campaign against her could get brutal: clueless here, clueless there, clueless everywhere!
# ::tokens ["The", "campaign", "against", "her", "could", "get", "brutal", ":", "clueless", "here", ",", "clueless", "there", ",", "clueless", "everywhere", "!"]
# ::lemmas ["the", "campaign", "against", "she", "could", "get", "brutal", ":", "clueless", "here", ",", "clueless", "there", ",", "clueless", "everywhere", "!"]
(c14-6 / possible-01
       :ARG1 (c14-11 / get-03
                     :ARG1 (c14-7 / campaign-01
                                  :ARG1 (c14-3 / she))
                     :ARG2 (c14-1 / brutal-02
                                  :ARG1 c14-7))
       :ARG1-of (c14-2 / mean-01
                       :ARG2 (c14-10 / and
                                     :op1 (c14-12 / clueless
                                                  :location (c14-5 / here))
                                     :op2 (c14-8 / clueless
                                                 :location (c14-9 / there))
                                     :op3 (c14-0 / clueless
                                                 :location (c14-4 / everywhere)))))

# ::snt wouldn't part of her district be Compton and watts? hmmm.....I don't think there are many fox news viewers in that area.
# ::tokens ["would", "n't", "part", "of", "her", "district", "be", "Compton", "and", "watts", "?", "hmmm", ".....", "I", "do", "n't", "think", "there", "are", "many", "fox", "news", "viewers", "in", "that", "area", "."]
# ::lemmas ["would", "not", "part", "of", "her", "district", "be", "Compton", "and", "watt", "?", "hmmm", ".....", "i", "do", "not", "think", "there", "be", "many", "fox", "news", "viewer", "in", "that", "area", "."]
(c15-10 / multi-sentence
        :snt1 (c15-3 / have-part-91
                     :ARG1 (c15-19 / district
                                   :poss (c15-0 / she))
                     :ARG2 (c15-8 / and
                                  :op1 (c15-15 / person
                                               :name (c15-14 / name
                                                             :op1 "Compton"))
                                  :op2 (c15-11 / person
                                               :name (c15-12 / name
                                                             :op1 "Watts")))
                     :polarity (c15-6 / amr-unknown))
        :snt2 (c15-17 / hmm
                      :mode expressive)
        :snt3 (c15-7 / think-01
                     :ARG0 (c15-18 / i)
                     :ARG1 (c15-1 / person
                                  :ARG0-of (c15-2 / view-01
                                                  :ARG1 (c15-9 / broadcast-program
                                                               :name (c15-16 / name
                                                                             :op1 "Fox"
                                                                             :op2 "News")))
                                  :quant (c15-4 / many)
                                  :location (c15-5 / area
                                                   :mod (c15-13 / that)))
                     :polarity -))

# ::snt Sit your ass down clown.
# ::tokens ["Sit", "your", "ass", "down", "clown", "."]
# ::lemmas ["sit", "your", "ass", "down", "clown", "."]
(c16-3 / say-01
       :ARG1 (c16-0 / sit-down-02
                    :ARG1 (c16-1 / clown
                                 :part (c16-2 / ass
                                              :ARG2-of c16-0)
                                 :ARG2-of c16-3)
                    :mode imperative))

# ::snt So will be so squashed in the election.
# ::tokens ["So", "will", "be", "so", "squashed", "in", "the", "election", "."]
# ::lemmas ["so", "will", "be", "so", "squashed", "in", "the", "election", "."]
(c19-3 / cause-01
       :ARG1 (c19-1 / squash-01
                    :ARG1 (c19-4 / thing)
                    :degree (c19-0 / so)
                    :time (c19-2 / elect-01)))

# ::snt lol. must be clueless...
# ::tokens ["lol", ".", "must", "be", "clueless", "..."]
# ::lemmas ["lol", ".", "must", "be", "clueless", "..."]
(c20-3 / infer-01
       :ARG1 (c20-2 / clueless
                    :domain (c20-0 / i))
       :ARG2-of (c20-1 / laugh-01
                       :ARG0 c20-0
                       :manner (c20-4 / loud)
                       :mode expressive))

# ::snt Rich, white, and on television. Shell win. Damn it...........
# ::tokens ["Rich", ",", "white", ",", "and", "on", "television", ".", "Shell", "win", ".", "Damn", "it", "..........."]
# ::lemmas ["rich", ",", "white", ",", "and", "on", "television", ".", "Shell", "win", ".", "damn", "it", "..........."]
(c22-0 / multi-sentence
       :snt1 (c22-3 / and
                    :op1 (c22-2 / rich)
                    :op2 (c22-5 / white-02)
                    :op3 (c22-7 / television))
       :snt2 (c22-4 / win-01
                    :ARG0 (c22-6 / company
                                 :name (c22-1 / name
                                              :op1 "Shell")))
       :snt3 (c22-8 / damn-01
                    :mode expressive))

# ::snt No thanks
# ::tokens ["No", "thanks"]
# ::lemmas ["no", "thank"]
(c23-0 / have-concession-91
       :ARG2 (c23-1 / no))

# ::snt Funniest thing i've heard today.
# ::tokens ["Funniest", "thing", "i", "'ve", "heard", "today", "."]
# ::lemmas ["funniest", "thing", "i", "'ve", "hear", "today", "."]
(c24-4 / thing
       :ARG1-of (c24-2 / hear-01
                       :ARG0 (c24-5 / i)
                       :time (c24-6 / today))
       :ARG1-of (c24-3 / have-degree-91
                       :ARG2 (c24-0 / funny-02
                                    :ARG1 c24-4)
                       :ARG3 (c24-1 / most)))

# ::snt Oh god that would be a disaster waiting to happen
# ::tokens ["Oh", "god", "that", "would", "be", "a", "disaster", "waiting", "to", "happen"]
# ::lemmas ["oh", "god", "that", "would", "be", "a", "disaster", "wait", "to", "happen"]
(c25-5 / disaster
       :domain (c25-3 / that)
       :ARG1-of (c25-2 / wait-01
                       :ARG2 (c25-1 / event))
       :mod (c25-4 / god
                   :mod (c25-0 / oh)
                   :mode expressive))

# ::snt SUPPORT BLACK WOM Oh, were not doing this here? My bad.
# ::tokens ["SUPPORT", "BLACK", "WOM", "Oh", ",", "were", "not", "doing", "this", "here", "?", "My", "bad", "."]
# ::lemmas ["support", "BLACK", "WOM", "Oh", ",", "be", "not", "do", "this", "here", "?", "my", "bad", "."]
(c27-1 / multi-sentence
       :snt1 (c27-2 / support-01
                    :ARG1 (c27-5 / woman
                                 :ARG1-of (c27-0 / black-05)))
       :snt2 (c27-9 / do-02
                    :ARG0 (c27-8 / amr-unknown)
                    :ARG1 (c27-6 / this)
                    :location (c27-3 / here)
                    :ARG1-of (c27-4 / bad-07
                                    :ARG0 (c27-7 / i))
                    :polarity -))

# ::snt Someone polished her.
# ::tokens ["Someone", "polished", "her", "."]
# ::lemmas ["someone", "polish", "she", "."]
(c29-1 / polish-01
       :ARG0 (c29-2 / someone)
       :ARG1 (c29-0 / she))

# ::snt Finally!!
# ::tokens ["Finally", "!", "!"]
# ::lemmas ["finally", "!", "!"]
(c32-0 / final
       :mode expressive)

# ::snt Arent we used to Clueless people running for Office yet?
# ::tokens ["Are", "nt", "we", "used", "to", "Clueless", "people", "running", "for", "Office", "yet", "?"]
# ::lemmas ["be", "not", "we", "use", "to", "clueless", "people", "run", "for", "Office", "yet", "?"]
(c33-7 / use-03
       :ARG0 (c33-4 / we)
       :ARG1 (c33-3 / person
                    :ARG0-of (c33-2 / run-02
                                    :ARG1 (c33-0 / office))
                    :ARG1-of (c33-5 / Clueless-00))
       :polarity (c33-6 / amr-unknown)
       :time (c33-1 / yet))

# ::snt Atleast she is trying.
# ::tokens ["Atleast", "she", "is", "trying", "."]
# ::lemmas ["atleast", "she", "be", "try", "."]
(c34-2 / try-01
       :ARG0 (c34-0 / she)
       :mod (c34-1 / at-least))

# ::snt Why...?
# ::tokens ["Why", "...", "?"]
# ::lemmas ["why", "...", "?"]
(c35-0 / cause-01
       :ARG0 (c35-1 / amr-unknown))

# ::snt Actually California needs more balance. It is never good when one party decides everything without having to compromise. Look at the federal government.
# ::tokens ["Actually", "California", "needs", "more", "balance", ".", "It", "is", "never", "good", "when", "one", "party", "decides", "everything", "without", "having", "to", "compromise", ".", "Look", "at", "the", "federal", "government", "."]
# ::lemmas ["actually", "California", "need", "more", "balance", ".", "it", "be", "never", "good", "when", "one", "party", "decide", "everything", "without", "have", "to", "compromise", ".", "look", "at", "the", "federal", "government", "."]
(c37-11 / multi-sentence
        :snt1 (c37-15 / need-01
                      :ARG0 (c37-0 / state
                                   :name (c37-12 / name
                                                 :op1 "California"))
                      :ARG1 (c37-10 / balance
                                    :mod (c37-6 / more))
                      :ARG1-of (c37-7 / actual-02))
        :snt2 (c37-8 / good-02
                     :ARG1 (c37-18 / decide-01
                                   :ARG0 (c37-17 / party
                                                 :quant 1)
                                   :ARG1 (c37-16 / everything)
                                   :manner (c37-4 / obligate-01
                                                  :ARG1 c37-17
                                                  :ARG2 (c37-13 / compromise-01
                                                                :ARG0 c37-17)
                                                  :polarity -))
                     :time (c37-9 / ever)
                     :polarity -)
        :snt3 (c37-1 / look-01
                     :ARG0 (c37-5 / you)
                     :ARG1 (c37-2 / government-organization
                                  :ARG0-of (c37-3 / govern-01)
                                  :mod (c37-14 / federal))
                     :mode imperative))

# ::snt Nice joke of the day. Thanks
# ::tokens ["Nice", "joke", "of", "the", "day", ".", "Thanks"]
# ::lemmas ["nice", "joke", "of", "the", "day", ".", "thank"]
(c38-1 / multi-sentence
       :snt1 (c38-3 / joke-01
                    :time (c38-6 / day)
                    :ARG1-of (c38-2 / nice-01))
       :snt2 (c38-5 / thank-01
                    :ARG0 (c38-4 / i)
                    :ARG1 (c38-0 / you)))

# ::snt the quotation marks are not necessary in that heading
# ::tokens ["the", "quotation", "marks", "are", "not", "necessary", "in", "that", "heading"]
# ::lemmas ["the", "quotation", "mark", "be", "not", "necessary", "in", "that", "heading"]
(c39-1 / need-01
       :ARG1 (c39-0 / mark
                    :mod (c39-3 / quote-01))
       :location (c39-2 / heading
                        :mod (c39-4 / that))
       :polarity -)

# ::snt She is clueless.
# ::tokens ["She", "is", "clueless", "."]
# ::lemmas ["she", "be", "clueless", "."]
(c41-0 / clueless
       :domain (c41-1 / she))

# ::snt She will be running in "a Los Angeles district where registered Democrats outnumber Republicans, % to %." I think "clueless" is very fitting.
# ::tokens ["She", "will", "be", "running", "in", "\"", "a", "Los", "Angeles", "district", "where", "registered", "Democrats", "outnumber", "Republicans", ",", "%", "to", "%", ".", "\"", "I", "think", "\"", "clueless", "\"", "is", "very", "fitting", "."]
# ::lemmas ["she", "will", "be", "run", "in", "\"", "a", "Los", "Angeles", "district", "where", "register", "Democrats", "outnumber", "Republicans", ",", "%", "to", "%", ".", "\"", "i", "think", "\"", "clueless", "\"", "be", "very", "fitting", "."]
(c44-10 / multi-sentence
        :snt1 (c44-16 / run-02
                      :ARG0 (c44-0 / she)
                      :location (c44-21 / district
                                        :location (c44-13 / city
                                                          :name (c44-15 / name
                                                                        :op1 "Los"
                                                                        :op2 "Angeles"))
                                        :location-of (c44-4 / outnumber-01
                                                            :ARG1 (c44-17 / person
                                                                          :ARG0-of (c44-6 / have-org-role-91
                                                                                          :ARG1 (c44-11 / political-party
                                                                                                        :name (c44-12 / name
                                                                                                                      :op1 "Democrat"))
                                                                                          :ARG1-of (c44-3 / register-02)))
                                                            :ARG2 (c44-2 / person
                                                                         :ARG0-of (c44-19 / have-org-role-91
                                                                                          :ARG1 (c44-1 / political-party
                                                                                                       :name (c44-18 / name
                                                                                                                     :op1 "Republican"))))
                                                            :degree (c44-7 / percentage-entity
                                                                           :value "1/2"))))
        :snt2 (c44-8 / think-01
                     :ARG0 (c44-20 / i)
                     :ARG1 (c44-14 / fit-06
                                   :ARG1 (c44-9 / clueless)
                                   :degree (c44-5 / very))))

# ::snt Congress is never gonna happen, Stacey. Stop trying to make Congress happen. As if...
# ::tokens ["Congress", "is", "never", "gon", "na", "happen", ",", "Stacey", ".", "Stop", "trying", "to", "make", "Congress", "happen", ".", "As", "if", "..."]
# ::lemmas ["Congress", "be", "never", "going", "to", "happen", ",", "Stacey", ".", "stop", "try", "to", "make", "Congress", "happen", ".", "as", "if", "..."]
(c45-2 / multi-sentence
       :snt1 (c45-4 / say-01
                    :ARG0 (c45-11 / i)
                    :ARG1 (c45-7 / have-polarity-91
                                 :ARG1 (c45-13 / government-organization
                                               :name (c45-3 / name
                                                            :op1 "Congress"))
                                 :time (c45-6 / ever)
                                 :ARG2 -)
                    :ARG2 (c45-8 / person
                                 :name (c45-9 / name
                                              :op1 "Stacey")))
       :snt2 (c45-0 / stop-01
                    :ARG0 (c45-1 / you)
                    :ARG1 (c45-12 / try-01
                                  :ARG0 c45-1
                                  :ARG1 (c45-10 / make-02
                                                :ARG0 c45-1
                                                :ARG1 c45-13))
                    :mode imperative)
       :snt3 (c45-5 / resemble-01
                    :ARG2 (c45-14 / thing)))

# ::snt As if....
# ::tokens ["As", "if", "...."]
# ::lemmas ["as", "if", "...."]
(c46-0 / resemble-01)

# ::snt You misspelled from*
# ::tokens ["You", "misspelled", "from", "*"]
# ::lemmas ["you", "misspell", "from", "*"]
(c47-1 / misspelling-00
       :ARG1 (c47-0 / you))

# ::snt Umm. No.
# ::tokens ["Umm", ".", "No", "."]
# ::lemmas ["Umm", ".", "no", "."]
(c48-1 / no
       :mod (c48-0 / umm
                   :mode expressive))

# ::snt LoL, this chick really is clueless.....
# ::tokens ["LoL", ",", "this", "chick", "really", "is", "clueless", "....."]
# ::lemmas ["LoL", ",", "this", "chick", "really", "be", "clueless", "....."]
(c49-2 / clueless
       :domain (c49-6 / chick
                      :mod (c49-4 / this))
       :ARG1-of (c49-0 / real-04)
       :mod (c49-1 / laugh-01
                   :ARG0 (c49-3 / i)
                   :manner (c49-5 / loud)
                   :mode expressive))

# ::snt Did April come early
# ::tokens ["Did", "April", "come", "early"]
# ::lemmas ["do", "April", "come", "early"]
(c50-0 / come-01
       :ARG1 (c50-2 / date-entity
                    :month 4)
       :time (c50-1 / early)
       :polarity (c50-3 / amr-unknown))
