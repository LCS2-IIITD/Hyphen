# ::snt good for her! ms was wrong!
# ::tokens ["good", "for", "her", "!", "ms", "was", "wrong", "!"]
# ::lemmas ["good", "for", "she", "!", "ms", "be", "wrong", "!"]
(c1-0 / multi-sentence
      :snt1 (c1-5 / good-04
                  :ARG2 (c1-2 / she))
      :snt2 (c1-4 / wrong-04
                  :ARG1 (c1-3 / person
                              :name (c1-1 / name
                                          :op1 "MS"))))

# ::snt needs to let it go!
# ::tokens ["needs", "to", "let", "it", "go", "!"]
# ::lemmas ["need", "to", "let", "it", "go", "!"]
(c2-2 / need-01
      :ARG1 (c2-3 / let-01
                  :ARG1 (c2-0 / go-01
                              :ARG1 (c2-1 / it))))

# ::snt She is a biatch
# ::tokens ["She", "is", "a", "biatch"]
# ::lemmas ["she", "be", "a", "biatch"]
(c3-0 / biatch
      :domain (c3-1 / she))

# ::snt she's still butt hurt that GMA asked Strahan over and not her. bitterness is like herpes - it keeps surfacing.
# ::tokens ["she", "'s", "still", "butt", "hurt", "that", "GMA", "asked", "Strahan", "over", "and", "not", "her", ".", "bitterness", "is", "like", "herpes", "-", "it", "keeps", "surfacing", "."]
# ::lemmas ["she", "be", "still", "butt", "hurt", "that", "GMA", "ask", "Strahan", "over", "and", "not", "she", ".", "bitterness", "be", "like", "herpe", "-", "it", "keep", "surface", "."]
(c5-11 / multi-sentence
       :snt1 (c5-6 / hurt-01
                   :ARG0 (c5-9 / ask-02
                               :ARG0 (c5-10 / broadcast-program
                                            :name (c5-13 / name
                                                         :op1 "GMA"))
                               :ARG1 (c5-4 / over)
                               :ARG2 (c5-15 / person
                                            :name (c5-12 / name
                                                         :op1 "Strakhan"))
                               :ARG1-of (c5-17 / instead-of-91
                                               :ARG2 (c5-8 / ask-02
                                                           :ARG0 c5-10
                                                           :ARG2 c5-15)))
                   :ARG1 (c5-0 / she)
                   :mod (c5-1 / butt)
                   :mod (c5-5 / still))
       :snt2 (c5-14 / resemble-01
                    :ARG1 (c5-3 / bitterness)
                    :ARG2 (c5-18 / disease
                                 :name (c5-16 / name
                                              :op1 "Her herpes"))
                    :ARG0-of (c5-7 / keep-02
                                   :ARG1 (c5-2 / surf-01
                                               :ARG2 c5-3))))

# ::snt What a BITCH! She needs to smoke some weed and relax. Over paid and way overrated tv show.
# ::tokens ["What", "a", "BITCH", "!", "She", "needs", "to", "smoke", "some", "weed", "and", "relax", ".", "Over", "paid", "and", "way", "overrated", "tv", "show", "."]
# ::lemmas ["what", "a", "BITCH", "!", "she", "need", "to", "smoke", "some", "weed", "and", "relax", ".", "over", "pay", "and", "way", "overrated", "tv", "show", "."]
(c6-5 / multi-sentence
      :snt1 (c6-2 / bitch
                  :degree (c6-6 / so)
                  :mode expressive)
      :snt2 (c6-4 / need-01
                  :ARG0 (c6-0 / she)
                  :ARG1 (c6-13 / and
                               :op1 (c6-14 / smoke-02
                                           :ARG0 c6-0
                                           :ARG1 (c6-11 / weed
                                                        :quant (c6-7 / some)))
                               :op2 (c6-8 / relax-01
                                          :ARG1 c6-0)))
      :snt3 (c6-9 / show-04
                  :ARG1 (c6-12 / television)
                  :ARG1-of (c6-1 / overpay-01)
                  :ARG1-of (c6-3 / overrate-01
                                 :degree (c6-10 / way))))

# ::snt Time for an intervention?
# ::tokens ["Time", "for", "an", "intervention", "?"]
# ::lemmas ["time", "for", "an", "intervention", "?"]
(c7-2 / time
      :polarity (c7-0 / amr-unknown)
      :time-of (c7-1 / intervene-01))

# ::snt Kelly is a terror. God bless anyone who works with her on that stupid show.
# ::tokens ["Kelly", "is", "a", "terror", ".", "God", "bless", "anyone", "who", "works", "with", "her", "on", "that", "stupid", "show", "."]
# ::lemmas ["Kelly", "be", "a", "terror", ".", "God", "bless", "anyone", "who", "work", "with", "she", "on", "that", "stupid", "show", "."]
(c8-3 / multi-sentence
      :snt1 (c8-10 / terror
                   :domain (c8-8 / person
                                 :name (c8-2 / name
                                             :op1 "Kelly")))
      :snt2 (c8-1 / bless-01
                  :ARG0 (c8-4 / person
                              :name (c8-7 / name
                                          :op1 "God"))
                  :ARG1 (c8-6 / anyone
                              :ARG0-of (c8-9 / work-01
                                             :ARG3 c8-8
                                             :location (c8-5 / show-04
                                                             :mod (c8-0 / stupid)
                                                             :mod (c8-11 / that))))
                  :mode imperative))

# ::snt Maybe Kelly Ripa really doesn't need a co host. She's already executive producer.
# ::tokens ["Maybe", "Kelly", "Ripa", "really", "does", "n't", "need", "a", "co", "host", ".", "She", "'s", "already", "executive", "producer", "."]
# ::lemmas ["maybe", "Kelly", "Ripa", "really", "do", "not", "need", "a", "co", "host", ".", "she", "be", "already", "executive", "producer", "."]
(c9-1 / multi-sentence
      :snt1 (c9-8 / possible-01
                  :ARG1 (c9-0 / need-01
                              :ARG0 (c9-2 / person
                                          :name (c9-7 / name
                                                      :op1 "Kelly"
                                                      :op2 "Ripa"))
                              :ARG1 (c9-13 / person
                                           :ARG0-of (c9-9 / host-01
                                                          :mod (c9-11 / together)))
                              :ARG1-of (c9-4 / real-04)
                              :polarity -))
      :snt2 (c9-10 / person
                   :ARG0-of (c9-12 / produce-01)
                   :mod (c9-6 / executive)
                   :domain (c9-3 / she)
                   :time (c9-5 / already)))

# ::snt Why am I not surprised!
# ::tokens ["Why", "am", "I", "not", "surprised", "!"]
# ::lemmas ["why", "be", "i", "not", "surprised", "!"]
(c10-2 / surprise-01
       :ARG0 (c10-0 / amr-unknown)
       :ARG1 (c10-1 / i)
       :polarity -)

# ::snt what a crybaby. Her actions with the Strahan departure really turned me off of her. Rarely watch based on her ridiculous actions
# ::tokens ["what", "a", "crybaby", ".", "Her", "actions", "with", "the", "Strahan", "departure", "really", "turned", "me", "off", "of", "her", ".", "Rarely", "watch", "based", "on", "her", "ridiculous", "actions"]
# ::lemmas ["what", "a", "crybaby", ".", "her", "action", "with", "the", "Strahan", "departure", "really", "turn", "i", "off", "of", "she", ".", "rarely", "watch", "base", "on", "her", "ridiculous", "action"]
(c11-2 / multi-sentence
       :snt1 (c11-8 / crybaby
                    :degree (c11-4 / so))
       :snt2 (c11-10 / turn-off-07
                     :ARG0 (c11-12 / act-02
                                   :ARG0 (c11-0 / she)
                                   :accompanier (c11-14 / depart-01
                                                        :ARG0 (c11-6 / person
                                                                     :name (c11-3 / name
                                                                                  :op1 "Strakhan"))))
                     :ARG1 (c11-11 / i)
                     :ARG2 (c11-16 / she)
                     :ARG1-of (c11-5 / real-04))
       :snt3 (c11-9 / watch-01
                    :ARG1-of (c11-15 / rare-02)
                    :ARG1-of (c11-1 / base-02
                                    :ARG2 (c11-13 / act-02
                                                  :ARG0 c11-0
                                                  :ARG1-of (c11-7 / ridiculous-02)))))

# ::snt She needs to get over herself!
# ::tokens ["She", "needs", "to", "get", "over", "herself", "!"]
# ::lemmas ["she", "need", "to", "get", "over", "herself", "!"]
(c12-1 / need-01
       :ARG0 (c12-2 / she)
       :ARG1 (c12-0 / over-02
                    :ARG1 c12-2
                    :ARG2 c12-2)
       :mode imperative)

# ::snt she is a bitch
# ::tokens ["she", "is", "a", "bitch"]
# ::lemmas ["she", "be", "a", "bitch"]
(c13-0 / bitch
       :domain (c13-1 / she))

# ::snt May I have your "problems", you vapid twit?
# ::tokens ["May", "I", "have", "your", "\"", "problems", "\"", ",", "you", "vapid", "twit", "?"]
# ::lemmas ["may", "i", "have", "your", "\"", "problem", "\"", ",", "you", "vapid", "twit", "?"]
(c14-1 / say-01
       :ARG0 (c14-7 / i)
       :ARG1 (c14-6 / wish-01
                    :ARG1 (c14-4 / have-03
                                 :ARG0 c14-7
                                 :ARG1 (c14-5 / problem
                                              :poss (c14-0 / you
                                                           :mod (c14-8 / twit
                                                                       :mod (c14-3 / vapid)))))
                    :polarity (c14-2 / amr-unknown))
       :ARG2 c14-0)

# ::snt I dont believe this story. Ryan is a good guy.
# ::tokens ["I", "do", "nt", "believe", "this", "story", ".", "Ryan", "is", "a", "good", "guy", "."]
# ::lemmas ["i", "do", "not", "believe", "this", "story", ".", "Ryan", "be", "a", "good", "guy", "."]
(c16-1 / multi-sentence
       :snt1 (c16-0 / believe-01
                    :ARG0 (c16-5 / i)
                    :ARG1 (c16-3 / story
                                 :mod (c16-6 / this))
                    :polarity -)
       :snt2 (c16-7 / guy
                    :ARG1-of (c16-8 / good-02)
                    :domain (c16-4 / person
                                   :name (c16-2 / name
                                                :op1 "Ryan"))))

# ::snt Get over it
# ::tokens ["Get", "over", "it"]
# ::lemmas ["get", "over", "it"]
(c17-0 / over-02
       :ARG1 (c17-1 / you)
       :ARG2 (c17-2 / it)
       :mode imperative)

# ::snt I Ryan but I dont watch this show because Kelly is so phony &amp; a diva. Hes also go a lot more pull than her.
# ::tokens ["I", "Ryan", "but", "I", "do", "nt", "watch", "this", "show", "because", "Kelly", "is", "so", "phony", "&", "amp", ";", "a", "diva", ".", "He", "s", "also", "go", "a", "lot", "more", "pull", "than", "her", "."]
# ::lemmas ["i", "Ryan", "but", "i", "do", "not", "watch", "this", "show", "because", "Kelly", "be", "so", "phony", "&", "amp", ";", "a", "diva", ".", "he", "s", "also", "go", "a", "lot", "more", "pull", "than", "she", "."]
(c18-13 / multi-sentence
        :snt1 (c18-15 / contrast-01
                      :ARG1 (c18-0 / say-01
                                   :ARG0 (c18-21 / i)
                                   :ARG2 (c18-18 / person
                                                 :name (c18-16 / name
                                                               :op1 "Ryan")))
                      :ARG2 (c18-19 / watch-01
                                    :ARG0 c18-21
                                    :ARG1 (c18-5 / show
                                                 :mod (c18-10 / this))
                                    :ARG1-of (c18-12 / cause-01
                                                     :ARG0 (c18-9 / and
                                                                  :op1 (c18-14 / phony
                                                                               :domain (c18-3 / person
                                                                                              :name c18-16
                                                                                              :op1 "Kelly")))
                                                     :op2 (c18-22 / diva
                                                                  :domain c18-3)
                                                     :degree (c18-4 / so))
                                    :polarity -))
        :snt2 (c18-11 / go-06
                      :ARG0 (c18-6 / he)
                      :ARG1 (c18-2 / pull-01
                                   :ARG0 c18-6)
                      :ARG1-of (c18-20 / have-quant-91
                                       :ARG3 (c18-7 / more
                                                    :quant (c18-1 / lot))
                                       :ARG4 (c18-17 / she))
                      :mod (c18-8 / also)))

# ::snt For sure
# ::tokens ["For", "sure"]
# ::lemmas ["for", "sure"]
(c19-0 / sure-02)

# ::snt Another form of how divided this country is why can't you go on another show we are all Americans why can't we show Unity
# ::tokens ["Another", "form", "of", "how", "divided", "this", "country", "is", "why", "ca", "n't", "you", "go", "on", "another", "show", "we", "are", "all", "Americans", "why", "ca", "n't", "we", "show", "Unity"]
# ::lemmas ["another", "form", "of", "how", "divided", "this", "country", "be", "why", "can", "not", "you", "go", "on", "another", "show", "we", "be", "all", "Americans", "why", "can", "not", "we", "show", "Unity"]
(c20-0 / form
       :mod (c20-12 / another)
       :consist-of (c20-6 / cause-01
                          :ARG0 (c20-11 / amr-unknown)
                          :ARG1 (c20-5 / possible-01
                                       :ARG1 (c20-13 / go-02
                                                     :ARG0 (c20-2 / you)
                                                     :ARG1 (c20-4 / show-01
                                                                  :ARG0 c20-2
                                                                  :ARG1 (c20-15 / unity)
                                                                  :ARG1-of (c20-16 / cause-01
                                                                                   :ARG0 (c20-7 / amr-unknown
                                                                                                :ARG0-of (c20-9 / cause-01
                                                                                                                :ARG1 (c20-3 / possible-01
                                                                                                                             :ARG1 (c20-1 / show-01
                                                                                                                                          :ARG0 (c20-8 / we
                                                                                                                                                       :mod (c20-14 / all))
                                                                                                                                          :ARG1 c20-15)
                                                                                                                             :polarity -)))))
                                                     :ARG4 (c20-17 / show-01
                                                                   :ARG0 c20-8
                                                                   :ARG1 c20-15))
                                       :polarity -))
       :mod (c20-10 / another))

# ::snt Team KELLY
# ::tokens ["Team", "KELLY"]
# ::lemmas ["Team", "KELLY"]
(c21-1 / team
       :name (c21-0 / name
                    :op1 "KELLY"))

# ::snt You look and sound awful....get some rest please!!!
# ::tokens ["You", "look", "and", "sound", "awful", "....", "get", "some", "rest", "please", "!", "!", "!"]
# ::lemmas ["you", "look", "and", "sound", "awful", "....", "get", "some", "rest", "please", "!", "!", "!"]
(c22-7 / and
       :op1 (c22-6 / and
                   :op1 (c22-4 / look-02
                               :ARG0 (c22-1 / you)
                               :ARG1 (c22-5 / awful))
                   :op2 (c22-2 / sound-01
                               :ARG1 c22-1
                               :ARG2 c22-5))
       :op2 (c22-3 / rest-01
                   :ARG0 c22-1
                   :mod (c22-0 / some)
                   :mode imperative
                   :polite +))

# ::snt I demand Kelly Ripa cancel her spray tan appointment
# ::tokens ["I", "demand", "Kelly", "Ripa", "cancel", "her", "spray", "tan", "appointment"]
# ::lemmas ["i", "demand", "Kelly", "Ripa", "cancel", "her", "spray", "tan", "appointment"]
(c23-7 / demand-01
       :ARG0 (c23-5 / i)
       :ARG1 (c23-3 / cancel-01
                    :ARG0 (c23-2 / person
                                 :name (c23-0 / name
                                              :op1 "Kelly"
                                              :op2 "Ripa"))
                    :ARG1 (c23-6 / appointment-02
                                 :ARG0 c23-2
                                 :ARG1 (c23-4 / tan-01
                                              :ARG1-of (c23-1 / spray-01))))
       :ARG2 c23-2)

# ::snt See I told you what happens when D list stars act like A list...back on the meds
# ::tokens ["See", "I", "told", "you", "what", "happens", "when", "D", "list", "stars", "act", "like", "A", "list", "...", "back", "on", "the", "meds"]
# ::lemmas ["see", "i", "tell", "you", "what", "happen", "when", "D", "list", "star", "act", "like", "a", "list", "...", "back", "on", "the", "med"]
(c24-5 / see-01
       :ARG0 (c24-2 / you)
       :ARG1 (c24-13 / tell-01
                     :ARG0 (c24-12 / i)
                     :ARG1 (c24-8 / event
                                  :condition (c24-6 / act-01
                                                    :ARG0 (c24-0 / star
                                                                 :mod (c24-10 / list
                                                                              :mod (c24-7 / variable
                                                                                          :name (c24-3 / name
                                                                                                       :op1 "D"))))
                                                    :ARG1 (c24-14 / list
                                                                  :mod (c24-11 / variable
                                                                               :name (c24-9 / name
                                                                                            :op1 "A")))))
                     :ARG2 c24-2
                     :time (c24-1 / back
                                  :op1 (c24-4 / medication))))

# ::snt Boy oh boy, is it any wonder why left? She's impossible! DIVA is written all over her!Face it Kelly, your time is past!
# ::tokens ["Boy", "oh", "boy", ",", "is", "it", "any", "wonder", "why", "left", "?", "She", "'s", "impossible", "!", "DIVA", "is", "written", "all", "over", "her!Face", "it", "Kelly", ",", "your", "time", "is", "past", "!"]
# ::lemmas ["boy", "oh", "boy", ",", "be", "it", "any", "wonder", "why", "leave", "?", "she", "be", "impossible", "!", "DIVA", "be", "write", "all", "over", "her!Face", "it", "Kelly", ",", "your", "time", "be", "past", "!"]
(c25-11 / multi-sentence
        :snt1 (c25-19 / wonder-01
                      :ARG1 (c25-10 / thing
                                    :ARG0-of (c25-14 / cause-01
                                                     :ARG1 (c25-1 / leave-11)))
                      :polarity (c25-9 / amr-unknown)
                      :mod (c25-8 / any)
                      :mod (c25-4 / oh
                                  :mode expressive))
        :snt2 (c25-18 / possible-01
                      :ARG1 (c25-0 / she)
                      :polarity -)
        :snt3 (c25-2 / write-01
                     :ARG1 (c25-15 / thing
                                   :name (c25-17 / name
                                                 :op1 "DIVA"))
                     :location (c25-7 / all-over
                                      :op1 (c25-5 / she)))
        :snt4 (c25-16 / face-01
                      :ARG0 (c25-12 / person
                                    :name (c25-13 / name
                                                  :op1 "Kelly"))
                      :ARG1 (c25-3 / pass-03
                                   :ARG1 (c25-20 / time
                                                 :poss (c25-6 / you)))
                      :mode imperative))

# ::snt DIVA ALERT!!!!
# ::tokens ["DIVA", "ALERT", "!", "!", "!", "!"]
# ::lemmas ["DIVA", "ALERT", "!", "!", "!", "!"]
(c26-0 / alert-01
       :mode expressive)

# ::snt Kelly better be careful. She needs Ryan more than he needs her
# ::tokens ["Kelly", "better", "be", "careful", ".", "She", "needs", "Ryan", "more", "than", "he", "needs", "her"]
# ::lemmas ["Kelly", "well", "be", "careful", ".", "she", "need", "Ryan", "more", "than", "he", "need", "she"]
(c27-2 / multi-sentence
       :snt1 (c27-5 / recommend-01
                    :ARG1 (c27-11 / care-04
                                  :ARG0 (c27-7 / person
                                               :name (c27-1 / name
                                                            :op1 "Kelly")
                                               :ARG1-of c27-11)))
       :snt2 (c27-6 / need-01
                    :ARG0 (c27-3 / she)
                    :ARG1 (c27-4 / person
                                 :name (c27-8 / name
                                              :op1 "Ryan"))
                    :ARG2-of (c27-9 / have-degree-91
                                    :ARG1 c27-4
                                    :ARG3 (c27-10 / more)
                                    :ARG4 (c27-12 / need-01
                                                  :ARG0 c27-4
                                                  :ARG1 (c27-0 / she)))))

# ::snt I don't believe this "Story"
# ::tokens ["I", "do", "n't", "believe", "this", "\"", "Story", "\""]
# ::lemmas ["i", "do", "not", "believe", "this", "\"", "Story", "\""]
(c28-0 / believe-01
       :ARG0 (c28-2 / i)
       :ARG1 (c28-3 / story
                    :mod (c28-1 / this))
       :polarity -)

# ::snt perch and twirl diva
# ::tokens ["perch", "and", "twirl", "diva"]
# ::lemmas ["perch", "and", "twirl", "diva"]
(c29-4 / and
       :op1 (c29-3 / person
                   :name (c29-0 / name
                                :op1 "Perch"))
       :op2 (c29-1 / person
                   :name (c29-2 / name
                                :op1 "twirl")))

# ::snt The show sucks now...don't watch anymore
# ::tokens ["The", "show", "sucks", "now", "...", "don't", "watch", "anymore"]
# ::lemmas ["the", "show", "suck", "now", "...", "don't", "watch", "anymore"]
(c30-3 / multi-sentence
       :snt1 (c30-4 / suck-03
                    :ARG0 (c30-0 / show)
                    :time (c30-2 / now))
       :snt2 (c30-5 / watch-01
                    :ARG0 (c30-1 / you)
                    :time (c30-6 / anymore)
                    :polarity -
                    :mode imperative))

# ::snt Uh oh..
# ::tokens ["Uh", "oh", ".."]
# ::lemmas ["uh", "oh", ".."]
(c31-0 / uh-oh
       :mode expressive)

# ::snt Geesh Kelly get over it already,Ryan is a big boy,he could what he wants
# ::tokens ["Geesh", "Kelly", "get", "over", "it", "already", ",", "Ryan", "is", "a", "big", "boy", ",", "he", "could", "what", "he", "wants"]
# ::lemmas ["Geesh", "Kelly", "get", "over", "it", "already", ",", "Ryan", "be", "a", "big", "boy", ",", "he", "could", "what", "he", "want"]
(c32-10 / and
        :op1 (c32-0 / over-02
                    :ARG1 (c32-5 / person
                                 :name (c32-2 / name
                                              :op1 "Kelly"))
                    :ARG2 (c32-9 / it)
                    :mod (c32-11 / geesh
                                 :mode expressive)
                    :time (c32-12 / already)
                    :mode imperative)
        :op2 (c32-1 / boy
                    :mod (c32-4 / big)
                    :domain (c32-3 / person
                                   :name (c32-6 / name
                                                :op1 "Ryan")))
        :op3 (c32-13 / possible-01
                     :ARG1 (c32-8 / thing
                                  :ARG1-of (c32-7 / want-01
                                                  :ARG0 c32-3))))

# ::snt Sounds like Kelly has gone loco
# ::tokens ["Sounds", "like", "Kelly", "has", "gone", "loco"]
# ::lemmas ["sound", "like", "Kelly", "have", "go", "loco"]
(c33-1 / sound-01
       :ARG1 (c33-4 / go-08
                    :ARG1 (c33-2 / person
                                 :name (c33-0 / name
                                              :op1 "Kelly"))
                    :ARG2 (c33-3 / loco)))

# ::snt They gotta get rid of her. Embarassment to the network.
# ::tokens ["They", "got", "ta", "get", "rid", "of", "her", ".", "Embarassment", "to", "the", "network", "."]
# ::lemmas ["they", "got", "to", "get", "rid", "of", "she", ".", "embarassment", "to", "the", "network", "."]
(c34-1 / multi-sentence
       :snt1 (c34-0 / obligate-01
                    :ARG1 (c34-6 / they)
                    :ARG2 (c34-4 / rid-01
                                 :ARG0 c34-6
                                 :ARG1 (c34-3 / she)))
       :snt2 (c34-5 / embarrass-01
                    :ARG1 (c34-2 / network)))
