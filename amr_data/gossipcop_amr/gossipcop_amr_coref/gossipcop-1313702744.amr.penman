# ::snt mood
# ::tokens ["mood"]
# ::lemmas ["mood"]
(c1-0 / good-02)

# ::snt Devil Wears Prada, Doubt, Julie &amp; Julia, August Osage County, The Post? Come on.
# ::tokens ["Devil", "Wears", "Prada", ",", "Doubt", ",", "Julie", "&", "amp", ";", "Julia", ",", "August", "Osage", "County", ",", "The", "Post", "?", "Come", "on", "."]
# ::lemmas ["Devil", "Wears", "Prada", ",", "Doubt", ",", "Julie", "&", "amp", ";", "Julia", ",", "August", "Osage", "County", ",", "the", "Post", "?", "come", "on", "."]
(c2-8 / multi-sentence
      :snt1 (c2-17 / wear-01
                   :ARG0 (c2-15 / person
                                :name (c2-13 / name
                                             :op1 "Devil"))
                   :ARG1 (c2-6 / and
                               :op1 (c2-5 / thing
                                          :name (c2-9 / name
                                                      :op1 "Prada"))
                               :op2 (c2-12 / thing
                                           :name (c2-16 / name
                                                        :op1 "Doubt"))
                               :op3 (c2-19 / thing
                                           :name (c2-11 / name
                                                        :op1 "Julie"
                                                        :op2 "&amp"))
                               :op4 (c2-2 / thing
                                          :name (c2-18 / name
                                                       :op1 "Julia"))
                               :source (c2-10 / county
                                              :name (c2-14 / name
                                                           :op1 "August"
                                                           :op2 "Osage"
                                                           :op3 "County"))
                               :op5 (c2-1 / newspaper
                                          :name (c2-0 / name
                                                      :op1 "The"
                                                      :op2 "Post")))
                   :polarity (c2-4 / amr-unknown))
      :snt2 (c2-7 / come-on-25
                  :ARG1 (c2-3 / you)
                  :mode imperative))

# ::snt SAME my unpopular opinion is that Meryl Streep stopped actually acting around The Hours and has been phoning it in
# ::tokens ["SAME", "my", "unpopular", "opinion", "is", "that", "Meryl", "Streep", "stopped", "actually", "acting", "around", "The", "Hours", "and", "has", "been", "phoning", "it", "in"]
# ::lemmas ["same", "my", "unpopular", "opinion", "be", "that", "Meryl", "Streep", "stop", "actually", "act", "around", "the", "Hours", "and", "have", "be", "phone", "it", "in"]
(c3-5 / same-01
      :ARG1 (c3-10 / and
                   :op1 (c3-0 / stop-01
                              :ARG0 (c3-7 / person
                                          :name (c3-3 / name
                                                      :op1 "Meryl"
                                                      :op2 "Step"))
                              :ARG1 (c3-9 / act-01
                                          :ARG0 c3-7
                                          :location (c3-8 / around
                                                          :op1 (c3-2 / broadcast-program
                                                                     :name (c3-6 / name
                                                                                 :op1 "The"
                                                                                 :op2 "Hours")))
                                          :ARG1-of (c3-12 / actual-02)))
                   :op2 (c3-4 / phone-in-02
                              :ARG0 c3-7
                              :ARG1 c3-2))
      :ARG2 (c3-1 / opine-01
                  :ARG0 (c3-11 / i)
                  :ARG1-of (c3-13 / popular-02
                                  :polarity -)))

# ::snt Dont you dare.
# ::tokens ["Do", "nt", "you", "dare", "."]
# ::lemmas ["do", "not", "you", "dare", "."]
(c5-0 / dare-01
      :ARG1 (c5-1 / you)
      :polarity -)

# ::snt Are you implying Lady Gaga will be the Scarlett Johansson of the DCEU?
# ::tokens ["Are", "you", "implying", "Lady", "Gaga", "will", "be", "the", "Scarlett", "Johansson", "of", "the", "DCEU", "?"]
# ::lemmas ["be", "you", "imply", "Lady", "Gaga", "will", "be", "the", "Scarlett", "Johansson", "of", "the", "DCEU", "?"]
(c6-8 / imply-01
      :ARG0 (c6-1 / you)
      :ARG1 (c6-5 / person
                  :name (c6-2 / name
                              :op1 "Lady"
                              :op2 "Gaga")
                  :domain (c6-3 / person
                                :name (c6-4 / name
                                            :op1 "Scarlett"
                                            :op2 "Johanansson")
                                :ARG0-of (c6-6 / have-org-role-91
                                               :ARG1 (c6-0 / organization
                                                           :name (c6-7 / name
                                                                       :op1 "DCEU")))))
      :polarity (c6-9 / amr-unknown))

# ::snt Been meaning to watch it. Worth it?
# ::tokens ["Been", "meaning", "to", "watch", "it", ".", "Worth", "it", "?"]
# ::lemmas ["be", "mean", "to", "watch", "it", ".", "worth", "it", "?"]
(c7-0 / multi-sentence
      :snt1 (c7-2 / mean-02
                  :ARG0 (c7-5 / i)
                  :ARG1 (c7-4 / watch-01
                              :ARG0 c7-5
                              :ARG1 (c7-1 / it)))
      :snt2 (c7-3 / worth-02
                  :ARG1 (c7-7 / it)
                  :polarity (c7-6 / amr-unknown)))

# ::snt ooo yeah that's good
# ::tokens ["ooo", "yeah", "that", "'s", "good"]
# ::lemmas ["ooo", "yeah", "that", "be", "good"]
(c8-0 / good-02
      :ARG1 (c8-2 / that)
      :mod (c8-1 / yeah
                 :mod c8-2
                 :mode expressive))

# ::snt OK
# ::tokens ["OK"]
# ::lemmas ["ok"]
(c9-0 / okay-04)

# ::snt I'd probably use one of these pics for my profile pic
# ::tokens ["I", "'d", "probably", "use", "one", "of", "these", "pics", "for", "my", "profile", "pic"]
# ::lemmas ["i", "would", "probably", "use", "one", "of", "these", "pic", "for", "my", "profile", "pic"]
(c10-2 / probable
       :domain (c10-7 / use-01
                      :ARG0 (c10-5 / i)
                      :ARG1 (c10-0 / picture
                                   :ARG1-of (c10-1 / include-91
                                                   :ARG2 (c10-6 / picture
                                                                :mod (c10-4 / this)))
                                   :quant 1)
                      :ARG2 (c10-3 / profile
                                   :poss c10-5)))

# ::snt Chega sou bissexual pronto e acabou
# ::tokens ["Chega", "sou", "bissexual", "pronto", "e", "acabou"]
# ::lemmas ["Chega", "sou", "bissexual", "pronto", "e", "acabou"]
(c11-3 / say-01
       :ARG0 (c11-6 / i)
       :ARG1 (c11-5 / come-04
                    :ARG1 (c11-4 / person
                                 :name (c11-1 / name
                                              :op1 "Chega"))
                    :ARG2 (c11-2 / pronto
                                 :op1 (c11-7 / acabou))
                    :manner (c11-0 / sexual))
       :ARG2 c11-4)

# ::snt Bummer but as long as she plays Hedy, that's all that matters.
# ::tokens ["Bummer", "but", "as", "long", "as", "she", "plays", "Hedy", ",", "that", "'s", "all", "that", "matters", "."]
# ::lemmas ["Bummer", "but", "as", "long", "as", "she", "play", "Hedy", ",", "that", "be", "all", "that", "matter", "."]
(c14-6 / contrast-01
       :ARG2 (c14-1 / matter-01
                    :ARG1 (c14-7 / that)
                    :condition (c14-8 / as-long-as
                                      :op1 (c14-5 / play-02
                                                  :ARG0 (c14-3 / she)
                                                  :ARG1 (c14-2 / person
                                                               :name (c14-4 / name
                                                                            :op1 "Hedy")))))
       :mod (c14-0 / bummer))

# ::snt Oh yeah thats right. Thank god! I was worried.
# ::tokens ["Oh", "yeah", "that", "s", "right", ".", "Thank", "god", "!", "I", "was", "worried", "."]
# ::lemmas ["oh", "yeah", "that", "s", "right", ".", "thank", "god", "!", "i", "be", "worried", "."]
(c15-1 / multi-sentence
       :snt1 (c15-4 / right-06
                    :ARG2 (c15-7 / that)
                    :mod (c15-0 / oh-yeah
                                :mode expressive))
       :snt2 (c15-9 / thank-01
                    :ARG0 (c15-8 / i)
                    :ARG1 (c15-5 / person
                                 :name (c15-2 / name
                                              :op1 "God")))
       :snt3 (c15-6 / worry-01
                    :ARG1 (c15-3 / i)))

# ::snt That just sucks. I'm not blaming Gal or anything but doing Red Notice instead of Ruin? Let's face it, Red Notice will be just another action comedy but this could have been a defining role for her.
# ::tokens ["That", "just", "sucks", ".", "I", "'m", "not", "blaming", "Gal", "or", "anything", "but", "doing", "Red", "Notice", "instead", "of", "Ruin", "?", "Let", "'s", "face", "it", ",", "Red", "Notice", "will", "be", "just", "another", "action", "comedy", "but", "this", "could", "have", "been", "a", "defining", "role", "for", "her", "."]
# ::lemmas ["that", "just", "suck", ".", "i", "be", "not", "blame", "Gal", "or", "anything", "but", "do", "Red", "Notice", "instead", "of", "Ruin", "?", "let", "us", "face", "it", ",", "Red", "Notice", "will", "be", "just", "another", "action", "comedy", "but", "this", "could", "have", "be", "a", "defining", "role", "for", "she", "."]
(c16-12 / multi-sentence
        :snt1 (c16-0 / suck-03
                     :ARG0 (c16-9 / that)
                     :mod (c16-6 / just))
        :snt2 (c16-11 / blame-01
                      :ARG0 (c16-24 / i)
                      :ARG1 (c16-2 / or
                                   :op1 (c16-22 / person
                                                :name (c16-20 / name
                                                              :op1 "Gal"))
                                   :op2 (c16-8 / anything))
                      :ARG2 (c16-25 / do-02
                                    :ARG1 (c16-15 / notice-03
                                                  :ARG1 (c16-21 / red-02
                                                                :ARG1 c16-15))
                                    :ARG1-of (c16-4 / instead-of-91
                                                    :ARG2 (c16-1 / ruin-01)))
                      :polarity -)
        :polarity (c16-7 / amr-unknown)
        :snt3 (c16-19 / face-01
                      :ARG0 (c16-23 / we)
                      :ARG1 (c16-17 / contrast-01
                                    :ARG1 (c16-10 / comedy
                                                  :mod (c16-5 / action)
                                                  :mod (c16-13 / another)
                                                  :mod c16-6)
                                    :domain c16-15)
                      :ARG2 (c16-14 / possible-01
                                    :ARG1 (c16-16 / role
                                                  :ARG0-of (c16-18 / define-01
                                                                   :ARG1 (c16-3 / she))
                                                  :domain c16-15))
                      :mode imperative))

# ::snt What's the source confirming this?
# ::tokens ["What", "'s", "the", "source", "confirming", "this", "?"]
# ::lemmas ["what", "be", "the", "source", "confirm", "this", "?"]
(c17-3 / source-02
       :ARG0 (c17-0 / amr-unknown)
       :ARG0-of (c17-1 / confirm-01
                       :ARG1 (c17-2 / this)))

# ::snt Wait thats not the one with The Rock is it?
# ::tokens ["Wait", "that", "s", "not", "the", "one", "with", "The", "Rock", "is", "it", "?"]
# ::lemmas ["wait", "that", "s", "not", "the", "one", "with", "the", "Rock", "be", "it", "?"]
(c18-5 / wait-01
       :ARG1 (c18-1 / you)
       :ARG1-of (c18-6 / cause-01
                       :ARG0 (c18-0 / one
                                    :domain (c18-7 / that)
                                    :accompanier (c18-2 / music
                                                        :name (c18-3 / name
                                                                     :op1 "The"
                                                                     :op2 "Rock"))
                                    :ARG1-of (c18-4 / request-confirmation-91)
                                    :polarity -))
       :mode imperative)

# ::snt Oh... I was looking forward to that one
# ::tokens ["Oh", "...", "I", "was", "looking", "forward", "to", "that", "one"]
# ::lemmas ["oh", "...", "i", "be", "look", "forward", "to", "that", "one"]
(c19-2 / look-forward-03
       :ARG0 (c19-3 / i)
       :ARG1 (c19-1 / one
                    :mod (c19-4 / that))
       :mod (c19-0 / oh
                   :mode expressive))

# ::snt True
# ::tokens ["True"]
# ::lemmas ["true"]
(c20-0 / true-01)

# ::snt there is a lot to unpack here.
# ::tokens ["there", "is", "a", "lot", "to", "unpack", "here", "."]
# ::lemmas ["there", "be", "a", "lot", "to", "unpack", "here", "."]
(c21-0 / unpack-01
       :ARG1 (c21-1 / lot)
       :location (c21-2 / here))

# ::snt So what you guys are to Brad Pitt needs his "thirst quench"
# ::tokens ["So", "what", "you", "guys", "are", "to", "Brad", "Pitt", "needs", "his", "\"", "thirst", "quench", "\""]
# ::lemmas ["so", "what", "you", "guy", "be", "to", "Brad", "Pitt", "need", "his", "\"", "thirst", "quench", "\""]
(c22-4 / infer-01
       :ARG1 (c22-5 / thing
                    :beneficiary (c22-0 / you
                                        :mod (c22-6 / guy))
                    :domain (c22-1 / need-01
                                   :ARG0 (c22-3 / person
                                                :name (c22-2 / name
                                                             :op1 "Brad"
                                                             :op2 "Pitt"))
                                   :ARG1 (c22-7 / quench-01
                                                :ARG1 (c22-8 / thirst-01
                                                             :ARG0 c22-3)))))

# ::snt Marbot kok seksi amat?
# ::tokens ["Marbot", "kok", "seksi", "amat", "?"]
# ::lemmas ["Marbot", "kok", "seksi", "amat", "?"]
(c23-4 / amat-91
       :ARG1 (c23-2 / person
                    :name (c23-0 / name
                                 :op1 "Marbot"))
       :ARG2 (c23-1 / kokseksi)
       :polarity (c23-3 / amr-unknown))

# ::snt fucking hell
# ::tokens ["fucking", "hell"]
# ::lemmas ["fucking", "hell"]
(c24-1 / hell
       :mod (c24-0 / fucking)
       :mode expressive)

# ::snt That is so cool ^3^ so much like the art
# ::tokens ["That", "is", "so", "cool", "^3^", "so", "much", "like", "the", "art"]
# ::lemmas ["that", "be", "so", "cool", "^3^", "so", "much", "like", "the", "art"]
(c27-4 / have-degree-91
       :ARG1 (c27-7 / that)
       :ARG2 (c27-6 / cool-04
                    :ARG1 c27-7)
       :ARG3 (c27-2 / so)
       :ARG6 (c27-5 / like-01
                    :ARG0 c27-7
                    :ARG1 (c27-3 / art)
                    :degree (c27-1 / much
                                   :degree (c27-0 / so))))

# ::snt domhnall gleeson. his fucking name is fucking domhnall gleeson
# ::tokens ["domhnall", "gleeson", ".", "his", "fucking", "name", "is", "fucking", "domhnall", "gleeson"]
# ::lemmas ["domhnall", "gleeson", ".", "his", "fucking", "name", "be", "fucking", "domhnall", "gleeson"]
(c28-2 / multi-sentence
       :snt1 (c28-4 / person
                    :name (c28-1 / name
                                 :op1 "domhnall"
                                 :op2 " gleeson"))
       :snt2 (c28-3 / name
                    :mod (c28-0 / fucking
                                :mode expressive)
                    :domain (c28-5 / name
                                   :poss (c28-6 / he))))

# ::snt w
# ::tokens ["w"]
# ::lemmas ["w"]
(c30-1 / person
       :name (c30-0 / name
                    :op1 "w"))

# ::snt And youve never seen Mona Lisa Smile!
# ::tokens ["And", "you", "ve", "never", "seen", "Mona", "Lisa", "Smile", "!"]
# ::lemmas ["and", "you", "ve", "never", "see", "Mona", "Lisa", "smile", "!"]
(c33-5 / and
       :op2 (c33-2 / see-01
                   :ARG0 (c33-0 / you)
                   :ARG1 (c33-4 / person
                                :name (c33-1 / name
                                             :op1 "Mona"
                                             :op2 "Lisa"
                                             :op3 "Smile"))
                   :time (c33-3 / ever)
                   :polarity -))

# ::snt Fuck
# ::tokens ["Fuck"]
# ::lemmas ["fuck"]
(c34-0 / fuck-01
       :mode expressive)

# ::snt She's never been miscast!
# ::tokens ["She", "'s", "never", "been", "miscast", "!"]
# ::lemmas ["she", "be", "never", "be", "miscast", "!"]
(c35-1 / miscast
       :domain (c35-2 / she)
       :time (c35-0 / ever)
       :polarity -)

# ::snt Honestly........... best popular film oscar goes to........
# ::tokens ["Honestly", "...........", "best", "popular", "film", "oscar", "goes", "to", "........"]
# ::lemmas ["honestly", "...........", "good", "popular", "film", "oscar", "go", "to", "........"]
(c36-7 / go-10
       :ARG1 (c36-6 / award
                    :name (c36-1 / name
                                 :op1 "Oscar")
                    :ARG1-of (c36-4 / popular-02
                                    :ARG2-of (c36-3 / have-degree-91
                                                    :ARG1 c36-6
                                                    :ARG3 (c36-2 / most)))
                    :mod (c36-0 / film))
       :ARG1-of (c36-5 / honest-01))

# ::snt She was miscast
# ::tokens ["She", "was", "miscast"]
# ::lemmas ["she", "be", "miscast"]
(c37-0 / miscast
       :domain (c37-1 / she))

# ::snt Cant we still have Julia Roberts
# ::tokens ["Ca", "nt", "we", "still", "have", "Julia", "Roberts"]
# ::lemmas ["can", "not", "we", "still", "have", "Julia", "Roberts"]
(c38-5 / possible-01
       :ARG1 (c38-4 / have-03
                    :ARG0 (c38-6 / we)
                    :ARG1 (c38-1 / person
                                 :name (c38-0 / name
                                              :op1 "Julia"
                                              :op2 "Roberts"))
                    :mod (c38-2 / still))
       :ARG1-of (c38-3 / request-confirmation-91))

# ::snt I thought it was Maya Rudolph at first tbh...
# ::tokens ["I", "thought", "it", "was", "Maya", "Rudolph", "at", "first", "tbh", "..."]
# ::lemmas ["i", "think", "it", "be", "Maya", "Rudolph", "at", "first", "tbh", "..."]
(c39-5 / think-01
       :ARG0 (c39-4 / i)
       :ARG1 (c39-3 / person
                    :name (c39-0 / name
                                 :op1 "Maya"
                                 :op2 "Rudolph"))
       :ARG1-of (c39-2 / honest-01
                       :ARG0 c39-4)
       :time (c39-1 / at-first))

# ::snt No its from June last year
# ::tokens ["No", "its", "from", "June", "last", "year"]
# ::lemmas ["no", "its", "from", "June", "last", "year"]
(c41-0 / be-temporally-at-91
       :ARG1 (c41-3 / it)
       :ARG2 (c41-4 / date-entity
                    :mod (c41-1 / year
                                :mod (c41-2 / last))
                    :month 6)
       :polarity -)

# ::snt Jajaja grazie
# ::tokens ["Jajaja", "grazie"]
# ::lemmas ["Jajaja", "grazie"]
(c42-1 / person
       :name (c42-0 / name
                    :op1 "Jajaja"
                    :op2 " grazie"))

# ::snt Che, sabrn que Jack Frost nones mi nombre real? Por las dudas no digas nada.
# ::tokens ["Che", ",", "sabrn", "que", "Jack", "Frost", "nones", "mi", "nombre", "real", "?", "Por", "las", "dudas", "no", "digas", "nada", "."]
# ::lemmas ["che", ",", "sabrn", "que", "Jack", "Frost", "none", "mi", "nombre", "real", "?", "Por", "las", "duda", "no", "digas", "nada", "."]
(c43-0 / multi-sentence
       :snt1 (c43-8 / che
                    :mode expressive)
       :snt2 (c43-2 / sabrn-00
                    :ARG1 (c43-3 / real-04
                                 :ARG1 (c43-6 / person
                                              :name (c43-1 / name
                                                           :op1 "Jack"
                                                           :op2 "Frost"))
                                 :ARG1 (c43-5 / nombre
                                              :poss (c43-9 / i))
                                 :polarity -)
                    :polarity (c43-10 / amr-unknown))
       :snt3 (c43-12 / digas
                     :mod (c43-7 / nada)
                     :polarity (c43-11 / amr-unknown)
                     :ARG1-of (c43-13 / cause-01
                                      :ARG0 (c43-4 / event))
                     :polarity -))

# ::snt Like this is new England
# ::tokens ["Like", "this", "is", "new", "England"]
# ::lemmas ["like", "this", "be", "new", "England"]
(c44-0 / country
       :name (c44-2 / name
                    :op1 "England")
       :ARG1-of (c44-1 / new-01)
       :domain (c44-3 / this))

# ::snt to levemente
# ::tokens ["to", "levemente"]
# ::lemmas ["to", "levemente"]
(c45-0 / levee)

# ::snt verdade, tem o Samuel tb!
# ::tokens ["verdade", ",", "tem", "o", "Samuel", "tb", "!"]
# ::lemmas ["verdade", ",", "tem", "o", "Samuel", "tb", "!"]
(c46-1 / say-01
       :ARG0 (c46-3 / i)
       :ARG1 (c46-4 / tem)
       :ARG2 (c46-2 / person
                    :name (c46-0 / name
                                 :op1 "Samuel"
                                 :op2 "Tb"))
       :mode expressive)

# ::snt menina HITOU
# ::tokens ["menina", "HITOU"]
# ::lemmas ["menina", "HITOU"]
(c47-1 / person
       :name (c47-0 / name
                    :op1 "Menina"
                    :op2 "Hitou"))

# ::snt Nossa achei o filme timo! Mas gosto gosto n
# ::tokens ["Nossa", "achei", "o", "filme", "timo", "!", "Mas", "gosto", "gosto", "n"]
# ::lemmas ["Nossa", "achei", "o", "filme", "timo", "!", "Mas", "gosto", "gosto", "n"]
(c48-2 / multi-sentence
       :snt1 (c48-3 / have-03
                    :ARG0 (c48-0 / you)
                    :ARG1 (c48-4 / person
                                 :name (c48-1 / name
                                              :op1 "Nossa"))
                    :mode expressive)
       :snt2 (c48-5 / laugh-01
                    :ARG0 (c48-6 / i)
                    :manner (c48-8 / loud)
                    :mode expressive)
       :snt3 (c48-7 / gosto-gosto-noss))

# ::snt Esqueceu do Samuel....falando em christoph waltz, deve ter sido a pior atuao dele nas telinhas....mesmo assim ainda eh muito foda
# ::tokens ["Esqueceu", "do", "Samuel", "....", "falando", "em", "christoph", "waltz", ",", "deve", "ter", "sido", "a", "pior", "atuao", "dele", "nas", "telinhas", "....", "mesmo", "assim", "ainda", "eh", "muito", "foda"]
# ::lemmas ["Esqueceu", "do", "Samuel", "....", "falando", "em", "christoph", "waltz", ",", "deve", "ter", "sido", "a", "pior", "atuao", "dele", "nas", "telinhas", "....", "mesmo", "assim", "ainda", "eh", "muito", "foda"]
(c49-9 / multi-sentence
       :snt1 (c49-21 / do-02
                     :ARG0 (c49-17 / person
                                   :name (c49-16 / name
                                                 :op1 "Samuel"))
                     :ARG1 (c49-10 / person
                                   :name (c49-11 / name
                                                 :op1 "Christoph"
                                                 :op2 "Waltz")))
       :snt2 (c49-3 / have-concession-91
                    :ARG1 (c49-1 / permit-01
                                 :ARG0 (c49-2 / you)
                                 :ARG1 (c49-7 / ter-01
                                              :ARG1 (c49-0 / person
                                                           :ARG1-of (c49-15 / favor-01
                                                                            :ARG0 (c49-5 / person
                                                                                         :name (c49-18 / name
                                                                                                       :op1 "Jesus"
                                                                                                       :op2 "Waltz"))))
                                              :ARG2 (c49-22 / pior-00
                                                            :ARG1 c49-0)
                                              :location (c49-6 / atuao
                                                               :mod (c49-13 / dele)
                                                               :location (c49-12 / company
                                                                                 :name (c49-14 / name
                                                                                               :op1 "Telinhas"))))
                                 :ARG2 c49-2)
                    :snt3 (c49-8 / and
                                 :op1 (c49-4 / assim
                                             :degree (c49-20 / inda))
                                 :op2 (c49-19 / fuck-01
                                              :mode expressive))))

# ::snt ruim nivel nem a beleza deste casal t salvando meu ingresso
# ::tokens ["ruim", "nivel", "nem", "a", "beleza", "deste", "casal", "t", "salvando", "meu", "ingresso"]
# ::lemmas ["ruim", "nivel", "nem", "a", "beleza", "deste", "casal", "t", "salvando", "meu", "ingresso"]
(c50-6 / and
       :op1 (c50-1 / nivel
                   :mode expressive)
       :op2 (c50-0 / beleza
                   :mod (c50-7 / deste
                               :op1 (c50-4 / casal))
                   :mode expressive)
       :op3 (c50-2 / salvage-00
                   :ARG0 (c50-5 / i)
                   :ARG1 (c50-3 / ingresso)
                   :mode expressive))
