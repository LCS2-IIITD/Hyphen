# ::snt He has a grammy he can sing wrotte his own song and many people like his music and then selena who can't sing
# ::tokens ["He", "has", "a", "grammy", "he", "can", "sing", "wrotte", "his", "own", "song", "and", "many", "people", "like", "his", "music", "and", "then", "selena", "who", "ca", "n't", "sing"]
# ::lemmas ["he", "have", "a", "grammy", "he", "can", "sing", "wrotte", "his", "own", "song", "and", "many", "people", "like", "his", "music", "and", "then", "selena", "who", "can", "not", "sing"]
(c1-1 / multi-sentence
      :snt1 (c1-5 / have-03
                  :ARG0 (c1-11 / he)
                  :ARG1 (c1-14 / grammy))
      :snt2 (c1-13 / and
                   :op1 (c1-6 / possible-01
                              :ARG1 (c1-3 / sing-01
                                          :ARG0 c1-11
                                          :ARG1 (c1-0 / song
                                                      :poss c1-11)))
                   :op2 (c1-7 / like-01
                              :ARG0 (c1-2 / person
                                          :quant (c1-8 / many))
                              :ARG1 (c1-15 / music
                                           :poss c1-11))
                   :op3 (c1-16 / sing-01
                               :ARG0 (c1-10 / person
                                            :name (c1-4 / name
                                                        :op1 "Sylena")
                                            :ARG1-of (c1-9 / possible-01
                                                           :polarity -))
                               :time (c1-12 / then))))

# ::snt Still a rat
# ::tokens ["Still", "a", "rat"]
# ::lemmas ["still", "a", "rat"]
(c2-0 / rat
      :mod (c2-1 / still))

# ::snt But "sensitive people" can get hurt by comments like that. Anyways, have a good day!
# ::tokens ["But", "\"", "sensitive", "people", "\"", "can", "get", "hurt", "by", "comments", "like", "that", ".", "Anyways", ",", "have", "a", "good", "day", "!"]
# ::lemmas ["but", "\"", "sensitive", "people", "\"", "can", "get", "hurt", "by", "comment", "like", "that", ".", "anyway", ",", "have", "a", "good", "day", "!"]
(c3-1 / multi-sentence
      :snt1 (c3-9 / contrast-01
                  :ARG2 (c3-8 / possible-01
                              :ARG1 (c3-7 / hurt-01
                                          :ARG0 (c3-11 / thing
                                                       :ARG1-of (c3-14 / comment-01
                                                                       :ARG1-of (c3-4 / resemble-01
                                                                                      :ARG2 (c3-13 / that)))
                                                       :ARG1 (c3-2 / person
                                                                   :ARG1-of (c3-3 / sensitive-03))))))
      :snt2 (c3-10 / have-03
                   :ARG0 (c3-0 / you)
                   :ARG1 (c3-5 / day
                               :ARG1-of (c3-12 / good-02))
                   :mod (c3-6 / anyways)
                   :mode imperative))

# ::snt WHO CARES GET LOW IS OUT GO BUY IT ON ITUNES
# ::tokens ["WHO", "CARES", "GET", "LOW", "IS", "OUT", "GO", "BUY", "IT", "ON", "ITUNES"]
# ::lemmas ["who", "CARES", "get", "low", "be", "out", "GO", "BUY", "IT", "ON", "ITUNES"]
(c5-5 / and
      :op1 (c5-6 / get-01
                 :ARG0 (c5-4 / amr-unknown)
                 :ARG1 (c5-3 / low-04
                             :ARG1 c5-4))
      :op2 (c5-1 / buy-01
                 :ARG0 (c5-2 / you)
                 :ARG1 (c5-7 / it)
                 :location (c5-0 / out)
                 :mode imperative))

# ::snt How is "I don't want To go up my own arse after my first two albums" taken the wrong way? Don't be naive
# ::tokens ["How", "is", "\"", "I", "do", "n't", "want", "To", "go", "up", "my", "own", "arse", "after", "my", "first", "two", "albums", "\"", "taken", "the", "wrong", "way", "?", "Do", "n't", "be", "naive"]
# ::lemmas ["how", "be", "\"", "i", "do", "not", "want", "to", "go", "up", "my", "own", "arse", "after", "my", "first", "two", "album", "\"", "take", "the", "wrong", "way", "?", "do", "not", "be", "naive"]
(c6-2 / multi-sentence
      :snt1 (c6-11 / take-01
                   :ARG1 (c6-4 / say-01
                               :ARG1 (c6-8 / want-01
                                           :ARG0 (c6-10 / i)
                                           :ARG1 (c6-12 / go-01
                                                        :ARG1 c6-10
                                                        :ARG4 (c6-14 / up
                                                                     :op1 (c6-6 / ass
                                                                                :poss c6-10))
                                                        :time (c6-13 / after
                                                                     :op1 (c6-9 / album
                                                                                :poss c6-10
                                                                                :ord (c6-0 / ordinal-entity
                                                                                           :value 1)
                                                                                :quant 2)))
                                           :polarity -))
                   :ARG2 (c6-7 / way
                               :ARG2-of (c6-15 / wrong-04))
                   :manner (c6-3 / amr-unknown))
      :snt2 (c6-5 / naive
                  :domain (c6-1 / you)
                  :polarity -
                  :mode imperative))

# ::snt Keep hating,he's still a king
# ::tokens ["Keep", "hating", ",", "he", "'s", "still", "a", "king"]
# ::lemmas ["keep", "hate", ",", "he", "be", "still", "a", "king"]
(c7-3 / keep-02
      :ARG0 (c7-0 / you)
      :ARG1 (c7-2 / hate-01
                  :ARG0 c7-0)
      :ARG1-of (c7-4 / cause-01
                     :ARG0 (c7-6 / king
                                 :domain (c7-5 / he)
                                 :mod (c7-1 / still)))
      :mode imperative)

# ::snt but what did he said abt gaga?
# ::tokens ["but", "what", "did", "he", "said", "abt", "gaga", "?"]
# ::lemmas ["but", "what", "do", "he", "say", "abt", "gaga", "?"]
(c8-2 / contrast-01
      :ARG2 (c8-0 / say-01
                  :ARG0 (c8-1 / he)
                  :ARG1 (c8-3 / amr-unknown)
                  :ARG3 (c8-4 / gaga)))

# ::snt Divide is still THAT album. Haters can choke
# ::tokens ["Divide", "is", "still", "THAT", "album", ".", "Haters", "can", "choke"]
# ::lemmas ["Divide", "be", "still", "that", "album", ".", "hater", "can", "choke"]
(c9-0 / multi-sentence
      :snt1 (c9-3 / album
                  :domain (c9-8 / divide-02)
                  :mod (c9-2 / still)
                  :mod (c9-7 / that))
      :snt2 (c9-5 / possible-01
                  :ARG1 (c9-6 / choke-01
                              :ARG0 (c9-1 / person
                                          :ARG0-of (c9-4 / hate-01)))))

# ::snt Even if you don't mean it, they can hurt. U know, if he's complaining it's because he doesn't like it
# ::tokens ["Even", "if", "you", "do", "n't", "mean", "it", ",", "they", "can", "hurt", ".", "U", "know", ",", "if", "he", "'s", "complaining", "it", "'s", "because", "he", "does", "n't", "like", "it"]
# ::lemmas ["even", "if", "you", "do", "not", "mean", "it", ",", "they", "can", "hurt", ".", "u", "know", ",", "if", "he", "be", "complain", "it", "be", "because", "he", "do", "not", "like", "it"]
(c10-1 / multi-sentence
       :snt1 (c10-5 / possible-01
                    :ARG1 (c10-4 / hurt-01
                                 :ARG0 (c10-11 / they))
                    :concession (c10-3 / even-if
                                       :op1 (c10-6 / mean-02
                                                   :ARG0 (c10-0 / you)
                                                   :ARG1 (c10-10 / it)
                                                   :polarity -)))
       :snt2 (c10-7 / know-01
                    :ARG0 (c10-2 / i)
                    :ARG1 (c10-8 / cause-01
                                 :ARG0 (c10-12 / dislike-01
                                               :ARG0 (c10-9 / he)
                                               :ARG1 (c10-13 / it))
                                 :ARG1 (c10-14 / complain-01
                                               :ARG0 c10-9
                                               :ARG1 c10-13))))

# ::snt Then don't call it quitting? He seeks to play the victim all the time it's annoying. He's like that Selena song - Bad Liar.
# ::tokens ["Then", "do", "n't", "call", "it", "quitting", "?", "He", "seeks", "to", "play", "the", "victim", "all", "the", "time", "it", "'s", "annoying", ".", "He", "'s", "like", "that", "Selena", "song", "-", "Bad", "Liar", "."]
# ::lemmas ["then", "do", "not", "call", "it", "quit", "?", "he", "seek", "to", "play", "the", "victim", "all", "the", "time", "it", "be", "annoying", ".", "he", "be", "like", "that", "Selena", "song", "-", "Bad", "Liar", "."]
(c11-9 / multi-sentence
       :snt1 (c11-12 / call-01
                     :ARG0 (c11-2 / you)
                     :ARG1 (c11-18 / it)
                     :ARG2 (c11-5 / quit-01)
                     :mod (c11-7 / then)
                     :polarity -
                     :mode imperative)
       :snt2 (c11-0 / seek-01
                    :ARG0 (c11-4 / he)
                    :ARG1 (c11-16 / play-02
                                  :ARG0 c11-4
                                  :ARG1 (c11-3 / victim))
                    :frequency (c11-13 / time
                                       :mod (c11-6 / all))
                    :ARG0-of (c11-8 / annoy-01))
       :snt3 (c11-15 / resemble-01
                     :ARG1 (c11-17 / he)
                     :ARG2 (c11-1 / song
                                  :name (c11-14 / name
                                                :op1 "Bad"
                                                :op2 "Liar")
                                  :source (c11-10 / person
                                                  :name (c11-11 / name
                                                                :op1 "Selena")))))

# ::snt Who is we? does that stand for idiots who can't think for themselves
# ::tokens ["Who", "is", "we", "?", "does", "that", "stand", "for", "idiots", "who", "ca", "n't", "think", "for", "themselves"]
# ::lemmas ["who", "be", "we", "?", "do", "that", "stand", "for", "idiot", "who", "can", "not", "think", "for", "themselves"]
(c12-1 / multi-sentence
       :snt1 (c12-5 / we
                    :domain (c12-3 / amr-unknown))
       :snt2 (c12-2 / stand-08
                    :ARG1 (c12-7 / that)
                    :ARG2 (c12-6 / idiot
                                 :ARG0-of (c12-8 / think-01
                                                 :ARG1-of (c12-4 / possible-01
                                                                 :polarity -)
                                                 :mod (c12-0 / by-oneself)))))

# ::snt Gaga's impact
# ::tokens ["Gaga", "'s", "impact"]
# ::lemmas ["Gaga", "'s", "impact"]
(c13-2 / impact-01
       :ARG0 (c13-1 / product
                    :name (c13-0 / name
                                 :op1 "Gaga")))

# ::snt This piece of shit need to stop
# ::tokens ["This", "piece", "of", "shit", "need", "to", "stop"]
# ::lemmas ["this", "piece", "of", "shit", "need", "to", "stop"]
(c14-1 / need-01
       :ARG1 (c14-2 / stop-01
                    :ARG1 (c14-3 / piece
                                 :mod (c14-0 / shit)
                                 :mod (c14-4 / this))))

# ::snt Anyways is coming
# ::tokens ["Anyways", "is", "coming"]
# ::lemmas ["anyway", "be", "come"]
(c15-0 / come-01
       :ARG1 (c15-1 / anyhow))

# ::snt But he is outselling gags with his album.so I would say he ended gaga and little monsters
# ::tokens ["But", "he", "is", "outselling", "gags", "with", "his", "album.so", "I", "would", "say", "he", "ended", "gaga", "and", "little", "monsters"]
# ::lemmas ["but", "he", "be", "outsell", "gag", "with", "his", "album.so", "i", "would", "say", "he", "end", "gaga", "and", "little", "monster"]
(c17-6 / contrast-01
       :ARG2 (c17-0 / outsell-01
                    :ARG0 (c17-4 / he)
                    :ARG1 (c17-9 / gag)
                    :ARG3 (c17-8 / album
                                 :poss c17-4))
       :ARG1-of (c17-11 / cause-01
                        :ARG0 (c17-2 / say-01
                                     :ARG0 (c17-7 / i)
                                     :ARG1 (c17-3 / end-01
                                                  :ARG0 c17-4
                                                  :ARG1 (c17-10 / and
                                                                :op1 c17-9
                                                                :op2 (c17-1 / monster
                                                                            :mod (c17-5 / little)))))))

# ::snt Well unclarify
# ::tokens ["Well", "unclarify"]
# ::lemmas ["well", "unclarify"]
(c18-1 / unclarify-01
       :mod (c18-0 / well))

# ::snt Nope!
# ::tokens ["Nope", "!"]
# ::lemmas ["nope", "!"]
(c19-0 / nope)

# ::snt Please, just... don't spread the hate. It really hurts me to read mean things like that. Besides that, is your opinion of you dislike him
# ::tokens ["Please", ",", "just", "...", "do", "n't", "spread", "the", "hate", ".", "It", "really", "hurts", "me", "to", "read", "mean", "things", "like", "that", ".", "Besides", "that", ",", "is", "your", "opinion", "of", "you", "dislike", "him"]
# ::lemmas ["please", ",", "just", "...", "do", "not", "spread", "the", "hate", ".", "it", "really", "hurt", "i", "to", "read", "mean", "thing", "like", "that", ".", "besides", "that", ",", "be", "your", "opinion", "of", "you", "dislike", "he"]
(c20-12 / multi-sentence
        :snt1 (c20-0 / spread-03
                     :ARG0 (c20-4 / you)
                     :ARG1 (c20-6 / hate-01)
                     :mod (c20-8 / just)
                     :polarity -
                     :mode imperative
                     :polite +)
        :snt2 (c20-16 / hurt-01
                      :ARG0 (c20-15 / read-01
                                    :ARG0 (c20-17 / i)
                                    :ARG1 (c20-9 / thing
                                                 :ARG1-of (c20-7 / mean-04)
                                                 :ARG1-of (c20-2 / resemble-01
                                                                 :ARG2 (c20-14 / thing
                                                                               :mod (c20-18 / that)))))
                      :ARG1 c20-17
                      :degree (c20-13 / really))
        :snt3 (c20-3 / opine-01
                     :ARG0 (c20-10 / you)
                     :ARG1 (c20-19 / dislike-01
                                   :ARG0 c20-10
                                   :ARG1 (c20-5 / he))
                     :mod (c20-11 / besides
                                  :op1 (c20-1 / that))))

# ::snt People needed a reason to hate on him and he gave it to them
# ::tokens ["People", "needed", "a", "reason", "to", "hate", "on", "him", "and", "he", "gave", "it", "to", "them"]
# ::lemmas ["people", "need", "a", "reason", "to", "hate", "on", "he", "and", "he", "give", "it", "to", "they"]
(c21-6 / and
       :op1 (c21-0 / need-01
                   :ARG0 (c21-3 / person)
                   :ARG1 (c21-1 / reason
                                :ARG0-of (c21-4 / cause-01
                                                :ARG1 (c21-2 / hate-01
                                                             :ARG0 c21-3
                                                             :ARG1 (c21-5 / he)))))
       :op2 (c21-7 / give-01
                   :ARG0 c21-5
                   :ARG1 c21-1
                   :ARG2 c21-3))

# ::snt He was actually very rude about a "certain artist" that was clearly Gaga.
# ::tokens ["He", "was", "actually", "very", "rude", "about", "a", "\"", "certain", "artist", "\"", "that", "was", "clearly", "Gaga", "."]
# ::lemmas ["he", "be", "actually", "very", "rude", "about", "a", "\"", "certain", "artist", "\"", "that", "be", "clearly", "Gaga", "."]
(c22-1 / rude-01
       :ARG1 (c22-3 / he)
       :ARG2 (c22-7 / artist
                    :mod (c22-5 / certain)
                    :domain (c22-4 / person
                                   :name (c22-0 / name
                                                :op1 "Gaga")
                                   :ARG1-of (c22-8 / clear-06)))
       :degree (c22-2 / very)
       :ARG1-of (c22-6 / actual-02))

# ::snt No mention of Gagas beautiful message to him then. Ungrateful rat.
# ::tokens ["No", "mention", "of", "Gagas", "beautiful", "message", "to", "him", "then", ".", "Ungrateful", "rat", "."]
# ::lemmas ["no", "mention", "of", "Gagas", "beautiful", "message", "to", "he", "then", ".", "ungrateful", "rat", "."]
(c23-2 / multi-sentence
       :snt1 (c23-5 / mention-01
                    :ARG1 (c23-8 / message-01
                                 :ARG0 (c23-6 / person
                                              :name (c23-3 / name
                                                           :op1 "Gagas"))
                                 :ARG1 (c23-1 / beautiful-02)
                                 :ARG2 c23-6)
                    :mod (c23-7 / then)
                    :polarity -)
       :snt2 (c23-4 / rat
                    :ARG0-of (c23-0 / frustrate-01)))

# ::snt Rumors are not always true. Ed is not cocky at all. And NOBODY deserves to be bullied... No one deserves it.
# ::tokens ["Rumors", "are", "not", "always", "true", ".", "Ed", "is", "not", "cocky", "at", "all", ".", "And", "NOBODY", "deserves", "to", "be", "bullied", "...", "No", "one", "deserves", "it", "."]
# ::lemmas ["rumor", "be", "not", "always", "true", ".", "Ed", "be", "not", "cocky", "at", "all", ".", "and", "NOBODY", "deserve", "to", "be", "bully", "...", "no", "one", "deserve", "it", "."]
(c24-1 / multi-sentence
       :snt1 (c24-10 / true-01
                     :ARG1 (c24-3 / rumor-01)
                     :time (c24-12 / always)
                     :polarity -)
       :snt2 (c24-7 / cocky
                    :domain (c24-5 / person
                                   :name (c24-2 / name
                                                :op1 "Ed"))
                    :degree (c24-11 / at-all)
                    :polarity -)
       :snt3 (c24-8 / and
                    :op2 (c24-13 / deserve-01
                                 :ARG0 (c24-4 / nobody)
                                 :ARG1 (c24-0 / bully-01
                                              :ARG1 c24-4))
                    :op3 (c24-9 / deserve-01
                                :ARG0 (c24-6 / no-one)
                                :ARG1 c24-0)))

# ::snt i hope he shits his pants again
# ::tokens ["i", "hope", "he", "shits", "his", "pants", "again"]
# ::lemmas ["i", "hope", "he", "shit", "his", "pant", "again"]
(c25-1 / hope-01
       :ARG0 (c25-4 / i)
       :ARG1 (c25-0 / shit-01
                    :ARG0 (c25-3 / he)
                    :location (c25-2 / pants
                                     :poss c25-3)
                    :mod (c25-5 / again)))

# ::snt Does anyone deserve bullying? Really?
# ::tokens ["Does", "anyone", "deserve", "bullying", "?", "Really", "?"]
# ::lemmas ["do", "anyone", "deserve", "bully", "?", "really", "?"]
(c26-1 / multi-sentence
       :snt1 (c26-7 / deserve-01
                    :polarity (c26-6 / amr-unknown)
                    :ARG0 (c26-5 / anyone)
                    :ARG1 (c26-0 / bully-01
                                 :ARG1 c26-5)
                    :polarity (c26-4 / amr-unknown))
       :snt2 (c26-3 / real-04
                    :polarity (c26-2 / amr-unknown)))

# ::snt Ewww
# ::tokens ["Ewww"]
# ::lemmas ["Ewww"]
(c27-0 / ewww
       :mode expressive)

# ::snt He never said a word against her... He would never shade anyone.
# ::tokens ["He", "never", "said", "a", "word", "against", "her", "...", "He", "would", "never", "shade", "anyone", "."]
# ::lemmas ["he", "never", "say", "a", "word", "against", "she", "...", "he", "would", "never", "shade", "anyone", "."]
(c28-1 / multi-sentence
       :snt1 (c28-2 / say-01
                    :ARG0 (c28-4 / he)
                    :ARG1 (c28-5 / word)
                    :ARG3 (c28-0 / she)
                    :time (c28-3 / ever)
                    :polarity -)
       :snt2 (c28-9 / shade-01
                    :ARG0 (c28-6 / he)
                    :ARG1 (c28-7 / anyone)
                    :time (c28-8 / ever)
                    :polarity -))

# ::snt He just played victim to gain sympathy streams!!! We knew it!!
# ::tokens ["He", "just", "played", "victim", "to", "gain", "sympathy", "streams", "!", "!", "!", "We", "knew", "it", "!", "!"]
# ::lemmas ["he", "just", "play", "victim", "to", "gain", "sympathy", "stream", "!", "!", "!", "we", "know", "it", "!", "!"]
(c29-1 / multi-sentence
       :snt1 (c29-5 / play-02
                    :ARG0 (c29-4 / he)
                    :ARG1 (c29-3 / victim)
                    :purpose (c29-10 / gain-02
                                     :ARG0 c29-4
                                     :ARG1 (c29-2 / stream-01
                                                  :ARG1 (c29-0 / sympathy)))
                    :mod (c29-8 / just))
       :snt2 (c29-6 / know-01
                    :ARG0 (c29-7 / we)
                    :ARG1 (c29-9 / it)))

# ::snt He said that everyone was copying him and that he doesn't care about others, he would always win and get on the charts
# ::tokens ["He", "said", "that", "everyone", "was", "copying", "him", "and", "that", "he", "does", "n't", "care", "about", "others", ",", "he", "would", "always", "win", "and", "get", "on", "the", "charts"]
# ::lemmas ["he", "say", "that", "everyone", "be", "copy", "he", "and", "that", "he", "do", "not", "care", "about", "other", ",", "he", "would", "always", "win", "and", "get", "on", "the", "chart"]
(c30-1 / say-01
       :ARG0 (c30-3 / he)
       :ARG1 (c30-10 / and
                     :op1 (c30-5 / copy-01
                                 :ARG0 (c30-2 / everyone)
                                 :ARG1 c30-3)
                     :op2 (c30-12 / care-01
                                  :ARG0 c30-3
                                  :ARG1 (c30-4 / person
                                               :mod (c30-0 / other))
                                  :polarity -)
                     :op3 (c30-9 / and
                                 :op1 (c30-6 / win-01
                                             :ARG0 c30-3
                                             :time (c30-7 / always))
                                 :op2 (c30-11 / get-05
                                              :ARG1 c30-3
                                              :ARG2 (c30-8 / chart)))))

# ::snt gaga is better anyways
# ::tokens ["gaga", "is", "better", "anyways"]
# ::lemmas ["gaga", "be", "well", "anyways"]
(c31-2 / have-degree-91
       :ARG1 (c31-3 / product
                    :name (c31-0 / name
                                 :op1 "Gaga"))
       :ARG2 (c31-5 / good-02
                    :ARG1 c31-3)
       :ARG3 (c31-1 / more)
       :mod (c31-4 / anyways))

# ::snt He's being dramatic for attention
# ::tokens ["He", "'s", "being", "dramatic", "for", "attention"]
# ::lemmas ["he", "be", "be", "dramatic", "for", "attention"]
(c32-0 / dramatic
       :domain (c32-1 / he)
       :purpose (c32-2 / attend-02
                       :ARG1 c32-1))

# ::snt Gaga queen of pop outsold
# ::tokens ["Gaga", "queen", "of", "pop", "outsold"]
# ::lemmas ["Gaga", "queen", "of", "pop", "outsold"]
(c33-3 / queen
       :mod (c33-0 / gaga)
       :topic (c33-2 / pop)
       :ARG1-of (c33-1 / outsold-01))

# ::snt he deserves better
# ::tokens ["he", "deserves", "better"]
# ::lemmas ["he", "deserve", "well"]
(c34-5 / deserve-01
       :ARG0 (c34-1 / he)
       :ARG1 (c34-3 / thing
                    :ARG1-of (c34-2 / have-degree-91
                                    :ARG2 (c34-4 / good-02
                                                 :ARG1 c34-3)
                                    :ARG3 (c34-0 / more))))

# ::snt Taylor is coming
# ::tokens ["Taylor", "is", "coming"]
# ::lemmas ["Taylor", "be", "come"]
(c36-0 / come-01
       :ARG1 (c36-2 / person
                    :name (c36-1 / name
                                 :op1 "Taylor")))

# ::snt Omg the demon's still alive
# ::tokens ["Omg", "the", "demon", "'s", "still", "alive"]
# ::lemmas ["Omg", "the", "demon", "'s", "still", "alive"]
(c37-2 / live-01
       :ARG0 (c37-0 / demon)
       :mod (c37-3 / still)
       :mod (c37-1 / oh-my-god
                   :mode expressive))

# ::snt Who has time for trolls?
# ::tokens ["Who", "has", "time", "for", "trolls", "?"]
# ::lemmas ["who", "have", "time", "for", "troll", "?"]
(c38-0 / have-03
       :ARG0 (c38-3 / amr-unknown)
       :ARG1 (c38-1 / time
                    :beneficiary (c38-2 / troll)))

# ::snt I love love him!!
# ::tokens ["I", "love", "love", "him", "!", "!"]
# ::lemmas ["i", "love", "love", "he", "!", "!"]
(c39-1 / love-01
       :ARG0 (c39-2 / i)
       :ARG1 c39-1
       :ARG0 c39-2
       :ARG1 (c39-0 / he))
