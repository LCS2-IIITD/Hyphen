# ::snt Justin is in better happy condition and unproblematic but media always do trash to him
# ::tokens ["Justin", "is", "in", "better", "happy", "condition", "and", "unproblematic", "but", "media", "always", "do", "trash", "to", "him"]
# ::lemmas ["Justin", "be", "in", "well", "happy", "condition", "and", "unproblematic", "but", "medium", "always", "do", "trash", "to", "he"]
(c1-6 / contrast-01
      :ARG1 (c1-10 / and
                   :op1 (c1-3 / have-degree-91
                              :ARG1 (c1-12 / condition
                                           :domain (c1-4 / person
                                                         :name (c1-0 / name
                                                                     :op1 "Justin"))
                                           :ARG1-of (c1-7 / happy-01))
                              :ARG2 (c1-11 / good-02
                                           :ARG1 c1-12)
                              :ARG3 (c1-1 / more))
                   :op2 (c1-2 / problem
                              :domain c1-4
                              :polarity -))
      :ARG2 (c1-8 / trash-01
                  :ARG0 (c1-5 / media)
                  :ARG1 c1-4
                  :time (c1-9 / always)))

# ::snt give any landlord cause for concern they're bonkers. JB minds his business, goes to church, goes on occasional dates. It's sad that a...
# ::tokens ["give", "any", "landlord", "cause", "for", "concern", "they", "'re", "bonkers", ".", "JB", "minds", "his", "business", ",", "goes", "to", "church", ",", "goes", "on", "occasional", "dates", ".", "It", "'s", "sad", "that", "a", "..."]
# ::lemmas ["give", "any", "landlord", "cause", "for", "concern", "they", "be", "bonker", ".", "JB", "mind", "his", "business", ",", "go", "to", "church", ",", "go", "on", "occasional", "date", ".", "it", "be", "sad", "that", "a", "..."]
(c2-12 / multi-sentence
       :snt1 (c2-9 / give-01
                   :ARG1 (c2-14 / cause-01
                                :ARG0 (c2-17 / person
                                             :ARG0-of (c2-16 / rent-01))
                                :ARG1 (c2-10 / concern-01
                                             :ARG1 (c2-13 / person
                                                          :mod (c2-8 / any)
                                                          :ARG2-of c2-9))))
       :snt2 (c2-7 / and
                   :op1 (c2-6 / mind-01
                              :ARG0 (c2-3 / person
                                          :name (c2-15 / name
                                                       :op1 "JB"))
                              :ARG1 (c2-11 / business
                                           :poss c2-3))
                   :op2 (c2-2 / go-02
                              :ARG0 c2-3
                              :ARG4 (c2-1 / church))
                   :op3 (c2-4 / go-02
                              :ARG0 c2-3
                              :ARG4 (c2-19 / date-02
                                           :frequency (c2-5 / occasional))))
       :snt3 (c2-0 / sad-02
                   :ARG1 (c2-18 / it)))

# ::snt leaseholder when Meek Mill had his party, if anyone believes JB's near constant friends (the pastors, Patrick Schwarznegger etc) would
# ::tokens ["leaseholder", "when", "Meek", "Mill", "had", "his", "party", ",", "if", "anyone", "believes", "JB", "'s", "near", "constant", "friends", "(", "the", "pastors", ",", "Patrick", "Schwarznegger", "etc", ")", "would"]
# ::lemmas ["leaseholder", "when", "Meek", "Mill", "have", "his", "party", ",", "if", "anyone", "believe", "JB", "'s", "near", "constant", "friend", "(", "the", "pastor", ",", "Patrick", "Schwarznegger", "etc", ")", "would"]
(c3-7 / person
      :ARG0-of (c3-6 / hold-01
                     :ARG1 (c3-8 / lease)
                     :time (c3-3 / party-01
                                 :ARG0 (c3-15 / person
                                              :name (c3-2 / name
                                                          :op1 "Meek"
                                                          :op2 "Mill"))))
      :condition (c3-1 / believe-01
                       :ARG0 (c3-4 / anyone)
                       :ARG1 (c3-11 / person
                                    :ARG0-of (c3-13 / have-rel-role-91
                                                    :ARG1 (c3-14 / person
                                                                 :name (c3-9 / name
                                                                             :op1 "JB"))
                                                    :ARG2 (c3-0 / friend
                                                                :ARG1-of (c3-10 / near-02))
                                                    :example (c3-16 / and
                                                                    :op1 (c3-17 / person
                                                                                :name (c3-12 / name
                                                                                             :op1 "Patrick"
                                                                                             :op2 "Schwarnegger"))
                                                                    :op2 (c3-5 / et-cetera))))))

# ::snt Quite apart from the fact that JB hasn't had any issues for the entire time he rented his Lake Toluca lake house, and wasn't even the...
# ::tokens ["Quite", "apart", "from", "the", "fact", "that", "JB", "has", "n't", "had", "any", "issues", "for", "the", "entire", "time", "he", "rented", "his", "Lake", "Toluca", "lake", "house", ",", "and", "was", "n't", "even", "the", "..."]
# ::lemmas ["quite", "apart", "from", "the", "fact", "that", "JB", "have", "not", "have", "any", "issue", "for", "the", "entire", "time", "he", "rent", "his", "Lake", "Toluca", "lake", "house", ",", "and", "be", "not", "even", "the", "..."]
(c4-2 / except-01
      :ARG1 (c4-10 / and
                   :op1 (c4-9 / issue-02
                              :ARG1 (c4-4 / person
                                          :name (c4-0 / name
                                                      :op1 "JB"))
                              :time (c4-1 / rent-01
                                          :ARG0 c4-4
                                          :ARG1 (c4-3 / house
                                                      :poss c4-4
                                                      :location (c4-5 / lake
                                                                      :name (c4-6 / name
                                                                                  :op1 "Lake"
                                                                                  :op2 "Toluca"))))
                              :mod (c4-12 / entire)
                              :polarity -)
                   :op2 (c4-7 / event
                              :mod c4-4
                              :mod (c4-8 / even)
                              :polarity -))
      :degree (c4-11 / quite))

# ::snt MENTIRA
# ::tokens ["MENTIRA"]
# ::lemmas ["MENTIRA"]
(c5-1 / law
      :name (c5-0 / name
                  :op1 "MENTIRA"))

# ::snt SUCH A BAD LIAR
# ::tokens ["SUCH", "A", "BAD", "LIAR"]
# ::lemmas ["SUCH", "a", "BAD", "LIAR"]
(c6-2 / lie-08
      :ARG0 (c6-0 / person
                  :name (c6-1 / name
                              :op1 "SUCH"))
      :ARG1-of (c6-3 / bad-07))
