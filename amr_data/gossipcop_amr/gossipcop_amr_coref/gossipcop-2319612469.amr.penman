# ::snt Truly this is the golden age of cinema.
# ::tokens ["Truly", "this", "is", "the", "golden", "age", "of", "cinema", "."]
# ::lemmas ["truly", "this", "be", "the", "golden", "age", "of", "cinema", "."]
(c1-0 / age
      :mod (c1-3 / golden)
      :time-of (c1-1 / cinema)
      :domain (c1-2 / this)
      :mod (c1-4 / truly))

# ::snt Bit of a Bryan Colangelo situation.
# ::tokens ["Bit", "of", "a", "Bryan", "Colangelo", "situation", "."]
# ::lemmas ["bit", "of", "a", "Bryan", "Colangelo", "situation", "."]
(c2-3 / situation
      :mod (c2-2 / person
                 :name (c2-0 / name
                             :op1 "Bryan"
                             :op2 "Colangelo"))
      :degree (c2-1 / bit))

# ::snt I thought someone did an analysis that showed that a bunch of fake accounts were bolstering Gottis audience numbers. Almost certainly being done by the filmmakers themselves or their affiliates, I would think.
# ::tokens ["I", "thought", "someone", "did", "an", "analysis", "that", "showed", "that", "a", "bunch", "of", "fake", "accounts", "were", "bolstering", "Gottis", "audience", "numbers", ".", "Almost", "certainly", "being", "done", "by", "the", "filmmakers", "themselves", "or", "their", "affiliates", ",", "I", "would", "think", "."]
# ::lemmas ["i", "think", "someone", "do", "an", "analysis", "that", "show", "that", "a", "bunch", "of", "fake", "account", "be", "bolster", "Gottis", "audience", "number", ".", "almost", "certainly", "be", "do", "by", "the", "filmmaker", "themselves", "or", "their", "affiliate", ",", "i", "would", "think", "."]
(c3-11 / multi-sentence
       :snt1 (c3-9 / think-01
                   :ARG0 (c3-23 / i)
                   :ARG1 (c3-24 / do-02
                                :ARG0 (c3-0 / someone)
                                :ARG1 (c3-8 / analyze-01
                                            :ARG0 c3-0
                                            :ARG0-of (c3-2 / show-01
                                                           :ARG1 (c3-10 / bolster-01
                                                                        :ARG0 (c3-7 / account
                                                                                    :quant (c3-1 / bunch)
                                                                                    :ARG1-of (c3-18 / fake-02))
                                                                        :ARG1 (c3-19 / number
                                                                                     :quant-of (c3-6 / audience
                                                                                                     :poss (c3-20 / person
                                                                                                                  :name (c3-14 / name
                                                                                                                               :op1 "Gottis")))))))))
       :snt2 (c3-17 / think-01
                    :ARG0 (c3-4 / i)
                    :ARG1 (c3-16 / do-02
                                 :ARG0 (c3-3 / or
                                             :op1 (c3-12 / person
                                                         :ARG0-of (c3-5 / make-01
                                                                        :ARG1 (c3-21 / film)))
                                             :op2 (c3-13 / affiliate-01
                                                         :ARG1 c3-12))
                                 :mod (c3-15 / certain
                                             :mod (c3-22 / almost)))))

# ::snt Is anyone attacking critics over Gotti aside from the folks who made Gotti?
# ::tokens ["Is", "anyone", "attacking", "critics", "over", "Gotti", "aside", "from", "the", "folks", "who", "made", "Gotti", "?"]
# ::lemmas ["be", "anyone", "attack", "critic", "over", "Gotti", "aside", "from", "the", "folk", "who", "make", "Gotti", "?"]
(c4-0 / oppose-01
      :ARG0 (c4-9 / anyone)
      :ARG1 (c4-6 / person
                  :ARG0-of (c4-7 / criticize-01
                                 :ARG1 (c4-3 / person
                                             :name (c4-2 / name
                                                         :op1 "Gotti"))))
      :polarity (c4-8 / amr-unknown)
      :ARG2-of (c4-5 / except-01
                     :ARG1 (c4-1 / folk
                                 :ARG0-of (c4-4 / make-01
                                                :ARG1 c4-3))))

# ::snt People are begging for a nonexistent cut at that.
# ::tokens ["People", "are", "begging", "for", "a", "nonexistent", "cut", "at", "that", "."]
# ::lemmas ["people", "be", "beg", "for", "a", "nonexistent", "cut", "at", "that", "."]
(c5-0 / beg-01
      :ARG0 (c5-2 / person)
      :ARG2 (c5-3 / cut-02
                  :ARG2 (c5-4 / that)
                  :ARG1-of (c5-1 / exist-01
                                 :polarity -)))

# ::snt This is a proper film if you've ever watched them mafia documentaries
# ::tokens ["This", "is", "a", "proper", "film", "if", "you", "'ve", "ever", "watched", "them", "mafia", "documentaries"]
# ::lemmas ["this", "be", "a", "proper", "film", "if", "you", "'ve", "ever", "watch", "they", "mafia", "documentary"]
(c6-0 / film
      :mod (c6-4 / proper)
      :domain (c6-6 / this)
      :condition (c6-5 / watch-01
                       :ARG0 (c6-1 / you)
                       :ARG1 (c6-7 / documentary
                                   :mod (c6-2 / mafia)
                                   :poss (c6-8 / they))
                       :time (c6-3 / ever)))

# ::snt me in life
# ::tokens ["me", "in", "life"]
# ::lemmas ["i", "in", "life"]
(c7-1 / i
      :prep-in (c7-0 / life))

# ::snt Exactly. Thank you for validating me. Was worried that i was a dummy.
# ::tokens ["Exactly", ".", "Thank", "you", "for", "validating", "me", ".", "Was", "worried", "that", "i", "was", "a", "dummy", "."]
# ::lemmas ["exactly", ".", "thank", "you", "for", "validate", "i", ".", "be", "worried", "that", "i", "be", "a", "dummy", "."]
(c8-1 / multi-sentence
      :snt1 (c8-4 / exact)
      :snt2 (c8-7 / thank-01
                  :ARG0 (c8-6 / i)
                  :ARG1 (c8-0 / you)
                  :ARG2 (c8-3 / validate-01
                              :ARG0 c8-0
                              :ARG1 c8-6))
      :snt3 (c8-5 / worry-01
                  :ARG0 (c8-2 / i)
                  :ARG1 (c8-8 / dummy
                              :domain c8-2)))

# ::snt Ok bye
# ::tokens ["Ok", "bye"]
# ::lemmas ["ok", "bye"]
(c9-0 / okay-01
      :ARG2 (c9-1 / bye))

# ::snt Pet Shop Boys?
# ::tokens ["Pet", "Shop", "Boys", "?"]
# ::lemmas ["Pet", "Shop", "Boys", "?"]
(c10-0 / company
       :name (c10-1 / name
                    :op1 "Pet"
                    :op2 "Shop"
                    :op3 "Boys")
       :polarity (c10-2 / amr-unknown))

# ::snt Oh wow. Brutal murder with Silent Night playing. Bra-fucking-vo
# ::tokens ["Oh", "wow", ".", "Brutal", "murder", "with", "Silent", "Night", "playing", ".", "Bra", "-", "fucking", "-", "vo"]
# ::lemmas ["oh", "wow", ".", "brutal", "murder", "with", "Silent", "Night", "playing", ".", "bra", "-", "fucking", "-", "vo"]
(c11-3 / multi-sentence
       :snt1 (c11-8 / wow
                    :mod (c11-0 / oh)
                    :mode expressive)
       :snt2 (c11-6 / murder-01
                    :mod (c11-2 / Brutal)
                    :accompanier (c11-7 / play-11
                                        :ARG1 (c11-9 / music
                                                     :name (c11-4 / name
                                                                  :op1 "Silent"
                                                                  :op2 "Night"))))
       :snt3 (c11-5 / voila
                    :mod (c11-1 / fucking
                                :mode expressive)
                    :mode expressive))

# ::snt Its % exposition. Show me dont tell me you gabbagool
# ::tokens ["Its", "%", "exposition", ".", "Show", "me", "do", "nt", "tell", "me", "you", "gabbagool"]
# ::lemmas ["its", "%", "exposition", ".", "show", "i", "do", "not", "tell", "i", "you", "gabbagool"]
(c12-1 / multi-sentence
       :snt1 (c12-4 / exposition
                    :degree (c12-5 / percentage-entity
                                   :value 40)
                    :domain (c12-6 / it))
       :snt2 (c12-2 / show-01
                    :ARG0 (c12-0 / you
                                 :mod (c12-8 / gabbagool))
                    :ARG1 (c12-7 / tell-01
                                 :ARG0 c12-0
                                 :ARG2 (c12-3 / i
                                              :ARG2-of c12-2))
                    :mode imperative
                    :polarity -))

# ::snt min in. Im a pretty bright guy and i have no fucking idea whats happening.
# ::tokens ["min", "in", ".", "I", "m", "a", "pretty", "bright", "guy", "and", "i", "have", "no", "fucking", "idea", "what", "s", "happening", "."]
# ::lemmas ["min", "in", ".", "i", "m", "a", "pretty", "bright", "guy", "and", "i", "have", "no", "fucking", "idea", "what", "s", "happen", "."]
(c13-2 / multi-sentence
       :snt1 (c13-1 / be-located-at-91
                    :ARG2 (c13-8 / inside))
       :snt2 (c13-9 / and
                    :op1 (c13-10 / guy
                                 :ARG1-of (c13-5 / bright-03
                                                 :degree (c13-6 / pretty))
                                 :domain (c13-3 / i))
                    :op2 (c13-7 / have-03
                                :ARG0 c13-3
                                :ARG1 (c13-11 / idea
                                              :topic (c13-4 / event)
                                              :mod (c13-0 / fuck))
                                :polarity -)))

# ::snt Waiting for that shot of all of their pictures on the wall, connected by pieces of string....
# ::tokens ["Waiting", "for", "that", "shot", "of", "all", "of", "their", "pictures", "on", "the", "wall", ",", "connected", "by", "pieces", "of", "string", "...."]
# ::lemmas ["wait", "for", "that", "shot", "of", "all", "of", "their", "picture", "on", "the", "wall", ",", "connect", "by", "piece", "of", "string", "...."]
(c14-5 / wait-01
       :ARG2 (c14-2 / shoot-01
                    :ARG1 (c14-3 / picture
                                 :mod (c14-8 / all)
                                 :poss (c14-7 / they)
                                 :location (c14-4 / wall)
                                 :ARG1-of (c14-6 / connect-01
                                                 :ARG2 (c14-1 / piece
                                                              :mod (c14-0 / string))))
                    :mod (c14-9 / that)))

# ::snt What this movie misses from every film its trying to lift from - not a single likable character
# ::tokens ["What", "this", "movie", "misses", "from", "every", "film", "its", "trying", "to", "lift", "from", "-", "not", "a", "single", "likable", "character"]
# ::lemmas ["what", "this", "movie", "miss", "from", "every", "film", "its", "try", "to", "lift", "from", "-", "not", "a", "single", "likable", "character"]
(c15-1 / miss-02
       :ARG0 (c15-4 / movie
                    :mod (c15-7 / this))
       :ARG1 (c15-6 / character
                    :ARG1-of (c15-5 / likable-02
                                    :polarity -)
                    :ARG1-of (c15-2 / single-02))
       :source (c15-0 / film
                      :mod (c15-3 / every)
                      :ARG1-of (c15-8 / lift-02
                                      :ARG0 c15-4
                                      :ARG1-of (c15-9 / try-01
                                                      :ARG0 c15-4))))

# ::snt This movie needs Michael Rapaport
# ::tokens ["This", "movie", "needs", "Michael", "Rapaport"]
# ::lemmas ["this", "movie", "need", "Michael", "Rapaport"]
(c16-1 / need-01
       :ARG0 (c16-0 / movie
                    :mod (c16-4 / this))
       :ARG1 (c16-3 / person
                    :name (c16-2 / name
                                 :op1 "Michael"
                                 :op2 "Rapaport")))

# ::snt He literally bit his knuckle to convey grief
# ::tokens ["He", "literally", "bit", "his", "knuckle", "to", "convey", "grief"]
# ::lemmas ["he", "literally", "bite", "his", "knuckle", "to", "convey", "grief"]
(c17-0 / bite-01
       :ARG0 (c17-1 / he
                    :part (c17-2 / knuckle
                                 :ARG1-of c17-0))
       :manner (c17-3 / literal)
       :purpose (c17-4 / convey-01
                       :ARG0 c17-1
                       :ARG1 (c17-5 / grief)))

# ::snt This thing is like a non-linear high school improv exercise where the audience prompt was pizzeria
# ::tokens ["This", "thing", "is", "like", "a", "non", "-", "linear", "high", "school", "improv", "exercise", "where", "the", "audience", "prompt", "was", "pizzeria"]
# ::lemmas ["this", "thing", "be", "like", "a", "non", "-", "linear", "high", "school", "improv", "exercise", "where", "the", "audience", "prompt", "be", "pizzeria"]
(c18-1 / resemble-01
       :ARG1 (c18-7 / thing
                    :mod (c18-9 / this))
       :ARG2 (c18-3 / exercise-02
                    :ARG1 (c18-8 / improvise-01)
                    :mod (c18-5 / linear
                                :polarity -)
                    :mod (c18-4 / high-school)
                    :location-of (c18-6 / prompt
                                        :domain (c18-0 / pizzeria)
                                        :beneficiary (c18-2 / audience))))

# ::snt When in doubt, say your own characters full name while pointing
# ::tokens ["When", "in", "doubt", ",", "say", "your", "own", "characters", "full", "name", "while", "pointing"]
# ::lemmas ["when", "in", "doubt", ",", "say", "your", "own", "character", "full", "name", "while", "point"]
(c19-3 / say-01
       :ARG0 (c19-1 / you)
       :ARG1 (c19-2 / name
                    :poss c19-1
                    :mod (c19-0 / full))
       :time (c19-4 / point-01
                    :ARG0 c19-1)
       :time (c19-5 / doubt-01
                    :ARG1 c19-1)
       :mode imperative)

# ::snt Note: add sepia and nostalgic music to simulate substance
# ::tokens ["Note", ":", "add", "sepia", "and", "nostalgic", "music", "to", "simulate", "substance"]
# ::lemmas ["note", ":", "add", "sepia", "and", "nostalgic", "music", "to", "simulate", "substance"]
(c20-2 / note-01
       :ARG1 (c20-7 / add-02
                    :ARG1 (c20-6 / and
                                 :op1 (c20-1 / music
                                             :mod (c20-3 / sepia))
                                 :op2 (c20-4 / music
                                             :mod (c20-5 / nostalgia)))
                    :purpose (c20-0 / simulate-01
                                    :ARG1 (c20-8 / substance))))

# ::snt I think Wendy the Snapple Lady was the dialect coach
# ::tokens ["I", "think", "Wendy", "the", "Snapple", "Lady", "was", "the", "dialect", "coach"]
# ::lemmas ["i", "think", "Wendy", "the", "Snapple", "Lady", "be", "the", "dialect", "coach"]
(c21-5 / think-01
       :ARG0 (c21-4 / i)
       :ARG1 (c21-2 / person
                    :ARG0-of (c21-3 / coach-01
                                    :ARG2 (c21-6 / dialect))
                    :domain (c21-1 / person
                                   :name (c21-0 / name
                                                :op1 "Wendy"
                                                :op2 "the"
                                                :op3 "Snapple"
                                                :op4 "Lady"))))

# ::snt Im not even Italian and Im offended
# ::tokens ["I", "m", "not", "even", "Italian", "and", "I", "m", "offended"]
# ::lemmas ["i", "m", "not", "even", "Italian", "and", "i", "m", "offend"]
(c22-6 / and
       :op1 (c22-3 / person
                   :mod (c22-4 / country
                               :name (c22-1 / name
                                            :op1 "Italy"))
                   :domain (c22-5 / i)
                   :mod (c22-2 / even)
                   :polarity -)
       :op2 (c22-0 / offend-01
                   :ARG1 c22-5))

# ::snt Is that the guy from impractical Jokers in the shinebox ripoff scene?
# ::tokens ["Is", "that", "the", "guy", "from", "impractical", "Jokers", "in", "the", "shinebox", "ripoff", "scene", "?"]
# ::lemmas ["be", "that", "the", "guy", "from", "impractical", "Jokers", "in", "the", "shinebox", "ripoff", "scene", "?"]
(c23-7 / guy
       :polarity (c23-6 / amr-unknown)
       :source (c23-2 / scene
                      :mod (c23-3 / rip-off-04
                                  :ARG1 (c23-4 / product
                                               :name (c23-0 / name
                                                            :op1 "Sh shinebox")))
                      :mod (c23-1 / practical-03
                                  :polarity -))
       :domain (c23-5 / that))

# ::snt is this music...pitbull?
# ::tokens ["is", "this", "music", "...", "pitbull", "?"]
# ::lemmas ["be", "this", "music", "...", "pitbull", "?"]
(c24-1 / music
       :mod (c24-3 / this)
       :polarity (c24-0 / amr-unknown)
       :mod (c24-2 / pitbull))

# ::snt Starting off by breaking the th wall. Bold choice, Dead Pool.
# ::tokens ["Starting", "off", "by", "breaking", "the", "th", "wall", ".", "Bold", "choice", ",", "Dead", "Pool", "."]
# ::lemmas ["start", "off", "by", "break", "the", "th", "wall", ".", "Bold", "choice", ",", "Dead", "Pool", "."]
(c25-1 / multi-sentence
       :snt1 (c25-2 / start-off-02
                    :ARG2 (c25-0 / break-01
                                 :ARG1 (c25-5 / wall
                                              :mod (c25-7 / th))))
       :snt2 (c25-6 / choose-01
                    :mod (c25-3 / bold))
       :snt3 (c25-4 / pool
                    :ARG1-of (c25-8 / die-01)))

# ::snt Johnny Jnr: Feds say i get closureGotti: Closure?..Thats a word for over-educated,under-intelligent mothaf**kersLast i saw Travolta was playing Bob Shapiro in OJ Simpson's season on American Crime Story.Realize i miss him.
# ::tokens ["Johnny", "Jnr", ":", "Feds", "say", "i", "get", "closureGotti", ":", "Closure?", "..", "Thats", "a", "word", "for", "over", "-", "educated", ",", "under", "-", "intelligent", "mothaf**kersLast", "i", "saw", "Travolta", "was", "playing", "Bob", "Shapiro", "in", "OJ", "Simpson", "'s", "season", "on", "American", "Crime", "Story", ".", "Realize", "i", "miss", "him", "."]
# ::lemmas ["Johnny", "Jnr", ":", "Feds", "say", "i", "get", "closureGotti", ":", "Closure?", "..", "that", "a", "word", "for", "over", "-", "educate", ",", "under", "-", "intelligent", "mothaf**kerslast", "i", "see", "Travolta", "be", "play", "Bob", "Shapiro", "in", "OJ", "Simpson", "'s", "season", "on", "American", "Crime", "Story", ".", "realize", "i", "miss", "he", "."]
(c26-13 / multi-sentence
        :snt1 (c26-0 / say-01
                     :ARG0 (c26-22 / person
                                   :name (c26-18 / name
                                                 :op1 "Johnny"
                                                 :op2 "Jnr"))
                     :ARG1 (c26-10 / get-01
                                   :ARG0 (c26-25 / i)
                                   :ARG1 (c26-16 / close-01)))
        :snt2 (c26-5 / say-01
                     :ARG0 (c26-14 / person
                                   :name (c26-15 / name
                                                 :op1 "Gotti"))
                     :ARG1 (c26-11 / close-01)
                     :polarity (c26-9 / amr-unknown))
        :snt3 (c26-4 / see-01
                     :ARG0 (c26-6 / i)
                     :ARG1 (c26-3 / play-02
                                  :ARG0 (c26-2 / person
                                               :name (c26-23 / name
                                                             :op1 "Travolta"))
                                  :ARG1 (c26-8 / person
                                               :name (c26-17 / name
                                                             :op1 "Bob"
                                                             :op2 "Shapiro"))
                                  :time (c26-19 / season
                                                :mod (c26-12 / broadcast-program
                                                             :name (c26-24 / name
                                                                           :op1 "American"
                                                                           :op2 "Crime"
                                                                           :op3 "Story"))
                                                :poss (c26-26 / person
                                                              :name (c26-20 / name
                                                                            :op1 "OJ"
                                                                            :op2 "Simpson"))))
                     :mod (c26-1 / last))
        :snt4 (c26-21 / realize-01
                      :ARG0 c26-6
                      :ARG1 (c26-7 / miss-01
                                   :ARG0 c26-6
                                   :ARG1 c26-2)))

# ::snt aggiornamento: lhanno proprio fatto a pezzettini sto film, dicono praticamente che tutto una merda, una brutta copia di altri film e lunica cosa salvabile di questo scempio linterpretazione di John Travoltama dicono anche una roba tipo sei vecchio quindi vatteneio boh
# ::tokens ["aggiornamento", ":", "lhanno", "proprio", "fatto", "a", "pezzettini", "sto", "film", ",", "dicono", "praticamente", "che", "tutto", "una", "merda", ",", "una", "brutta", "copia", "di", "altri", "film", "e", "lunica", "cosa", "salvabile", "di", "questo", "scempio", "linterpretazione", "di", "John", "Travoltama", "dicono", "anche", "una", "roba", "tipo", "sei", "vecchio", "quindi", "vatteneio", "boh"]
# ::lemmas ["aggiornamento", ":", "lhanno", "proprio", "fatto", "a", "pezzettini", "sto", "film", ",", "dicono", "praticamente", "che", "tutto", "una", "merda", ",", "una", "brutta", "copia", "di", "altri", "film", "e", "lunica", "cosa", "salvabile", "di", "questo", "scempio", "linterpretazione", "di", "John", "Travoltama", "dicono", "anche", "una", "roba", "tipo", "sei", "vecchio", "quindi", "vatteneio", "boh"]
(c27-17 / multi-sentence
        :snt1 (c27-20 / come-01
                      :ARG1 (c27-27 / person
                                    :ARG0-of (c27-24 / fuck-01))
                      :ARG3 (c27-28 / film
                                    :mod (c27-18 / pezzettini))
                      :mod (c27-6 / proprio))
        :snt2 (c27-32 / dicono
                      :ARG1-of (c27-15 / cause-01
                                       :ARG0 (c27-21 / dicono
                                                     :manner (c27-3 / praticamente
                                                                    :mod (c27-12 / tutto
                                                                                 :op1 (c27-9 / merda)))))
                      :snt3 (c27-11 / and
                                    :op1 (c27-5 / copia
                                                :mod (c27-16 / brutta)
                                                :mod (c27-29 / film
                                                             :mod (c27-10 / altri)))
                                    :op2 (c27-2 / lunica
                                                :mod (c27-23 / cosa
                                                             :mod (c27-0 / salvabile))
                                                :topic (c27-13 / quest-01
                                                               :ARG1 (c27-30 / interpret-01
                                                                             :ARG1 (c27-14 / person
                                                                                           :name (c27-25 / name
                                                                                                         :op1 "John"
                                                                                                         :op2 "Travoltama"))))))
                      :snt4 (c27-19 / dicono
                                    :ARG0 (c27-33 / person
                                                  :name c27-25
                                                  :op1 "John"
                                                  :op2 "Travoltama")
                                    :mode expressive)
                      :ARG1-of c27-15
                      :ARG0 (c27-22 / thing
                                    :ARG1-of (c27-31 / tip-05)
                                    :mod (c27-26 / rob-01)
                                    :location (c27-7 / sei
                                                     :mod (c27-8 / vecchio))
                                    :ARG1-of (c27-4 / vatteneio
                                                    :mod c27-4
                                                    :mod (c27-1 / boh
                                                                :mode expressive)))))

# ::snt Yeah, that's totally a link I'm going to click on.
# ::tokens ["Yeah", ",", "that", "'s", "totally", "a", "link", "I", "'m", "going", "to", "click", "on", "."]
# ::lemmas ["yeah", ",", "that", "be", "totally", "a", "link", "i", "be", "go", "to", "click", "on", "."]
(c28-2 / link
       :domain (c28-5 / that)
       :ARG1-of (c28-3 / click-01
                       :ARG0 (c28-4 / i)
                       :ARG1-of (c28-1 / intend-01
                                       :ARG0 c28-4))
       :mod (c28-6 / total)
       :mod (c28-0 / yeah
                   :mode expressive))

# ::snt I'm sure Amazon will sell the dvd if it gets released but they dropped it like a hot potato at the first sniff of a lawsuit. I'm not sure Gilliam is up to another Battle of Brazil. But, fingers crossed
# ::tokens ["I", "'m", "sure", "Amazon", "will", "sell", "the", "dvd", "if", "it", "gets", "released", "but", "they", "dropped", "it", "like", "a", "hot", "potato", "at", "the", "first", "sniff", "of", "a", "lawsuit", ".", "I", "'m", "not", "sure", "Gilliam", "is", "up", "to", "another", "Battle", "of", "Brazil", ".", "But", ",", "fingers", "crossed"]
# ::lemmas ["i", "be", "sure", "Amazon", "will", "sell", "the", "dvd", "if", "it", "gets", "release", "but", "they", "drop", "it", "like", "a", "hot", "potato", "at", "the", "first", "sniff", "of", "a", "lawsuit", ".", "i", "be", "not", "sure", "Gilliam", "be", "up", "to", "another", "Battle", "of", "Brazil", ".", "but", ",", "finger", "cross"]
(c29-14 / multi-sentence
        :snt1 (c29-17 / contrast-01
                      :ARG1 (c29-0 / sure-02
                                   :ARG0 (c29-26 / i)
                                   :ARG1 (c29-5 / sell-01
                                                :ARG0 (c29-12 / company
                                                              :name (c29-22 / name
                                                                            :op1 "Amazon"))
                                                :ARG1 (c29-27 / disc
                                                              :mod (c29-18 / digital)
                                                              :mod (c29-9 / versatile))
                                                :condition (c29-24 / release-01
                                                                   :ARG1 c29-27)))
                      :ARG2 (c29-16 / drop-01
                                    :ARG0 c29-12
                                    :ARG1 c29-27
                                    :ARG1-of (c29-3 / resemble-01
                                                    :ARG2 (c29-25 / potato
                                                                  :ARG1-of (c29-10 / hot-05)))
                                    :time (c29-4 / sniff-01
                                                 :ARG1 (c29-23 / sue-02)
                                                 :ord (c29-6 / ordinal-entity
                                                             :value 1))))
        :snt2 (c29-1 / sure-02
                     :ARG0 (c29-8 / i)
                     :ARG1 (c29-19 / up-to
                                   :op1 (c29-13 / battle-01
                                                :ARG1 (c29-2 / country
                                                             :name (c29-15 / name
                                                                           :op1 "Brazil"))
                                                :mod (c29-11 / another)))
                     :polarity -)
        :snt3 (c29-20 / contrast-01
                      :ARG2 (c29-7 / cross-01
                                   :ARG1 (c29-21 / finger))))

# ::snt I'm sure Bezos will find a way....
# ::tokens ["I", "'m", "sure", "Bezos", "will", "find", "a", "way", "...."]
# ::lemmas ["i", "be", "sure", "Bezos", "will", "find", "a", "way", "...."]
(c30-2 / sure-02
       :ARG0 (c30-5 / i)
       :ARG1 (c30-0 / find-01
                    :ARG0 (c30-3 / person
                                 :name (c30-1 / name
                                              :op1 "Bezos"))
                    :ARG1 (c30-4 / way)))

# ::snt Because it was a High Court ruling for Paulo Branca over Gilliam, I'm not sure he has anywhere left to turn. Branca is so busy suing everyone involved in the Cannes screening that releasing the movie anytime soon is unlikely (if ever)
# ::tokens ["Because", "it", "was", "a", "High", "Court", "ruling", "for", "Paulo", "Branca", "over", "Gilliam", ",", "I", "'m", "not", "sure", "he", "has", "anywhere", "left", "to", "turn", ".", "Branca", "is", "so", "busy", "suing", "everyone", "involved", "in", "the", "Cannes", "screening", "that", "releasing", "the", "movie", "anytime", "soon", "is", "unlikely", "(", "if", "ever", ")"]
# ::lemmas ["because", "it", "be", "a", "High", "Court", "ruling", "for", "Paulo", "Branca", "over", "Gilliam", ",", "i", "be", "not", "sure", "he", "have", "anywhere", "leave", "to", "turn", ".", "Branca", "be", "so", "busy", "sue", "everyone", "involve", "in", "the", "Cannes", "screen", "that", "release", "the", "movie", "anytime", "soon", "be", "unlikely", "(", "if", "ever", ")"]
(c31-16 / multi-sentence
        :snt1 (c31-19 / cause-01
                      :ARG0 (c31-23 / rule-01
                                    :ARG0 (c31-11 / government-organization
                                                  :name (c31-21 / name
                                                                :op1 "High"
                                                                :op2 "Court"))
                                    :ARG2 (c31-25 / person
                                                  :name (c31-18 / name
                                                                :op1 "Paulo"
                                                                :op2 "Branca"))
                                    :ARG3 (c31-17 / person
                                                  :name (c31-26 / name
                                                                :op1 "Gillian")))
                      :ARG1 (c31-0 / sure-02
                                   :ARG0 (c31-29 / i)
                                   :ARG1 (c31-7 / have-03
                                                :ARG0 c31-25
                                                :ARG1 (c31-10 / anywhere
                                                              :ARG1-of (c31-1 / leave-17
                                                                              :ARG0 c31-25
                                                                              :ARG2 (c31-9 / turn-01
                                                                                           :ARG0 c31-25))))
                                   :polarity -))
        :snt2 (c31-27 / have-degree-91
                      :ARG1 (c31-2 / person
                                   :name (c31-20 / name
                                                 :op1 "Branca"))
                      :ARG2 (c31-15 / busy-01
                                    :ARG1 c31-2
                                    :ARG2 (c31-5 / sue-02
                                                 :ARG0 c31-2
                                                 :ARG1 (c31-24 / everyone
                                                               :ARG1-of (c31-6 / involve-01
                                                                               :ARG2 (c31-4 / screen-03
                                                                                            :location (c31-14 / city
                                                                                                              :name (c31-28 / name
                                                                                                                            :op1 "Cannes")))))))
                      :ARG3 (c31-22 / so)
                      :ARG6 (c31-3 / release-01
                                   :ARG1 (c31-8 / movie)
                                   :ARG1-of (c31-12 / likely-01
                                                    :condition (c31-13 / ever)
                                                    :polarity -))))

# ::snt I hope so.
# ::tokens ["I", "hope", "so", "."]
# ::lemmas ["i", "hope", "so", "."]
(c32-0 / hope-01
       :ARG0 (c32-1 / i)
       :ARG1 (c32-2 / so))

# ::snt I am ready.
# ::tokens ["I", "am", "ready", "."]
# ::lemmas ["i", "be", "ready", "."]
(c33-0 / ready-01
       :ARG1 (c33-1 / i))

# ::snt Also, Gotti is fucking painful man
# ::tokens ["Also", ",", "Gotti", "is", "fucking", "painful", "man"]
# ::lemmas ["also", ",", "Gotti", "be", "fucking", "painful", "man"]
(c34-4 / say-01
       :ARG1 (c34-5 / pain-01
                    :ARG0 (c34-3 / person
                                 :name (c34-2 / name
                                              :op1 "Gotti"))
                    :mod (c34-1 / man)
                    :mod (c34-0 / fucking)
                    :mod (c34-6 / also))
       :ARG2 c34-3)

# ::snt After Gilliam lost all rights to TMWKDQ and it lost its US distributor (Amazon), do you think we'll ever see it?
# ::tokens ["After", "Gilliam", "lost", "all", "rights", "to", "TMWKDQ", "and", "it", "lost", "its", "US", "distributor", "(", "Amazon", ")", ",", "do", "you", "think", "we", "'ll", "ever", "see", "it", "?"]
# ::lemmas ["after", "Gilliam", "lose", "all", "right", "to", "TMWKDQ", "and", "it", "lose", "its", "US", "distributor", "(", "Amazon", ")", ",", "do", "you", "think", "we", "'ll", "ever", "see", "it", "?"]
(c35-8 / think-01
       :ARG0 (c35-4 / you)
       :ARG1 (c35-0 / see-01
                    :ARG0 (c35-20 / we)
                    :ARG1 (c35-21 / it)
                    :time (c35-18 / ever))
       :polarity (c35-7 / amr-unknown)
       :time (c35-6 / after
                    :op1 (c35-5 / and
                                :op1 (c35-1 / lose-02
                                            :ARG0 (c35-13 / company
                                                          :name (c35-16 / name
                                                                        :op1 "Gillard"))
                                            :ARG1 (c35-17 / right-05
                                                          :ARG1 c35-13
                                                          :ARG2 (c35-10 / company
                                                                        :name (c35-12 / name
                                                                                      :op1 "TMWKDQ"))
                                                          :mod (c35-11 / all)))
                                :op2 (c35-9 / lose-02
                                            :ARG0 c35-13
                                            :ARG1 (c35-2 / company
                                                         :ARG0-of (c35-22 / distribute-01
                                                                          :ARG1 c35-21)
                                                         :mod (c35-15 / country
                                                                      :name (c35-19 / name
                                                                                    :op1 "US"))
                                                         :domain (c35-3 / company
                                                                        :name (c35-14 / name
                                                                                      :op1 "Amazon")))))))

# ::snt For very different reasons!
# ::tokens ["For", "very", "different", "reasons", "!"]
# ::lemmas ["for", "very", "different", "reason", "!"]
(c36-0 / cause-01
       :ARG0 (c36-3 / reason
                    :ARG1-of (c36-2 / differ-02
                                    :degree (c36-1 / very))))

# ::snt Hmm
# ::tokens ["Hmm"]
# ::lemmas ["hmm"]
(c37-0 / hmm)

# ::snt Trust but verify
# ::tokens ["Trust", "but", "verify"]
# ::lemmas ["trust", "but", "verify"]
(c38-0 / contrast-01
       :ARG1 (c38-2 / trust-01)
       :ARG2 (c38-1 / verify-01))

# ::snt No faith in my review, Joseph? I'm the guy that awarded Spotlight movie of the year before it was nominated + told folks Wind River was the most underrated movie of '17 before it won Best Overlooked Film.
# ::tokens ["No", "faith", "in", "my", "review", ",", "Joseph", "?", "I", "'m", "the", "guy", "that", "awarded", "Spotlight", "movie", "of", "the", "year", "before", "it", "was", "nominated", "+", "told", "folks", "Wind", "River", "was", "the", "most", "underrated", "movie", "of", "'", "17", "before", "it", "won", "Best", "Overlooked", "Film", "."]
# ::lemmas ["no", "faith", "in", "my", "review", ",", "Joseph", "?", "i", "be", "the", "guy", "that", "award", "spotlight", "movie", "of", "the", "year", "before", "it", "be", "nominate", "+", "tell", "folk", "Wind", "River", "be", "the", "most", "underrated", "movie", "of", "'", "17", "before", "it", "win", "Best", "Overlooked", "Film", "."]
(c39-9 / multi-sentence
       :snt1 (c39-0 / say-01
                    :ARG0 (c39-25 / i)
                    :ARG1 (c39-17 / faith
                                  :topic (c39-19 / review-01
                                                 :ARG0 c39-25)
                                  :polarity -)
                    :ARG2 (c39-20 / person
                                  :name (c39-18 / name
                                                :op1 "Joseph")))
       :snt2 (c39-7 / guy
                    :domain c39-25
                    :ARG0-of (c39-6 / award-01
                                    :ARG1 (c39-2 / movie
                                                 :name (c39-11 / name
                                                               :op1 "Spotlight")
                                                 :time (c39-8 / before
                                                              :op1 (c39-21 / nominate-01
                                                                           :ARG1 c39-2)))
                                    :ARG2 (c39-10 / person))
                    :ARG0-of (c39-5 / tell-01
                                    :ARG1 (c39-3 / have-degree-91
                                                 :ARG1 (c39-16 / movie
                                                               :name (c39-13 / name
                                                                             :op1 "Wind"
                                                                             :op2 "River"))
                                                 :ARG2 (c39-15 / under)
                                                 :ARG3 (c39-12 / most)
                                                 :ARG5 (c39-14 / movie
                                                               :time (c39-26 / date-entity
                                                                             :year 17))
                                                 :time (c39-1 / before
                                                              :op1 (c39-23 / win-01
                                                                           :ARG0 c39-16
                                                                           :ARG1 (c39-4 / award
                                                                                        :name (c39-24 / name
                                                                                                      :op1 "Best"
                                                                                                      :op2 "Overlooked"
                                                                                                      :op3 "Film")))))
                                    :ARG2 (c39-22 / folk))))

# ::snt Let me know if you get a chance
# ::tokens ["Let", "me", "know", "if", "you", "get", "a", "chance"]
# ::lemmas ["let", "i", "know", "if", "you", "get", "a", "chance"]
(c40-1 / let-know-07
       :ARG0 (c40-0 / you)
       :ARG1 (c40-3 / i)
       :ARG2 (c40-4 / truth-value
                    :polarity-of (c40-5 / get-01
                                        :ARG0 c40-0
                                        :ARG1 (c40-2 / chance-02
                                                     :ARG0 c40-0)))
       :mode imperative)

# ::snt Have you seen it yet?
# ::tokens ["Have", "you", "seen", "it", "yet", "?"]
# ::lemmas ["have", "you", "see", "it", "yet", "?"]
(c41-1 / see-01
       :polarity (c41-3 / amr-unknown)
       :ARG0 (c41-0 / you)
       :ARG1 (c41-2 / it)
       :time (c41-4 / yet))

# ::snt I'll be watching it... I'm actually really looking forward to it. is no slouch. My favourite Gotti movie to date is from with Armand Assante, I'm expecting to be as good and then some.
# ::tokens ["I", "'ll", "be", "watching", "it", "...", "I", "'m", "actually", "really", "looking", "forward", "to", "it", ".", "is", "no", "slouch", ".", "My", "favourite", "Gotti", "movie", "to", "date", "is", "from", "with", "Armand", "Assante", ",", "I", "'m", "expecting", "to", "be", "as", "good", "and", "then", "some", "."]
# ::lemmas ["i", "'ll", "be", "watch", "it", "...", "i", "be", "actually", "really", "look", "forward", "to", "it", ".", "be", "no", "slouch", ".", "my", "favourite", "Gotti", "movie", "to", "date", "be", "from", "with", "Armand", "Assante", ",", "i", "be", "expect", "to", "be", "as", "good", "and", "then", "some", "."]
(c42-15 / multi-sentence
        :snt1 (c42-25 / watch-01
                      :ARG0 (c42-26 / i)
                      :ARG1 (c42-5 / it))
        :snt2 (c42-2 / look-forward-03
                     :ARG0 (c42-14 / i)
                     :ARG1 (c42-0 / it)
                     :ARG1-of (c42-22 / real-04)
                     :ARG1-of (c42-11 / actual-02))
        :snt3 (c42-1 / slouch
                     :domain c42-1
                     :polarity -)
        :snt4 (c42-9 / and
                     :op1 (c42-3 / work-of-art
                                 :name (c42-21 / name
                                               :op1 "Gotti")
                                 :ARG1-of (c42-20 / favor-01
                                                  :ARG0 (c42-18 / i)
                                                  :time (c42-10 / to-date))
                                 :source c42-3
                                 :name (c42-16 / name
                                               :op1 "Armand"
                                               :op2 "Assante")))
        :op2 (c42-23 / expect-01
                     :ARG0 c42-18
                     :ARG1 (c42-8 / and
                                  :op1 (c42-12 / good-02
                                               :ARG1 (c42-6 / movie)
                                               :ARG2-of (c42-7 / have-degree-91
                                                               :ARG1 c42-6
                                                               :ARG3 (c42-13 / equal)
                                                               :ARG4 (c42-19 / movie
                                                                             :name (c42-24 / name
                                                                                           :op1 "Gotti"))))
                                  :op2 (c42-4 / some
                                              :mod (c42-17 / then)))))

# ::snt Hey Payne. This movie cant be as bad as Holi her in the tookus incident in the bathroom right?
# ::tokens ["Hey", "Payne", ".", "This", "movie", "ca", "nt", "be", "as", "bad", "as", "Holi", "her", "in", "the", "tookus", "incident", "in", "the", "bathroom", "right", "?"]
# ::lemmas ["hey", "Payne", ".", "this", "movie", "can", "not", "be", "as", "bad", "as", "Holi", "she", "in", "the", "tookus", "incident", "in", "the", "bathroom", "right", "?"]
(c43-3 / say-01
       :ARG1 (c43-5 / request-confirmation-91
                    :ARG1 (c43-7 / have-degree-91
                                 :ARG1 (c43-1 / movie
                                              :mod (c43-14 / this))
                                 :ARG2 (c43-0 / bad-07
                                              :ARG1 c43-1)
                                 :ARG3 (c43-6 / equal)
                                 :ARG4 (c43-8 / person
                                              :name (c43-2 / name
                                                           :op1 "Holi"))
                                 :ARG1-of (c43-12 / cause-01
                                                  :ARG0 (c43-13 / incident
                                                                :mod (c43-4 / person
                                                                            :name (c43-9 / name
                                                                                         :op1 "Takingus"))
                                                                :location (c43-10 / bathroom))))
                    :ARG2 (c43-15 / person
                                  :name (c43-11 / name
                                                :op1 "Payne")
                                  :ARG2-of c43-3)))

# ::snt Ha. Billy Walsh has quite the role in Gotti
# ::tokens ["Ha", ".", "Billy", "Walsh", "has", "quite", "the", "role", "in", "Gotti"]
# ::lemmas ["ha", ".", "Billy", "Walsh", "have", "quite", "the", "role", "in", "Gotti"]
(c44-1 / multi-sentence
       :snt1 (c44-4 / ha
                    :mode expressive)
       :snt2 (c44-7 / have-03
                    :ARG0 (c44-5 / person
                                 :name (c44-0 / name
                                              :op1 "Billy"
                                              :op2 "Walsh"))
                    :ARG1 (c44-3 / role
                                 :topic (c44-2 / person
                                               :name (c44-6 / name
                                                            :op1 "Gotti"))
                                 :degree (c44-8 / quite))))

# ::snt Dude. Come on. Medellin was Billy Walshs fault. Sure KC could have maintained a tighter leash but thats on Walsh
# ::tokens ["Dude", ".", "Come", "on", ".", "Medellin", "was", "Billy", "Walshs", "fault", ".", "Sure", "KC", "could", "have", "maintained", "a", "tighter", "leash", "but", "that", "s", "on", "Walsh"]
# ::lemmas ["dude", ".", "come", "on", ".", "Medellin", "be", "Billy", "Walshs", "fault", ".", "sure", "KC", "could", "have", "maintain", "a", "tight", "leash", "but", "that", "s", "on", "Walsh"]
(c45-9 / multi-sentence
       :snt1 (c45-20 / dude)
       :snt2 (c45-12 / come-on-25
                     :ARG1 (c45-4 / you)
                     :mode imperative)
       :snt3 (c45-16 / fault-01
                     :ARG1 (c45-18 / person
                                   :name (c45-17 / name
                                                 :op1 "Billy"
                                                 :op2 "Walshs"))
                     :ARG2 (c45-8 / city
                                  :name (c45-11 / name
                                                :op1 "Medellin")))
       :snt4 (c45-2 / contrast-01
                    :ARG1 (c45-10 / possible-01
                                  :ARG1 (c45-5 / maintain-01
                                               :ARG0 (c45-15 / city
                                                             :name (c45-19 / name
                                                                           :op1 "KC"))
                                               :ARG1 (c45-1 / leash-01
                                                            :ARG1 c45-15
                                                            :ARG1-of (c45-6 / have-degree-91
                                                                            :ARG2 (c45-7 / tight-05
                                                                                         :ARG1 c45-1)
                                                                            :ARG3 (c45-14 / more))))
                                  :ARG1-of (c45-0 / sure-02))
                    :ARG2 (c45-3 / person
                                 :name (c45-13 / name
                                               :op1 "Walsh"))))

# ::snt haha
# ::tokens ["haha"]
# ::lemmas ["haha"]
(c46-0 / haha
       :mode expressive)

# ::snt listeners must know me well if they start providing warnings of how many pages a book is
# ::tokens ["listeners", "must", "know", "me", "well", "if", "they", "start", "providing", "warnings", "of", "how", "many", "pages", "a", "book", "is"]
# ::lemmas ["listener", "must", "know", "i", "well", "if", "they", "start", "provide", "warning", "of", "how", "many", "page", "a", "book", "be"]
(c47-10 / infer-01
        :ARG1 (c47-7 / know-02
                     :ARG0 (c47-5 / person
                                  :ARG0-of (c47-6 / listen-01))
                     :ARG1 (c47-4 / i)
                     :degree (c47-9 / well))
        :condition (c47-3 / start-01
                          :ARG0 c47-5
                          :ARG1 (c47-2 / provide-01
                                       :ARG0 c47-5
                                       :ARG1 (c47-8 / warn-01
                                                    :ARG0 c47-5
                                                    :ARG1 (c47-1 / number
                                                                 :quant-of (c47-11 / page
                                                                                   :part-of (c47-0 / book)))))))

# ::snt Haha, Im about % complete. Its a page book. Starts in the early s and Im currently in the Gotti years. So far, its been really good and extremely informational.
# ::tokens ["Haha", ",", "I", "m", "about", "%", "complete", ".", "Its", "a", "page", "book", ".", "Starts", "in", "the", "early", "s", "and", "I", "m", "currently", "in", "the", "Gotti", "years", ".", "So", "far", ",", "its", "been", "really", "good", "and", "extremely", "informational", "."]
# ::lemmas ["Haha", ",", "i", "m", "about", "%", "complete", ".", "its", "a", "page", "book", ".", "start", "in", "the", "early", "s", "and", "i", "m", "currently", "in", "the", "Gotti", "years", ".", "so", "far", ",", "its", "be", "really", "good", "and", "extremely", "informational", "."]
(c48-18 / multi-sentence
        :snt1 (c48-20 / complete-01
                      :ARG1 (c48-26 / i)
                      :degree (c48-12 / about
                                      :op1 (c48-25 / percentage-entity
                                                   :value 90))
                      :mod (c48-9 / haha
                                  :mode expressive))
        :snt2 (c48-17 / book
                      :mod (c48-19 / page)
                      :domain (c48-8 / it))
        :snt3 (c48-11 / and
                      :op1 (c48-1 / start-01
                                  :ARG1 (c48-2 / book)
                                  :time (c48-24 / early
                                                :op1 (c48-6 / s)))
                      :op2 (c48-4 / be-temporally-at-91
                                  :ARG1 (c48-15 / i)
                                  :ARG2 (c48-7 / year
                                               :mod (c48-3 / person
                                                           :name (c48-22 / name
                                                                         :op1 "Gotti")))
                                  :time (c48-16 / current)))
        :snt4 (c48-10 / and
                      :op1 (c48-13 / good-02
                                   :ARG1 (c48-0 / it)
                                   :degree (c48-23 / really))
                      :op2 (c48-21 / inform-01
                                   :ARG0 c48-0
                                   :degree (c48-14 / extreme)
                                   :time (c48-5 / so-far)
                                   :polarity -)))

# ::snt Appreciate the documentary tip, Keegan
# ::tokens ["Appreciate", "the", "documentary", "tip", ",", "Keegan"]
# ::lemmas ["appreciate", "the", "documentary", "tip", ",", "Keegan"]
(c49-1 / say-01
       :ARG0 (c49-4 / i)
       :ARG1 (c49-5 / appreciate-02
                    :ARG0 (c49-2 / person
                                 :name (c49-0 / name
                                              :op1 "Keegan"))
                    :ARG1 (c49-3 / tip-05
                                 :ARG1 (c49-6 / documentary)))
       :ARG2 c49-2)

# ::snt trying to figure out book reccos for Payne has become a major source of consternation; I know if I flop the first one I lose all credibility going forward
# ::tokens ["trying", "to", "figure", "out", "book", "reccos", "for", "Payne", "has", "become", "a", "major", "source", "of", "consternation", ";", "I", "know", "if", "I", "flop", "the", "first", "one", "I", "lose", "all", "credibility", "going", "forward"]
# ::lemmas ["try", "to", "figure", "out", "book", "recco", "for", "Payne", "have", "become", "a", "major", "source", "of", "consternation", ";", "i", "know", "if", "i", "flop", "the", "first", "one", "i", "lose", "all", "credibility", "go", "forward"]
(c50-12 / multi-sentence
        :snt1 (c50-11 / become-01
                      :ARG1 (c50-8 / try-01
                                   :ARG1 (c50-14 / figure-out-05
                                                 :ARG1 (c50-16 / recco
                                                               :mod (c50-1 / book)
                                                               :beneficiary (c50-17 / person
                                                                                    :name (c50-15 / name
                                                                                                  :op1 "Payne")))))
                      :ARG2 (c50-0 / source-02
                                   :ARG1 (c50-13 / consternate-01)
                                   :ARG1-of (c50-5 / major-02)))
        :snt2 (c50-6 / know-01
                     :ARG0 (c50-20 / i)
                     :ARG1 (c50-2 / lose-02
                                  :ARG0 c50-20
                                  :ARG1 (c50-10 / credibility
                                                :mod (c50-7 / all))
                                  :time (c50-9 / go-06
                                               :ARG0 c50-20
                                               :ARG2 (c50-18 / forward))
                                  :condition (c50-19 / flip-01
                                                     :ARG0 c50-20
                                                     :ARG1 (c50-3 / book
                                                                  :ord (c50-4 / ordinal-entity
                                                                              :value 1))))))
