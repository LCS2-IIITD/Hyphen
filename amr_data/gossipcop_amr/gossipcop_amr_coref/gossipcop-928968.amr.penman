# ::snt I been ready girl since all those tragic deaths
# ::tokens ["I", "been", "ready", "girl", "since", "all", "those", "tragic", "deaths"]
# ::lemmas ["i", "be", "ready", "girl", "since", "all", "those", "tragic", "death"]
(c1-1 / say-01
      :ARG1 (c1-2 / ready-02
                  :ARG1 (c1-4 / i)
                  :time (c1-0 / since
                              :op1 (c1-7 / die-01
                                         :mod (c1-5 / tragic)
                                         :mod (c1-3 / all)
                                         :mod (c1-8 / that))))
      :ARG2 (c1-6 / girl))

# ::snt Damnnnnnnnnnnnn oooh yes i have to prepare myself
# ::tokens ["Damnnnnnnnnnnnn", "oooh", "yes", "i", "have", "to", "prepare", "myself"]
# ::lemmas ["damnnnnnnnnnnnn", "oooh", "yes", "i", "have", "to", "prepare", "myself"]
(c2-1 / obligate-01
      :ARG1 (c2-3 / i)
      :ARG2 (c2-2 / prepare-02
                  :ARG0 c2-3
                  :ARG1 c2-3)
      :mod (c2-0 / oh
                 :mode expressive))

# ::snt Shut up!!!
# ::tokens ["Shut", "up", "!", "!", "!"]
# ::lemmas ["shut", "up", "!", "!", "!"]
(c3-1 / shut-up-06
      :ARG0 (c3-0 / you
                  :ARG1-of c3-1)
      :mode imperative)

# ::snt Yasssss
# ::tokens ["Yasssss"]
# ::lemmas ["yasssss"]
(c4-0 / yasssss
      :mode expressive)

# ::snt You are going to be on Greys Kin? If so do you know the air date yet?
# ::tokens ["You", "are", "going", "to", "be", "on", "Greys", "Kin", "?", "If", "so", "do", "you", "know", "the", "air", "date", "yet", "?"]
# ::lemmas ["you", "be", "go", "to", "be", "on", "Greys", "Kin", "?", "if", "so", "do", "you", "know", "the", "air", "date", "yet", "?"]
(c5-3 / multi-sentence
      :snt1 (c5-8 / go-02
                  :ARG0 (c5-1 / you)
                  :ARG4 (c5-0 / broadcast-program
                              :name (c5-2 / name
                                          :op1 "Greys"
                                          :op2 "Kin")))
      :snt2 (c5-5 / know-01
                  :ARG0 (c5-10 / you)
                  :ARG1 (c5-9 / date
                              :mod (c5-7 / air))
                  :polarity (c5-6 / amr-unknown)
                  :condition (c5-4 / so)))

# ::snt How come we're not seeing you anymore?
# ::tokens ["How", "come", "we", "'re", "not", "seeing", "you", "anymore", "?"]
# ::lemmas ["how", "come", "we", "be", "not", "see", "you", "anymore", "?"]
(c6-2 / cause-01
      :ARG0 (c6-5 / amr-unknown)
      :ARG1 (c6-1 / see-01
                  :ARG0 (c6-3 / we)
                  :ARG1 (c6-0 / you)
                  :time (c6-4 / anymore)
                  :polarity -))

# ::snt Well General Hospital is a drama and it has been on years.
# ::tokens ["Well", "General", "Hospital", "is", "a", "drama", "and", "it", "has", "been", "on", "years", "."]
# ::lemmas ["well", "General", "Hospital", "be", "a", "drama", "and", "it", "have", "be", "on", "years", "."]
(c8-7 / and
      :op1 (c8-8 / drama
                 :domain (c8-3 / hospital
                               :name (c8-1 / name
                                           :op1 "General"
                                           :op2 "Hospital"))
                 :mod (c8-5 / well))
      :op2 (c8-4 / pass-03
                 :ARG1 (c8-2 / multiple
                             :op1 (c8-6 / temporal-quantity
                                        :unit (c8-0 / year)
                                        :quant 1))))

# ::snt Seriously
# ::tokens ["Seriously"]
# ::lemmas ["seriously"]
(c9-0 / serious-01)

# ::snt Awesome!
# ::tokens ["Awesome", "!"]
# ::lemmas ["Awesome", "!"]
(c10-0 / awe-01
       :mode expressive)

# ::snt Yo ms bebe
# ::tokens ["Yo", "ms", "bebe"]
# ::lemmas ["Yo", "ms", "bebe"]
(c11-1 / bebe-temporally-at-91
       :ARG1 (c11-2 / yo)
       :ARG2 (c11-0 / day))

# ::snt Isnt that SVU?
# ::tokens ["Is", "nt", "that", "SVU", "?"]
# ::lemmas ["be", "not", "that", "SVU", "?"]
(c13-2 / publication
       :name (c13-1 / name
                    :op1 "SVU")
       :domain (c13-3 / that
                      :polarity -)
       :polarity (c13-0 / amr-unknown))

# ::snt Just stoppppppp
# ::tokens ["Just", "stoppppppp"]
# ::lemmas ["just", "stoppppppp"]
(c14-1 / stop-01
       :mod (c14-0 / just))

# ::snt Wow! I cannot believe I have been glued to Greys for seasons every Thursday night! Keep em coming and we will continue to watch!
# ::tokens ["Wow", "!", "I", "can", "not", "believe", "I", "have", "been", "glued", "to", "Greys", "for", "seasons", "every", "Thursday", "night", "!", "Keep", "em", "coming", "and", "we", "will", "continue", "to", "watch", "!"]
# ::lemmas ["wow", "!", "i", "can", "not", "believe", "i", "have", "be", "glue", "to", "Greys", "for", "season", "every", "Thursday", "night", "!", "keep", "em", "come", "and", "we", "will", "continue", "to", "watch", "!"]
(c15-9 / multi-sentence
       :snt1 (c15-16 / possible-01
                     :ARG1 (c15-8 / believe-01
                                  :ARG0 (c15-18 / i)
                                  :ARG1 (c15-6 / glued-01
                                               :ARG1 c15-18
                                               :ARG2 (c15-10 / product
                                                             :name (c15-14 / name
                                                                           :op1 "Greys"))
                                               :duration (c15-0 / season)
                                               :frequency (c15-15 / rate-entity-91
                                                                  :ARG4 (c15-19 / date-entity
                                                                                :weekday (c15-5 / thursday)
                                                                                :dayperiod (c15-11 / night)))))
                     :polarity -)
       :snt2 (c15-4 / and
                    :op1 (c15-3 / keep-02
                                :ARG0 (c15-2 / you)
                                :ARG1 (c15-12 / come-01
                                              :ARG1 (c15-13 / they))
                                :mode imperative)
                    :op2 (c15-7 / continue-01
                                :ARG0 (c15-17 / we)
                                :ARG1 (c15-1 / watch-01
                                             :ARG0 c15-17))))

# ::snt Yeah love it
# ::tokens ["Yeah", "love", "it"]
# ::lemmas ["yeah", "love", "it"]
(c16-1 / love-01
       :ARG1 (c16-2 / it)
       :mod (c16-0 / yeah))

# ::snt Te extraoooo
# ::tokens ["Te", "extraoooo"]
# ::lemmas ["te", "extraoooo"]
(c17-0 / extra
       :mode expressive)

# ::snt No, it started as a mid-season replacement on ABC
# ::tokens ["No", ",", "it", "started", "as", "a", "mid", "-", "season", "replacement", "on", "ABC"]
# ::lemmas ["no", ",", "it", "start", "as", "a", "mid", "-", "season", "replacement", "on", "ABC"]
(c19-4 / start-01
       :ARG1 (c19-7 / it)
       :ARG2 (c19-5 / replace-01
                    :ARG1 c19-7
                    :time (c19-0 / season
                                 :mod (c19-2 / mid))
                    :medium (c19-1 / broadcast-program
                                   :name (c19-3 / name
                                                :op1 "ABC")))
       :mod (c19-6 / no))

# ::snt Youre delusional.
# ::tokens ["You", "re", "delusional", "."]
# ::lemmas ["you", "re", "delusional", "."]
(c20-0 / delusional
       :domain (c20-1 / you))

# ::snt I guess you told me? FYI Sarah and Jessica left the show on their own. They werent fired. Jessica is focusing on family and Sarah is working on another project.
# ::tokens ["I", "guess", "you", "told", "me", "?", "FYI", "Sarah", "and", "Jessica", "left", "the", "show", "on", "their", "own", ".", "They", "were", "nt", "fired", ".", "Jessica", "is", "focusing", "on", "family", "and", "Sarah", "is", "working", "on", "another", "project", "."]
# ::lemmas ["i", "guess", "you", "tell", "i", "?", "FYI", "Sarah", "and", "Jessica", "leave", "the", "show", "on", "their", "own", ".", "they", "be", "not", "fire", ".", "Jessica", "be", "focus", "on", "family", "and", "Sarah", "be", "work", "on", "another", "project", "."]
(c21-13 / multi-sentence
        :snt1 (c21-10 / guess-01
                      :ARG0 (c21-24 / i)
                      :ARG1 (c21-9 / tell-01
                                   :ARG0 (c21-4 / you)
                                   :ARG2 (c21-5 / i))
                      :polarity (c21-8 / amr-unknown))
        :snt2 (c21-1 / leave-11
                     :ARG0 (c21-7 / and
                                  :op1 (c21-19 / person
                                               :name (c21-18 / name
                                                             :op1 "Sarah"))
                                  :op2 (c21-14 / person
                                               :name (c21-15 / name
                                                             :op1 "Jessica")))
                     :ARG1 (c21-0 / show-04)
                     :mod (c21-12 / by-oneself)
                     :purpose (c21-11 / inform-01
                                      :ARG1 c21-7))
        :snt3 (c21-17 / fire-02
                      :ARG1 (c21-16 / they)
                      :polarity -)
        :snt4 (c21-6 / and
                     :op1 (c21-20 / focus-01
                                  :ARG0 (c21-3 / person
                                               :name (c21-21 / name
                                                             :op1 "Jessica"))
                                  :ARG2 (c21-22 / family))
                     :op2 (c21-23 / work-01
                                  :ARG0 c21-3
                                  :ARG1 (c21-2 / project
                                               :mod (c21-25 / another)))))

# ::snt Series low multiple times this season. Go read some articles.
# ::tokens ["Series", "low", "multiple", "times", "this", "season", ".", "Go", "read", "some", "articles", "."]
# ::lemmas ["series", "low", "multiple", "time", "this", "season", ".", "go", "read", "some", "article", "."]
(c22-2 / multi-sentence
       :snt1 (c22-6 / low-04
                    :ARG1 (c22-3 / series)
                    :frequency (c22-4 / rate-entity-91
                                      :ARG4 (c22-0 / season
                                                   :mod (c22-7 / this))))
       :snt2 (c22-8 / go-05
                    :ARG0 (c22-1 / you)
                    :ARG1 (c22-9 / read-01
                                 :ARG0 c22-1
                                 :ARG1 (c22-5 / article
                                              :quant (c22-10 / some)))
                    :mode imperative))

# ::snt Im the idiot? Arent you classy. You felt the need to reply to me. Go get a life.
# ::tokens ["I", "m", "the", "idiot", "?", "Are", "nt", "you", "classy", ".", "You", "felt", "the", "need", "to", "reply", "to", "me", ".", "Go", "get", "a", "life", "."]
# ::lemmas ["i", "m", "the", "idiot", "?", "be", "not", "you", "classy", ".", "you", "feel", "the", "need", "to", "reply", "to", "i", ".", "go", "get", "a", "life", "."]
(c23-3 / multi-sentence
       :snt1 (c23-11 / idiot
                     :domain (c23-6 / i)
                     :polarity (c23-12 / amr-unknown))
       :snt2 (c23-10 / classy-02
                     :ARG1 (c23-2 / you)
                     :ARG1-of (c23-16 / cause-01
                                      :ARG0 (c23-4 / nice-01
                                                   :ARG1 c23-2)))
       :snt3 (c23-1 / feel-01
                    :ARG0 (c23-13 / you)
                    :ARG1 (c23-8 / need-01
                                 :ARG0 c23-13
                                 :ARG1 (c23-7 / reply-01
                                              :ARG0 c23-13
                                              :ARG1 (c23-15 / i))))
       :snt4 (c23-5 / go-05
                    :ARG0 (c23-0 / you)
                    :ARG1 (c23-14 / get-01
                                  :ARG0 c23-0
                                  :ARG1 (c23-9 / life))
                    :mode imperative))

# ::snt im working on it!! lol
# ::tokens ["i", "m", "working", "on", "it", "!", "!", "lol"]
# ::lemmas ["i", "m", "work", "on", "it", "!", "!", "lol"]
(c24-2 / work-01
       :ARG0 (c24-3 / i)
       :ARG1 (c24-0 / it)
       :ARG2-of (c24-1 / laugh-01
                       :ARG0 c24-3
                       :manner (c24-4 / loud)))

# ::snt It will never end lol
# ::tokens ["It", "will", "never", "end", "lol"]
# ::lemmas ["it", "will", "never", "end", "lol"]
(c25-0 / end-01
       :ARG1 (c25-2 / it)
       :time (c25-3 / ever)
       :ARG2-of (c25-1 / laugh-01
                       :manner (c25-4 / loud)
                       :mode expressive)
       :polarity -)

# ::snt And nothing in the world lasts longer than any episode...
# ::tokens ["And", "nothing", "in", "the", "world", "lasts", "longer", "than", "any", "episode", "..."]
# ::lemmas ["and", "nothing", "in", "the", "world", "last", "long", "than", "any", "episode", "..."]
(c26-7 / and
       :op2 (c26-4 / last-01
                   :ARG1 (c26-0 / nothing
                                :location (c26-5 / world))
                   :ARG2 (c26-2 / episode
                                :mod (c26-6 / any))
                   :ARG1-of (c26-3 / have-degree-91
                                   :ARG2 (c26-8 / long-03
                                                :ARG1 c26-4)
                                   :ARG3 (c26-1 / more)
                                   :ARG4 c26-2)))

# ::snt Literally out of control
# ::tokens ["Literally", "out", "of", "control"]
# ::lemmas ["literally", "out", "of", "control"]
(c27-0 / out-06
       :ARG2 (c27-1 / control-01)
       :mod (c27-2 / literal))

# ::snt Thats right!
# ::tokens ["That", "s", "right", "!"]
# ::lemmas ["that", "s", "right", "!"]
(c28-0 / right-06
       :ARG2 (c28-1 / that))

# ::snt Yay love that show
# ::tokens ["Yay", "love", "that", "show"]
# ::lemmas ["Yay", "love", "that", "show"]
(c29-2 / love-01
       :ARG0 (c29-1 / you)
       :ARG1 (c29-3 / show-04
                    :mod (c29-0 / that)))

# ::snt But didn't this show start on lifetime??!
# ::tokens ["But", "did", "n't", "this", "show", "start", "on", "lifetime", "?", "?", "!"]
# ::lemmas ["but", "do", "not", "this", "show", "start", "on", "lifetime", "?", "?", "!"]
(c30-4 / contrast-01
       :ARG2 (c30-1 / start-01
                    :ARG1 (c30-0 / show-04
                                 :mod (c30-5 / this))
                    :ARG2 (c30-3 / lifetime)
                    :polarity (c30-2 / amr-unknown)
                    :polarity -))

# ::snt Cause its the best
# ::tokens ["Cause", "its", "the", "best"]
# ::lemmas ["cause", "its", "the", "good"]
(c31-2 / cause-01
       :ARG0 (c31-1 / have-degree-91
                    :ARG1 (c31-3 / it)
                    :ARG2 (c31-4 / good-02
                                 :ARG1 c31-3)
                    :ARG3 (c31-0 / most)))

# ::snt It needs to end
# ::tokens ["It", "needs", "to", "end"]
# ::lemmas ["it", "need", "to", "end"]
(c32-1 / need-01
       :ARG0 (c32-2 / it)
       :ARG1 (c32-0 / end-01
                    :ARG1 c32-2))

# ::snt Why do people feel the need to tell everyone they stopped watching the show years ago
# ::tokens ["Why", "do", "people", "feel", "the", "need", "to", "tell", "everyone", "they", "stopped", "watching", "the", "show", "years", "ago"]
# ::lemmas ["why", "do", "people", "feel", "the", "need", "to", "tell", "everyone", "they", "stop", "watch", "the", "show", "years", "ago"]
(c34-10 / cause-01
        :ARG0 (c34-13 / amr-unknown)
        :ARG1 (c34-0 / feel-01
                     :ARG0 (c34-9 / person)
                     :ARG1 (c34-4 / need-01
                                  :ARG0 c34-9
                                  :ARG1 (c34-12 / tell-01
                                                :ARG0 c34-9
                                                :ARG1 (c34-6 / stop-01
                                                             :ARG0 c34-9
                                                             :ARG1 (c34-11 / watch-01
                                                                           :ARG0 c34-9
                                                                           :ARG1 (c34-1 / show))
                                                             :time (c34-2 / before
                                                                          :op1 (c34-8 / now)
                                                                          :quant (c34-5 / multiple
                                                                                        :op1 (c34-14 / temporal-quantity
                                                                                                     :unit (c34-3 / year)
                                                                                                     :quant 1))))
                                                :ARG2 (c34-7 / everyone)))))

# ::snt Insoportable.
# ::tokens ["Insoportable", "."]
# ::lemmas ["insoportable", "."]
(c35-1 / thing
       :ARG1-of (c35-0 / insure-01
                       :polarity -))

# ::snt Omg end it already!!
# ::tokens ["Omg", "end", "it", "already", "!", "!"]
# ::lemmas ["Omg", "end", "it", "already", "!", "!"]
(c36-2 / end-01
       :ARG0 (c36-1 / you)
       :ARG1 (c36-3 / it)
       :time (c36-4 / already)
       :mod (c36-0 / omg
                   :mode expressive)
       :mode imperative)

# ::snt And this is what they were waiting for
# ::tokens ["And", "this", "is", "what", "they", "were", "waiting", "for"]
# ::lemmas ["and", "this", "be", "what", "they", "be", "wait", "for"]
(c37-3 / and
       :op2 (c37-0 / wait-01
                   :ARG1 (c37-1 / they)
                   :ARG2 (c37-2 / this)))

# ::snt Its surpass ER the best tv medical drama ever which includes all healthcare professionals . Despite this, I love Grey anatomy - one more season
# ::tokens ["Its", "surpass", "ER", "the", "best", "tv", "medical", "drama", "ever", "which", "includes", "all", "healthcare", "professionals", ".", "Despite", "this", ",", "I", "love", "Grey", "anatomy", "-", "one", "more", "season"]
# ::lemmas ["its", "surpass", "ER", "the", "good", "tv", "medical", "drama", "ever", "which", "include", "all", "healthcare", "professional", ".", "despite", "this", ",", "i", "love", "Grey", "anatomy", "-", "one", "more", "season"]
(c38-12 / multi-sentence
        :snt1 (c38-0 / surpass-01
                     :ARG0 (c38-21 / it)
                     :ARG1 (c38-5 / medical-drama
                                  :name (c38-17 / name
                                                :op1 "ER")
                                  :mod (c38-8 / television)
                                  :ARG2-of (c38-3 / include-01
                                                  :ARG1 (c38-19 / professional
                                                                :mod (c38-6 / healthcare)
                                                                :mod (c38-7 / all))))
                     :ARG1-of (c38-20 / have-degree-91
                                      :ARG2 (c38-9 / good-02
                                                   :ARG1 (c38-22 / drama)
                                                   :ARG3 (c38-16 / most)
                                                   :ARG5 (c38-18 / ever)))
                     :snt2 (c38-4 / have-concession-91
                                  :ARG1 (c38-1 / love-01
                                               :ARG0 (c38-10 / i)
                                               :ARG1 (c38-11 / book
                                                             :name (c38-13 / name
                                                                           :op1 "Grey"
                                                                           :op2 " anatomy")))
                                  :ARG2 (c38-15 / this))
                     :snt3 (c38-2 / season
                                  :mod (c38-14 / more)
                                  :quant 1)))

# ::snt How is this show still being renewed ?!!
# ::tokens ["How", "is", "this", "show", "still", "being", "renewed", "?", "!", "!"]
# ::lemmas ["how", "be", "this", "show", "still", "be", "renew", "?", "!", "!"]
(c39-2 / renew-01
       :ARG1 (c39-1 / show
                    :mod (c39-3 / this))
       :manner (c39-4 / amr-unknown)
       :mod (c39-0 / still))

# ::snt Actually, is celebrating years.
# ::tokens ["Actually", ",", "is", "celebrating", "years", "."]
# ::lemmas ["actually", ",", "be", "celebrate", "years", "."]
(c40-0 / celebrate-01
       :ARG1 (c40-1 / year)
       :ARG1-of (c40-2 / actual-02))

# ::snt Keep going until an earthquake swallows Seattle? Thats the only disaster they have not done.
# ::tokens ["Keep", "going", "until", "an", "earthquake", "swallows", "Seattle", "?", "That", "s", "the", "only", "disaster", "they", "have", "not", "done", "."]
# ::lemmas ["keep", "go", "until", "an", "earthquake", "swallow", "Seattle", "?", "that", "s", "the", "only", "disaster", "they", "have", "not", "do", "."]
(c41-1 / multi-sentence
       :snt1 (c41-5 / keep-02
                    :polarity (c41-9 / amr-unknown)
                    :ARG1 (c41-10 / go-01)
                    :time (c41-12 / until
                                  :op1 (c41-3 / swallow-01
                                              :ARG0 (c41-4 / earthquake)
                                              :ARG1 (c41-6 / city
                                                           :name (c41-2 / name
                                                                        :op1 "Seattle")))))
       :snt2 (c41-11 / disaster
                     :mod (c41-0 / only)
                     :ARG1-of (c41-7 / do-02
                                     :ARG0 (c41-8 / they)
                                     :polarity -)
                     :domain (c41-13 / that)))

# ::snt Sorry you lost me when Jackson starting banging his step sister.
# ::tokens ["Sorry", "you", "lost", "me", "when", "Jackson", "starting", "banging", "his", "step", "sister", "."]
# ::lemmas ["sorry", "you", "lose", "i", "when", "Jackson", "start", "bang", "his", "step", "sister", "."]
(c42-5 / sorry-01
       :ARG1 (c42-9 / i)
       :ARG2 (c42-7 / lose-02
                    :ARG0 (c42-2 / you)
                    :ARG1 c42-9
                    :time (c42-0 / start-01
                                 :ARG0 (c42-8 / person
                                              :name (c42-3 / name
                                                           :op1 "Jackson"))
                                 :ARG1 (c42-1 / bang-04
                                              :ARG0 c42-8
                                              :ARG1 (c42-4 / person
                                                           :ARG0-of (c42-6 / have-rel-role-91
                                                                           :ARG1 c42-8
                                                                           :ARG2 (c42-10 / step)))))))

# ::snt May it live forever more!
# ::tokens ["May", "it", "live", "forever", "more", "!"]
# ::lemmas ["may", "it", "live", "forever", "more", "!"]
(c45-3 / wish-01
       :ARG1 (c45-2 / live-01
                    :ARG0 (c45-4 / it)
                    :ARG1 (c45-1 / more
                                 :duration (c45-0 / forever))))

# ::snt It's one of the best shows!!
# ::tokens ["It", "'s", "one", "of", "the", "best", "shows", "!", "!"]
# ::lemmas ["it", "be", "one", "of", "the", "good", "show", "!", "!"]
(c46-4 / include-91
       :ARG1 (c46-2 / it)
       :ARG2 (c46-1 / show-04
                    :ARG1-of (c46-3 / have-degree-91
                                    :ARG2 (c46-5 / good-02
                                                 :ARG1 c46-1)
                                    :ARG3 (c46-0 / most))))

# ::snt Amazing show
# ::tokens ["Amazing", "show"]
# ::lemmas ["amazing", "show"]
(c48-1 / show-04
       :ARG0-of (c48-0 / amaze-01))

# ::snt Thinking the same thing..
# ::tokens ["Thinking", "the", "same", "thing", ".."]
# ::lemmas ["think", "the", "same", "thing", ".."]
(c49-2 / think-01
       :ARG1 (c49-1 / thing
                    :ARG1-of (c49-0 / same-01)))

# ::snt Goddamn make it stop.
# ::tokens ["Goddamn", "make", "it", "stop", "."]
# ::lemmas ["goddamn", "make", "it", "stop", "."]
(c50-3 / stop-01
       :ARG0 (c50-1 / you)
       :ARG1 (c50-2 / it)
       :mod (c50-0 / goddamn
                   :mode expressive)
       :mode imperative)
