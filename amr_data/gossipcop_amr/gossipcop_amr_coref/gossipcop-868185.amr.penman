# ::snt Season just felt like it went in circles, dragging out the plot that basically was concluded in Season . They went through all these hoops with the Hollow's magic just to end up in a worse position than if they had just done nothing, it's tragic for the sake of being tragic.
# ::tokens ["Season", "just", "felt", "like", "it", "went", "in", "circles", ",", "dragging", "out", "the", "plot", "that", "basically", "was", "concluded", "in", "Season", ".", "They", "went", "through", "all", "these", "hoops", "with", "the", "Hollow", "'s", "magic", "just", "to", "end", "up", "in", "a", "worse", "position", "than", "if", "they", "had", "just", "done", "nothing", ",", "it", "'s", "tragic", "for", "the", "sake", "of", "being", "tragic", "."]
# ::lemmas ["Season", "just", "feel", "like", "it", "go", "in", "circle", ",", "drag", "out", "the", "plot", "that", "basically", "be", "conclude", "in", "Season", ".", "they", "go", "through", "all", "these", "hoop", "with", "the", "Hollow", "'s", "magic", "just", "to", "end", "up", "in", "a", "bad", "position", "than", "if", "they", "have", "just", "do", "nothing", ",", "it", "be", "tragic", "for", "the", "sake", "of", "be", "tragic", "."]
(c1-13 / multi-sentence
       :snt1 (c1-21 / feel-05
                    :ARG1 (c1-0 / season)
                    :ARG2 (c1-16 / circle-01
                                 :ARG1 c1-0)
                    :mod (c1-7 / just))
       :snt2 (c1-28 / drag-out-02
                    :ARG0 c1-0
                    :ARG1 (c1-24 / plot
                                 :ARG1-of (c1-11 / conclude-02
                                                 :time (c1-3 / season)
                                                 :mod (c1-12 / basic))))
       :snt3 (c1-10 / go-through-20
                    :ARG0 (c1-9 / they)
                    :ARG1 (c1-5 / hoops
                                :mod (c1-8 / all)
                                :mod (c1-18 / this))
                    :instrument (c1-6 / magic
                                      :poss (c1-25 / family
                                                   :name (c1-22 / name
                                                                :op1 "Hollow")))
                    :purpose (c1-23 / end-up-03
                                    :ARG1 c1-9
                                    :ARG2 (c1-14 / position
                                                 :ARG1-of (c1-26 / have-degree-91
                                                                 :ARG2 (c1-1 / bad-07
                                                                             :ARG1 c1-14)
                                                                 :ARG3 (c1-19 / more)
                                                                 :ARG4 (c1-17 / do-02
                                                                              :ARG0 c1-9
                                                                              :ARG1 (c1-15 / nothing)
                                                                              :condition c1-17)))
                                    :mod (c1-20 / just)))
       :snt4 (c1-27 / tragic
                    :purpose (c1-2 / sake
                                   :op1 (c1-4 / have-mod-91
                                              :ARG2 c1-27))))

# ::snt Nooooo
# ::tokens ["Nooooo"]
# ::lemmas ["Nooooo"]
(c2-0 / no)

# ::snt Last season had so much interesting stuff to say, I'm a bit sad there won't be much more. Excited for what's next for everyone, though.
# ::tokens ["Last", "season", "had", "so", "much", "interesting", "stuff", "to", "say", ",", "I", "'m", "a", "bit", "sad", "there", "wo", "n't", "be", "much", "more", ".", "Excited", "for", "what", "'s", "next", "for", "everyone", ",", "though", "."]
# ::lemmas ["Last", "season", "have", "so", "much", "interesting", "stuff", "to", "say", ",", "i", "be", "a", "bit", "sad", "there", "will", "not", "be", "much", "more", ".", "excited", "for", "what", "be", "next", "for", "everyone", ",", "though", "."]
(c5-12 / multi-sentence
       :snt1 (c5-7 / have-03
                   :ARG0 (c5-0 / season
                               :mod (c5-2 / last))
                   :ARG1 (c5-4 / stuff
                               :ARG0-of (c5-20 / interest-01)
                               :ARG1-of (c5-3 / say-01)
                               :ARG1-of (c5-19 / have-quant-91
                                               :ARG2 (c5-8 / much)
                                               :ARG3 (c5-17 / so)))
                   :ARG0-of (c5-14 / cause-01
                                   :ARG1 (c5-1 / sad-02
                                               :ARG0 (c5-15 / more
                                                            :quant (c5-13 / much)
                                                            :polarity -)
                                               :ARG1 (c5-5 / i)
                                               :degree (c5-11 / bit))))
       :snt2 (c5-18 / excite-01
                    :ARG0 (c5-9 / thing
                                :mod (c5-16 / next)
                                :beneficiary (c5-10 / everyone))
                    :ARG1 c5-5
                    :ARG1-of (c5-6 / have-concession-91)))

# ::snt gutted.... I really wanted them to reach episodes they deserved that
# ::tokens ["gutted", "....", "I", "really", "wanted", "them", "to", "reach", "episodes", "they", "deserved", "that"]
# ::lemmas ["gutte", "....", "i", "really", "want", "they", "to", "reach", "episode", "they", "deserve", "that"]
(c6-5 / and
      :op1 (c6-6 / gut-01)
      :op2 (c6-2 / want-01
                 :ARG0 (c6-4 / i)
                 :ARG1 (c6-0 / reach-01
                             :ARG0 (c6-3 / they)
                             :ARG1 (c6-1 / episode
                                         :ARG1-of (c6-7 / deserve-01
                                                        :ARG0 c6-3)))
                 :ARG1-of (c6-8 / real-04)))

# ::snt Well that season finale was like a series one
# ::tokens ["Well", "that", "season", "finale", "was", "like", "a", "series", "one"]
# ::lemmas ["well", "that", "season", "finale", "be", "like", "a", "series", "one"]
(c7-4 / resemble-01
      :ARG1 (c7-1 / final
                  :mod (c7-3 / season)
                  :mod (c7-6 / that))
      :ARG2 (c7-0 / series
                  :ord (c7-2 / ordinal-entity
                             :value 1))
      :mod (c7-5 / well))

# ::snt I was kinda right about it being cancelled
# ::tokens ["I", "was", "kinda", "right", "about", "it", "being", "cancelled"]
# ::lemmas ["i", "be", "kinda", "right", "about", "it", "be", "cancel"]
(c8-1 / right-06
      :ARG1 (c8-4 / i)
      :ARG2 (c8-3 / cancel-01
                  :ARG1 (c8-0 / it))
      :degree (c8-2 / kind-of))

# ::snt "I will love you forever " "Tell Caroline I will love her FOREVER too "
# ::tokens ["\"", "I", "will", "love", "you", "forever", "\"", "\"", "Tell", "Caroline", "I", "will", "love", "her", "FOREVER", "too", "\""]
# ::lemmas ["\"", "i", "will", "love", "you", "forever", "\"", "\"", "Tell", "Caroline", "I", "will", "love", "she", "FOREVER", "too", "\""]
(c9-7 / and
      :op1 (c9-3 / love-01
                 :ARG0 (c9-6 / i)
                 :ARG1 (c9-1 / you)
                 :duration (c9-0 / forever))
      :op2 (c9-5 / tell-01
                 :ARG0 c9-6
                 :ARG1 (c9-8 / love-01
                             :ARG0 c9-6
                             :ARG1 (c9-4 / person
                                         :name (c9-2 / name
                                                     :op1 "Caroline"))
                             :duration c9-0)
                 :mod (c9-9 / too))
      :ARG2 c9-4)

# ::snt Finally you have the chance to make right with Caroline and Stefan. Bring them back together again
# ::tokens ["Finally", "you", "have", "the", "chance", "to", "make", "right", "with", "Caroline", "and", "Stefan", ".", "Bring", "them", "back", "together", "again"]
# ::lemmas ["finally", "you", "have", "the", "chance", "to", "make", "right", "with", "Caroline", "and", "Stefan", ".", "bring", "they", "back", "together", "again"]
(c10-3 / multi-sentence
       :snt1 (c10-11 / chance-02
                     :ARG0 (c10-2 / you)
                     :ARG1 (c10-7 / make-02
                                  :ARG0 c10-2
                                  :ARG1 (c10-6 / right-06
                                               :ARG1 c10-2
                                               :ARG2 (c10-14 / and
                                                             :op1 (c10-8 / person
                                                                         :name (c10-4 / name
                                                                                      :op1 "Caroline"))
                                                             :op2 (c10-5 / person
                                                                         :name (c10-9 / name
                                                                                      :op1 "Stefan")))))
                     :time (c10-0 / final))
       :snt2 (c10-1 / bring-01
                    :ARG0 (c10-15 / you)
                    :ARG1 (c10-12 / they)
                    :ARG3 (c10-10 / back)
                    :mod (c10-13 / again)
                    :mod c10-10))

# ::snt All my favorite shows are ending recently... can't take much more lol
# ::tokens ["All", "my", "favorite", "shows", "are", "ending", "recently", "...", "ca", "n't", "take", "much", "more", "lol"]
# ::lemmas ["all", "my", "favorite", "show", "be", "end", "recently", "...", "can", "not", "take", "much", "more", "lol"]
(c11-4 / end-01
       :ARG1 (c11-2 / show
                    :ARG1-of (c11-0 / favor-01
                                    :ARG0 (c11-10 / i))
                    :mod (c11-11 / all))
       :time (c11-3 / recent)
       :ARG0-of (c11-8 / cause-01
                       :ARG1 (c11-6 / possible-01
                                    :ARG1 (c11-9 / take-01
                                                 :ARG0 c11-10
                                                 :ARG1 (c11-1 / more
                                                              :quant (c11-5 / much)))
                                    :ARG2-of (c11-7 / laugh-01
                                                    :ARG0 c11-10
                                                    :manner (c11-12 / loud)
                                                    :mode expressive)
                                    :polarity -)))

# ::snt NOOO
# ::tokens ["NOOO"]
# ::lemmas ["NOOO"]
(c12-0 / no)

# ::snt Whaaat?? Whyyyy????
# ::tokens ["Whaaat", "?", "?", "Whyyyy", "?", "?", "?", "?"]
# ::lemmas ["Whaaat", "?", "?", "Whyyyy", "?", "?", "?", "?"]
(c13-2 / multi-sentence
       :snt1 (c13-0 / whaaat
                    :mode expressive)
       :snt2 (c13-1 / cause-01
                    :ARG0 (c13-3 / amr-unknown)))

# ::snt Always and Forever
# ::tokens ["Always", "and", "Forever"]
# ::lemmas ["always", "and", "forever"]
(c14-1 / be-temporally-at-91
       :ARG2 (c14-3 / and
                    :op1 (c14-2 / always)
                    :op2 (c14-0 / forever)))

# ::snt At least this way we'll get a proper farewell season. I just want a Klaroline endgame!
# ::tokens ["At", "least", "this", "way", "we", "'ll", "get", "a", "proper", "farewell", "season", ".", "I", "just", "want", "a", "Klaroline", "endgame", "!"]
# ::lemmas ["at", "least", "this", "way", "we", "'ll", "get", "a", "proper", "farewell", "season", ".", "i", "just", "want", "a", "Klaroline", "endgame", "!"]
(c15-1 / multi-sentence
       :snt1 (c15-12 / get-01
                     :ARG0 (c15-8 / we)
                     :ARG1 (c15-3 / season
                                  :mod (c15-0 / farewell)
                                  :mod (c15-6 / proper))
                     :mod (c15-11 / at-least)
                     :manner (c15-7 / way
                                    :mod (c15-9 / this)))
       :snt2 (c15-14 / want-01
                     :ARG0 (c15-10 / i)
                     :ARG1 (c15-5 / endgame
                                  :mod (c15-2 / product
                                              :name (c15-4 / name
                                                           :op1 "Klaroline")))
                     :mod (c15-13 / just)))

# ::snt Bummer. And I was just about to catch up with the seasons that I missed.
# ::tokens ["Bummer", ".", "And", "I", "was", "just", "about", "to", "catch", "up", "with", "the", "seasons", "that", "I", "missed", "."]
# ::lemmas ["Bummer", ".", "and", "i", "be", "just", "about", "to", "catch", "up", "with", "the", "season", "that", "i", "miss", "."]
(c16-1 / multi-sentence
       :snt1 (c16-0 / bummer)
       :snt2 (c16-7 / and
                    :op2 (c16-4 / catch-up-04
                                :ARG1 (c16-6 / i)
                                :ARG2 (c16-2 / season
                                             :ARG1-of (c16-3 / miss-02
                                                             :ARG0 c16-6))
                                :time (c16-8 / about-to)
                                :mod (c16-5 / just))))

# ::snt No way we need more
# ::tokens ["No", "way", "we", "need", "more"]
# ::lemmas ["no", "way", "we", "need", "more"]
(c17-2 / need-01
       :ARG0 (c17-1 / we)
       :ARG1 (c17-0 / more)
       :manner (c17-3 / way
                      :polarity -))

# ::snt Yur opinionWhich is very debatableIt's still Dope as far as I'm concernedAnd it's better than alot of shows atm
# ::tokens ["Yur", "opinionWhich", "is", "very", "debatableIt", "'s", "still", "Dope", "as", "far", "as", "I", "'m", "concernedAnd", "it", "'s", "better", "than", "alot", "of", "shows", "atm"]
# ::lemmas ["Yur", "opinionWhich", "be", "very", "debatableit", "'s", "still", "Dope", "as", "far", "as", "i", "be", "concernedand", "it", "be", "well", "than", "alot", "of", "show", "atm"]
(c18-3 / multi-sentence
       :snt1 (c18-9 / possible-01
                    :ARG1 (c18-16 / debate-01
                                  :ARG1 (c18-14 / thing
                                                :ARG1-of (c18-0 / opine-01
                                                                :ARG0 (c18-2 / you)))
                                  :degree (c18-7 / very))
                    :polarity -)
       :snt2 (c18-6 / and
                    :op1 (c18-12 / dip-01
                                 :ARG0 (c18-13 / i)
                                 :mod (c18-4 / still)
                                 :topic c18-14
                                 :mode imperative)
                    :op2 (c18-15 / good-02
                                 :ARG1 (c18-5 / it)
                                 :ARG2-of (c18-8 / have-degree-91
                                                 :ARG1 c18-5
                                                 :ARG3 (c18-10 / more)
                                                 :ARG4 (c18-1 / show-04
                                                              :quant (c18-11 / lot)
                                                              :mod (c18-17 / atm))))))

# ::snt No they have to... It's becoming a huge pile of mess. After season everything has gone downhill
# ::tokens ["No", "they", "have", "to", "...", "It", "'s", "becoming", "a", "huge", "pile", "of", "mess", ".", "After", "season", "everything", "has", "gone", "downhill"]
# ::lemmas ["no", "they", "have", "to", "...", "it", "be", "become", "a", "huge", "pile", "of", "mess", ".", "after", "season", "everything", "have", "go", "downhill"]
(c19-3 / multi-sentence
       :snt1 (c19-0 / obligate-01
                    :ARG1 (c19-11 / they)
                    :mod (c19-2 / no)
                    :polarity -)
       :snt2 (c19-1 / become-01
                    :ARG1 (c19-10 / it)
                    :ARG2 (c19-8 / pile
                                 :consist-of (c19-7 / mess)
                                 :mod (c19-9 / huge)))
       :snt3 (c19-12 / go-02
                     :ARG0 (c19-6 / everything)
                     :ARG4 (c19-13 / downhill)
                     :time (c19-5 / after
                                  :op1 (c19-4 / season))))

# ::snt Yeah I heard. Two years ago I was Hell No. Now I am okay with it
# ::tokens ["Yeah", "I", "heard", ".", "Two", "years", "ago", "I", "was", "Hell", "No", ".", "Now", "I", "am", "okay", "with", "it"]
# ::lemmas ["yeah", "i", "hear", ".", "Two", "years", "ago", "i", "be", "Hell", "no", ".", "now", "i", "be", "okay", "with", "it"]
(c20-4 / multi-sentence
       :snt1 (c20-7 / hear-01
                    :ARG0 (c20-10 / i)
                    :mod (c20-3 / yeah))
       :snt2 (c20-9 / hell
                    :domain (c20-6 / i)
                    :time (c20-2 / before
                                 :op1 (c20-5 / now)
                                 :quant (c20-11 / temporal-quantity
                                                :unit (c20-12 / year)
                                                :quant 2))
                    :mode expressive)
       :snt3 (c20-0 / okay-01
                    :ARG0 (c20-13 / i)
                    :ARG1 (c20-1 / it)
                    :time (c20-8 / now)))

# ::snt No.
# ::tokens ["No", "."]
# ::lemmas ["no", "."]
(c21-0 / no)

# ::snt For real. Didja hear who is gonna be in the S05 premiere?
# ::tokens ["For", "real", ".", "Didja", "hear", "who", "is", "gon", "na", "be", "in", "the", "S05", "premiere", "?"]
# ::lemmas ["for", "real", ".", "Didja", "hear", "who", "be", "going", "to", "be", "in", "the", "S05", "premiere", "?"]
(c22-3 / multi-sentence
       :snt1 (c22-0 / for-real-04)
       :snt2 (c22-7 / hear-01
                    :ARG0 (c22-2 / you)
                    :ARG1 (c22-8 / person
                                 :ARG1-of (c22-1 / be-located-at-91
                                                 :ARG2 (c22-4 / premiere-01
                                                              :ARG1 (c22-9 / product
                                                                           :name (c22-5 / name
                                                                                        :op1 "S05")))))
                    :polarity (c22-6 / amr-unknown)))

# ::snt Yeah me too. Cast is amazing
# ::tokens ["Yeah", "me", "too", ".", "Cast", "is", "amazing"]
# ::lemmas ["yeah", "i", "too", ".", "Cast", "be", "amazing"]
(c23-0 / multi-sentence
       :snt1 (c23-1 / event
                    :mod (c23-4 / i)
                    :mod (c23-3 / too))
       :snt2 (c23-5 / amaze-01
                    :ARG0 (c23-2 / cast)))

# ::snt It would be a sad, but beautiful end in my opinion.Im glad we are getting another season, this show is DA BOMB.
# ::tokens ["It", "would", "be", "a", "sad", ",", "but", "beautiful", "end", "in", "my", "opinion", ".", "Im", "glad", "we", "are", "getting", "another", "season", ",", "this", "show", "is", "DA", "BOMB", "."]
# ::lemmas ["it", "would", "be", "a", "sad", ",", "but", "beautiful", "end", "in", "my", "opinion", ".", "Im", "glad", "we", "be", "get", "another", "season", ",", "this", "show", "be", "DA", "BOMB", "."]
(c24-3 / multi-sentence
       :snt1 (c24-10 / contrast-01
                     :ARG1 (c24-5 / sad-02
                                  :ARG1 (c24-8 / end-01))
                     :ARG2 (c24-2 / beautiful-02
                                  :ARG1 c24-8)
                     :ARG1-of (c24-0 / opine-01
                                     :ARG0 (c24-13 / i)))
       :snt2 (c24-15 / glad-02
                     :ARG0 (c24-14 / get-01
                                   :ARG0 (c24-11 / we)
                                   :ARG1 (c24-1 / season
                                                :mod (c24-7 / another)))
                     :ARG1 (c24-6 / i)
                     :ARG1-of (c24-16 / cause-01
                                      :ARG0 (c24-17 / show-04
                                                    :ARG0 (c24-9 / person
                                                                 :name (c24-4 / name
                                                                              :op1 " DA"
                                                                              :op2 "Boomer"))
                                                    :mod (c24-12 / this)))))

# ::snt No more Vampire shows on tv
# ::tokens ["No", "more", "Vampire", "shows", "on", "tv"]
# ::lemmas ["no", "more", "Vampire", "show", "on", "tv"]
(c25-2 / show-04
       :ARG1 (c25-4 / animal
                    :name (c25-1 / name
                                 :op1 "Vampire"))
       :medium (c25-3 / television)
       :quant (c25-0 / more)
       :polarity -)

# ::snt Man I was hoping we would at least get a season or at least we know ahead of time
# ::tokens ["Man", "I", "was", "hoping", "we", "would", "at", "least", "get", "a", "season", "or", "at", "least", "we", "know", "ahead", "of", "time"]
# ::lemmas ["man", "i", "be", "hope", "we", "would", "at", "least", "get", "a", "season", "or", "at", "least", "we", "know", "ahead", "of", "time"]
(c28-3 / hope-01
       :ARG0 (c28-8 / i)
       :ARG1 (c28-0 / or
                    :op1 (c28-10 / get-01
                                 :ARG0 (c28-5 / we)
                                 :ARG1 (c28-2 / season)
                                 :mod (c28-9 / at-least))
                    :op2 (c28-4 / know-01
                                :ARG0 c28-5
                                :mod (c28-11 / at-least)
                                :time (c28-6 / ahead-of
                                             :op1 (c28-7 / time))))
       :mod (c28-1 / man
                   :mode expressive))

# ::snt I'm sad to see them go. Especially since we already had to say goodbye to TVD &amp;Grimm.
# ::tokens ["I", "'m", "sad", "to", "see", "them", "go", ".", "Especially", "since", "we", "already", "had", "to", "say", "goodbye", "to", "TVD", "&", "amp;Grimm", "."]
# ::lemmas ["i", "be", "sad", "to", "see", "they", "go", ".", "especially", "since", "we", "already", "have", "to", "say", "goodbye", "to", "TVD", "&", "amp;Grimm", "."]
(c29-2 / multi-sentence
       :snt1 (c29-4 / sad-02
                    :ARG0 (c29-0 / see-01
                                 :ARG0 (c29-11 / i)
                                 :ARG1 (c29-13 / go-02
                                               :ARG0 (c29-12 / they)))
                    :ARG1 c29-11)
       :snt2 (c29-9 / cause-01
                    :ARG0 (c29-1 / obligate-01
                                 :ARG1 (c29-10 / we)
                                 :ARG2 (c29-16 / say-01
                                               :ARG0 c29-10
                                               :ARG1 (c29-14 / goodbye)
                                               :ARG2 (c29-6 / and
                                                            :op1 (c29-8 / person
                                                                        :name (c29-3 / name
                                                                                     :op1 "TVD"))
                                                            :op2 (c29-5 / person
                                                                        :name c29-3
                                                                        :op1 "amp"))))
                    :time (c29-15 / already))
       :mod (c29-7 / especially))

# ::snt No I can't loose both of my favs them n so sad I love the originals
# ::tokens ["No", "I", "ca", "n't", "loose", "both", "of", "my", "favs", "them", "n", "so", "sad", "I", "love", "the", "originals"]
# ::lemmas ["no", "i", "can", "not", "loose", "both", "of", "my", "favs", "they", "n", "so", "sad", "i", "love", "the", "original"]
(c30-8 / and
       :op1 (c30-5 / possible-01
                   :ARG1 (c30-6 / lose-02
                                :ARG0 (c30-7 / i)
                                :ARG1 (c30-0 / favor
                                             :poss c30-7
                                             :mod (c30-2 / both)))
                   :polarity -)
       :op2 (c30-4 / sad-02
                   :ARG0 (c30-9 / love-01
                                :ARG0 c30-7
                                :ARG1 (c30-1 / original))
                   :ARG1 c30-7
                   :degree (c30-3 / so)))

# ::snt This can't be it's just not acceptable
# ::tokens ["This", "ca", "n't", "be", "it", "'s", "just", "not", "acceptable"]
# ::lemmas ["this", "can", "not", "be", "it", "be", "just", "not", "acceptable"]
(c31-2 / possible-01
       :ARG1 (c31-3 / accept-01
                    :ARG1 (c31-0 / this)
                    :mod (c31-1 / just)
                    :polarity -)
       :polarity -)

# ::snt At least they can give Season a satisfying conclusion
# ::tokens ["At", "least", "they", "can", "give", "Season", "a", "satisfying", "conclusion"]
# ::lemmas ["at", "least", "they", "can", "give", "Season", "a", "satisfy", "conclusion"]
(c32-3 / possible-01
       :ARG1 (c32-6 / give-01
                    :ARG0 (c32-5 / they)
                    :ARG1 (c32-4 / conclude-01
                                 :ARG1 (c32-1 / season)
                                 :ARG0-of (c32-0 / satisfy-01)))
       :mod (c32-2 / at-least))

# ::snt Does that mean next season is the last? Well at least if they know ahead of time, they can give it a proper ending.
# ::tokens ["Does", "that", "mean", "next", "season", "is", "the", "last", "?", "Well", "at", "least", "if", "they", "know", "ahead", "of", "time", ",", "they", "can", "give", "it", "a", "proper", "ending", "."]
# ::lemmas ["do", "that", "mean", "next", "season", "be", "the", "last", "?", "well", "at", "least", "if", "they", "know", "ahead", "of", "time", ",", "they", "can", "give", "it", "a", "proper", "ending", "."]
(c33-0 / multi-sentence
       :snt1 (c33-6 / mean-01
                    :polarity (c33-4 / amr-unknown)
                    :ARG1 (c33-12 / that)
                    :ARG2 (c33-7 / last
                                 :domain (c33-2 / season
                                                :mod (c33-1 / next))))
       :snt2 (c33-8 / possible-01
                    :ARG1 (c33-13 / give-01
                                  :ARG0 (c33-15 / they)
                                  :ARG1 (c33-5 / end-01
                                               :mod (c33-3 / proper))
                                  :condition (c33-9 / know-01
                                                    :ARG0 c33-15
                                                    :time (c33-11 / ahead-of
                                                                  :op1 (c33-14 / time)))
                                  :mod (c33-10 / at-least))))

# ::snt NOOOOOOOOOOOOOOOO
# ::tokens ["NOOOOOOOOOOOOOOOO"]
# ::lemmas ["NOOOOOOOOOOOOOOOO"]
(c34-0 / no)

# ::snt The Originals will miss me a lot. I love this show so much! endgame
# ::tokens ["The", "Originals", "will", "miss", "me", "a", "lot", ".", "I", "love", "this", "show", "so", "much", "!", "endgame"]
# ::lemmas ["the", "Originals", "will", "miss", "i", "a", "lot", ".", "i", "love", "this", "show", "so", "much", "!", "endgame"]
(c36-3 / multi-sentence
       :snt1 (c36-7 / miss-01
                    :ARG0 (c36-1 / broadcast-program
                                 :name (c36-2 / name
                                              :op1 "The"
                                              :op2 "Originals"))
                    :ARG1 (c36-9 / i)
                    :degree (c36-8 / lot))
       :snt2 (c36-11 / love-01
                     :ARG0 (c36-5 / i)
                     :ARG1 (c36-4 / show-04
                                  :mod (c36-10 / this))
                     :degree (c36-12 / much
                                     :degree (c36-0 / so)))
       :snt3 (c36-6 / endgame))

# ::snt I don't happy either
# ::tokens ["I", "do", "n't", "happy", "either"]
# ::lemmas ["i", "do", "not", "happy", "either"]
(c37-1 / happy-01
       :ARG1 (c37-2 / i)
       :mod (c37-0 / either)
       :polarity -)

# ::snt Wow! Not happy at all worse way to say have a horrible day
# ::tokens ["Wow", "!", "Not", "happy", "at", "all", "worse", "way", "to", "say", "have", "a", "horrible", "day"]
# ::lemmas ["wow", "!", "not", "happy", "at", "all", "bad", "way", "to", "say", "have", "a", "horrible", "day"]
(c38-2 / multi-sentence
       :snt1 (c38-8 / wow
                    :mode expressive)
       :snt2 (c38-7 / way
                    :manner-of (c38-3 / say-01
                                      :ARG1 (c38-5 / have-03
                                                   :ARG0 (c38-1 / you)
                                                   :ARG1 (c38-11 / day
                                                                 :mod (c38-9 / horrible))
                                                   :mode imperative))
                    :ARG1-of (c38-4 / have-degree-91
                                    :ARG2 (c38-0 / bad-07
                                                 :ARG1 c38-7)
                                    :ARG3 (c38-6 / more
                                                 :degree (c38-10 / at-all)
                                                 :polarity -))))

# ::snt About time
# ::tokens ["About", "time"]
# ::lemmas ["about", "time"]
(c39-1 / about
       :op1 (c39-0 / time))
