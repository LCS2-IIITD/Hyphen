# ::snt your elitism reared its head early on
# ::tokens ["your", "elitism", "reared", "its", "head", "early", "on"]
# ::lemmas ["your", "elitism", "rear", "its", "head", "early", "on"]
(c1-1 / reek-01
      :ARG0 (c1-2 / elitism
                  :poss (c1-0 / you))
      :ARG1 (c1-3 / head)
      :time (c1-4 / early))

# ::snt Well done.
# ::tokens ["Well", "done", "."]
# ::lemmas ["well", "do", "."]
(c2-0 / do-02
      :ARG1-of (c2-1 / well-09))

# ::snt At least I dont have to worry about you making my boxers fit
# ::tokens ["At", "least", "I", "do", "nt", "have", "to", "worry", "about", "you", "making", "my", "boxers", "fit"]
# ::lemmas ["at", "least", "i", "do", "not", "have", "to", "worry", "about", "you", "make", "my", "boxer", "fit"]
(c3-0 / obligate-01
      :ARG1 (c3-6 / i)
      :ARG2 (c3-5 / worry-02
                  :ARG0 c3-6
                  :ARG1 (c3-4 / make-02
                              :ARG0 (c3-3 / you)
                              :ARG1 (c3-1 / fit-06
                                          :ARG1 (c3-2 / boxer
                                                      :poss c3-6))))
      :mod (c3-7 / at-least)
      :polarity -)

# ::snt guns
# ::tokens ["guns"]
# ::lemmas ["gun"]
(c4-0 / gun)

# ::snt f$&amp;k that airline nothing like paying way more for way less
# ::tokens ["f$&amp;k", "that", "airline", "nothing", "like", "paying", "way", "more", "for", "way", "less"]
# ::lemmas ["f$&amp;k", "that", "airline", "nothing", "like", "pay", "way", "more", "for", "way", "less"]
(c5-1 / nothing
      :ARG1-of (c5-2 / resemble-01
                     :ARG2 (c5-4 / pay-01
                                 :ARG1 (c5-0 / monetary-quantity
                                             :ARG1-of (c5-3 / have-quant-91
                                                            :ARG3 (c5-5 / more
                                                                        :quant (c5-8 / way))))
                                 :ARG3 (c5-12 / monetary-quantity
                                              :ARG1-of (c5-9 / have-quant-91
                                                             :ARG3 (c5-6 / less
                                                                         :quant (c5-7 / way))))))
      :domain (c5-11 / airline
                     :mod (c5-10 / that)))

# ::snt Motherclucker. Thanks for clarifying.
# ::tokens ["Motherclucker", ".", "Thanks", "for", "clarifying", "."]
# ::lemmas ["Motherclucker", ".", "thank", "for", "clarify", "."]
(c6-2 / multi-sentence
      :snt1 (c6-3 / person
                  :name (c6-1 / name
                              :op1 "Motherclucker"))
      :snt2 (c6-6 / thank-01
                  :ARG0 (c6-5 / i)
                  :ARG1 (c6-0 / you)
                  :ARG2 (c6-4 / clarify-10
                              :ARG0 c6-0)))

# ::snt What youre saying is theyre recreating a whole new ctrain ?
# ::tokens ["What", "you", "re", "saying", "is", "they", "re", "recreating", "a", "whole", "new", "ctrain", "?"]
# ::lemmas ["what", "you", "re", "say", "be", "they", "re", "recreate", "a", "whole", "new", "ctrain", "?"]
(c7-2 / say-01
      :polarity (c7-6 / amr-unknown)
      :ARG0 (c7-0 / you)
      :ARG1 (c7-3 / recreate-01
                  :ARG0 (c7-5 / they)
                  :ARG1 (c7-7 / train
                              :ARG1-of (c7-1 / new-01)
                              :mod (c7-4 / whole))))

# ::snt Maybe they will rename some roads and parks while they are at it. No sense only going halfway
# ::tokens ["Maybe", "they", "will", "rename", "some", "roads", "and", "parks", "while", "they", "are", "at", "it", ".", "No", "sense", "only", "going", "halfway"]
# ::lemmas ["maybe", "they", "will", "rename", "some", "road", "and", "park", "while", "they", "be", "at", "it", ".", "no", "sense", "only", "go", "halfway"]
(c8-3 / multi-sentence
      :snt1 (c8-8 / possible-01
                  :ARG1 (c8-6 / rename-01
                              :ARG0 (c8-9 / they)
                              :ARG1 (c8-11 / and
                                           :op1 (c8-13 / road
                                                       :mod (c8-5 / some))
                                           :op2 (c8-4 / park
                                                      :mod (c8-0 / some)))
                              :time (c8-2 / be-located-at-91
                                          :ARG1 c8-9
                                          :ARG2 (c8-10 / it))))
      :snt2 (c8-14 / sense-02
                   :ARG1 (c8-12 / go-01
                                :extent (c8-7 / halfway)
                                :mod (c8-1 / only))
                   :polarity -))

# ::snt I wish your parents had used the rhyme method.
# ::tokens ["I", "wish", "your", "parents", "had", "used", "the", "rhyme", "method", "."]
# ::lemmas ["i", "wish", "your", "parent", "have", "use", "the", "rhyme", "method", "."]
(c9-6 / wish-01
      :ARG0 (c9-7 / i)
      :ARG1 (c9-8 / use-01
                  :ARG0 (c9-5 / person
                              :ARG0-of (c9-4 / have-rel-role-91
                                             :ARG1 (c9-0 / you)
                                             :ARG2 (c9-2 / parent)))
                  :ARG1 (c9-1 / method
                              :mod (c9-3 / rhyme))))

# ::snt Dont understand any of the moves tonight. Madsen hasnt gotten anyone out this Series, and had a bad feeling about Kenley. This is over.
# ::tokens ["Do", "nt", "understand", "any", "of", "the", "moves", "tonight", ".", "Madsen", "has", "nt", "gotten", "anyone", "out", "this", "Series", ",", "and", "had", "a", "bad", "feeling", "about", "Kenley", ".", "This", "is", "over", "."]
# ::lemmas ["do", "not", "understand", "any", "of", "the", "move", "tonight", ".", "Madsen", "have", "not", "get", "anyone", "out", "this", "Series", ",", "and", "have", "a", "bad", "feeling", "about", "Kenley", ".", "this", "be", "over", "."]
(c10-11 / multi-sentence
        :snt1 (c10-16 / understand-01
                      :ARG0 (c10-21 / i)
                      :ARG1 (c10-3 / move-02
                                   :mod (c10-8 / any))
                      :time (c10-23 / date-entity
                                    :dayperiod (c10-18 / night)
                                    :mod (c10-6 / today))
                      :polarity -)
        :snt2 (c10-5 / and
                     :op1 (c10-7 / get-05
                                 :ARG0 (c10-19 / person
                                               :name (c10-13 / name
                                                             :op1 "Madsen"))
                                 :ARG1 (c10-4 / anyone)
                                 :ARG2 (c10-2 / out
                                              :op1 (c10-0 / series
                                                          :mod (c10-15 / this)))
                                 :polarity -)
                     :op2 (c10-17 / feel-01
                                  :ARG0 (c10-12 / person
                                                :name (c10-20 / name
                                                              :op1 "Madsen"))
                                  :ARG1 (c10-10 / bad-07)
                                  :ARG2 (c10-1 / person
                                               :name (c10-14 / name
                                                             :op1 "Kenley"))))
        :snt3 (c10-9 / over-01
                     :ARG1 (c10-22 / this)))

# ::snt You really wanted Pearce facing a lefty specialist? This game is law of averages, Sox have the superior team, had lots of bad breaks last night
# ::tokens ["You", "really", "wanted", "Pearce", "facing", "a", "lefty", "specialist", "?", "This", "game", "is", "law", "of", "averages", ",", "Sox", "have", "the", "superior", "team", ",", "had", "lots", "of", "bad", "breaks", "last", "night"]
# ::lemmas ["you", "really", "want", "Pearce", "face", "a", "lefty", "specialist", "?", "this", "game", "be", "law", "of", "average", ",", "Sox", "have", "the", "superior", "team", ",", "have", "lot", "of", "bad", "break", "last", "night"]
(c11-14 / multi-sentence
        :snt1 (c11-23 / want-01
                      :polarity (c11-9 / amr-unknown)
                      :ARG0 (c11-4 / you)
                      :ARG1 (c11-18 / face-01
                                    :ARG0 (c11-21 / person
                                                  :name (c11-19 / name
                                                                :op1 "Pearce"))
                                    :ARG1 (c11-15 / person
                                                  :ARG0-of (c11-0 / specialize-01)
                                                  :ARG1-of (c11-2 / left-19)))
                      :ARG1-of (c11-20 / real-04))
        :snt2 (c11-11 / law
                      :mod (c11-7 / average)
                      :domain (c11-10 / game
                                      :mod (c11-8 / this)))
        :snt3 (c11-5 / have-03
                     :ARG0 (c11-17 / team
                                   :name (c11-16 / name
                                                 :op1 "Sox"))
                     :ARG1 (c11-24 / team
                                   :ARG1-of (c11-3 / superior-01)))
        :snt4 (c11-13 / break-19
                      :quant (c11-6 / lot)
                      :ARG1-of (c11-1 / bad-07)
                      :time (c11-25 / date-entity
                                    :dayperiod (c11-22 / night)
                                    :mod (c11-12 / yesterday))))

# ::snt Rhodes, Sunderland and the entire coaching staff need to all go. Start over. We are back to the Tillman and Maccioca days
# ::tokens ["Rhodes", ",", "Sunderland", "and", "the", "entire", "coaching", "staff", "need", "to", "all", "go", ".", "Start", "over", ".", "We", "are", "back", "to", "the", "Tillman", "and", "Maccioca", "days"]
# ::lemmas ["Rhodes", ",", "Sunderland", "and", "the", "entire", "coaching", "staff", "need", "to", "all", "go", ".", "start", "over", ".", "we", "be", "back", "to", "the", "Tillman", "and", "Maccioca", "days"]
(c12-11 / multi-sentence
        :snt1 (c12-17 / need-01
                      :ARG0 (c12-8 / and
                                   :op1 (c12-19 / person
                                                :name (c12-13 / name
                                                              :op1 "Rhodes"))
                                   :op2 (c12-7 / team
                                               :name (c12-20 / name
                                                             :op1 "Sunderland"))
                                   :op3 (c12-12 / person
                                                :ARG2-of (c12-0 / staff-01
                                                                :ARG1 (c12-14 / coach-01))
                                                :mod (c12-18 / entire)))
                      :ARG1 (c12-9 / go-02
                                   :ARG0 c12-8
                                   :mod (c12-6 / all)))
        :snt2 (c12-3 / start-over-08
                     :ARG0 (c12-4 / you)
                     :mode imperative)
        :snt3 (c12-10 / back-02
                      :ARG1 (c12-21 / we)
                      :ARG2 (c12-5 / and
                                   :op1 (c12-23 / day
                                                :mod (c12-2 / person
                                                            :name (c12-16 / name
                                                                          :op1 "Tillman")))
                                   :op2 (c12-15 / day
                                                :mod (c12-1 / person
                                                            :name (c12-22 / name
                                                                          :op1 "Maccioca"))))))

# ::snt I hope so. Need to say bye bye to Maas and rest of staff.
# ::tokens ["I", "hope", "so", ".", "Need", "to", "say", "bye", "bye", "to", "Maas", "and", "rest", "of", "staff", "."]
# ::lemmas ["i", "hope", "so", ".", "need", "to", "say", "bye", "bye", "to", "Maas", "and", "rest", "of", "staff", "."]
(c13-3 / multi-sentence
       :snt1 (c13-6 / hope-01
                    :ARG0 (c13-9 / i)
                    :ARG1 (c13-4 / so))
       :snt2 (c13-2 / need-01
                    :ARG1 (c13-0 / say-01
                                 :ARG1 (c13-1 / bye)
                                 :ARG2 (c13-10 / and
                                               :op1 (c13-7 / person
                                                           :name (c13-8 / name
                                                                        :op1 "Maas"))
                                               :op2 (c13-5 / rest
                                                           :ARG2-of (c13-11 / staff-01))))))

# ::snt I bet he waits to see what happens the rest of this season and the start of the off season before he decides
# ::tokens ["I", "bet", "he", "waits", "to", "see", "what", "happens", "the", "rest", "of", "this", "season", "and", "the", "start", "of", "the", "off", "season", "before", "he", "decides"]
# ::lemmas ["i", "bet", "he", "wait", "to", "see", "what", "happen", "the", "rest", "of", "this", "season", "and", "the", "start", "of", "the", "off", "season", "before", "he", "decide"]
(c14-2 / bet-01
       :ARG0 (c14-10 / i)
       :ARG2 (c14-8 / wait-01
                    :ARG1 (c14-6 / he)
                    :ARG2 (c14-3 / see-01
                                 :ARG0 c14-6
                                 :ARG1 (c14-11 / and
                                               :op1 (c14-5 / rest
                                                           :part-of (c14-0 / season
                                                                           :mod (c14-9 / this)))
                                               :op2 (c14-13 / start-01
                                                            :ARG1 (c14-4 / season
                                                                         :mod (c14-1 / off)))))
                    :time (c14-7 / before
                                 :op1 (c14-12 / decide-01
                                              :ARG0 c14-6))))

# ::snt Perhaps that's why he's thinking hard about where he plays in the future.
# ::tokens ["Perhaps", "that", "'s", "why", "he", "'s", "thinking", "hard", "about", "where", "he", "plays", "in", "the", "future", "."]
# ::lemmas ["perhaps", "that", "be", "why", "he", "be", "think", "hard", "about", "where", "he", "play", "in", "the", "future", "."]
(c15-3 / possible-01
       :ARG1 (c15-4 / cause-01
                    :ARG0 (c15-6 / that)
                    :ARG1 (c15-8 / think-01
                                 :ARG0 (c15-2 / he)
                                 :ARG2 (c15-7 / thing
                                              :ARG2-of (c15-1 / play-01
                                                              :ARG0 c15-2
                                                              :time (c15-0 / future)))
                                 :ARG1-of (c15-5 / hard-02))))

# ::snt At the same time what are the TWolves doing? Just trade the guy already. Its such a shit show
# ::tokens ["At", "the", "same", "time", "what", "are", "the", "TWolves", "doing", "?", "Just", "trade", "the", "guy", "already", ".", "Its", "such", "a", "shit", "show"]
# ::lemmas ["at", "the", "same", "time", "what", "be", "the", "TWolves", "do", "?", "just", "trade", "the", "guy", "already", ".", "its", "such", "a", "shit", "show"]
(c17-2 / multi-sentence
       :snt1 (c17-10 / do-02
                     :ARG0 (c17-5 / wolf
                                  :quant 2)
                     :ARG1 (c17-8 / amr-unknown)
                     :time (c17-6 / time
                                  :ARG1-of (c17-3 / same-01)))
       :snt2 (c17-12 / trade-01
                     :ARG0 (c17-1 / you)
                     :ARG1 (c17-9 / guy)
                     :time (c17-7 / already)
                     :mod (c17-11 / just)
                     :mode imperative)
       :snt3 (c17-0 / show-04
                    :ARG1 (c17-13 / shit)
                    :mod (c17-4 / such)))

# ::snt Gotcha. Maybe if he was dressed as Fat Bastard it would be better?
# ::tokens ["Gotcha", ".", "Maybe", "if", "he", "was", "dressed", "as", "Fat", "Bastard", "it", "would", "be", "better", "?"]
# ::lemmas ["Gotcha", ".", "maybe", "if", "he", "be", "dress", "as", "Fat", "Bastard", "it", "would", "be", "well", "?"]
(c18-1 / multi-sentence
       :snt1 (c18-11 / get-02
                     :ARG0 (c18-0 / you)
                     :ARG1 (c18-9 / it))
       :snt2 (c18-6 / possible-01
                    :ARG1 (c18-10 / good-02
                                  :ARG1 (c18-12 / dress-01
                                                :ARG1 (c18-5 / he)
                                                :ARG2 (c18-2 / person
                                                             :name (c18-3 / name
                                                                          :op1 "Fat"
                                                                          :op2 "Bassard")))
                                  :ARG2-of (c18-8 / have-degree-91
                                                  :ARG1 c18-12
                                                  :ARG3 (c18-7 / more)))
                    :polarity (c18-4 / amr-unknown)))

# ::snt That's all makeup and prosthetics. Plus he spoke with a British accent.
# ::tokens ["That", "'s", "all", "makeup", "and", "prosthetics", ".", "Plus", "he", "spoke", "with", "a", "British", "accent", "."]
# ::lemmas ["that", "be", "all", "makeup", "and", "prosthetic", ".", "plus", "he", "speak", "with", "a", "British", "accent", "."]
(c19-0 / multi-sentence
       :snt1 (c19-4 / and
                    :op1 (c19-5 / makeup)
                    :op2 (c19-6 / prosthet)
                    :domain (c19-11 / that)
                    :mod (c19-10 / all))
       :snt2 (c19-2 / speak-01
                    :ARG0 (c19-7 / he)
                    :manner (c19-9 / accent
                                   :mod (c19-8 / country
                                               :name (c19-1 / name
                                                            :op1 "Great"
                                                            :op2 "Britain")))
                    :mod (c19-3 / plus)))

# ::snt Hes seen better days judging from that picture.
# ::tokens ["He", "s", "seen", "better", "days", "judging", "from", "that", "picture", "."]
# ::lemmas ["he", "s", "see", "well", "day", "judge", "from", "that", "picture", "."]
(c20-1 / see-01
       :ARG0 (c20-2 / he)
       :ARG1 (c20-8 / day
                    :ARG1-of (c20-4 / have-degree-91
                                    :ARG2 (c20-7 / good-02
                                                 :ARG1 c20-8)
                                    :ARG3 (c20-0 / more)))
       :ARG1-of (c20-5 / judge-01
                       :ARG0 c20-2
                       :ARG2 (c20-3 / picture
                                    :mod (c20-6 / that))))

# ::snt As much as I like Mike's comedy it didn't translate well to hosting the gameshow. The original was great with the late Chuck Barris and the late Gene-Gene, the Dancing Machine!
# ::tokens ["As", "much", "as", "I", "like", "Mike", "'s", "comedy", "it", "did", "n't", "translate", "well", "to", "hosting", "the", "gameshow", ".", "The", "original", "was", "great", "with", "the", "late", "Chuck", "Barris", "and", "the", "late", "Gene", "-", "Gene", ",", "the", "Dancing", "Machine", "!"]
# ::lemmas ["as", "much", "as", "i", "like", "Mike", "'s", "comedy", "it", "do", "not", "translate", "well", "to", "host", "the", "gameshow", ".", "the", "original", "be", "great", "with", "the", "late", "Chuck", "Barris", "and", "the", "late", "Gene", "-", "Gene", ",", "the", "Dancing", "Machine", "!"]
(c21-11 / multi-sentence
        :snt1 (c21-8 / translate-01
                     :ARG1 (c21-14 / comedy
                                   :poss (c21-17 / person
                                                 :name (c21-16 / name
                                                               :op1 "Mike")))
                     :ARG2 (c21-4 / host-01
                                  :ARG1 (c21-9 / gamehow))
                     :ARG1-of (c21-19 / well-09)
                     :concession (c21-0 / like-01
                                        :ARG0 (c21-20 / i)
                                        :ARG1 c21-14)
                     :polarity -)
        :snt2 (c21-1 / great
                     :domain (c21-3 / original)
                     :prep-with (c21-7 / and
                                       :op1 (c21-12 / person
                                                    :name (c21-13 / name
                                                                  :op1 "Chuck"
                                                                  :op2 "Barris")
                                                    :time (c21-10 / late))
                                       :op2 (c21-2 / person
                                                   :name (c21-18 / name
                                                                 :op1 "Gene-Gene")
                                                   :time (c21-5 / late))
                                       :mod (c21-6 / music
                                                   :name (c21-15 / name
                                                                 :op1 "Dancing"
                                                                 :op2 "Machine")))))

# ::snt Ugh. Not sure Id like it.
# ::tokens ["Ugh", ".", "Not", "sure", "I", "d", "like", "it", "."]
# ::lemmas ["Ugh", ".", "not", "sure", "i", "d", "like", "it", "."]
(c22-0 / multi-sentence
       :snt1 (c22-5 / ugh
                    :mode expressive)
       :snt2 (c22-1 / sure-02
                    :ARG0 (c22-4 / i)
                    :ARG1 (c22-3 / like-01
                                 :ARG0 c22-4
                                 :ARG1 (c22-2 / it))
                    :polarity -))

# ::snt Yes, it was recently remade with Mike Myers as host. But he has so much makeup and prosthetics, that he's almost unrecognizable.
# ::tokens ["Yes", ",", "it", "was", "recently", "remade", "with", "Mike", "Myers", "as", "host", ".", "But", "he", "has", "so", "much", "makeup", "and", "prosthetics", ",", "that", "he", "'s", "almost", "unrecognizable", "."]
# ::lemmas ["yes", ",", "it", "be", "recently", "remade", "with", "Mike", "Myers", "as", "host", ".", "but", "he", "have", "so", "much", "makeup", "and", "prosthetic", ",", "that", "he", "be", "almost", "unrecognizable", "."]
(c23-8 / multi-sentence
       :snt1 (c23-15 / remade-01
                     :ARG1 (c23-18 / it)
                     :ARG2 (c23-16 / person
                                   :name (c23-14 / name
                                                 :op1 "Mike"
                                                 :op2 "Myers")
                                   :ARG0-of (c23-4 / host-01))
                     :time (c23-2 / recent))
       :snt2 (c23-11 / contrast-01
                     :ARG2 (c23-17 / have-03
                                   :ARG0 (c23-3 / he)
                                   :ARG1 (c23-7 / and
                                                :op1 (c23-5 / makeup)
                                                :op2 (c23-9 / prosthet)
                                                :ARG1-of (c23-12 / have-quant-91
                                                                 :ARG2 (c23-13 / much)
                                                                 :ARG3 (c23-0 / so)
                                                                 :ARG6 (c23-1 / possible-01
                                                                              :ARG1 (c23-10 / recognize-02
                                                                                            :ARG1 c23-3
                                                                                            :mod (c23-6 / almost))
                                                                              :polarity -))))))

# ::snt Original. Didnt know they remade it.
# ::tokens ["Original", ".", "Did", "nt", "know", "they", "remade", "it", "."]
# ::lemmas ["original", ".", "do", "not", "know", "they", "remade", "it", "."]
(c24-1 / multi-sentence
       :snt1 (c24-0 / original)
       :snt2 (c24-3 / know-01
                    :ARG1 (c24-2 / remade-01
                                 :ARG0 (c24-5 / they)
                                 :ARG1 (c24-4 / it))
                    :polarity -))

# ::snt Original or new version or both?
# ::tokens ["Original", "or", "new", "version", "or", "both", "?"]
# ::lemmas ["original", "or", "new", "version", "or", "both", "?"]
(c25-5 / amr-choice
       :op1 (c25-3 / version
                   :ARG1-of (c25-0 / original-02))
       :op2 (c25-4 / version
                   :ARG1-of (c25-2 / new-01))
       :op3 (c25-1 / both))

# ::snt Ugh, when will they get it right?! Will they ever get it right?! What do you think?!
# ::tokens ["Ugh", ",", "when", "will", "they", "get", "it", "right", "?", "!", "Will", "they", "ever", "get", "it", "right", "?", "!", "What", "do", "you", "think", "?", "!"]
# ::lemmas ["Ugh", ",", "when", "will", "they", "get", "it", "right", "?", "!", "will", "they", "ever", "get", "it", "right", "?", "!", "what", "do", "you", "think", "?", "!"]
(c26-1 / multi-sentence
       :snt1 (c26-9 / get-01
                    :ARG0 (c26-8 / they)
                    :ARG1 (c26-7 / it)
                    :ARG2 (c26-3 / right-06
                                 :ARG1 c26-8
                                 :ARG2 (c26-2 / it))
                    :time (c26-4 / amr-unknown)
                    :mod (c26-13 / ugh
                                 :mode expressive))
       :snt2 (c26-10 / get-01
                     :ARG0 (c26-15 / they)
                     :ARG1 (c26-12 / it)
                     :time (c26-5 / ever)
                     :ARG2-of c26-3)
       :polarity (c26-11 / amr-unknown)
       :snt3 (c26-14 / think-01
                     :ARG0 (c26-0 / you)
                     :ARG1 (c26-6 / amr-unknown)))

# ::snt Yup, youve been gonged.
# ::tokens ["Yup", ",", "you", "ve", "been", "gonged", "."]
# ::lemmas ["yup", ",", "you", "ve", "be", "gong", "."]
(c27-0 / gag-01
       :ARG1 (c27-2 / you)
       :mod (c27-1 / yup))

# ::snt Fun show. I was on with a couple buddies singin' and playing guitar back in . He was a decent guy. Friendly to us all.
# ::tokens ["Fun", "show", ".", "I", "was", "on", "with", "a", "couple", "buddies", "singin", "'", "and", "playing", "guitar", "back", "in", ".", "He", "was", "a", "decent", "guy", ".", "Friendly", "to", "us", "all", "."]
# ::lemmas ["Fun", "show", ".", "i", "be", "on", "with", "a", "couple", "buddy", "singin", "'", "and", "play", "guitar", "back", "in", ".", "he", "be", "a", "decent", "guy", ".", "friendly", "to", "we", "all", "."]
(c28-3 / multi-sentence
       :snt1 (c28-4 / show-04
                    :ARG1-of (c28-0 / fun-01))
       :snt2 (c28-13 / and
                     :op1 (c28-1 / sing-01
                                 :ARG0 (c28-12 / i)
                                 :accompanier (c28-2 / buddy
                                                     :quant (c28-10 / couple)))
                     :op2 (c28-7 / play-11
                                 :ARG0 c28-12
                                 :ARG1 (c28-14 / guitar)
                                 :time (c28-6 / back-02)))
       :snt3 (c28-15 / guy
                     :mod (c28-5 / decent)
                     :domain (c28-8 / he))
       :snt4 (c28-9 / friendly-01
                    :ARG1 c28-8
                    :ARG2 (c28-11 / we
                                  :mod (c28-16 / all))))

# ::snt A natural plant formation, central to the plot of the movie, has been destroyed since the movie was made.
# ::tokens ["A", "natural", "plant", "formation", ",", "central", "to", "the", "plot", "of", "the", "movie", ",", "has", "been", "destroyed", "since", "the", "movie", "was", "made", "."]
# ::lemmas ["a", "natural", "plant", "formation", ",", "central", "to", "the", "plot", "of", "the", "movie", ",", "have", "be", "destroy", "since", "the", "movie", "be", "make", "."]
(c29-8 / destroy-01
       :ARG1 (c29-0 / form-01
                    :ARG1 (c29-6 / plant
                                 :ARG1-of (c29-1 / natural-03))
                    :ARG1-of (c29-7 / central-02
                                    :ARG2 (c29-2 / plot-01
                                                 :ARG1 (c29-3 / movie))))
       :time (c29-4 / since
                    :op1 (c29-5 / make-01)))

# ::snt Watch for a silent cameo appearance by the Three Stooges, dressed as firefighters, near the end of the movie.
# ::tokens ["Watch", "for", "a", "silent", "cameo", "appearance", "by", "the", "Three", "Stooges", ",", "dressed", "as", "firefighters", ",", "near", "the", "end", "of", "the", "movie", "."]
# ::lemmas ["watch", "for", "a", "silent", "cameo", "appearance", "by", "the", "Three", "Stooges", ",", "dress", "as", "firefighter", ",", "near", "the", "end", "of", "the", "movie", "."]
(c30-9 / watch-out-02
       :ARG1 (c30-10 / appear-01
                     :ARG1 (c30-7 / person
                                  :name (c30-1 / name
                                               :op1 "The"
                                               :op2 "Three"
                                               :op3 "Stoops")
                                  :ARG1-of (c30-11 / dress-01
                                                   :ARG2 (c30-2 / person
                                                                :ARG0-of (c30-0 / fight-01
                                                                                :ARG1 (c30-8 / fire)))))
                     :mod (c30-3 / silent)
                     :time (c30-6 / near-02
                                  :ARG2 (c30-5 / end-01
                                               :ARG1 (c30-4 / movie)))))

# ::snt You're very welcome, Tim.This one is good, too, and it has a very large cast.
# ::tokens ["You", "'re", "very", "welcome", ",", "Tim", ".", "This", "one", "is", "good", ",", "too", ",", "and", "it", "has", "a", "very", "large", "cast", "."]
# ::lemmas ["you", "be", "very", "welcome", ",", "Tim", ".", "this", "one", "be", "good", ",", "too", ",", "and", "it", "have", "a", "very", "large", "cast", "."]
(c31-6 / welcome-01
       :ARG1 (c31-4 / person
                    :name (c31-1 / name
                                 :op1 "Tim"))
       :degree (c31-2 / very)
       :ARG1-of (c31-7 / cause-01
                       :ARG0 (c31-10 / and
                                     :op1 (c31-11 / good-02
                                                  :ARG1 (c31-0 / one
                                                               :mod (c31-9 / this))
                                                  :mod (c31-13 / too))
                                     :op2 (c31-3 / have-03
                                                 :ARG0 c31-0
                                                 :ARG1 (c31-12 / cast
                                                               :mod (c31-5 / large
                                                                           :degree (c31-8 / very)))))))

# ::snt I've been a blogger for years.The link in my profile is a clickable top-20 list, which is overdue for an update.
# ::tokens ["I", "'ve", "been", "a", "blogger", "for", "years", ".", "The", "link", "in", "my", "profile", "is", "a", "clickable", "top-20", "list", ",", "which", "is", "overdue", "for", "an", "update", "."]
# ::lemmas ["i", "'ve", "be", "a", "blogger", "for", "years", ".", "the", "link", "in", "my", "profile", "be", "a", "clickable", "top-20", "list", ",", "which", "be", "overdue", "for", "an", "update", "."]
(c32-3 / multi-sentence
       :snt1 (c32-6 / person
                    :ARG0-of (c32-1 / blog-01)
                    :domain (c32-10 / i)
                    :duration (c32-5 / multiple
                                     :op1 (c32-11 / temporal-quantity
                                                  :unit (c32-2 / year)
                                                  :quant 1)))
       :snt2 (c32-7 / list
                    :mod (c32-13 / top
                                 :quant 20)
                    :ARG1-of (c32-8 / click-01
                                    :ARG1-of (c32-4 / possible-01))
                    :ARG1-of (c32-0 / overdue
                                    :prep-for (c32-12 / update-01))
                    :location (c32-9 / profile
                                     :poss c32-10)))

# ::snt no...I will now though! Thank you!
# ::tokens ["no", "...", "I", "will", "now", "though", "!", "Thank", "you", "!"]
# ::lemmas ["no", "...", "i", "will", "now", "though", "!", "thank", "you", "!"]
(c33-2 / multi-sentence
       :snt1 (c33-3 / have-concession-91
                    :ARG1 (c33-6 / do-02
                                 :ARG0 (c33-4 / i)
                                 :time (c33-1 / now)))
       :snt2 (c33-5 / thank-01
                    :ARG0 c33-4
                    :mode expressive)
       :ARG1 (c33-0 / you))

# ::snt Did you ever watch this? recovers from a depression with the help of some friends.David
# ::tokens ["Did", "you", "ever", "watch", "this", "?", "recovers", "from", "a", "depression", "with", "the", "help", "of", "some", "friends", ".", "David"]
# ::lemmas ["do", "you", "ever", "watch", "this", "?", "recover", "from", "a", "depression", "with", "the", "help", "of", "some", "friend", ".", "David"]
(c34-2 / multi-sentence
       :snt1 (c34-11 / watch-01
                     :ARG0 (c34-1 / you)
                     :ARG1 (c34-13 / this)
                     :time (c34-8 / ever)
                     :polarity (c34-6 / amr-unknown))
       :snt2 (c34-7 / recover-01
                    :ARG1 (c34-10 / person
                                  :name (c34-3 / name
                                               :op1 "David"))
                    :ARG2 (c34-14 / depress-01
                                  :ARG1 c34-10)
                    :ARG1-of (c34-9 / help-01
                                    :ARG0 (c34-4 / person
                                                 :ARG0-of (c34-12 / have-rel-role-91
                                                                  :ARG1 c34-10
                                                                  :ARG2 (c34-0 / friend))
                                                 :quant (c34-5 / some)))))

# ::snt Great Hat - I'm a Bawlamoron Too
# ::tokens ["Great", "Hat", "-", "I", "'m", "a", "Bawlamoron", "Too"]
# ::lemmas ["Great", "Hat", "-", "i", "be", "a", "Bawlamoron", "too"]
(c35-5 / and
       :op1 (c35-2 / person
                   :name (c35-1 / name
                                :op1 "Great"
                                :op2 "Hat"))
       :op2 (c35-0 / bawlamoron
                   :domain (c35-4 / i)
                   :mod (c35-3 / too)))

# ::snt Awww,very sad. First I heard that he passed away
# ::tokens ["Awww", ",", "very", "sad", ".", "First", "I", "heard", "that", "he", "passed", "away"]
# ::lemmas ["Awww", ",", "very", "sad", ".", "First", "i", "hear", "that", "he", "pass", "away"]
(c36-1 / multi-sentence
       :snt1 (c36-2 / sad-02
                    :degree (c36-3 / very)
                    :mod (c36-4 / ewww
                                :mode expressive))
       :snt2 (c36-5 / hear-01
                    :ARG0 (c36-8 / i)
                    :ARG1 (c36-6 / pass-away-16
                                 :ARG1 (c36-7 / he))
                    :ord (c36-0 / ordinal-entity
                                :value 1)))

# ::snt Optimism ... perhaps unfounded, but appreciated.
# ::tokens ["Optimism", "...", "perhaps", "unfounded", ",", "but", "appreciated", "."]
# ::lemmas ["optimism", "...", "perhaps", "unfounded", ",", "but", "appreciate", "."]
(c37-5 / and
       :op1 (c37-0 / optimism)
       :op2 (c37-3 / contrast-01
                   :ARG1 (c37-2 / possible-01
                                :ARG1 (c37-1 / found-01
                                             :polarity -))
                   :ARG2 (c37-4 / appreciate-02
                                :ARG1 c37-0)))

# ::snt That move stunned the whole garden. Havent seen anything like that in forever. The team shows theyll work hard. The better they play, the better value theyll get for guys they need to move.
# ::tokens ["That", "move", "stunned", "the", "whole", "garden", ".", "Have", "nt", "seen", "anything", "like", "that", "in", "forever", ".", "The", "team", "shows", "they", "ll", "work", "hard", ".", "The", "better", "they", "play", ",", "the", "better", "value", "they", "ll", "get", "for", "guys", "they", "need", "to", "move", "."]
# ::lemmas ["that", "move", "stun", "the", "whole", "garden", ".", "have", "not", "see", "anything", "like", "that", "in", "forever", ".", "the", "team", "show", "they", "ll", "work", "hard", ".", "the", "well", "they", "play", ",", "the", "well", "value", "they", "ll", "get", "for", "guy", "they", "need", "to", "move", "."]
(c38-15 / multi-sentence
        :snt1 (c38-0 / stun-01
                     :ARG0 (c38-9 / move
                                  :mod (c38-12 / that))
                     :ARG1 (c38-13 / garden
                                   :mod (c38-26 / whole)))
        :snt2 (c38-6 / see-01
                     :ARG0 (c38-25 / person
                                   :name (c38-23 / name
                                                 :op1 "Havent"))
                     :ARG1 (c38-11 / anything
                                   :ARG1-of (c38-24 / resemble-01
                                                    :ARG2 (c38-20 / that)))
                     :duration (c38-22 / forever))
        :snt3 (c38-5 / show-01
                     :ARG0 (c38-28 / team)
                     :ARG1 (c38-1 / work-01
                                  :ARG0 c38-28
                                  :manner (c38-10 / hard-02)))
        :snt4 (c38-19 / correlate-91
                      :ARG1 (c38-21 / more
                                    :ARG3-of (c38-27 / have-degree-91
                                                     :ARG1 (c38-16 / play-01
                                                                   :ARG0 c38-28)
                                                     :ARG2 (c38-3 / good-03
                                                                  :ARG1 c38-16)))
                      :ARG2 (c38-18 / more
                                    :ARG3-of (c38-8 / have-degree-91
                                                    :ARG1 (c38-7 / value
                                                                 :ARG1-of (c38-4 / get-01
                                                                                 :ARG0 c38-28
                                                                                 :ARG2 (c38-14 / guy
                                                                                               :ARG1-of (c38-17 / need-01
                                                                                                                :ARG0 c38-28))))
                                                    :ARG2 (c38-2 / good-03
                                                                 :ARG1 c38-7)))))

# ::snt Maybe...didnt see him play
# ::tokens ["Maybe", "...", "didnt", "see", "him", "play"]
# ::lemmas ["maybe", "...", "didnt", "see", "he", "play"]
(c39-0 / multi-sentence
       :snt1 (c39-4 / possible-01)
       :snt2 (c39-2 / see-01
                    :ARG1 (c39-1 / play-01
                                 :ARG0 (c39-3 / he))
                    :polarity -))

# ::snt Greschner?
# ::tokens ["Greschner", "?"]
# ::lemmas ["Greschner", "?"]
(c40-1 / person
       :polarity (c40-2 / amr-unknown)
       :name (c40-0 / name
                    :op1 "Greschner"))

# ::snt What was Sam talking about when he said it looked like doing that? Del Zoto? Kevin Lowe?
# ::tokens ["What", "was", "Sam", "talking", "about", "when", "he", "said", "it", "looked", "like", "doing", "that", "?", "Del", "Zoto", "?", "Kevin", "Lowe", "?"]
# ::lemmas ["what", "be", "Sam", "talk", "about", "when", "he", "say", "it", "look", "like", "do", "that", "?", "Del", "Zoto", "?", "Kevin", "Lowe", "?"]
(c41-1 / multi-sentence
       :snt1 (c41-8 / talk-01
                    :ARG0 (c41-5 / person
                                 :name (c41-0 / name
                                              :op1 "Sam"))
                    :ARG1 (c41-10 / amr-unknown)
                    :time (c41-2 / say-01
                                 :ARG0 c41-5
                                 :ARG1 (c41-6 / look-02
                                              :ARG0 (c41-9 / it)
                                              :ARG1 (c41-12 / do-02
                                                            :ARG1 (c41-14 / that)))))
       :snt2 (c41-3 / person
                    :name (c41-4 / name
                                 :op1 "Del"
                                 :op2 "Zoto"))
       :snt3 (c41-13 / person
                     :name (c41-7 / name
                                  :op1 "Kevin"
                                  :op2 "Lowes")
                     :polarity (c41-11 / amr-unknown)))

# ::snt For tickets available through , visit For tickets available through , visit
# ::tokens ["For", "tickets", "available", "through", ",", "visit", "For", "tickets", "available", "through", ",", "visit"]
# ::lemmas ["for", "ticket", "available", "through", ",", "visit", "for", "ticket", "available", "through", ",", "visit"]
(c42-1 / visit-01
       :ARG0 (c42-0 / you)
       :purpose (c42-3 / ticket
                       :ARG2-of (c42-5 / available-02))
       :purpose (c42-2 / visit-01
                       :ARG0 c42-0
                       :ARG1 (c42-6 / ticket
                                    :ARG2-of (c42-4 / available-02))
                       :mode imperative)
       :mode imperative)

# ::snt For tickets available through Hull Comedy Festival, visit For HCF (Free Fringe) events, simply turn up on the night and pay what you can into a bucket at then end.For tickets available through visit
# ::tokens ["For", "tickets", "available", "through", "Hull", "Comedy", "Festival", ",", "visit", "For", "HCF", "(", "Free", "Fringe", ")", "events", ",", "simply", "turn", "up", "on", "the", "night", "and", "pay", "what", "you", "can", "into", "a", "bucket", "at", "then", "end", ".", "For", "tickets", "available", "through", "visit"]
# ::lemmas ["for", "ticket", "available", "through", "Hull", "Comedy", "Festival", ",", "visit", "for", "HCF", "(", "Free", "Fringe", ")", "event", ",", "simply", "turn", "up", "on", "the", "night", "and", "pay", "what", "you", "can", "into", "a", "bucket", "at", "then", "end", ".", "for", "ticket", "available", "through", "visit"]
(c43-6 / and
       :op1 (c43-3 / visit-01
                   :ARG0 (c43-2 / you)
                   :ARG1 (c43-17 / event
                                 :name (c43-16 / name
                                               :op1 "Hull"
                                               :op2 "Comedy"
                                               :op3 "Festival"))
                   :mode imperative)
       :op2 (c43-1 / visit-01
                   :ARG0 c43-2
                   :ARG1 (c43-7 / event
                                :name (c43-11 / name
                                              :op1 "Free"
                                              :op2 "Fringe")
                                :ARG1-of (c43-9 / mean-01
                                                :ARG2 (c43-12 / event
                                                              :name (c43-18 / name
                                                                            :op1 "HCF"))))
                   :ARG1-of (c43-0 / simple-02)
                   :time (c43-21 / date-entity
                                 :dayperiod (c43-13 / night))
                   :mode imperative)
       :op3 (c43-19 / pay-01
                    :ARG0 c43-2
                    :ARG1 (c43-5 / thing
                                 :ARG1-of (c43-10 / possible-01))
                    :ARG3 (c43-8 / bucket)
                    :time (c43-15 / then
                                  :op1 (c43-14 / end-01
                                               :ARG1 c43-7))
                    :mode imperative)
       :purpose (c43-20 / ticket
                        :ARG2-of (c43-4 / available-02
                                        :ARG3 c43-17)))

# ::snt SUNDAY: Hysterical Histories - HCF (Free Fringe)Hullarious - HCF (Free Fringe): Cirque Du Kagool (WIP) Hull Comedy FestivalComedy Lounge Presents
# ::tokens ["SUNDAY", ":", "Hysterical", "Histories", "-", "HCF", "(", "Free", "Fringe)Hullarious", "-", "HCF", "(", "Free", "Fringe", "):", "Cirque", "Du", "Kagool", "(", "WIP", ")", "Hull", "Comedy", "FestivalComedy", "Lounge", "Presents"]
# ::lemmas ["SUNDAY", ":", "Hysterical", "Histories", "-", "HCF", "(", "Free", "Fringe)Hullarious", "-", "HCF", "(", "Free", "Fringe", "):", "Cirque", "Du", "Kagool", "(", "WIP", ")", "Hull", "Comedy", "FestivalComedy", "Lounge", "present"]
(c44-15 / and
        :op1 (c44-7 / publication
                    :name (c44-2 / name
                                 :op1 "Hysterical"
                                 :op2 "Histories")
                    :ARG1-of (c44-1 / mean-01
                                    :ARG2 (c44-3 / publication
                                                 :name (c44-6 / name
                                                              :op1 "Free"
                                                              :op2 "Fringe"))))
        :op2 (c44-16 / publication
                     :name (c44-8 / name
                                  :op1 "Hullarious")
                     :ARG1-of (c44-9 / mean-01
                                     :ARG2 (c44-10 / publication
                                                   :name (c44-11 / name
                                                                 :op1 "Free"
                                                                 :op2 "Fringe"))))
        :op3 (c44-0 / festival
                    :name (c44-13 / name
                                  :op1 "Cirque"
                                  :op2 "Du"
                                  :op3 "Kagool")
                    :ARG1-of (c44-12 / mean-01
                                     :ARG2 (c44-14 / publication
                                                   :name (c44-4 / name
                                                                :op1 "WIP")))
                    :op4-of c44-15)
        :name (c44-5 / name
                     :op1 "Hull"
                     :op2 "Comedy"
                     :op3 "Festival")
        :ARG1-of (c44-17 / present-02))

# ::snt :SATURDAY: Tsunamiramirami - HCF (Free Fringe): Competitive Nature (WIP) - HCF (Free Fringe): Fakety Fakety Fake Fake Fake (WIP) - HCF (Free Fringe)The Sitcom Experience: Basil and Co Comedy Show (Mortimer Suite)
# ::tokens [":", "SATURDAY", ":", "Tsunamiramirami", "-", "HCF", "(", "Free", "Fringe", "):", "Competitive", "Nature", "(", "WIP", ")", "-", "HCF", "(", "Free", "Fringe", "):", "Fakety", "Fakety", "Fake", "Fake", "Fake", "(", "WIP", ")", "-", "HCF", "(", "Free", "Fringe)The", "Sitcom", "Experience", ":", "Basil", "and", "Co", "Comedy", "Show", "(", "Mortimer", "Suite", ")"]
# ::lemmas [":", "SATURDAY", ":", "Tsunamiramirami", "-", "HCF", "(", "Free", "Fringe", "):", "Competitive", "Nature", "(", "WIP", ")", "-", "HCF", "(", "Free", "Fringe", "):", "Fakety", "Fakety", "Fake", "Fake", "Fake", "(", "WIP", ")", "-", "HCF", "(", "Free", "fringe)the", "Sitcom", "experience", ":", "Basil", "and", "Co", "Comedy", "Show", "(", "Mortimer", "Suite", ")"]
(c45-7 / multi-sentence
       :snt1 (c45-6 / byline-91
                    :time (c45-18 / date-entity
                                  :weekday (c45-0 / saturday)))
       :snt2 (c45-5 / and
                    :op1 (c45-15 / publication
                                 :name (c45-13 / name
                                               :op1 "HCF")
                                 :ARG1-of (c45-3 / mean-01
                                                 :ARG2 (c45-8 / publication
                                                              :name (c45-9 / name
                                                                           :op1 "Free"
                                                                           :op2 "Fringe"))))
                    :op2 (c45-2 / publication
                                :name (c45-16 / name
                                              :op1 "Competitive"
                                              :op2 "Nature")
                                :ARG1-of (c45-12 / mean-01
                                                 :ARG2 (c45-1 / publication
                                                              :name (c45-11 / name
                                                                            :op1 "Free"
                                                                            :op2 "Fringe"))))
                    :op3 (c45-4 / publication
                                :name (c45-17 / name
                                              :op1 "Fakety"
                                              :op2 "Fakety"
                                              :op3 " Fake"
                                              :op4 " Fake"
                                              :op5 "Fake"
                                              :op6 "(WIP)")
                                :ARG1-of (c45-10 / mean-01
                                                 :ARG2 (c45-19 / publication
                                                               :name (c45-14 / name
                                                                             :op1 "The"
                                                                             :op2 "Sitcom"
                                                                             :op3 "Experience"))))))

# ::snt FRIDAYThe Halls of Ridiculous: Comedy Panel Show Hull Comedy FestivalJeddy Bear and Garys Adult Picinic Hull Comedy FestivalComedy Lounge : Devil May Care : Night of Voices
# ::tokens ["FRIDAYThe", "Halls", "of", "Ridiculous", ":", "Comedy", "Panel", "Show", "Hull", "Comedy", "FestivalJeddy", "Bear", "and", "Garys", "Adult", "Picinic", "Hull", "Comedy", "FestivalComedy", "Lounge", ":", "Devil", "May", "Care", ":", "Night", "of", "Voices"]
# ::lemmas ["FRIDAYThe", "Halls", "of", "Ridiculous", ":", "Comedy", "Panel", "Show", "Hull", "Comedy", "FestivalJeddy", "Bear", "and", "Garys", "Adult", "Picinic", "Hull", "Comedy", "FestivalComedy", "Lounge", ":", "Devil", "may", "care", ":", "night", "of", "voice"]
(c46-0 / festival
       :name (c46-1 / name
                    :op1 "The"
                    :op2 "Halls"
                    :op3 "of"
                    :op4 "Ridiculous:"
                    :op5 "Comedy"
                    :op6 "Panel"
                    :op7 "Show"
                    :op8 "Hull"
                    :op9 "Comedy"
                    :op10 "Festival")
       :ARG1-of (c46-5 / host-01
                       :ARG0 (c46-13 / and
                                     :op1 (c46-6 / person
                                                 :name (c46-7 / name
                                                              :op1 "Jeddy"
                                                              :op2 "Bear"))
                                     :op2 (c46-2 / person
                                                 :name (c46-8 / name
                                                              :op1 "Garys"))))
       :mod (c46-9 / festival
                   :name (c46-11 / name
                                 :op1 "Adult"
                                 :op2 "Picinic"
                                 :op3 "Hull"
                                 :op4 "Comedy"
                                 :op5 "Lounge")
                   :mod (c46-3 / show
                               :name (c46-12 / name
                                             :op1 "Devil"
                                             :op2 "May"
                                             :op3 "Care")
                               :mod c46-3
                               :name (c46-4 / name
                                            :op1 "Night"
                                            :op2 "of"
                                            :op3 "Voices")))
       :time (c46-14 / date-entity
                     :weekday (c46-10 / friday)))

# ::snt Thanks lovely x
# ::tokens ["Thanks", "lovely", "x"]
# ::lemmas ["thank", "lovely", "x"]
(c47-1 / say-01
       :ARG0 (c47-3 / i)
       :ARG1 (c47-4 / thank-01
                    :ARG0 c47-3
                    :ARG1 (c47-0 / you)
                    :mod (c47-2 / lovely))
       :ARG2 c47-0)

# ::snt In IV, Rocky ask Apollo if the match against Drago is really about Apollo vs himself.In Creed, Rocky tells Adonis that he is his own strongest opponent.When Adonis anwers what he has left to prove.....
# ::tokens ["In", "IV", ",", "Rocky", "ask", "Apollo", "if", "the", "match", "against", "Drago", "is", "really", "about", "Apollo", "vs", "himself", ".", "In", "Creed", ",", "Rocky", "tells", "Adonis", "that", "he", "is", "his", "own", "strongest", "opponent", ".", "When", "Adonis", "anwers", "what", "he", "has", "left", "to", "prove", "....."]
# ::lemmas ["in", "IV", ",", "Rocky", "ask", "Apollo", "if", "the", "match", "against", "Drago", "be", "really", "about", "Apollo", "vs", "himself", ".", "in", "Creed", ",", "Rocky", "tell", "Adonis", "that", "he", "be", "his", "own", "strong", "opponent", ".", "when", "Adonis", "anwer", "what", "he", "have", "leave", "to", "prove", "....."]
(c48-11 / multi-sentence
        :snt1 (c48-8 / ask-01
                     :ARG0 (c48-22 / person
                                   :name (c48-19 / name
                                                 :op1 "Rocky"))
                     :ARG1 (c48-9 / truth-value
                                  :polarity-of (c48-5 / match-03
                                                      :ARG1 (c48-12 / person
                                                                    :name (c48-13 / name
                                                                                  :op1 "Apollo"))
                                                      :ARG2 (c48-3 / person
                                                                   :name (c48-23 / name
                                                                                 :op1 "Drago"))
                                                      :ARG1-of (c48-20 / real-04)))
                     :ARG2 c48-3
                     :snt2 (c48-15 / tell-01
                                   :ARG0 (c48-2 / person
                                                :name (c48-14 / name
                                                              :op1 "Rocky"))
                                   :ARG1 (c48-6 / have-degree-91
                                                :ARG1 (c48-7 / person
                                                             :name (c48-24 / name
                                                                           :op1 "Adonis"))
                                                :ARG2 (c48-0 / strong-02
                                                             :ARG1 c48-7)
                                                :ARG3 (c48-17 / most)
                                                :ARG5 (c48-26 / person
                                                              :ARG0-of (c48-4 / oppose-01
                                                                              :ARG1 c48-2)))
                                   :ARG2 c48-7
                                   :time (c48-10 / age-01
                                                 :ARG0 c48-7
                                                 :ARG1 (c48-18 / prove-01
                                                               :ARG0 c48-7
                                                               :ARG1 (c48-25 / thing
                                                                             :ARG1-of (c48-1 / leave-17
                                                                                             :ARG2 c48-7)))))
                     :snt3 (c48-16 / publication
                                   :name (c48-21 / name
                                                 :op1 "Creed"))))

# ::snt That said, I dont think the original Rocky theme was revenge, but about proving yourself TO yourself.In III, Adrian tells Rocky if he wants to fight, he should do it for the right reason.Not for the title, not for money, not for her.She says he should do it for himself.
# ::tokens ["That", "said", ",", "I", "do", "nt", "think", "the", "original", "Rocky", "theme", "was", "revenge", ",", "but", "about", "proving", "yourself", "TO", "yourself", ".", "In", "III", ",", "Adrian", "tells", "Rocky", "if", "he", "wants", "to", "fight", ",", "he", "should", "do", "it", "for", "the", "right", "reason", ".", "Not", "for", "the", "title", ",", "not", "for", "money", ",", "not", "for", "her", ".", "She", "says", "he", "should", "do", "it", "for", "himself", "."]
# ::lemmas ["that", "say", ",", "i", "do", "not", "think", "the", "original", "Rocky", "theme", "be", "revenge", ",", "but", "about", "prove", "yourself", "to", "yourself", ".", "in", "III", ",", "Adrian", "tell", "Rocky", "if", "he", "want", "to", "fight", ",", "he", "should", "do", "it", "for", "the", "right", "reason", ".", "not", "for", "the", "title", ",", "not", "for", "money", ",", "not", "for", "she", ".", "she", "say", "he", "should", "do", "it", "for", "himself", "."]
(c49-18 / multi-sentence
        :snt1 (c49-1 / say-01
                     :ARG1 (c49-13 / that))
        :snt2 (c49-24 / think-01
                      :ARG0 (c49-33 / i)
                      :ARG1 (c49-22 / contrast-01
                                    :ARG1 (c49-34 / theme
                                                  :topic (c49-28 / revenge)
                                                  :mod (c49-9 / original)
                                                  :domain (c49-29 / person
                                                                  :name (c49-27 / name
                                                                                :op1 "Rocky")))
                                    :ARG2 (c49-19 / prove-01
                                                  :ARG0 (c49-11 / you
                                                                :ARG2-of c49-19)))
                      :polarity -)
        :snt3 (c49-2 / tell-01
                     :ARG0 (c49-6 / person
                                  :name (c49-20 / name
                                                :op1 "Adrian"))
                     :ARG1 (c49-7 / recommend-01
                                  :ARG1 (c49-25 / fight-01
                                                :ARG0 (c49-4 / person
                                                             :name (c49-30 / name
                                                                           :op1 "Rocky"))
                                                :condition (c49-32 / want-01
                                                                   :ARG0 c49-4
                                                                   :ARG1 c49-25)
                                                :ARG1-of (c49-15 / cause-01
                                                                 :ARG0 (c49-21 / reason
                                                                               :ARG1-of (c49-0 / right-02))))
                                  :ARG2 c49-4
                                  :ARG1-of (c49-5 / cause-01
                                                  :ARG0 (c49-16 / or
                                                                :op1 (c49-14 / title
                                                                             :polarity -)
                                                                :op2 (c49-12 / money
                                                                             :polarity -)
                                                                :op3 c49-19
                                                                :ARG0 c49-4
                                                                :ARG1 c49-4
                                                                :polarity -))))
        :snt4 (c49-10 / say-01
                      :ARG0 (c49-8 / she)
                      :ARG1 (c49-26 / recommend-01
                                    :ARG1 (c49-31 / fight-01
                                                  :ARG0 c49-4
                                                  :mod (c49-17 / by-oneself)))
                      :time (c49-3 / book
                                   :name (c49-23 / name
                                                 :op1 "III"))))

# ::snt In Rocky III, Apollo tells Rocky to remember what Clubber Lang did to him last time.
# ::tokens ["In", "Rocky", "III", ",", "Apollo", "tells", "Rocky", "to", "remember", "what", "Clubber", "Lang", "did", "to", "him", "last", "time", "."]
# ::lemmas ["in", "Rocky", "III", ",", "Apollo", "tell", "Rocky", "to", "remember", "what", "Clubber", "Lang", "do", "to", "he", "last", "time", "."]
(c50-8 / tell-01
       :ARG0 (c50-5 / person
                    :name (c50-0 / name
                                 :op1 "Apollo"))
       :ARG1 (c50-2 / remember-01
                    :ARG0 (c50-1 / person
                                 :name (c50-4 / name
                                              :op1 "Rocky"
                                              :op2 "III"))
                    :ARG1 (c50-11 / thing
                                  :ARG1-of (c50-9 / do-02
                                                  :ARG0 (c50-10 / person
                                                                :name (c50-6 / name
                                                                             :op1 "Clubber"
                                                                             :op2 "Lang"))
                                                  :ARG2 c50-1
                                                  :time (c50-7 / last))))
       :ARG2 c50-1
       :location (c50-3 / event))
