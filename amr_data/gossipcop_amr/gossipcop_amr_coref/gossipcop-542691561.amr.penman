# ::snt I honestly quote the queen on a daily basis.
# ::tokens ["I", "honestly", "quote", "the", "queen", "on", "a", "daily", "basis", "."]
# ::lemmas ["i", "honestly", "quote", "the", "queen", "on", "a", "daily", "basis", "."]
(c1-5 / quote-01
      :ARG0 (c1-4 / i)
      :ARG2 (c1-2 / queen)
      :ARG1-of (c1-1 / honest-01)
      :frequency (c1-0 / rate-entity-91
                       :ARG3 (c1-3 / temporal-quantity
                                   :unit (c1-6 / day)
                                   :quant 1)))

# ::snt Hatte auch eine Grotante Irmgard,die ging aber.
# ::tokens ["Hatte", "auch", "eine", "Grotante", "Irmgard", ",", "die", "ging", "aber", "."]
# ::lemmas ["Hatte", "auch", "eine", "Grotante", "Irmgard", ",", "die", "ge", "aber", "."]
(c2-4 / and
      :op1 (c2-2 / hatte-01
                 :ARG1 (c2-3 / person
                             :name (c2-0 / name
                                         :op1 "Grotante"
                                         :op2 "Irmgard"))
                 :mod (c2-1 / eh
                            :mode expressive))
      :op2 (c2-5 / ging-
                 :domain c2-3))

# ::snt Och. Tante Irmgard. Gott hab sie selig. (Konnte die nie leiden).
# ::tokens ["Och", ".", "Tante", "Irmgard", ".", "Gott", "hab", "sie", "selig", ".", "(", "Konnte", "die", "nie", "leiden", ")", "."]
# ::lemmas ["Och", ".", "Tante", "Irmgard", ".", "gott", "hab", "sie", "selig", ".", "(", "Konnte", "die", "nie", "leiden", ")", "."]
(c3-2 / multi-sentence
      :snt1 (c3-6 / person
                  :name (c3-1 / name
                              :op1 "Tante"
                              :op2 "Irmgard"))
      :snt2 (c3-5 / have-mod-91
                  :ARG1 (c3-3 / person
                              :name (c3-7 / name
                                          :op1 "Gott"))
                  :ARG2 (c3-11 / person
                               :name (c3-8 / name
                                           :op1 "Sie"
                                           :op2 "Slig")))
      :snt3 (c3-4 / say-01
                  :ARG1 (c3-12 / die-01
                               :ARG1 (c3-9 / person
                                           :name (c3-10 / name
                                                        :op1 "Nie"
                                                        :op2 "Leiden")
                                           :ARG2-of c3-4)))
      :snt1 (c3-0 / och
                  :mode expressive))

# ::snt Happy birthday to you happy birthday to you happy birthday to Beyonce and many more to come Blessings love you Lil Vito and your family have a wonderful day
# ::tokens ["Happy", "birthday", "to", "you", "happy", "birthday", "to", "you", "happy", "birthday", "to", "Beyonce", "and", "many", "more", "to", "come", "Blessings", "love", "you", "Lil", "Vito", "and", "your", "family", "have", "a", "wonderful", "day"]
# ::lemmas ["happy", "birthday", "to", "you", "happy", "birthday", "to", "you", "happy", "birthday", "to", "Beyonce", "and", "many", "more", "to", "come", "blessing", "love", "you", "Lil", "Vito", "and", "your", "family", "have", "a", "wonderful", "day"]
(c4-14 / multi-sentence
       :snt1 (c4-11 / and
                    :op1 (c4-8 / happy-01
                               :ARG1 (c4-13 / birthday
                                            :poss (c4-6 / you)))
                    :op2 (c4-26 / happy-01
                                :ARG1 (c4-1 / birthday
                                            :poss (c4-23 / person
                                                         :name (c4-22 / name
                                                                      :op1 "Beyonce"))))
                    :snt2 (c4-7 / happy-01
                                :ARG1 (c4-4 / birthday
                                            :poss (c4-12 / you)))
                    :snt3 (c4-18 / come-03
                                 :ARG1 (c4-15 / person
                                              :quant (c4-9 / more
                                                           :quant (c4-20 / many))))
                    :snt4 (c4-0 / say-01
                                :ARG1 (c4-2 / love-01
                                            :ARG0 (c4-3 / person
                                                        :name (c4-16 / name
                                                                     :op1 "Blessings"))
                                            :ARG1 (c4-5 / you
                                                        :name (c4-24 / name
                                                                     :op1 "Lilo"
                                                                     :op2 "Vito"))))
                    :snt5 (c4-19 / have-03
                                 :ARG0 (c4-10 / and
                                              :op1 (c4-21 / family
                                                          :poss c4-5)
                                              :op2 (c4-17 / member
                                                          :poss c4-5))
                                 :ARG1 (c4-27 / day
                                              :ARG1-of (c4-25 / wonderful-03)))))

# ::snt Haha Mr Beyonce Knowles good one. I was just counting actually after my tweet. I would say
# ::tokens ["Haha", "Mr", "Beyonce", "Knowles", "good", "one", ".", "I", "was", "just", "counting", "actually", "after", "my", "tweet", ".", "I", "would", "say"]
# ::lemmas ["Haha", "Mr", "Beyonce", "Knowles", "good", "one", ".", "i", "be", "just", "count", "actually", "after", "my", "tweet", ".", "i", "would", "say"]
(c5-2 / multi-sentence
      :snt1 (c5-0 / one
                  :ARG1-of (c5-10 / good-02)
                  :domain (c5-5 / person
                                :name (c5-1 / name
                                            :op1 "Mr"
                                            :op2 "Beyonce"
                                            :op3 "Knowles"))
                  :mod (c5-4 / haha
                             :mode expressive))
      :snt2 (c5-6 / count-01
                  :ARG0 (c5-8 / i)
                  :time (c5-9 / after
                              :op1 (c5-7 / tweet-01
                                         :ARG0 c5-8))
                  :mod (c5-11 / just)
                  :ARG1-of (c5-12 / actual-02))
      :snt3 (c5-3 / say-01
                  :ARG0 c5-8))

# ::snt Eh insomma, io da ieri sera che ci penso! Dopo avrei cercato su Wikipedia.
# ::tokens ["Eh", "insomma", ",", "io", "da", "ieri", "sera", "che", "ci", "penso", "!", "Dopo", "avrei", "cercato", "su", "Wikipedia", "."]
# ::lemmas ["eh", "insomma", ",", "io", "da", "ieri", "sera", "che", "ci", "penso", "!", "Dopo", "avrei", "cercato", "su", "Wikipedia", "."]
(c6-1 / multi-sentence
      :snt1 (c6-2 / say-01
                  :ARG1 (c6-10 / insomma
                               :mode expressive)
                  :ARG2 (c6-7 / person
                              :name (c6-0 / name
                                          :op1 "Eh")))
      :snt2 (c6-8 / cause-01
                  :ARG0 (c6-11 / amr-unknown)
                  :ARG1 (c6-15 / come-04
                               :ARG1 (c6-3 / i)
                               :ARG2 (c6-4 / penso)
                               :ARG1-of c6-8
                               :ARG0 (c6-12 / amr-unknown)))
      :snt3 (c6-13 / do-02
                   :ARG0 (c6-9 / amr-unknown)
                   :ARG1 (c6-5 / avrei-cercato
                               :beneficiary (c6-14 / publication
                                                   :name (c6-6 / name
                                                               :op1 "Wikipedia")))))

# ::snt Vabb, era facile
# ::tokens ["Vabb", ",", "era", "facile"]
# ::lemmas ["Vabb", ",", "era", "facile"]
(c7-0 / facile
      :domain (c7-2 / person
                    :name (c7-1 / name
                                :op1 "Vabb"))
      :time (c7-3 / era))

# ::snt Grande Cri!
# ::tokens ["Grande", "Cri", "!"]
# ::lemmas ["Grande", "Cri", "!"]
(c8-0 / grande-cri
      :mode expressive)

# ::snt Michelle Williams,omonima dell'attrice.
# ::tokens ["Michelle", "Williams", ",", "omonima", "dell'attrice", "."]
# ::lemmas ["Michelle", "Williams", ",", "omonima", "dell'attrice", "."]
(c9-2 / person
      :name (c9-0 / name
                  :op1 "Michelle"
                  :op2 "Williams")
      :mod (c9-1 / city
                 :name c9-0
                 :op1 "Monomonima"
                 :op2 "de"
                 :op3 "ll'attrice"))

# ::snt I once copied an Alistair Gray short story out and claimed it was mine when complimented on my writing style.I was only nineteen &amp; didnt realise it would get published in a local Bristol magazine with my name on it.So.I NEVER LIED AGAIN.
# ::tokens ["I", "once", "copied", "an", "Alistair", "Gray", "short", "story", "out", "and", "claimed", "it", "was", "mine", "when", "complimented", "on", "my", "writing", "style", ".", "I", "was", "only", "nineteen", "&", "amp", ";", "did", "nt", "realise", "it", "would", "get", "published", "in", "a", "local", "Bristol", "magazine", "with", "my", "name", "on", "it", ".", "So", ".", "I", "NEVER", "LIED", "AGAIN", "."]
# ::lemmas ["i", "once", "copy", "an", "Alistair", "Gray", "short", "story", "out", "and", "claim", "it", "be", "mine", "when", "compliment", "on", "my", "writing", "style", ".", "i", "be", "only", "nineteen", "&", "amp", ";", "do", "not", "realise", "it", "would", "get", "publish", "in", "a", "local", "Bristol", "magazine", "with", "my", "name", "on", "it", ".", "so", ".", "i", "never", "lie", "again", "."]
(c10-18 / multi-sentence
        :snt1 (c10-13 / and
                      :op1 (c10-21 / copy-01
                                   :ARG0 (c10-29 / i)
                                   :ARG1 (c10-0 / story
                                                :ARG1-of (c10-4 / short-07)
                                                :source (c10-26 / person
                                                                :name (c10-23 / name
                                                                              :op1 "Alistair"
                                                                              :op2 "Gray")))
                                   :time (c10-5 / once))
                      :op2 (c10-16 / claim-01
                                   :ARG0 c10-29
                                   :ARG1 (c10-17 / own-01
                                                 :ARG0 c10-29
                                                 :ARG1 c10-0)
                                   :time (c10-2 / compliment-01
                                                :ARG1 c10-29
                                                :ARG2 (c10-3 / style-01
                                                             :ARG1 c10-29
                                                             :ARG2 (c10-28 / write-01)))))
        :snt2 (c10-11 / and
                      :op1 (c10-10 / age-01
                                   :ARG1 (c10-7 / i)
                                   :ARG2 (c10-12 / temporal-quantity
                                                 :unit (c10-6 / year)
                                                 :quant 19)
                                   :mod (c10-31 / only))
                      :op2 (c10-24 / realize-01
                                   :ARG0 c10-7
                                   :ARG1 (c10-19 / publish-01
                                                 :ARG1 c10-0
                                                 :medium (c10-8 / magazine
                                                                :mod (c10-1 / local)
                                                                :location (c10-22 / city
                                                                                  :name (c10-20 / name
                                                                                                :op1 "Bristol"))
                                                                :ARG0-of (c10-9 / have-03
                                                                                :ARG1 (c10-27 / name
                                                                                              :poss c10-7)
                                                                                :location c10-8)))
                                   :polarity -))
        :snt3 (c10-14 / lie-08
                      :ARG0 (c10-15 / i)
                      :time (c10-25 / ever)
                      :mod (c10-30 / again)
                      :polarity -))

# ::snt this tweet made me want to listen so now I am .... ur impact wow
# ::tokens ["this", "tweet", "made", "me", "want", "to", "listen", "so", "now", "I", "am", "....", "ur", "impact", "wow"]
# ::lemmas ["this", "tweet", "make", "i", "want", "to", "listen", "so", "now", "i", "be", "....", "ur", "impact", "wow"]
(c11-4 / cause-01
       :ARG0 (c11-0 / make-02
                    :ARG0 (c11-6 / thing
                                 :ARG1-of (c11-8 / tweet-01)
                                 :mod (c11-7 / this))
                    :ARG1 (c11-5 / want-01
                                 :ARG0 (c11-9 / i)
                                 :ARG1 (c11-2 / listen-01
                                              :ARG0 c11-9)))
       :ARG1 c11-9
       :domain c11-9
       :time (c11-1 / now)
       :mod (c11-3 / wow
                   :mode expressive))

# ::snt Wait, Im older than Beyonc!
# ::tokens ["Wait", ",", "I", "m", "older", "than", "Beyonc", "!"]
# ::lemmas ["wait", ",", "i", "m", "old", "than", "Beyonc", "!"]
(c12-8 / and
       :op1 (c12-6 / wait-01
                   :ARG1 (c12-1 / you)
                   :mode imperative)
       :op2 (c12-4 / have-degree-91
                   :ARG1 (c12-7 / i)
                   :ARG2 (c12-0 / old)
                   :ARG3 (c12-2 / more)
                   :ARG4 (c12-5 / person
                                :name (c12-3 / name
                                             :op1 "Beyonc"))))

# ::snt Nothing but respect for MY presidents
# ::tokens ["Nothing", "but", "respect", "for", "MY", "presidents"]
# ::lemmas ["nothing", "but", "respect", "for", "my", "president"]
(c13-2 / respect-01
       :ARG1 (c13-4 / person
                    :ARG0-of (c13-3 / have-org-role-91
                                    :ARG1 (c13-5 / i)
                                    :ARG2 (c13-1 / president)))
       :mod (c13-0 / nothing-but))

# ::snt |: Getty Images|
# ::tokens ["|", ":", "Getty", "Images|"]
# ::lemmas ["|", ":", "getty", "images|"]
(c14-2 / image
       :source (c14-1 / publication
                      :name (c14-0 / name
                                   :op1 " Getty"
                                   :op2 "Images")))

# ::snt Im serious hell
# ::tokens ["I", "m", "serious", "hell"]
# ::lemmas ["i", "m", "serious", "hell"]
(c15-0 / hell
       :ARG1-of (c15-2 / serious-02)
       :domain (c15-1 / i))

# ::snt Yes maam I wanna ride on a float singing Beyonc songs
# ::tokens ["Yes", "maam", "I", "wanna", "ride", "on", "a", "float", "singing", "Beyonc", "songs"]
# ::lemmas ["yes", "maam", "i", "wanna", "ride", "on", "a", "float", "singe", "Beyonc", "song"]
(c16-4 / say-01
       :ARG0 (c16-8 / i)
       :ARG1 (c16-7 / want-01
                    :ARG0 c16-8
                    :ARG1 (c16-5 / ride-01
                                 :ARG0 c16-8
                                 :ARG1 (c16-0 / float)
                                 :manner (c16-1 / sing-01
                                                :ARG0 c16-8
                                                :ARG1 (c16-9 / song
                                                             :poss (c16-6 / person
                                                                          :name (c16-2 / name
                                                                                       :op1 "Beyonc"))))))
       :ARG2 (c16-3 / maam))

# ::snt Were gonna be there live in full affect!
# ::tokens ["Were", "gon", "na", "be", "there", "live", "in", "full", "affect", "!"]
# ::lemmas ["be", "going", "to", "be", "there", "live", "in", "full", "affect", "!"]
(c17-3 / they
       :location (c17-2 / there)
       :manner (c17-0 / affect-01
                      :ARG1-of (c17-1 / full-09)))

# ::snt BeyLanguage
# ::tokens ["BeyLanguage"]
# ::lemmas ["beylanguage"]
(c18-1 / language
       :name (c18-0 / name
                    :op1 "BeyLanguage"))

# ::snt It's gonna be a damn album of the world.Please.
# ::tokens ["It", "'s", "gon", "na", "be", "a", "damn", "album", "of", "the", "world", ".", "Please", "."]
# ::lemmas ["it", "be", "going", "to", "be", "a", "damn", "album", "of", "the", "world", ".", "please", "."]
(c19-3 / album
       :ARG1-of (c19-0 / damn-01)
       :domain (c19-2 / it)
       :poss (c19-1 / world)
       :mode imperative
       :polite +)

# ::snt Hi Beyonce, when are we gonna hear you and Brandy as well as Tamia singing together?
# ::tokens ["Hi", "Beyonce", ",", "when", "are", "we", "gon", "na", "hear", "you", "and", "Brandy", "as", "well", "as", "Tamia", "singing", "together", "?"]
# ::lemmas ["hi", "Beyonce", ",", "when", "be", "we", "going", "to", "hear", "you", "and", "Brandy", "as", "well", "as", "Tamia", "singe", "together", "?"]
(c20-2 / multi-sentence
       :snt1 (c20-3 / say-01
                    :ARG1 (c20-5 / hi)
                    :ARG2 (c20-6 / person
                                 :name (c20-1 / name
                                              :op1 "Beyonce")))
       :snt2 (c20-10 / hear-01
                     :ARG0 (c20-9 / we)
                     :ARG1 (c20-0 / sing-01
                                  :ARG0 (c20-13 / and
                                                :op1 c20-6
                                                :op2 (c20-4 / person
                                                            :name (c20-7 / name
                                                                         :op1 "Brandy"))
                                                :op3 (c20-14 / person
                                                             :name (c20-8 / name
                                                                          :op1 "Tamia")))
                                  :manner (c20-11 / together))
                     :time (c20-12 / amr-unknown)))

# ::snt So beautiful
# ::tokens ["So", "beautiful"]
# ::lemmas ["so", "beautiful"]
(c21-0 / beautiful-02
       :degree (c21-1 / so))

# ::snt ma it's always me before you
# ::tokens ["ma", "it", "'s", "always", "me", "before", "you"]
# ::lemmas ["ma", "it", "be", "always", "i", "before", "you"]
(c22-2 / read-01
       :ARG0 (c22-3 / i)
       :ARG1 (c22-0 / before
                    :op1 (c22-1 / you)
                    :time (c22-4 / always))
       :ARG3 (c22-5 / amr-unintelligible
                    :value "ma"))

# ::snt La virgen de Guadalupe aka Valentina is shookt
# ::tokens ["La", "virgen", "de", "Guadalupe", "aka", "Valentina", "is", "shookt"]
# ::lemmas ["La", "virgen", "de", "Guadalupe", "aka", "Valentina", "be", "shookt"]
(c23-2 / shake-01
       :ARG1 (c23-1 / name
                    :op1 "La"
                    :op2 "Virgen"
                    :op3 "de"
                    :op4 "Guadalupe")
       :ARG1-of (c23-0 / mean-01
                       :ARG2 (c23-4 / person
                                    :name (c23-3 / name
                                                 :op1 "Valentina"))))

# ::snt PORRA SIM
# ::tokens ["PORRA", "SIM"]
# ::lemmas ["PORRA", "SIM"]
(c24-1 / person
       :name (c24-0 / name
                    :op1 "Porra"
                    :op2 "Sim"))

# ::snt pega o divirta-se amanh e faz um quiz POR FAVOR
# ::tokens ["pega", "o", "divirta", "-", "se", "amanh", "e", "faz", "um", "quiz", "POR", "FAVOR"]
# ::lemmas ["pega", "o", "divirta", "-", "se", "amanh", "e", "faz", "um", "quiz", "POR", "FAVOR"]
(c25-3 / say-01
       :ARG0 (c25-6 / i)
       :ARG1 (c25-0 / faz
                    :domain (c25-4 / person
                                   :name (c25-1 / name
                                                :op1 "Quinn"
                                                :op2 "FAVOR"))
                    :ARG1-of (c25-5 / cause-01
                                    :ARG0 (c25-7 / and
                                                 :op1 (c25-2 / pega-00
                                                             :ARG1 (c25-9 / divirta-se))
                                                 :op2 (c25-8 / amanh
                                                             :mode expressive))))
       :ARG2 c25-4)

# ::snt it hurts that she hates us
# ::tokens ["it", "hurts", "that", "she", "hates", "us"]
# ::lemmas ["it", "hurt", "that", "she", "hate", "we"]
(c26-2 / hurt-02
       :ARG0 (c26-0 / hate-01
                    :ARG0 (c26-3 / she)
                    :ARG1 (c26-1 / we)))

# ::snt she gives us NOTHING. Im tired of her
# ::tokens ["she", "gives", "us", "NOTHING", ".", "I", "m", "tired", "of", "her"]
# ::lemmas ["she", "give", "we", "nothing", ".", "i", "m", "tired", "of", "she"]
(c27-2 / multi-sentence
       :snt1 (c27-7 / give-01
                    :ARG0 (c27-3 / she)
                    :ARG1 (c27-1 / nothing)
                    :ARG2 (c27-4 / we))
       :snt2 (c27-6 / tire-01
                    :ARG0 (c27-0 / she)
                    :ARG1 (c27-5 / i)))

# ::snt she wants us to beg. even after begging she wont mind us
# ::tokens ["she", "wants", "us", "to", "beg", ".", "even", "after", "begging", "she", "wo", "nt", "mind", "us"]
# ::lemmas ["she", "want", "we", "to", "beg", ".", "even", "after", "beg", "she", "will", "not", "mind", "we"]
(c28-2 / multi-sentence
       :snt1 (c28-8 / want-01
                    :ARG0 (c28-3 / she)
                    :ARG1 (c28-1 / beg-01
                                 :ARG0 (c28-7 / we)))
       :snt2 (c28-5 / mind-01
                    :ARG0 (c28-0 / she)
                    :ARG1 (c28-9 / we)
                    :concession (c28-4 / even-when
                                       :op1 (c28-6 / beg-01
                                                   :ARG0 c28-9))
                    :polarity -))

# ::snt I feel safer knowing the keys are in good hands
# ::tokens ["I", "feel", "safer", "knowing", "the", "keys", "are", "in", "good", "hands"]
# ::lemmas ["i", "feel", "safe", "know", "the", "key", "be", "in", "good", "hand"]
(c30-0 / feel-01
       :ARG0 (c30-7 / i)
       :ARG1 (c30-2 / safe-01
                    :ARG0 c30-7
                    :manner (c30-5 / know-01
                                   :ARG0 c30-7
                                   :ARG1 (c30-3 / in-ones-hands-04
                                                :ARG0 (c30-4 / hand
                                                             :ARG1-of (c30-8 / good-02))
                                                :ARG1 (c30-9 / key))))
       :ARG2-of (c30-6 / have-degree-91
                       :ARG1 c30-7
                       :ARG3 (c30-1 / more)))

# ::snt Yikes! Thats the year I graduated high school! Beys ruling the world + Im an old bat.
# ::tokens ["Yikes", "!", "That", "s", "the", "year", "I", "graduated", "high", "school", "!", "Beys", "ruling", "the", "world", "+", "I", "m", "an", "old", "bat", "."]
# ::lemmas ["yike", "!", "that", "s", "the", "year", "i", "graduate", "high", "school", "!", "bey", "rule", "the", "world", "+", "i", "m", "an", "old", "bat", "."]
(c31-3 / multi-sentence
       :snt1 (c31-2 / yikes
                    :mode expressive)
       :snt2 (c31-13 / year
                     :time-of (c31-4 / graduate-01
                                     :ARG1 (c31-11 / i)
                                     :ARG2 (c31-8 / high-school))
                     :domain (c31-12 / that))
       :snt3 (c31-6 / and
                    :op1 (c31-7 / rule-03
                                :ARG0 (c31-1 / bey)
                                :ARG1 (c31-10 / world))
                    :op2 (c31-9 / bat
                                :mod (c31-0 / old)
                                :domain (c31-5 / i))))

# ::snt Why?
# ::tokens ["Why", "?"]
# ::lemmas ["why", "?"]
(c32-0 / cause-01
       :ARG0 (c32-1 / amr-unknown))

# ::snt Good Morning
# ::tokens ["Good", "Morning"]
# ::lemmas ["Good", "Morning"]
(c33-1 / morning
       :ARG1-of (c33-0 / good-02))

# ::snt Grace a toi je redcouvre et franchement you might or might not be right about it being the best album
# ::tokens ["Grace", "a", "toi", "je", "redcouvre", "et", "franchement", "you", "might", "or", "might", "not", "be", "right", "about", "it", "being", "the", "best", "album"]
# ::lemmas ["grace", "a", "toi", "je", "redcouvre", "et", "franchement", "you", "might", "or", "might", "not", "be", "right", "about", "it", "be", "the", "good", "album"]
(c34-4 / say-01
       :ARG0 (c34-10 / i)
       :ARG1 (c34-0 / or
                    :op1 (c34-9 / possible-01
                                :ARG1 (c34-6 / right-06
                                             :ARG1 (c34-1 / you)
                                             :ARG2 (c34-11 / album
                                                           :domain (c34-5 / it)
                                                           :ARG1-of (c34-8 / have-degree-91
                                                                           :ARG2 (c34-12 / good-02
                                                                                         :ARG1 c34-11)
                                                                           :ARG3 (c34-2 / most)))))
                    :op2 (c34-3 / possible-01
                                :ARG1 c34-6
                                :ARG1 c34-1
                                :ARG2 c34-11
                                :polarity -))
       :ARG2 (c34-13 / person
                     :name (c34-7 / name
                                  :op1 "Grace")))

# ::snt I said enough !!!!
# ::tokens ["I", "said", "enough", "!", "!", "!", "!"]
# ::lemmas ["i", "say", "enough", "!", "!", "!", "!"]
(c35-3 / say-01
       :ARG0 (c35-2 / i)
       :ARG1-of (c35-1 / have-quant-91
                       :ARG3 (c35-0 / enough)))

# ::snt Alexa play I Was Here by the queen
# ::tokens ["Alexa", "play", "I", "Was", "Here", "by", "the", "queen"]
# ::lemmas ["Alexa", "play", "i", "be", "here", "by", "the", "queen"]
(c36-3 / play-11
       :ARG0 (c36-5 / queen)
       :ARG1 (c36-4 / i
                    :location (c36-2 / here))
       :ARG2 (c36-1 / person
                    :name (c36-0 / name
                                 :op1 "Alexa")))

# ::snt And I have every reason to smile &lt;3
# ::tokens ["And", "I", "have", "every", "reason", "to", "smile", "&", "lt;3"]
# ::lemmas ["and", "i", "have", "every", "reason", "to", "smile", "&", "lt;3"]
(c37-5 / and
       :op2 (c37-3 / have-03
                   :ARG0 (c37-4 / i)
                   :ARG1 (c37-1 / reason
                                :mod (c37-2 / every)
                                :purpose (c37-0 / smile-01
                                                :ARG0 c37-4))))

# ::snt Today is the th
# ::tokens ["Today", "is", "the", "th"]
# ::lemmas ["Today", "be", "the", "th"]
(c38-1 / today
       :domain (c38-0 / event))

# ::snt Casted
# ::tokens ["Casted"]
# ::lemmas ["cast"]
(c39-0 / waste-01)

# ::snt Checked your bio, saw that you were a Beyonc fan.Brother, you are wild
# ::tokens ["Checked", "your", "bio", ",", "saw", "that", "you", "were", "a", "Beyonc", "fan", ".", "Brother", ",", "you", "are", "wild"]
# ::lemmas ["check", "your", "bio", ",", "see", "that", "you", "be", "a", "Beyonc", "fan", ".", "brother", ",", "you", "be", "wild"]
(c40-3 / multi-sentence
       :snt1 (c40-12 / and
                     :op1 (c40-9 / check-01
                                 :ARG0 (c40-11 / i)
                                 :ARG1 (c40-1 / bio
                                              :poss (c40-2 / you)))
                     :op2 (c40-5 / see-01
                                 :ARG0 c40-11
                                 :ARG1 (c40-0 / fan
                                              :domain c40-2
                                              :mod (c40-7 / person
                                                          :name (c40-4 / name
                                                                       :op1 "Beyoncec")))))
       :snt2 (c40-10 / wild
                     :domain (c40-13 / you
                                     :ARG0-of (c40-6 / have-rel-role-91
                                                     :ARG2 (c40-8 / brother)))))

# ::snt I wish she saw it that way... I lost (5 marks) Still regret that decision
# ::tokens ["I", "wish", "she", "saw", "it", "that", "way", "...", "I", "lost", "(", "5", "marks", ")", "Still", "regret", "that", "decision"]
# ::lemmas ["i", "wish", "she", "see", "it", "that", "way", "...", "i", "lose", "(", "5", "marks", ")", "still", "regret", "that", "decision"]
(c41-2 / multi-sentence
       :snt1 (c41-9 / wish-01
                    :ARG0 (c41-10 / i)
                    :ARG1 (c41-3 / see-01
                                 :ARG0 (c41-0 / she)
                                 :ARG1 (c41-4 / it)
                                 :manner (c41-8 / way
                                                :mod (c41-11 / that))))
       :snt2 (c41-7 / lose-03
                    :ARG0 (c41-14 / i)
                    :ARG1-of (c41-6 / mark-01
                                    :quant 5))
       :snt3 (c41-5 / regret-01
                    :ARG0 (c41-1 / i)
                    :ARG1 (c41-15 / thing
                                  :ARG1-of (c41-13 / decide-01)
                                  :mod (c41-12 / that))
                    :mod (c41-16 / still)))

# ::snt if this isnt ingenuity, i dunno what is..
# ::tokens ["if", "this", "is", "nt", "ingenuity", ",", "i", "dunno", "what", "is", ".."]
# ::lemmas ["if", "this", "be", "not", "ingenuity", ",", "i", "dunno", "what", "be", ".."]
(c42-1 / know-01
       :ARG0 (c42-3 / i)
       :ARG1 (c42-2 / thing
                    :domain (c42-0 / ingenuity
                                   :domain (c42-4 / this)
                                   :condition-of c42-1
                                   :polarity -))
       :polarity -)

# ::snt When ya'll Gonna Start Playin on The ??
# ::tokens ["When", "ya'll", "Gon", "na", "Start", "Playin", "on", "The", "?", "?"]
# ::lemmas ["when", "ya'll", "Gon", "to", "Start", "Playin", "on", "the", "?", "?"]
(c43-0 / be-temporally-at-91
       :ARG2 (c43-3 / start-01
                    :ARG0 (c43-1 / you)
                    :ARG1 (c43-5 / play-11
                                 :ARG0 c43-1
                                 :medium (c43-4 / broadcast-program
                                                :name (c43-2 / name
                                                             :op1 "The"
                                                             :op2 "Student"
                                                             :op3 "Room")))))

# ::snt I cant find the clip of Tracy saying your booing does not scare me, I know most of you are not ghosts! but thats what Id post
# ::tokens ["I", "ca", "nt", "find", "the", "clip", "of", "Tracy", "saying", "your", "booing", "does", "not", "scare", "me", ",", "I", "know", "most", "of", "you", "are", "not", "ghosts", "!", "but", "that", "s", "what", "I", "d", "post"]
# ::lemmas ["i", "can", "not", "find", "the", "clip", "of", "Tracy", "say", "your", "booing", "do", "not", "scare", "i", ",", "i", "know", "most", "of", "you", "be", "not", "ghost", "!", "but", "that", "s", "what", "i", "d", "post"]
(c44-13 / multi-sentence
        :snt1 (c44-18 / possible-01
                      :ARG1 (c44-16 / find-01
                                    :ARG0 (c44-19 / i)
                                    :ARG1 (c44-15 / clip-01
                                                  :ARG1 (c44-0 / say-01
                                                               :ARG0 (c44-14 / person
                                                                             :name (c44-17 / name
                                                                                           :op1 "Tracy"))
                                                               :ARG1 (c44-3 / scare-01
                                                                            :ARG0 (c44-12 / boo-01
                                                                                          :ARG0 (c44-4 / you))
                                                                            :ARG1 c44-19
                                                                            :polarity -))))
                      :polarity -)
        :snt2 (c44-6 / have-concession-91
                     :ARG1 (c44-7 / know-01
                                  :ARG0 (c44-5 / i)
                                  :ARG1 (c44-10 / ghost
                                                :domain (c44-2 / person
                                                               :ARG1-of (c44-11 / include-91
                                                                                :ARG2 c44-4
                                                                                :ARG3 (c44-8 / most)))
                                                :polarity -))
                     :ARG2 (c44-1 / post-01
                                  :ARG0 c44-5
                                  :ARG1 (c44-9 / that))))

# ::snt May your day be showered with loud booing.
# ::tokens ["May", "your", "day", "be", "showered", "with", "loud", "booing", "."]
# ::lemmas ["May", "your", "day", "be", "shower", "with", "loud", "booing", "."]
(c45-4 / wish-01
       :ARG1 (c45-2 / shower-01
                    :ARG1 (c45-5 / day
                                 :poss (c45-1 / you))
                    :manner (c45-0 / boo-01
                                   :manner (c45-3 / loud))))

# ::snt Nice work honoring Jay &amp; Bey Moving forward with the it would be great if Hip Hop would be honored nationwide. FYI, this year honored Hip Hop with the attached Month resolution.
# ::tokens ["Nice", "work", "honoring", "Jay", "&", "amp", ";", "Bey", "Moving", "forward", "with", "the", "it", "would", "be", "great", "if", "Hip", "Hop", "would", "be", "honored", "nationwide", ".", "FYI", ",", "this", "year", "honored", "Hip", "Hop", "with", "the", "attached", "Month", "resolution", "."]
# ::lemmas ["nice", "work", "honor", "Jay", "&", "amp", ";", "Bey", "Moving", "forward", "with", "the", "it", "would", "be", "great", "if", "Hip", "Hop", "would", "be", "honor", "nationwide", ".", "FYI", ",", "this", "year", "honor", "Hip", "Hop", "with", "the", "attach", "Month", "resolution", "."]
(c46-12 / multi-sentence
        :snt1 (c46-8 / and
                     :op1 (c46-23 / work-01
                                  :ARG1-of (c46-19 / nice-01)
                                  :ARG0-of (c46-3 / honor-01
                                                  :ARG1 (c46-7 / and
                                                               :op1 (c46-21 / person
                                                                            :name (c46-14 / name
                                                                                          :op1 "Jay"))
                                                               :op2 (c46-13 / person
                                                                            :name (c46-22 / name
                                                                                          :op1 "amp")))))
                     :op2 (c46-4 / move-01
                                 :ARG0 (c46-0 / person
                                              :name (c46-15 / name
                                                            :op1 "Boomer"))
                                 :direction (c46-18 / forward)
                                 :topic (c46-9 / great
                                               :condition (c46-24 / honor-01
                                                                  :ARG1 (c46-2 / hip-hop)
                                                                  :location (c46-25 / nationwide)))))
        :snt2 (c46-16 / have-purpose-91
                      :ARG1 (c46-26 / inform-01
                                    :ARG1 (c46-1 / you)
                                    :ARG2 (c46-5 / honor-01
                                                 :ARG1 c46-2
                                                 :ARG2 (c46-20 / resolution
                                                               :mod (c46-17 / month
                                                                            :ARG1-of (c46-6 / attach-01))))
                                    :time (c46-10 / year
                                                  :mod (c46-11 / this)))))

# ::snt I noticed that too. There were people from all walks of life and all ages, together, to enjoy the same show at the same time.
# ::tokens ["I", "noticed", "that", "too", ".", "There", "were", "people", "from", "all", "walks", "of", "life", "and", "all", "ages", ",", "together", ",", "to", "enjoy", "the", "same", "show", "at", "the", "same", "time", "."]
# ::lemmas ["i", "notice", "that", "too", ".", "there", "be", "people", "from", "all", "walk", "of", "life", "and", "all", "age", ",", "together", ",", "to", "enjoy", "the", "same", "show", "at", "the", "same", "time", "."]
(c47-2 / multi-sentence
       :snt1 (c47-1 / notice-01
                    :ARG0 (c47-12 / i)
                    :ARG1 (c47-11 / that)
                    :mod (c47-13 / too))
       :snt2 (c47-5 / enjoy-01
                    :ARG0 (c47-7 / person
                                 :source (c47-4 / and
                                                :op1 (c47-9 / walk
                                                            :mod (c47-14 / all)
                                                            :part-of (c47-8 / life))
                                                :op2 (c47-10 / age
                                                             :mod (c47-15 / all))))
                    :ARG1 (c47-3 / show-04
                                 :ARG1-of (c47-0 / same-01))
                    :manner (c47-16 / together)
                    :time (c47-6 / time
                                 :ARG1-of (c47-17 / same-01))))

# ::snt My roommates mom sent him to boarding school in Kentucky during high school (feared he wouldnt make it otherwise) &amp; from there he attended UK during my time simultaneously Not my initial roommate but the chosen are the first year on campus
# ::tokens ["My", "roommates", "mom", "sent", "him", "to", "boarding", "school", "in", "Kentucky", "during", "high", "school", "(", "feared", "he", "would", "nt", "make", "it", "otherwise", ")", "&", "amp", ";", "from", "there", "he", "attended", "UK", "during", "my", "time", "simultaneously", "Not", "my", "initial", "roommate", "but", "the", "chosen", "are", "the", "first", "year", "on", "campus"]
# ::lemmas ["my", "roommate", "mom", "send", "he", "to", "board", "school", "in", "Kentucky", "during", "high", "school", "(", "fear", "he", "would", "not", "make", "it", "otherwise", ")", "&", "amp", ";", "from", "there", "he", "attend", "UK", "during", "my", "time", "simultaneously", "not", "my", "initial", "roommate", "but", "the", "choose", "be", "the", "first", "year", "on", "campus"]
(c48-19 / multi-sentence
        :snt1 (c48-0 / send-03
                     :ARG0 (c48-32 / person
                                   :ARG0-of (c48-10 / have-rel-role-91
                                                    :ARG1 (c48-20 / person
                                                                  :ARG0-of (c48-33 / have-rel-role-91
                                                                                   :ARG1 (c48-34 / i)
                                                                                   :ARG2 (c48-31 / roommate)))
                                                    :ARG2 (c48-11 / mom)))
                     :ARG1 (c48-9 / he)
                     :ARG4 (c48-5 / school
                                  :mod (c48-18 / board-03)
                                  :location (c48-4 / state
                                                   :name (c48-29 / name
                                                                 :op1 "Kentucky")))
                     :time (c48-24 / high-school)
                     :ARG1-of (c48-22 / cause-01
                                      :ARG0 (c48-28 / fear-01
                                                    :ARG0 c48-34
                                                    :ARG1 (c48-25 / make-18
                                                                  :ARG0 (c48-12 / he
                                                                                :ARG1 (c48-13 / have-condition-91
                                                                                              :ARG2 c48-25
                                                                                              :ARG0 c48-12
                                                                                              :ARG1 c48-24))
                                                                  :polarity -))))
        :snt2 (c48-14 / attend-01
                      :ARG0 c48-12)
        :ARG1 (c48-26 / university
                      :name (c48-21 / name
                                    :op1 "UK")
                      :source-of c48-19)
        :time (c48-15 / time
                      :poss (c48-8 / i))
        :mod (c48-30 / simultaneous)
        :snt3 (c48-17 / contrast-01
                      :ARG1 (c48-2 / person
                                   :ARG0-of (c48-23 / have-rel-role-91
                                                    :ARG1 c48-8
                                                    :ARG2 (c48-3 / roommate)
                                                    :mod (c48-16 / initial))
                                   :polarity -)
                      :ARG2 (c48-1 / choose-01
                                   :ARG1 (c48-7 / year
                                                :ord (c48-6 / ordinal-entity
                                                            :value 1)
                                                :location (c48-27 / campus)))))

# ::snt Nothing!
# ::tokens ["Nothing", "!"]
# ::lemmas ["nothing", "!"]
(c49-0 / nothing)

# ::snt I cant be like them &amp; they are not my parents but I grew up with JayIn Lexington my roommate was from Brooklyn &amp; like all my friends Our time together was our time together &amp; our time apart is our time apartIm out of sight out of mindAlways been
# ::tokens ["I", "ca", "nt", "be", "like", "them", "&", "amp", ";", "they", "are", "not", "my", "parents", "but", "I", "grew", "up", "with", "JayIn", "Lexington", "my", "roommate", "was", "from", "Brooklyn", "&", "amp", ";", "like", "all", "my", "friends", "Our", "time", "together", "was", "our", "time", "together", "&", "amp", ";", "our", "time", "apart", "is", "our", "time", "apartIm", "out", "of", "sight", "out", "of", "mindAlways", "been"]
# ::lemmas ["i", "can", "not", "be", "like", "they", "&", "amp", ";", "they", "be", "not", "my", "parent", "but", "i", "grow", "up", "with", "JayIn", "Lexington", "my", "roommate", "be", "from", "Brooklyn", "&", "amp", ";", "like", "all", "my", "friend", "our", "time", "together", "be", "our", "time", "together", "&", "amp", ";", "our", "time", "apart", "be", "our", "time", "apartim", "out", "of", "sight", "out", "of", "mindalway", "be"]
(c50-20 / multi-sentence
        :snt1 (c50-31 / possible-01
                      :ARG1 (c50-30 / resemble-01
                                    :ARG1 (c50-36 / i)
                                    :ARG2 (c50-15 / and
                                                  :op1 (c50-14 / they)
                                                  :op2 (c50-21 / person
                                                               :name (c50-29 / name
                                                                             :op1 "&amp"))))
                      :polarity -)
        :snt2 (c50-23 / contrast-01
                      :ARG1 (c50-11 / have-rel-role-91
                                    :ARG0 (c50-25 / they)
                                    :ARG1 c50-36
                                    :ARG2 (c50-6 / parent)
                                    :polarity -)
                      :ARG2 (c50-16 / grow-up-04
                                    :ARG1 c50-36
                                    :prep-with (c50-4 / person
                                                      :name (c50-22 / name
                                                                    :op1 "Jay")
                                                      :location (c50-19 / city
                                                                        :name (c50-32 / name
                                                                                      :op1 "Lexington")))))
        :snt3 (c50-13 / person
                      :ARG0-of (c50-35 / have-rel-role-91
                                       :ARG1 (c50-9 / i)
                                       :ARG2 (c50-8 / roommate))
                      :source (c50-5 / city
                                     :name (c50-24 / name
                                                   :op1 "Brooklyn"))
                      :ARG0-of (c50-10 / have-rel-role-91
                                       :ARG1 c50-9
                                       :ARG2 (c50-28 / friend)))
        :snt4 (c50-17 / and
                      :op1 (c50-37 / time
                                   :mod (c50-1 / together)
                                   :poss (c50-33 / we))
                      :op2 (c50-18 / time
                                   :mod (c50-7 / together)
                                   :poss (c50-39 / person
                                                 :mod (c50-12 / all)
                                                 :ARG0-of (c50-27 / have-rel-role-91
                                                                  :ARG1 c50-9
                                                                  :ARG2 c50-28))))
        :domain (c50-38 / apart
                        :op1 (c50-0 / sight-01
                                    :ARG1 c50-9
                                    :polarity -)
                        :domain (c50-34 / apart
                                        :op1 (c50-2 / time
                                                    :time-of (c50-3 / we))))
        :time (c50-26 / always))
