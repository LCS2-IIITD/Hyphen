# ::snt cover fefe
# ::tokens ["cover", "fefe"]
# ::lemmas ["cover", "fefe"]
(c1-0 / cover-02
      :ARG1 (c1-1 / fefe))

# ::snt It's a way to get attention It means - Concentrate on me
# ::tokens ["It", "'s", "a", "way", "to", "get", "attention", "It", "means", "-", "Concentrate", "on", "me"]
# ::lemmas ["it", "be", "a", "way", "to", "get", "attention", "it", "mean", "-", "concentrate", "on", "i"]
(c2-1 / multi-sentence
      :snt1 (c2-4 / way
                  :manner-of (c2-8 / get-01
                                   :ARG1 (c2-7 / attend-02))
                  :domain (c2-6 / it))
      :snt2 (c2-3 / mean-01
                  :ARG1 (c2-2 / it)
                  :ARG2 (c2-5 / concentrate-01
                              :ARG0 (c2-0 / you)
                              :ARG1 (c2-9 / i)
                              :mode imperative)))

# ::snt He is drifting towards lunacy.
# ::tokens ["He", "is", "drifting", "towards", "lunacy", "."]
# ::lemmas ["he", "be", "drift", "towards", "lunacy", "."]
(c3-0 / drift-01
      :ARG1 (c3-1 / he)
      :direction (c3-2 / lunacy))

# ::snt In between bites of KFC
# ::tokens ["In", "between", "bites", "of", "KFC"]
# ::lemmas ["in", "between", "bite", "of", "KFC"]
(c4-1 / be-temporally-at-91
      :ARG2 (c4-3 / between
                  :op1 (c4-4 / bite-01
                             :ARG1 (c4-0 / food
                                         :name (c4-2 / name
                                                     :op1 "KFC")))))

# ::snt is basically unicorn speak for "USA is circling the drain"
# ::tokens ["is", "basically", "unicorn", "speak", "for", "\"", "USA", "is", "circling", "the", "drain", "\""]
# ::lemmas ["be", "basically", "unicorn", "speak", "for", "\"", "USA", "be", "circle", "the", "drain", "\""]
(c5-2 / speak-01
      :ARG1 (c5-3 / circle-01
                  :ARG0 (c5-6 / country
                              :name (c5-1 / name
                                          :op1 "USA"))
                  :ARG1 (c5-4 / drain-01))
      :mod (c5-5 / unicorn)
      :mod (c5-0 / basic))

# ::snt Ok, funny for a while, but please report real news. We have a republic to save.
# ::tokens ["Ok", ",", "funny", "for", "a", "while", ",", "but", "please", "report", "real", "news", ".", "We", "have", "a", "republic", "to", "save", "."]
# ::lemmas ["ok", ",", "funny", "for", "a", "while", ",", "but", "please", "report", "real", "news", ".", "we", "have", "a", "republic", "to", "save", "."]
(c6-2 / multi-sentence
      :snt1 (c6-9 / contrast-01
                  :ARG1 (c6-0 / funny
                              :duration (c6-10 / while))
                  :ARG2 (c6-5 / report-01
                              :ARG0 (c6-1 / you)
                              :ARG1 (c6-3 / news
                                          :ARG1-of (c6-11 / real-04))
                              :mode imperative
                              :polite +))
      :snt2 (c6-6 / have-03
                  :ARG0 (c6-7 / we)
                  :ARG1 (c6-8 / republic
                              :ARG1-of (c6-4 / save-02
                                             :ARG0 c6-7))))

# ::snt I think it's a new size coffee at Starbucks. Bigger than the Venti.
# ::tokens ["I", "think", "it", "'s", "a", "new", "size", "coffee", "at", "Starbucks", ".", "Bigger", "than", "the", "Venti", "."]
# ::lemmas ["i", "think", "it", "be", "a", "new", "size", "coffee", "at", "Starbucks", ".", "big", "than", "the", "Venti", "."]
(c7-1 / multi-sentence
      :snt1 (c7-11 / think-01
                   :ARG0 (c7-10 / i)
                   :ARG1 (c7-8 / coffee
                               :ARG1-of (c7-3 / size-01
                                              :ARG1-of (c7-2 / new-01))
                               :location (c7-12 / company
                                                :name (c7-4 / name
                                                            :op1 "Starbucks"))))
      :snt2 (c7-5 / have-degree-91
                  :ARG2 (c7-0 / big)
                  :ARG3 (c7-6 / more)
                  :ARG4 (c7-9 / coffee
                              :name (c7-7 / name
                                          :op1 "Venti"))))

# ::snt like Carl's Jr. announcing that they were going to have a completely robotic, non-employee storeand it's Carl's Jr. in the movie. Then there's this thing called the Fellatio Caf in Switzerland where you get blowjobs with coffee,
# ::tokens ["like", "Carl", "'s", "Jr.", "announcing", "that", "they", "were", "going", "to", "have", "a", "completely", "robotic", ",", "non", "-", "employee", "storeand", "it", "'s", "Carl", "'s", "Jr.", "in", "the", "movie", ".", "Then", "there", "'s", "this", "thing", "called", "the", "Fellatio", "Caf", "in", "Switzerland", "where", "you", "get", "blowjobs", "with", "coffee", ","]
# ::lemmas ["like", "Carl", "'s", "Jr.", "announce", "that", "they", "be", "go", "to", "have", "a", "completely", "robotic", ",", "non", "-", "employee", "storeand", "it", "be", "Carl", "'s", "Jr.", "in", "the", "movie", ".", "then", "there", "be", "this", "thing", "call", "the", "Fellatio", "Caf", "in", "Switzerland", "where", "you", "get", "blowjob", "with", "coffee", ","]
(c8-12 / multi-sentence
       :snt1 (c8-18 / resemble-01
                    :ARG2 (c8-9 / announce-01
                                :ARG0 (c8-14 / company
                                             :name (c8-17 / name
                                                          :op1 "Carl's"
                                                          :op2 "Jr."))
                                :ARG1 (c8-7 / and
                                            :op1 (c8-5 / have-03
                                                       :ARG0 c8-14
                                                       :ARG1 (c8-0 / store
                                                                   :mod (c8-3 / robot
                                                                              :ARG1-of (c8-10 / complete-02))
                                                                   :ARG1-of (c8-19 / employ-01
                                                                                   :polarity -)))
                                            :op2 (c8-11 / be-located-at-91
                                                        :ARG1 c8-14
                                                        :ARG2 (c8-6 / movie)))))
       :snt2 (c8-8 / thing
                   :name (c8-13 / name
                                :op1 "Fellatio"
                                :op2 "Caf")
                   :location (c8-2 / country
                                   :name (c8-20 / name
                                                :op1 "Switzerland"))
                   :location-of (c8-1 / blow-03
                                      :ARG0 (c8-4 / you)
                                      :instrument (c8-16 / coffee))
                   :mod (c8-15 / this)
                   :time (c8-21 / then)))

# ::snt "KNEEL DOWN AND WORSHIP MY LITTLE... HANDS!"
# ::tokens ["\"", "KNEEL", "DOWN", "AND", "WORSHIP", "MY", "LITTLE", "...", "HANDS", "!", "\""]
# ::lemmas ["\"", "kneel", "down", "and", "worship", "my", "LITTLE", "...", "hand", "!", "\""]
(c9-8 / and
      :op1 (c9-7 / and
                 :op1 (c9-4 / kneel-01
                            :ARG0 (c9-0 / you)
                            :mode imperative)
                 :op2 (c9-1 / speak-01
                            :ARG0 c9-0
                            :ARG3 (c9-6 / thing
                                        :mod (c9-5 / little)
                                        :ARG1-of (c9-9 / include-91
                                                       :ARG2 (c9-2 / i)))
                            :mode imperative))
      :op2 (c9-3 / hold-01
                 :ARG0 c9-0
                 :mode imperative))

# ::snt Here is the answer
# ::tokens ["Here", "is", "the", "answer"]
# ::lemmas ["here", "be", "the", "answer"]
(c10-2 / thing
       :ARG2-of (c10-0 / answer-01)
       :location (c10-1 / here))

# ::snt :Doesnt that just enhance your coffee
# ::tokens [":", "Does", "nt", "that", "just", "enhance", "your", "coffee"]
# ::lemmas [":", "do", "not", "that", "just", "enhance", "your", "coffee"]
(c11-2 / enhance-01
       :ARG0 (c11-5 / that)
       :ARG1 (c11-3 / coffee
                    :poss (c11-0 / you))
       :mod (c11-4 / just)
       :polarity (c11-1 / amr-unknown))

# ::snt COVFEFE = Change Our Values, False Explanations, Fear Everything
# ::tokens ["COVFEFE", "=", "Change", "Our", "Values", ",", "False", "Explanations", ",", "Fear", "Everything"]
# ::lemmas ["covfefe", "=", "change", "our", "value", ",", "False", "Explanations", ",", "fear", "everything"]
(c12-2 / equal-01
       :ARG1 (c12-1 / voluntary-02
                    :ARG1 (c12-3 / live-01))
       :ARG2 (c12-10 / and
                     :op1 (c12-6 / change-01
                                 :ARG0 (c12-7 / we)
                                 :ARG1 (c12-8 / value
                                              :poss c12-7))
                     :op2 (c12-9 / thing
                                 :ARG1-of (c12-11 / explain-01
                                                  :mod (c12-0 / false)))
                     :op3 (c12-4 / everything
                                 :mod (c12-5 / fear-01))))

# ::snt At times like this, I always suspect alcohol was involved...
# ::tokens ["At", "times", "like", "this", ",", "I", "always", "suspect", "alcohol", "was", "involved", "..."]
# ::lemmas ["at", "time", "like", "this", ",", "i", "always", "suspect", "alcohol", "be", "involve", "..."]
(c13-0 / suspect-01
       :ARG0 (c13-6 / i)
       :ARG1 (c13-1 / involve-01
                    :ARG1 (c13-5 / alcohol))
       :time (c13-4 / always)
       :time (c13-3 / time
                    :ARG1-of (c13-2 / resemble-01
                                    :ARG2 (c13-7 / this))))

# ::snt In context of the sentence, I wonder if should have been "coverage"?
# ::tokens ["In", "context", "of", "the", "sentence", ",", "I", "wonder", "if", "should", "have", "been", "\"", "coverage", "\"", "?"]
# ::lemmas ["in", "context", "of", "the", "sentence", ",", "i", "wonder", "if", "should", "have", "be", "\"", "coverage", "\"", "?"]
(c14-2 / wonder-01
       :ARG0 (c14-4 / i)
       :ARG1 (c14-5 / truth-value
                    :polarity-of (c14-1 / recommend-01
                                        :ARG1 (c14-3 / cover-01)))
       :prep-in (c14-6 / context
                       :mod (c14-0 / sentence)))

# ::snt And finally an attempt to bring our nation together!
# ::tokens ["And", "finally", "an", "attempt", "to", "bring", "our", "nation", "together", "!"]
# ::lemmas ["and", "finally", "an", "attempt", "to", "bring", "our", "nation", "together", "!"]
(c15-6 / and
       :op2 (c15-5 / attempt-01
                   :ARG1 (c15-1 / bring-01
                                :ARG1 (c15-2 / nation
                                             :poss (c15-3 / we))
                                :ARG3 (c15-4 / together))
                   :time (c15-0 / final)))

# ::snt what the is this
# ::tokens ["what", "the", "is", "this"]
# ::lemmas ["what", "the", "be", "this"]
(c16-1 / amr-unknown
       :domain (c16-0 / this))

# ::snt In other news Donald Duck is pulling US out of Paris climate deal.
# ::tokens ["In", "other", "news", "Donald", "Duck", "is", "pulling", "US", "out", "of", "Paris", "climate", "deal", "."]
# ::lemmas ["in", "other", "news", "Donald", "Duck", "be", "pull", "US", "out", "of", "Paris", "climate", "deal", "."]
(c17-4 / pull-out-02
       :ARG0 (c17-2 / person
                    :name (c17-1 / name
                                 :op1 "Donald"
                                 :op2 "Duck"))
       :ARG1 (c17-6 / country
                    :name (c17-3 / name
                                 :op1 "US"))
       :ARG2 (c17-9 / deal-01
                    :ARG2 (c17-10 / climate)
                    :location (c17-8 / city
                                     :name (c17-5 / name
                                                  :op1 "Paris")))
       :mod (c17-7 / news
                   :mod (c17-0 / other)))

# ::snt peacock-loving judge, covfefe and plunge in GDP...all in a day! I cant take it anymore
# ::tokens ["peacock", "-", "loving", "judge", ",", "covfefe", "and", "plunge", "in", "GDP", "...", "all", "in", "a", "day", "!", "I", "ca", "nt", "take", "it", "anymore"]
# ::lemmas ["peacock", "-", "love", "judge", ",", "covfefe", "and", "plunge", "in", "GDP", "...", "all", "in", "a", "day", "!", "i", "can", "not", "take", "it", "anymore"]
(c18-12 / multi-sentence
        :snt1 (c18-9 / and
                     :op1 (c18-18 / person
                                  :ARG0-of (c18-4 / have-org-role-91
                                                  :ARG3 (c18-6 / judge-01))
                                  :ARG0-of (c18-0 / love-01
                                                  :ARG1 (c18-13 / peacock)))
                     :op2 (c18-14 / company
                                  :name (c18-17 / name
                                                :op1 "Covfefe"))
                     :op3 (c18-2 / plunge-01
                                 :ARG1 (c18-1 / product
                                              :ARG1-of (c18-10 / gross-03)
                                              :mod (c18-20 / domestic)))
                     :duration (c18-8 / temporal-quantity
                                      :unit (c18-15 / day)
                                      :quant 1)
                     :mod (c18-7 / all))
        :snt2 (c18-11 / possible-01
                      :ARG1 (c18-16 / take-02
                                    :ARG0 (c18-19 / i)
                                    :ARG1 (c18-3 / it)
                                    :time (c18-5 / anymore))
                      :polarity -))

# ::snt lets do it, m serious. dude, who knows it better than us...
# ::tokens ["lets", "do", "it", ",", "m", "serious", ".", "dude", ",", "who", "knows", "it", "better", "than", "us", "..."]
# ::lemmas ["let", "do", "it", ",", "m", "serious", ".", "dude", ",", "who", "know", "it", "well", "than", "we", "..."]
(c19-0 / multi-sentence
       :snt1 (c19-1 / serious-01
                    :ARG1 (c19-9 / i)
                    :ARG2 (c19-11 / do-02
                                  :ARG0 (c19-7 / we)
                                  :ARG1 (c19-2 / it)
                                  :mode imperative))
       :snt2 (c19-8 / dude
                    :ARG0-of (c19-4 / know-01
                                    :ARG1 (c19-12 / it)
                                    :ARG1-of (c19-3 / have-degree-91
                                                    :ARG2 (c19-10 / good-03
                                                                  :ARG1 c19-4)
                                                    :ARG3 (c19-5 / more)
                                                    :ARG4 (c19-6 / we)))))

# ::snt Haha! You really know how to get the right people in the conversation, don't you?!
# ::tokens ["Haha", "!", "You", "really", "know", "how", "to", "get", "the", "right", "people", "in", "the", "conversation", ",", "do", "n't", "you", "?", "!"]
# ::lemmas ["Haha", "!", "you", "really", "know", "how", "to", "get", "the", "right", "people", "in", "the", "conversation", ",", "do", "not", "you", "?", "!"]
(c20-1 / multi-sentence
       :snt1 (c20-3 / haha
                    :mode expressive)
       :snt2 (c20-4 / know-03
                    :ARG0 (c20-0 / you)
                    :ARG1 (c20-8 / get-05
                                 :ARG0 c20-0
                                 :ARG1 (c20-5 / person
                                              :ARG1-of (c20-2 / right-03))
                                 :ARG2 (c20-7 / converse-01))
                    :ARG1-of (c20-9 / real-04)
                    :ARG1-of (c20-6 / request-confirmation-91
                                    :ARG2 c20-0)))

# ::snt We could try a Kickstarter fundraising for a spaceship powered by Tesla tech. As Indians, we can do it cheap a personalised Mangalyan
# ::tokens ["We", "could", "try", "a", "Kickstarter", "fundraising", "for", "a", "spaceship", "powered", "by", "Tesla", "tech", ".", "As", "Indians", ",", "we", "can", "do", "it", "cheap", "a", "personalised", "Mangalyan"]
# ::lemmas ["we", "could", "try", "a", "Kickstarter", "fundraising", "for", "a", "spaceship", "power", "by", "Tesla", "tech", ".", "as", "Indians", ",", "we", "can", "do", "it", "cheap", "a", "personalised", "Mangalyan"]
(c21-9 / multi-sentence
       :snt1 (c21-18 / possible-01
                     :ARG1 (c21-7 / try-01
                                  :ARG0 (c21-20 / we)
                                  :ARG1 (c21-16 / fundraise-04
                                                :ARG0 (c21-12 / company
                                                              :name (c21-17 / name
                                                                            :op1 "Kickstarter"))
                                                :ARG1 (c21-0 / spaceship
                                                             :ARG1-of (c21-10 / power-01
                                                                              :ARG0 (c21-14 / tech
                                                                                            :mod (c21-8 / company
                                                                                                        :name (c21-11 / name
                                                                                                                      :op1 "Tesla")))))))
                     :snt2 (c21-4 / possible-01
                                  :ARG1 (c21-22 / do-02
                                                :ARG0 (c21-1 / we
                                                             :mod (c21-3 / country
                                                                         :name (c21-19 / name
                                                                                       :op1 "India")))
                                                :ARG1 (c21-21 / it)
                                                :ARG3 (c21-2 / product
                                                             :name (c21-13 / name
                                                                           :op1 "Mangalyan")
                                                             :ARG1-of (c21-6 / personalize-01))
                                                :ARG1-of (c21-15 / cheap-02))
                                  :ARG1-of (c21-5 / cause-01
                                                  :ARG0 (c21-23 / person
                                                                :mod c21-3
                                                                :domain c21-1)))))

# ::snt lets talk to
# ::tokens ["lets", "talk", "to"]
# ::lemmas ["lets", "talk", "to"]
(c22-1 / talk-01
       :ARG0 (c22-0 / we)
       :mode imperative)

# ::snt Can't be fast enough!
# ::tokens ["Ca", "n't", "be", "fast", "enough", "!"]
# ::lemmas ["can", "not", "be", "fast", "enough", "!"]
(c23-3 / possible-01
       :ARG1 (c23-0 / fast-02
                    :ARG1-of (c23-2 / have-degree-91
                                    :ARG3 (c23-1 / enough)
                                    :ARG2 c23-0))
       :polarity -
       :mode expressive)

# ::snt It's time to build a spaceship and leave Earth.
# ::tokens ["It", "'s", "time", "to", "build", "a", "spaceship", "and", "leave", "Earth", "."]
# ::lemmas ["it", "be", "time", "to", "build", "a", "spaceship", "and", "leave", "Earth", "."]
(c24-5 / time
       :time-of (c24-7 / and
                       :op1 (c24-0 / build-01
                                   :ARG1 (c24-2 / spaceship))
                       :op2 (c24-3 / leave-11
                                   :ARG1 (c24-4 / planet
                                                :name (c24-1 / name
                                                             :op1 "Earth"))))
       :domain (c24-6 / it))

# ::snt His alien hair has taken over but it's translator is on the blink
# ::tokens ["His", "alien", "hair", "has", "taken", "over", "but", "it", "'s", "translator", "is", "on", "the", "blink"]
# ::lemmas ["his", "alien", "hair", "have", "take", "over", "but", "it", "be", "translator", "be", "on", "the", "blink"]
(c25-2 / contrast-01
       :ARG1 (c25-4 / take-over-12
                    :ARG0 (c25-1 / hair
                                 :part-of (c25-3 / he)
                                 :mod (c25-6 / alien)))
       :ARG2 (c25-0 / blink-01
                    :ARG1 (c25-7 / thing
                                 :ARG0-of (c25-5 / translate-01)
                                 :poss c25-1)))

# ::snt Top secret code that only Kushner &amp; Kremlin know.
# ::tokens ["Top", "secret", "code", "that", "only", "Kushner", "&", "amp", ";", "Kremlin", "know", "."]
# ::lemmas ["top", "secret", "code", "that", "only", "Kushner", "&", "amp", ";", "Kremlin", "know", "."]
(c26-9 / code
       :mod (c26-3 / secret
                   :mod (c26-10 / top))
       :ARG1-of (c26-6 / know-01
                       :ARG0 (c26-11 / government-organization
                                     :name (c26-1 / name
                                                  :op1 "Kremlin"))
                       :mod (c26-0 / only))
       :ARG1-of (c26-12 / top-01)
       :topic (c26-4 / and
                     :op1 (c26-7 / person
                                 :name (c26-5 / name
                                              :op1 "Kushner"))
                     :op2 (c26-2 / person
                                 :name (c26-8 / name
                                              :op1 "amp"))))

# ::snt It a for a President
# ::tokens ["It", "a", "for", "a", "President"]
# ::lemmas ["it", "a", "for", "a", "President"]
(c27-0 / benefit-01
       :ARG0 (c27-4 / it)
       :ARG1 (c27-3 / person
                    :ARG0-of (c27-2 / have-org-role-91
                                    :ARG2 (c27-1 / president))))

# ::snt Give me Liberty, or give me Covfefe !!
# ::tokens ["Give", "me", "Liberty", ",", "or", "give", "me", "Covfefe", "!", "!"]
# ::lemmas ["give", "i", "Liberty", ",", "or", "give", "i", "Covfefe", "!", "!"]
(c28-0 / or
       :op1 (c28-7 / give-01
                   :ARG0 (c28-2 / you)
                   :ARG1 (c28-4 / liberty)
                   :ARG2 (c28-5 / i)
                   :mode imperative)
       :op2 (c28-6 / give-01
                   :ARG0 c28-2
                   :ARG1 (c28-1 / broadcast-program
                                :name (c28-3 / name
                                             :op1 "Covfefe"))
                   :ARG2 c28-5
                   :mode imperative))

# ::snt The things one misses while one sleeps in America + the rest of the world starts a new Trump-inspired meme...
# ::tokens ["The", "things", "one", "misses", "while", "one", "sleeps", "in", "America", "+", "the", "rest", "of", "the", "world", "starts", "a", "new", "Trump", "-", "inspired", "meme", "..."]
# ::lemmas ["the", "thing", "one", "miss", "while", "one", "sleep", "in", "America", "+", "the", "rest", "of", "the", "world", "start", "a", "new", "Trump", "-", "inspire", "meme", "..."]
(c29-5 / and
       :op1 (c29-2 / miss-02
                   :ARG0 (c29-0 / one)
                   :ARG1 (c29-14 / thing)
                   :time (c29-4 / sleep-01
                                :ARG0 c29-0
                                :location (c29-11 / country
                                                  :name (c29-3 / name
                                                               :op1 "America"))))
       :op2 (c29-1 / start-01
                   :ARG0 (c29-6 / rest
                                :part-of (c29-12 / world))
                   :ARG1 (c29-7 / meme
                                :ARG1-of (c29-8 / new-01)
                                :ARG1-of (c29-13 / inspire-01
                                                 :ARG0 (c29-9 / person
                                                              :name (c29-10 / name
                                                                            :op1 "Trump"))))))

# ::snt That was funny.
# ::tokens ["That", "was", "funny", "."]
# ::lemmas ["that", "be", "funny", "."]
(c30-0 / funny
       :domain (c30-1 / that))

# ::snt Tomorrow brings greatness and a new beginning for our nation. We will continue to fight no matter what the obstacles are. Its who we are!
# ::tokens ["Tomorrow", "brings", "greatness", "and", "a", "new", "beginning", "for", "our", "nation", ".", "We", "will", "continue", "to", "fight", "no", "matter", "what", "the", "obstacles", "are", ".", "Its", "who", "we", "are", "!"]
# ::lemmas ["Tomorrow", "bring", "greatness", "and", "a", "new", "beginning", "for", "our", "nation", ".", "we", "will", "continue", "to", "fight", "no", "matter", "what", "the", "obstacle", "be", ".", "its", "who", "we", "be", "!"]
(c31-3 / multi-sentence
       :snt1 (c31-2 / bring-01
                    :ARG0 (c31-11 / tomorrow)
                    :ARG1 (c31-13 / and
                                  :op1 (c31-14 / great)
                                  :op2 (c31-6 / begin-01
                                              :ARG2 (c31-4 / nation
                                                           :poss (c31-9 / we))
                                              :ARG1-of (c31-7 / new-01))))
       :snt2 (c31-10 / continue-01
                     :ARG0 (c31-8 / we)
                     :ARG1 (c31-0 / fight-01
                                  :ARG0 c31-8)
                     :ARG1-of (c31-5 / regardless-91
                                     :ARG2 (c31-1 / obstacle)))
       :snt3 (c31-15 / we
                     :domain (c31-12 / it)))

# ::snt They are watching high followers within a few months. She had k within months
# ::tokens ["They", "are", "watching", "high", "followers", "within", "a", "few", "months", ".", "She", "had", "k", "within", "months"]
# ::lemmas ["they", "be", "watch", "high", "follower", "within", "a", "few", "months", ".", "she", "have", "k", "within", "months"]
(c32-6 / multi-sentence
       :snt1 (c32-17 / watch-01
                     :ARG0 (c32-5 / they)
                     :ARG1 (c32-15 / person
                                   :ARG0-of (c32-13 / follow-02
                                                    :ARG1-of (c32-1 / high-02)))
                     :time (c32-4 / after
                                  :op1 (c32-14 / now)
                                  :quant (c32-16 / few
                                                 :op1 (c32-10 / temporal-quantity
                                                              :unit (c32-2 / month)
                                                              :quant 1))))
       :snt2 (c32-18 / have-05
                     :ARG0 (c32-0 / she)
                     :ARG1 (c32-7 / person
                                  :name (c32-8 / name
                                               :op1 "k"))
                     :time (c32-3 / after
                                  :op1 c32-14)
                     :quant (c32-12 / up-to
                                    :op1 (c32-11 / multiple
                                                 :op1 (c32-19 / temporal-quantity
                                                              :unit (c32-9 / month)
                                                              :quant 1)))))

# ::snt try
# ::tokens ["try"]
# ::lemmas ["try"]
(c33-0 / try-01)

# ::snt DELTA OSCAR NOVEMBER ECHO
# ::tokens ["DELTA", "OSCAR", "NOVEMBER", "ECHO"]
# ::lemmas ["DELTA", "OSCAR", "NOVEMBER", "ECHO"]
(c34-1 / say-01
       :ARG0 (c34-3 / i)
       :ARG2 (c34-2 / person
                    :name (c34-0 / name
                                 :op1 "Delta"
                                 :op2 "Oscar"))
       :time (c34-4 / date-entity
                    :month 11
                    :day 8))

# ::snt Thanks
# ::tokens ["Thanks"]
# ::lemmas ["thank"]
(c35-2 / thank-01
       :ARG0 (c35-1 / i)
       :ARG1 (c35-0 / you))

# ::snt That's BS
# ::tokens ["That", "'s", "BS"]
# ::lemmas ["that", "be", "bs"]
(c36-0 / bullshit-01
       :ARG1 (c36-1 / that))

# ::snt Why she get suspended
# ::tokens ["Why", "she", "get", "suspended"]
# ::lemmas ["why", "she", "get", "suspend"]
(c37-3 / suspend-01
       :ARG1 (c37-0 / she)
       :ARG1-of (c37-1 / cause-01
                       :ARG0 (c37-2 / amr-unknown)))

# ::snt Gotcha girl!!
# ::tokens ["Gotcha", "girl", "!", "!"]
# ::lemmas ["Gotcha", "girl", "!", "!"]
(c38-0 / get-02
       :ARG0 (c38-2 / girl)
       :ARG1 (c38-1 / you)
       :mode expressive)

# ::snt I loved her ! R.I.P !
# ::tokens ["I", "loved", "her", "!", "R.I.P", "!"]
# ::lemmas ["i", "love", "she", "!", "R.I.P", "!"]
(c39-2 / say-01
       :ARG1 (c39-4 / love-01
                    :ARG0 (c39-5 / i)
                    :ARG1 (c39-0 / she))
       :ARG2 (c39-3 / person
                    :name (c39-1 / name
                                 :op1 "R.I.P.")))

# ::snt Exactly
# ::tokens ["Exactly"]
# ::lemmas ["exactly"]
(c40-0 / exact)

# ::snt A new metal band.
# ::tokens ["A", "new", "metal", "band", "."]
# ::lemmas ["a", "new", "metal", "band", "."]
(c43-1 / band
       :mod (c43-2 / metal)
       :ARG1-of (c43-0 / new-01))

# ::snt haha pretty much
# ::tokens ["haha", "pretty", "much"]
# ::lemmas ["haha", "pretty", "much"]
(c44-1 / pretty-much
       :mod (c44-0 / haha
                   :mode expressive))

# ::snt Haha so Australia next?
# ::tokens ["Haha", "so", "Australia", "next", "?"]
# ::lemmas ["Haha", "so", "Australia", "next", "?"]
(c45-0 / next
       :domain (c45-3 / country
                      :name (c45-1 / name
                                   :op1 "Australia"))
       :mod (c45-2 / haha
                   :mode expressive)
       :polarity (c45-4 / amr-unknown))

# ::snt is what keeps Trump awake at night is the cause of his emotional eating causing potus to become blotus.
# ::tokens ["is", "what", "keeps", "Trump", "awake", "at", "night", "is", "the", "cause", "of", "his", "emotional", "eating", "causing", "potus", "to", "become", "blotus", "."]
# ::lemmas ["be", "what", "keep", "Trump", "awake", "at", "night", "be", "the", "cause", "of", "his", "emotional", "eating", "cause", "potus", "to", "become", "blotus", "."]
(c47-8 / cause-01
       :ARG0 (c47-4 / eat-01
                    :ARG0 (c47-6 / person
                                 :name (c47-1 / name
                                              :op1 "Trump"))
                    :manner (c47-10 / emotional-02)
                    :ARG0-of (c47-11 / cause-01
                                     :ARG1 (c47-0 / become-01
                                                  :ARG1 (c47-2 / potus)
                                                  :ARG2 (c47-5 / blotus))))
       :ARG1 (c47-9 / awake-03
                    :ARG1 c47-6
                    :time (c47-3 / date-entity
                                 :dayperiod (c47-7 / night))))

# ::snt Coffee? I spell it the same way before I have had mine.
# ::tokens ["Coffee", "?", "I", "spell", "it", "the", "same", "way", "before", "I", "have", "had", "mine", "."]
# ::lemmas ["Coffee", "?", "i", "spell", "it", "the", "same", "way", "before", "i", "have", "have", "mine", "."]
(c48-2 / multi-sentence
       :snt1 (c48-5 / coffee
                    :polarity (c48-8 / amr-unknown))
       :snt2 (c48-3 / spell-01
                    :ARG0 (c48-7 / i)
                    :ARG1 (c48-4 / it)
                    :manner (c48-6 / way
                                   :ARG1-of (c48-0 / same-01))
                    :time (c48-1 / before
                                 :op1 (c48-9 / spell-01
                                             :ARG0 c48-7
                                             :ARG1 c48-4))))

# ::snt YouTube link
# ::tokens ["YouTube", "link"]
# ::lemmas ["YouTube", "link"]
(c49-2 / link
       :medium (c49-0 / publication
                      :name (c49-1 / name
                                   :op1 "YouTube")))

# ::snt -and Richard Geres furry pet called Donald
# ::tokens ["-and", "Richard", "Geres", "furry", "pet", "called", "Donald"]
# ::lemmas ["-and", "Richard", "Geres", "furry", "pet", "call", "Donald"]
(c50-5 / and
       :op2 (c50-4 / pet
                   :name (c50-1 / name
                                :op1 "Donald")
                   :mod (c50-0 / furry)
                   :poss (c50-2 / person
                                :name (c50-3 / name
                                             :op1 "Richard"
                                             :op2 "Geres"))))
