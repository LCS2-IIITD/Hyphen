# ::snt Shed get/keep him on the straight and narrow, stat
# ::tokens ["Shed", "get", "/", "keep", "him", "on", "the", "straight", "and", "narrow", ",", "stat"]
# ::lemmas ["shed", "get", "/", "keep", "he", "on", "the", "straight", "and", "narrow", ",", "stat"]
(c1-3 / slash
      :op1 (c1-7 / get-05
                 :ARG1 (c1-4 / he)
                 :ARG2 (c1-0 / straight-04))
      :op2 (c1-5 / keep-02
                 :ARG1 c1-4
                 :ARG2 (c1-1 / be-located-at-91
                             :ARG1 c1-4
                             :ARG2 (c1-6 / and
                                         :op1 c1-0
                                         :op2 (c1-2 / narrow-02))))
      :mod (c1-8 / stat))

# ::snt SAVE MY DUDE
# ::tokens ["SAVE", "MY", "DUDE"]
# ::lemmas ["save", "my", "dude"]
(c3-1 / prove-01
      :ARG0 (c3-0 / you)
      :ARG2 (c3-2 / i)
      :mode imperative)

# ::snt what? Nigga save Tiffany!
# ::tokens ["what", "?", "Nigga", "save", "Tiffany", "!"]
# ::lemmas ["what", "?", "Nigga", "save", "Tiffany", "!"]
(c4-1 / multi-sentence
      :snt1 (c4-6 / amr-unknown)
      :snt2 (c4-2 / save-02
                  :ARG0 (c4-5 / person
                              :name (c4-0 / name
                                          :op1 "Nigga"))
                  :ARG1 (c4-3 / person
                              :name (c4-4 / name
                                          :op1 "Tiffany"))))

# ::snt She cute
# ::tokens ["She", "cute"]
# ::lemmas ["she", "cute"]
(c5-0 / cute
      :domain (c5-1 / she))
