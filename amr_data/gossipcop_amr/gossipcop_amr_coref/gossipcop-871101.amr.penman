# ::snt Lock him up.
# ::tokens ["Lock", "him", "up", "."]
# ::lemmas ["lock", "he", "up", "."]
(c1-1 / lock-up-03
      :ARG0 (c1-0 / you)
      :ARG1 (c1-2 / he)
      :mode imperative)

# ::snt Women deal with unsolicited advances all the time...no one gets stabbed.
# ::tokens ["Women", "deal", "with", "unsolicited", "advances", "all", "the", "time", "...", "no", "one", "gets", "stabbed", "."]
# ::lemmas ["woman", "deal", "with", "unsolicited", "advance", "all", "the", "time", "...", "no", "one", "gets", "stab", "."]
(c2-1 / multi-sentence
      :snt1 (c2-9 / deal-01
                  :ARG0 (c2-4 / woman)
                  :ARG1 (c2-7 / advance-01
                              :ARG1-of (c2-3 / solicit-01
                                             :polarity -))
                  :time (c2-5 / time
                              :mod (c2-6 / all)))
      :snt2 (c2-8 / get-04
                  :ARG1 (c2-0 / stab-01
                              :ARG1 (c2-2 / no-one))))

# ::snt WTF again wtf
# ::tokens ["WTF", "again", "wtf"]
# ::lemmas ["WTF", "again", "wtf"]
(c3-2 / amr-unknown
      :mod (c3-0 / fuck
                 :mode expressive)
      :mod (c3-1 / again)
      :mod c3-0
      :mode expressive)

# ::snt Note to self: read past the headline. Well then, well done sir.
# ::tokens ["Note", "to", "self", ":", "read", "past", "the", "headline", ".", "Well", "then", ",", "well", "done", "sir", "."]
# ::lemmas ["note", "to", "self", ":", "read", "past", "the", "headline", ".", "well", "then", ",", "well", "do", "sir", "."]
(c4-2 / multi-sentence
      :snt1 (c4-1 / note-01
                  :ARG1 (c4-4 / read-01
                              :ARG0 (c4-3 / self)
                              :manner (c4-6 / past
                                            :op1 (c4-5 / headline))
                              :mode imperative)
                  :ARG2 c4-3)
      :snt2 (c4-0 / say-01
                  :ARG1 (c4-7 / well-09
                              :ARG1 (c4-8 / do-02
                                          :ARG0 (c4-9 / sir)))
                  :ARG2 c4-3))

# ::snt He was close to the edge and he lost his head.
# ::tokens ["He", "was", "close", "to", "the", "edge", "and", "he", "lost", "his", "head", "."]
# ::lemmas ["he", "be", "close", "to", "the", "edge", "and", "he", "lose", "his", "head", "."]
(c5-5 / and
      :op1 (c5-3 / close-10
                 :ARG1 (c5-1 / he
                             :part (c5-4 / head))
                 :ARG2 (c5-0 / edge))
      :op2 (c5-2 / lose-02
                 :ARG0 c5-1
                 :ARG1 c5-4))

# ::snt smh
# ::tokens ["smh"]
# ::lemmas ["smh"]
(c6-0 / smh
      :mode expressive)

# ::snt Wow that's horrible .
# ::tokens ["Wow", "that", "'s", "horrible", "."]
# ::lemmas ["wow", "that", "be", "horrible", "."]
(c7-1 / horrible
      :domain (c7-2 / that)
      :mod (c7-0 / wow
                 :mode expressive))

# ::snt SEVERAL packs??? Even funnier!!!
# ::tokens ["SEVERAL", "packs", "?", "?", "?", "Even", "funnier", "!", "!", "!"]
# ::lemmas ["several", "pack", "?", "?", "?", "even", "funnier", "!", "!", "!"]
(c8-1 / multi-sentence
      :snt1 (c8-5 / pack
                  :mod (c8-2 / society)
                  :polarity (c8-7 / amr-unknown))
      :snt2 (c8-4 / have-degree-91
                  :ARG2 (c8-0 / funny-02)
                  :ARG3 (c8-6 / more
                              :mod (c8-3 / even))
                  :mode expressive
                  :mode expressive))

# ::snt That's awful, fame and wealth should not make your life more valuable than any other human being
# ::tokens ["That", "'s", "awful", ",", "fame", "and", "wealth", "should", "not", "make", "your", "life", "more", "valuable", "than", "any", "other", "human", "being"]
# ::lemmas ["that", "be", "awful", ",", "fame", "and", "wealth", "should", "not", "make", "your", "life", "more", "valuable", "than", "any", "other", "human", "being"]
(c9-4 / multi-sentence
      :snt1 (c9-6 / awful
                  :domain (c9-15 / that))
      :snt2 (c9-5 / recommend-01
                  :ARG1 (c9-8 / make-02
                              :ARG0 (c9-14 / and
                                           :op1 (c9-0 / fame-01)
                                           :op2 (c9-11 / wealth))
                              :ARG1 (c9-9 / have-degree-91
                                          :ARG1 (c9-10 / live-01
                                                       :ARG0 (c9-3 / you))
                                          :ARG2 (c9-7 / value-01
                                                      :ARG1 c9-10)
                                          :ARG3 (c9-16 / more)
                                          :ARG4 (c9-2 / being
                                                      :mod (c9-13 / human)
                                                      :mod (c9-12 / any)
                                                      :mod (c9-1 / other)))
                              :polarity -)))

# ::snt Why don't people just walk away. There are five reactions to every situation . People always choose the life altering one. Sad
# ::tokens ["Why", "do", "n't", "people", "just", "walk", "away", ".", "There", "are", "five", "reactions", "to", "every", "situation", ".", "People", "always", "choose", "the", "life", "altering", "one", ".", "Sad"]
# ::lemmas ["why", "do", "not", "people", "just", "walk", "away", ".", "there", "be", "five", "reaction", "to", "every", "situation", ".", "people", "always", "choose", "the", "life", "alter", "one", ".", "sad"]
(c10-2 / multi-sentence
       :snt1 (c10-9 / walk-01
                    :ARG0 (c10-7 / person)
                    :ARG2 (c10-14 / away)
                    :ARG1-of (c10-10 / cause-01
                                     :ARG0 (c10-13 / amr-unknown))
                    :mod (c10-12 / just)
                    :polarity -)
       :snt2 (c10-5 / react-01
                    :ARG1 (c10-4 / situation
                                 :mod (c10-6 / every))
                    :quant 5)
       :snt3 (c10-16 / choose-01
                     :ARG0 (c10-3 / person)
                     :ARG1 (c10-0 / one
                                  :ARG0-of (c10-11 / alter-01
                                                   :ARG1 (c10-8 / life)))
                     :time (c10-15 / always))
       :snt4 (c10-1 / sad-02))

# ::snt SOMEONE STOLE YOUR BAD JOKE!!!!
# ::tokens ["SOMEONE", "STOLE", "YOUR", "BAD", "JOKE", "!", "!", "!", "!"]
# ::lemmas ["someone", "STOLE", "your", "bad", "JOKE", "!", "!", "!", "!"]
(c11-4 / toe-01
       :ARG0 (c11-2 / everyone)
       :ARG1 (c11-3 / job
                    :ARG1-of (c11-0 / bad-07)
                    :poss (c11-1 / you)))

# ::snt Who the fuck is this bag of shit lmao
# ::tokens ["Who", "the", "fuck", "is", "this", "bag", "of", "shit", "lmao"]
# ::lemmas ["who", "the", "fuck", "be", "this", "bag", "of", "shit", "lmao"]
(c12-2 / bag
       :consist-of (c12-3 / shit)
       :mod (c12-6 / this)
       :domain (c12-8 / amr-unknown)
       :mod (c12-0 / fuck
                   :mode expressive)
       :ARG1-of (c12-4 / laugh-01
                       :ARG0 (c12-7 / i
                                    :part (c12-9 / ass))
                       :ARG0-of (c12-5 / cause-01
                                       :ARG1 (c12-1 / off
                                                    :domain c12-9))))

# ::snt Surprised......not
# ::tokens ["Surprised", "......", "not"]
# ::lemmas ["Surprised", "......", "not"]
(c13-2 / and
       :op1 (c13-0 / surprise-01
                   :ARG1 (c13-1 / i)
                   :op2-of c13-2)
       :ARG1 c13-1
       :polarity -)

# ::snt This pick looks like the only thing he wanted to kill was several packages of Oreos
# ::tokens ["This", "pick", "looks", "like", "the", "only", "thing", "he", "wanted", "to", "kill", "was", "several", "packages", "of", "Oreos"]
# ::lemmas ["this", "pick", "look", "like", "the", "only", "thing", "he", "want", "to", "kill", "be", "several", "package", "of", "Oreos"]
(c14-6 / look-02
       :ARG0 (c14-5 / pick-01
                    :mod (c14-9 / this))
       :ARG1 (c14-10 / thing
                     :mod (c14-0 / only)
                     :ARG1-of (c14-7 / kill-01
                                     :ARG0 (c14-4 / he)
                                     :ARG1-of (c14-8 / want-01
                                                     :ARG0 c14-4))
                     :domain (c14-2 / package
                                    :consist-of (c14-1 / Oreo)
                                    :quant (c14-3 / several))))

# ::snt Dude what?
# ::tokens ["Dude", "what", "?"]
# ::lemmas ["dude", "what", "?"]
(c15-3 / ask-01
       :ARG0 (c15-2 / i)
       :ARG1 (c15-1 / amr-unknown)
       :ARG2 (c15-0 / dude))

# ::snt Why Glover, why?
# ::tokens ["Why", "Glover", ",", "why", "?"]
# ::lemmas ["why", "Glover", ",", "why", "?"]
(c16-5 / ask-01
       :ARG1 (c16-2 / cause-01
                    :ARG0 (c16-4 / amr-unknown))
       :ARG2 (c16-1 / person
                    :name (c16-0 / name
                                 :op1 "Glenn")
                    :ARG0-of (c16-6 / cause-01
                                    :ARG1 (c16-3 / amr-unknown))))

# ::snt Ohh myyy goodness.
# ::tokens ["Ohh", "myyy", "goodness", "."]
# ::lemmas ["Ohh", "myyy", "goodness", "."]
(c17-0 / goodness
       :mod (c17-1 / oh
                   :mode expressive)
       :poss (c17-2 / i)
       :mode expressive)

# ::snt Typical career move....
# ::tokens ["Typical", "career", "move", "...."]
# ::lemmas ["typical", "career", "move", "...."]
(c18-1 / move-02
       :ARG1 (c18-0 / career)
       :ARG1-of (c18-2 / typical-02))

# ::snt Well now he'll have to fight daily against ppl who will making advances toward him
# ::tokens ["Well", "now", "he", "'ll", "have", "to", "fight", "daily", "against", "ppl", "who", "will", "making", "advances", "toward", "him"]
# ::lemmas ["well", "now", "he", "'ll", "have", "to", "fight", "daily", "against", "ppl", "who", "will", "make", "advance", "toward", "he"]
(c19-0 / obligate-01
       :ARG1 (c19-5 / he)
       :ARG2 (c19-1 / fight-01
                    :ARG0 c19-5
                    :ARG1 (c19-6 / person
                                 :mod (c19-4 / every)
                                 :ARG0-of (c19-9 / advance-01
                                                 :ARG1 c19-5))
                    :frequency (c19-3 / rate-entity-91
                                      :ARG3 (c19-8 / temporal-quantity
                                                   :unit (c19-10 / day)
                                                   :quant 1)))
       :time (c19-2 / now)
       :mod (c19-7 / well))

# ::snt you savage
# ::tokens ["you", "savage"]
# ::lemmas ["you", "savage"]
(c20-1 / savage
       :domain (c20-0 / you))

# ::snt Bullsht
# ::tokens ["Bullsht"]
# ::lemmas ["Bullsht"]
(c21-0 / bullshit)

# ::snt What?!
# ::tokens ["What", "?", "!"]
# ::lemmas ["what", "?", "!"]
(c22-0 / amr-unknown
       :mode expressive)

# ::snt These are the rappers that give Hip hop a bad name..
# ::tokens ["These", "are", "the", "rappers", "that", "give", "Hip", "hop", "a", "bad", "name", ".."]
# ::lemmas ["these", "be", "the", "rapper", "that", "give", "Hip", "hop", "a", "bad", "name", ".."]
(c23-4 / person
       :ARG0-of (c23-2 / rap-02)
       :mod (c23-5 / this)
       :ARG0-of (c23-1 / name-01
                       :ARG1 (c23-3 / hip-hop)
                       :ARG2 (c23-0 / bad-07)))

# ::snt Damn , so sad!
# ::tokens ["Damn", ",", "so", "sad", "!"]
# ::lemmas ["damn", ",", "so", "sad", "!"]
(c26-2 / sad-02
       :degree (c26-0 / so)
       :mod (c26-1 / damn
                   :mode expressive))
