# ::snt Do you do filing professionally? Lol
# ::tokens ["Do", "you", "do", "filing", "professionally", "?", "Lol"]
# ::lemmas ["do", "you", "do", "file", "professionally", "?", "Lol"]
(c1-2 / multi-sentence
      :snt1 (c1-0 / file-01
                  :ARG0 (c1-1 / you)
                  :polarity (c1-6 / amr-unknown)
                  :manner (c1-3 / professional))
      :snt2 (c1-4 / laugh-01
                  :ARG0 (c1-5 / i)
                  :manner (c1-7 / loud)
                  :mode expressive))

# ::snt Actually I meant VILE, predictive text an all that will teach me for not checking before I press send.
# ::tokens ["Actually", "I", "meant", "VILE", ",", "predictive", "text", "an", "all", "that", "will", "teach", "me", "for", "not", "checking", "before", "I", "press", "send", "."]
# ::lemmas ["actually", "i", "mean", "VILE", ",", "predictive", "text", "an", "all", "that", "will", "teach", "i", "for", "not", "check", "before", "i", "press", "send", "."]
(c2-1 / mean-01
      :ARG0 (c2-8 / i)
      :ARG2 (c2-9 / text
                  :ARG0-of (c2-6 / predict-01)
                  :mod (c2-5 / VILE)
                  :mod (c2-4 / all)
                  :ARG0-of (c2-11 / teach-01
                                  :ARG1 (c2-7 / check-01
                                              :ARG0 c2-8
                                              :time (c2-0 / before
                                                          :op1 (c2-2 / press-01
                                                                     :ARG0 c2-8
                                                                     :ARG1 (c2-3 / send-01
                                                                                 :ARG0 c2-8)))
                                              :polarity -)
                                  :ARG2 c2-8))
      :ARG1-of (c2-10 / actual-02))

# ::snt Lol yea ok
# ::tokens ["Lol", "yea", "ok"]
# ::lemmas ["Lol", "yea", "ok"]
(c3-0 / okay-01
      :mod (c3-2 / laugh-01
                 :manner (c3-1 / loud)
                 :mode expressive))

# ::snt What's a file person? I'm a nice person
# ::tokens ["What", "'s", "a", "file", "person", "?", "I", "'m", "a", "nice", "person"]
# ::lemmas ["what", "be", "a", "file", "person", "?", "i", "be", "a", "nice", "person"]
(c4-2 / multi-sentence
      :snt1 (c4-3 / person
                  :domain (c4-5 / amr-unknown)
                  :mod (c4-0 / file))
      :snt2 (c4-1 / nice-01
                  :ARG1 (c4-4 / i)))

# ::snt MP you obviously have no knowledge in psychology or you would know that this can have a very big impact on a young girls life. You Grow Up!
# ::tokens ["MP", "you", "obviously", "have", "no", "knowledge", "in", "psychology", "or", "you", "would", "know", "that", "this", "can", "have", "a", "very", "big", "impact", "on", "a", "young", "girls", "life", ".", "You", "Grow", "Up", "!"]
# ::lemmas ["MP", "you", "obviously", "have", "no", "knowledge", "in", "psychology", "or", "you", "would", "know", "that", "this", "can", "have", "a", "very", "big", "impact", "on", "a", "young", "girl", "life", ".", "you", "grow", "up", "!"]
(c5-4 / multi-sentence
      :snt1 (c5-1 / obvious-01
                  :ARG1 (c5-0 / or
                              :op1 (c5-9 / know-01
                                         :ARG0 (c5-8 / person
                                                     :name (c5-5 / name
                                                                 :op1 "MP"))
                                         :ARG1 (c5-6 / psychology)
                                         :op2-of c5-0
                                         :polarity -)
                              :ARG0 c5-8
                              :ARG1 (c5-13 / possible-01
                                           :ARG1 (c5-12 / impact-01
                                                        :ARG0 (c5-11 / this)
                                                        :ARG1 (c5-10 / life
                                                                     :poss (c5-14 / girl
                                                                                  :mod (c5-3 / young)))
                                                        :mod (c5-2 / big
                                                                   :degree (c5-7 / very))))))
      :snt2 (c5-15 / grow-up-04
                   :ARG1 (c5-16 / you)))

# ::snt Wow what a file person you are if you don't like her DON'T follow her simple!!!!!!!!!!!!!!!
# ::tokens ["Wow", "what", "a", "file", "person", "you", "are", "if", "you", "do", "n't", "like", "her", "DON'T", "follow", "her", "simple", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["wow", "what", "a", "file", "person", "you", "be", "if", "you", "do", "not", "like", "she", "don't", "follow", "her", "simple", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
(c6-4 / person
      :mod (c6-0 / file)
      :domain (c6-2 / you)
      :condition (c6-7 / dislike-01
                       :ARG0 c6-2
                       :ARG1 (c6-3 / she))
      :ARG1-of (c6-5 / follow-02
                     :ARG0 c6-2
                     :manner (c6-1 / simple-02)
                     :polarity -
                     :mode imperative)
      :ARG0-of (c6-6 / wow-01
                     :mode expressive)
      :mode expressive)

# ::snt Well jenelle there are many low life dads who aren't in their kids lives these days - you're not the minority. Grow up
# ::tokens ["Well", "jenelle", "there", "are", "many", "low", "life", "dads", "who", "are", "n't", "in", "their", "kids", "lives", "these", "days", "-", "you", "'re", "not", "the", "minority", ".", "Grow", "up"]
# ::lemmas ["well", "jenelle", "there", "be", "many", "low", "life", "dad", "who", "be", "not", "in", "their", "kid", "live", "these", "day", "-", "you", "be", "not", "the", "minority", ".", "grow", "up"]
(c7-2 / multi-sentence
      :snt1 (c7-4 / say-01
                  :ARG0 (c7-9 / i)
                  :ARG1 (c7-0 / be-located-at-91
                              :ARG1 (c7-12 / dad
                                           :mod (c7-6 / low-life)
                                           :quant (c7-5 / many))
                              :ARG2 (c7-13 / life
                                           :poss c7-12)
                              :time (c7-8 / day
                                          :mod (c7-10 / this))
                              :polarity -)
                  :ARG2 (c7-7 / person
                              :name (c7-3 / name
                                          :op1 "Jenelle")))
      :snt2 (c7-14 / minority
                   :domain (c7-1 / you)
                   :polarity -)
      :snt3 (c7-11 / grow-up-04
                   :ARG1 c7-1
                   :mode imperative))

# ::snt When will this be out,can't find it on amazon
# ::tokens ["When", "will", "this", "be", "out", ",", "can't", "find", "it", "on", "amazon"]
# ::lemmas ["when", "will", "this", "be", "out", ",", "can't", "find", "it", "on", "amazon"]
(c8-2 / multi-sentence
      :snt1 (c8-0 / out-05
                  :ARG1 (c8-6 / this)
                  :time (c8-8 / amr-unknown))
      :snt2 (c8-4 / possible-01
                  :ARG1 (c8-1 / find-01
                              :ARG1 (c8-7 / it)
                              :location (c8-5 / company
                                              :name (c8-3 / name
                                                          :op1 "Amazon")))
                  :polarity -))

# ::snt I can relate. I haven't seen him since I was . I don't even remember him. His loss. Life goes on.
# ::tokens ["I", "can", "relate", ".", "I", "have", "n't", "seen", "him", "since", "I", "was", ".", "I", "do", "n't", "even", "remember", "him", ".", "His", "loss", ".", "Life", "goes", "on", "."]
# ::lemmas ["i", "can", "relate", ".", "i", "have", "not", "see", "he", "since", "i", "be", ".", "i", "do", "not", "even", "remember", "he", ".", "his", "loss", ".", "life", "go", "on", "."]
(c9-2 / multi-sentence
      :snt1 (c9-8 / possible-01
                  :ARG1 (c9-5 / relate-01
                              :ARG0 (c9-12 / i)))
      :snt2 (c9-3 / see-01
                  :ARG0 (c9-4 / i)
                  :ARG1 (c9-7 / he)
                  :time (c9-0 / since
                              :op1 (c9-15 / i))
                  :polarity -)
      :snt3 (c9-14 / remember-01
                   :ARG0 (c9-1 / i)
                   :ARG1 (c9-11 / he)
                   :mod (c9-6 / even)
                   :polarity -)
      :snt4 (c9-9 / lose-02
                  :ARG0 (c9-10 / he))
      :snt5 (c9-13 / go-on-15
                   :ARG1 (c9-16 / life)))
