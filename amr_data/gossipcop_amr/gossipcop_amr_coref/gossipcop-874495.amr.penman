# ::snt For that woman I don't know who wouldn't settle down! Wow
# ::tokens ["For", "that", "woman", "I", "do", "n't", "know", "who", "would", "n't", "settle", "down", "!", "Wow"]
# ::lemmas ["for", "that", "woman", "i", "do", "not", "know", "who", "would", "not", "settle", "down", "!", "wow"]
(c1-0 / multi-sentence
      :snt1 (c1-3 / know-01
                  :ARG0 (c1-6 / i)
                  :ARG1 (c1-5 / woman
                              :mod (c1-7 / that))
                  :polarity -)
      :snt2 (c1-1 / settle-down-05
                  :ARG0 (c1-2 / amr-unknown)
                  :polarity -)
      :snt3 (c1-4 / wow-01
                  :mode expressive))

# ::snt And not being amused doesn't mean someone's angry but I'm not surprised you don't get that either.
# ::tokens ["And", "not", "being", "amused", "does", "n't", "mean", "someone", "'s", "angry", "but", "I", "'m", "not", "surprised", "you", "do", "n't", "get", "that", "either", "."]
# ::lemmas ["and", "not", "be", "amuse", "do", "not", "mean", "someone", "'s", "angry", "but", "i", "be", "not", "surprised", "you", "do", "not", "get", "that", "either", "."]
(c2-9 / and
      :op2 (c2-5 / contrast-01
                 :ARG1 (c2-2 / mean-01
                             :ARG1 (c2-8 / amuse-01
                                         :ARG1 (c2-3 / someone)
                                         :polarity -)
                             :ARG2 (c2-6 / anger-01
                                         :ARG1 c2-3)
                             :polarity -)
                 :ARG2 (c2-0 / surprise-01
                             :ARG0 (c2-10 / get-01
                                          :ARG0 (c2-1 / you)
                                          :ARG1 (c2-7 / that)
                                          :mod (c2-4 / either)
                                          :polarity -)
                             :ARG1 (c2-11 / i)
                             :polarity -)))

# ::snt Might wanna check your own profile Learn how to keep your (pointless) act going before you try it out in public.
# ::tokens ["Might", "wanna", "check", "your", "own", "profile", "Learn", "how", "to", "keep", "your", "(", "pointless", ")", "act", "going", "before", "you", "try", "it", "out", "in", "public", "."]
# ::lemmas ["might", "wanna", "check", "your", "own", "profile", "Learn", "how", "to", "keep", "your", "(", "pointless", ")", "act", "go", "before", "you", "try", "it", "out", "in", "public", "."]
(c3-5 / possible-01
      :ARG1 (c3-8 / want-01
                  :ARG0 (c3-1 / you)
                  :ARG1 (c3-9 / check-01
                              :ARG0 c3-1
                              :ARG1 (c3-2 / profile
                                          :poss c3-1)))
      :ARG0-of (c3-14 / cause-01
                      :ARG1 (c3-6 / learn-01
                                  :ARG0 c3-1
                                  :ARG1 (c3-10 / thing
                                               :manner-of (c3-7 / keep-02
                                                                :ARG0 c3-1
                                                                :ARG1 (c3-3 / act-02
                                                                            :ARG0 c3-1
                                                                            :ARG1-of (c3-4 / have-point-of-view-08
                                                                                           :polarity -))
                                                                :ARG2 (c3-11 / go-06
                                                                             :ARG0 c3-1)))
                                  :time (c3-0 / before
                                              :op1 (c3-12 / try-out-05
                                                          :ARG0 c3-1
                                                          :ARG1 c3-3
                                                          :ARG1-of (c3-13 / public-02))))))

# ::snt You need to look up what satirical means because you're doing it wrong. Bye idiot.
# ::tokens ["You", "need", "to", "look", "up", "what", "satirical", "means", "because", "you", "'re", "doing", "it", "wrong", ".", "Bye", "idiot", "."]
# ::lemmas ["you", "need", "to", "look", "up", "what", "satirical", "mean", "because", "you", "be", "do", "it", "wrong", ".", "bye", "idiot", "."]
(c4-2 / multi-sentence
      :snt1 (c4-1 / need-01
                  :ARG0 (c4-9 / idiot)
                  :ARG1 (c4-6 / look-up-05
                              :ARG0 c4-9
                              :ARG1 (c4-5 / mean-01
                                          :ARG1 (c4-3 / satire)
                                          :ARG2 (c4-10 / thing)))
                  :ARG1-of (c4-7 / cause-01
                                 :ARG0 (c4-11 / do-02
                                              :ARG0 c4-9
                                              :ARG1 (c4-4 / it)
                                              :ARG2-of (c4-8 / wrong-04
                                                             :ARG1 c4-9))))
      :snt2 (c4-0 / bye))

# ::snt They retired his jersey number. No one else is wearing it &amp; never will again on the Yankees. I know living up to your name &amp; all but enough
# ::tokens ["They", "retired", "his", "jersey", "number", ".", "No", "one", "else", "is", "wearing", "it", "&", "amp", ";", "never", "will", "again", "on", "the", "Yankees", ".", "I", "know", "living", "up", "to", "your", "name", "&", "amp", ";", "all", "but", "enough"]
# ::lemmas ["they", "retire", "his", "jersey", "number", ".", "no", "one", "else", "be", "wear", "it", "&", "amp", ";", "never", "will", "again", "on", "the", "Yankees", ".", "i", "know", "live", "up", "to", "your", "name", "&", "amp", ";", "all", "but", "enough"]
(c5-10 / multi-sentence
       :snt1 (c5-17 / retire-01
                    :ARG0 (c5-8 / they)
                    :ARG1 (c5-16 / number
                                 :mod (c5-5 / jersey)
                                 :poss (c5-3 / he)))
       :snt2 (c5-13 / contrast-01
                    :ARG1 (c5-20 / wear-01
                                 :ARG0 (c5-11 / no-one
                                              :mod (c5-18 / else))
                                 :ARG1 (c5-22 / it)
                                 :time (c5-9 / ever)
                                 :location (c5-15 / team
                                                  :name (c5-19 / name
                                                               :op1 "Yankees"))
                                 :mod (c5-7 / again)
                                 :polarity -)
                    :ARG2 (c5-4 / know-01
                                :ARG0 (c5-2 / i)
                                :ARG1 (c5-0 / live-up-04
                                            :ARG0 (c5-1 / you)
                                            :ARG1 (c5-14 / name
                                                         :poss c5-1))))
       :snt3 (c5-21 / have-quant-91
                    :ARG1 (c5-6 / all-but)
                    :ARG3 (c5-12 / enough)))

# ::snt That main photo is from the day they retired his jersey at Yankee Stadium earlier this year.
# ::tokens ["That", "main", "photo", "is", "from", "the", "day", "they", "retired", "his", "jersey", "at", "Yankee", "Stadium", "earlier", "this", "year", "."]
# ::lemmas ["that", "main", "photo", "be", "from", "the", "day", "they", "retire", "his", "jersey", "at", "Yankee", "Stadium", "earlier", "this", "year", "."]
(c6-0 / be-temporally-at-91
      :ARG1 (c6-7 / photo
                  :mod (c6-2 / main)
                  :mod (c6-11 / that))
      :ARG2 (c6-12 / day
                   :time-of (c6-5 / retire-01
                                  :ARG0 (c6-13 / they)
                                  :ARG1 (c6-9 / jersey
                                              :poss (c6-6 / he))
                                  :location (c6-4 / sports-facility
                                                  :name (c6-3 / name
                                                              :op1 "Yankee"
                                                              :op2 "Stadium"))
                                  :time (c6-8 / before)
                                  :time (c6-1 / year
                                              :mod (c6-10 / this)))))

# ::snt When you have a chance to marry a woman like , you do it!
# ::tokens ["When", "you", "have", "a", "chance", "to", "marry", "a", "woman", "like", ",", "you", "do", "it", "!"]
# ::lemmas ["when", "you", "have", "a", "chance", "to", "marry", "a", "woman", "like", ",", "you", "do", "it", "!"]
(c7-6 / do-02
      :ARG0 (c7-0 / you)
      :ARG1 (c7-5 / it)
      :time (c7-3 / chance-02
                  :ARG0 c7-0
                  :ARG1 (c7-1 / marry-01
                              :ARG1 c7-0
                              :ARG2 (c7-4 / woman
                                          :ARG1-of (c7-2 / resemble-01
                                                         :ARG2 c7-4))))
      :mode expressive)

# ::snt Congratulations Jeter and what a catch?
# ::tokens ["Congratulations", "Jeter", "and", "what", "a", "catch", "?"]
# ::lemmas ["Congratulations", "Jeter", "and", "what", "a", "catch", "?"]
(c8-4 / and
      :op1 (c8-2 / congratulate-01
                 :ARG1 (c8-1 / person
                             :name (c8-0 / name
                                         :op1 "Jeter")))
      :op2 (c8-5 / catch-03
                 :mod (c8-3 / amr-unknown)))
