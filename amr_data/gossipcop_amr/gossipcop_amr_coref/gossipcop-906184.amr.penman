# ::snt Gotta love DJKhalid,singing asong somebody else wrote with two Grammy level stars, and he keeps singing his own name!DJKhalid,DJKhalid!
# ::tokens ["Got", "ta", "love", "DJKhalid", ",", "singing", "asong", "somebody", "else", "wrote", "with", "two", "Grammy", "level", "stars", ",", "and", "he", "keeps", "singing", "his", "own", "name!DJKhalid", ",", "DJKhalid", "!"]
# ::lemmas ["got", "to", "love", "djkhalid", ",", "singe", "asong", "somebody", "else", "write", "with", "two", "Grammy", "level", "star", ",", "and", "he", "keep", "singe", "his", "own", "name!djkhalid", ",", "djkhalid", "!"]
(c1-10 / multi-sentence
       :snt1 (c1-3 / obligate-01
                   :ARG1 (c1-1 / love-01
                               :ARG1 (c1-18 / person
                                            :name (c1-15 / name
                                                         :op1 "DJKhalid")))
                   :ARG1-of (c1-13 / cause-01
                                   :ARG0 (c1-8 / and
                                               :op1 (c1-0 / sing-01
                                                          :ARG0 c1-18
                                                          :manner (c1-7 / asong)
                                                          :ARG1-of (c1-20 / write-01
                                                                          :ARG0 (c1-4 / somebody
                                                                                      :mod (c1-17 / else))
                                                                          :accompanier (c1-2 / star
                                                                                             :mod (c1-9 / level
                                                                                                        :mod (c1-6 / award
                                                                                                                   :name (c1-12 / name
                                                                                                                                :op1 "Grammy")))
                                                                                             :quant 2)))
                                               :op2 (c1-5 / keep-02
                                                          :ARG0 c1-18
                                                          :ARG1 (c1-16 / sing-01
                                                                       :ARG0 c1-18
                                                                       :ARG1 (c1-19 / name
                                                                                    :poss c1-18))))))
       :snt2 (c1-11 / person
                    :name (c1-14 / name
                                 :op1 "DJKhalid")))

# ::snt Jason King
# ::tokens ["Jason", "King"]
# ::lemmas ["Jason", "King"]
(c2-1 / person
      :name (c2-0 / name
                  :op1 "Jason"
                  :op2 "King"))

# ::snt Where is Taylor?
# ::tokens ["Where", "is", "Taylor", "?"]
# ::lemmas ["where", "be", "Taylor", "?"]
(c4-1 / person
      :name (c4-0 / name
                  :op1 "Taylor")
      :location (c4-2 / amr-unknown))

# ::snt Im hoping this queen wins
# ::tokens ["I", "m", "hoping", "this", "queen", "wins"]
# ::lemmas ["i", "m", "hope", "this", "queen", "win"]
(c5-0 / hope-01
      :ARG0 (c5-2 / i)
      :ARG1 (c5-1 / win-01
                  :ARG0 (c5-4 / queen
                              :mod (c5-3 / this))))

# ::snt Taylor Swifty best album.
# ::tokens ["Taylor", "Swifty", "best", "album", "."]
# ::lemmas ["Taylor", "Swifty", "good", "album", "."]
(c6-4 / album
      :ARG1-of (c6-2 / have-degree-91
                     :ARG2 (c6-5 / good-02
                                 :ARG1 c6-4)
                     :ARG3 (c6-0 / most))
      :mod (c6-3 / person
                 :name (c6-1 / name
                             :op1 "Taylor"
                             :op2 "Swifty")))

# ::snt Joanne by Lady Gaga!!!
# ::tokens ["Joanne", "by", "Lady", "Gaga", "!", "!", "!"]
# ::lemmas ["Joanne", "by", "Lady", "Gaga", "!", "!", "!"]
(c7-1 / byline-91
      :ARG1 (c7-3 / person
                  :name (c7-0 / name
                              :op1 "Lady"
                              :op2 "Gagla")
                  :ARG2-of c7-1)
      :name (c7-2 / name
                  :op1 "Joanne"))

# ::snt Tay better get those grammys
# ::tokens ["Tay", "better", "get", "those", "grammys"]
# ::lemmas ["Tay", "well", "get", "those", "grammy"]
(c8-2 / recommend-01
      :ARG1 (c8-5 / get-01
                  :ARG0 (c8-0 / you)
                  :ARG1 (c8-4 / award
                              :name (c8-1 / name
                                          :op1 "Grammys")
                              :mod (c8-3 / that)))
      :ARG2 c8-0)

# ::snt Chicago for lifetime achievement award!
# ::tokens ["Chicago", "for", "lifetime", "achievement", "award", "!"]
# ::lemmas ["Chicago", "for", "lifetime", "achievement", "award", "!"]
(c9-4 / award-01
      :ARG1 (c9-2 / city
                  :name (c9-0 / name
                              :op1 "Chicago"))
      :ARG2 (c9-3 / achieve-01
                  :duration (c9-1 / lifetime)))

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c10-0 / amr-empty)

# ::snt JOANNE AND MILLION REASONS
# ::tokens ["JOANNE", "AND", "MILLION", "REASONS"]
# ::lemmas ["JOANNE", "and", "MILLION", "reason"]
(c12-4 / and
       :op1 (c12-3 / person
                   :name (c12-1 / name
                                :op1 "Joanie"))
       :op2 (c12-2 / person
                   :quant (c12-0 / multiple
                                 :op1 1000000)))

# ::snt Well see
# ::tokens ["Well", "see"]
# ::lemmas ["well", "see"]
(c13-1 / see-01
       :mod (c13-0 / well))

# ::snt GAGA, GAGA AND GAGA
# ::tokens ["GAGA", ",", "GAGA", "AND", "GAGA"]
# ::lemmas ["GAGA", ",", "GAGA", "and", "GAGA"]
(c15-4 / and
       :op1 (c15-3 / product
                   :name (c15-0 / name
                                :op1 "GAGA"))
       :op2 (c15-1 / product
                   :name (c15-2 / name
                                :op1 "GAGA")
                   :op3-of c15-4))

# ::snt Lady Gaga better win what she clearly deserves
# ::tokens ["Lady", "Gaga", "better", "win", "what", "she", "clearly", "deserves"]
# ::lemmas ["Lady", "Gaga", "well", "win", "what", "she", "clearly", "deserve"]
(c16-2 / recommend-01
       :ARG1 (c16-5 / win-01
                    :ARG0 (c16-4 / person
                                 :name (c16-0 / name
                                              :op1 "Lady"
                                              :op2 "Gagla"))
                    :ARG1 (c16-7 / thing
                                 :ARG1-of (c16-9 / deserve-01
                                                 :ARG0 c16-4
                                                 :ARG1-of (c16-6 / clear-06)))
                    :ARG1-of (c16-3 / have-degree-91
                                    :ARG2 (c16-8 / good-02
                                                 :ARG1 c16-5)
                                    :ARG3 (c16-1 / more))))

# ::snt JOANNE
# ::tokens ["JOANNE"]
# ::lemmas ["JOANNE"]
(c17-1 / person
       :name (c17-0 / name
                    :op1 "Joanne"))

# ::snt See our all-time 'Best of The Grammy Awards' Weave here
# ::tokens ["See", "our", "all", "-", "time", "'", "Best", "of", "The", "Grammy", "Awards", "'", "Weave", "here"]
# ::lemmas ["see", "our", "all", "-", "time", "'", "Best", "of", "The", "Grammy", "Awards", "'", "Weave", "here"]
(c18-3 / see-01
       :ARG0 (c18-1 / you)
       :ARG1 (c18-7 / weave-00
                    :ARG0 (c18-6 / we
                                 :time (c18-8 / time
                                              :mod (c18-4 / all))
                                 :mod (c18-0 / broadcast-program
                                             :name (c18-2 / name
                                                          :op1 "Best"
                                                          :op2 "of"
                                                          :op3 "The"
                                                          :op4 "Grammy"
                                                          :op5 "Awards")))
                    :location (c18-5 / here)))

# ::snt :MELODRAMA AOTY
# ::tokens [":", "MELODRAMA", "AOTY"]
# ::lemmas [":", "MELODRAMA", "AOTY"]
(c19-0 / offer-01
       :ARG3 (c19-1 / country
                    :name (c19-2 / name
                                 :op1 "Mexico")))

# ::snt Anyone who deserves it
# ::tokens ["Anyone", "who", "deserves", "it"]
# ::lemmas ["anyone", "who", "deserve", "it"]
(c20-2 / anyone
       :ARG0-of (c20-0 / deserve-01
                       :ARG1 (c20-1 / it)))

# ::snt Lady Gaga!
# ::tokens ["Lady", "Gaga", "!"]
# ::lemmas ["Lady", "Gaga", "!"]
(c21-1 / person
       :name (c21-0 / name
                    :op1 "Lady"
                    :op2 "Gagola")
       :mode expressive)

# ::snt Lust for Life
# ::tokens ["Lust", "for", "Life"]
# ::lemmas ["lust", "for", "life"]
(c22-1 / support-01
       :ARG1 (c22-0 / life))

# ::snt Lady Gaga
# ::tokens ["Lady", "Gaga"]
# ::lemmas ["Lady", "Gaga"]
(c23-1 / person
       :name (c23-0 / name
                    :op1 "Lady"
                    :op2 "Gagla"))

# ::snt Lady Gaga BPVA and BPVSP
# ::tokens ["Lady", "Gaga", "BPVA", "and", "BPVSP"]
# ::lemmas ["Lady", "Gaga", "BPVA", "and", "BPVSP"]
(c24-5 / and
       :op1 (c24-4 / company
                   :name (c24-0 / name
                                :op1 "BPVA"))
       :op2 (c24-6 / company
                   :name (c24-1 / name
                                :op1 "BPVSP"))
       :mod (c24-2 / person
                   :name (c24-3 / name
                                :op1 "Lady"
                                :op2 "Gazie")))

# ::snt - Best Pop Vocal Album - Best Pop Vocal Solo Performance
# ::tokens ["-", "Best", "Pop", "Vocal", "Album", "-", "Best", "Pop", "Vocal", "Solo", "Performance"]
# ::lemmas ["-", "good", "Pop", "Vocal", "Album", "-", "Best", "Pop", "Vocal", "Solo", "Performance"]
(c25-8 / and
       :op1 (c25-3 / have-degree-91
                   :ARG1 (c25-7 / album
                                :mod (c25-1 / music
                                            :name (c25-0 / name
                                                         :op1 "Pop"
                                                         :op2 "Vocal")))
                   :ARG2 (c25-9 / good-02
                                :ARG1 c25-7)
                   :ARG3 (c25-4 / most))
       :op2 (c25-6 / have-degree-91
                   :ARG1 (c25-5 / perform-01
                                :ARG1 c25-1
                                :mod (c25-2 / solo))
                   :ARG2 (c25-10 / good-02
                                 :ARG1 c25-5)
                   :ARG3 (c25-11 / most)))

# ::snt I want my Canadian singers to win
# ::tokens ["I", "want", "my", "Canadian", "singers", "to", "win"]
# ::lemmas ["i", "want", "my", "Canadian", "singer", "to", "win"]
(c26-4 / want-01
       :ARG0 (c26-6 / i)
       :ARG1 (c26-3 / win-01
                    :ARG0 (c26-2 / person
                                 :ARG0-of (c26-1 / sing-01)
                                 :mod (c26-5 / country
                                             :name (c26-0 / name
                                                          :op1 "Canada"))
                                 :poss c26-6)))

# ::snt Lady Gaga winning categories
# ::tokens ["Lady", "Gaga", "winning", "categories"]
# ::lemmas ["Lady", "Gaga", "win", "category"]
(c27-0 / category
       :ARG2-of (c27-3 / win-01
                       :ARG0 (c27-2 / person
                                    :name (c27-1 / name
                                                 :op1 "Lady"
                                                 :op2 "Gagla"))))

# ::snt Ready for Gaga
# ::tokens ["Ready", "for", "Gaga"]
# ::lemmas ["ready", "for", "Gaga"]
(c28-0 / ready-02
       :ARG2 (c28-2 / person
                    :name (c28-1 / name
                                 :op1 "Gaga")))

# ::snt YA ALL DID THAT ALBUM SO DIRTY I AM COMING FOR YOU RECORDIG ACADEMY DONT EVEN TRY TO RUN
# ::tokens ["YA", "ALL", "DID", "THAT", "ALBUM", "SO", "DIRTY", "I", "AM", "COMING", "FOR", "YOU", "RECORDIG", "ACADEMY", "DONT", "EVEN", "TRY", "TO", "RUN"]
# ::lemmas ["YA", "all", "do", "that", "ALBUM", "so", "dirty", "i", "be", "come", "for", "you", "recordig", "academy", "dont", "even", "try", "to", "run"]
(c29-2 / ask-01
       :ARG0 (c29-9 / i)
       :ARG1 (c29-8 / truth-value
                    :polarity-of (c29-10 / try-01
                                         :ARG0 (c29-4 / enemy
                                                      :ARG2-of (c29-3 / record-01)
                                                      :mod (c29-11 / that))
                                         :ARG1 (c29-13 / run-02
                                                       :ARG0 c29-4)
                                         :mod (c29-12 / even)
                                         :polarity -))
       :ARG2 (c29-0 / you
                    :mod (c29-14 / all)
                    :ARG1-of (c29-5 / have-degree-91
                                    :ARG2 (c29-6 / dreary)
                                    :ARG3 (c29-1 / so)
                                    :ARG6 (c29-7 / capable-01
                                                 :ARG1 c29-0
                                                 :ARG2 c29-13))))

# ::snt Let the word red never come out of your mouth or youll get slapped dont rub salt on my wounds
# ::tokens ["Let", "the", "word", "red", "never", "come", "out", "of", "your", "mouth", "or", "you", "ll", "get", "slapped", "do", "nt", "rub", "salt", "on", "my", "wounds"]
# ::lemmas ["let", "the", "word", "red", "never", "come", "out", "of", "your", "mouth", "or", "you", "ll", "get", "slap", "do", "not", "rub", "salt", "on", "my", "wound"]
(c30-11 / and
        :op1 (c30-6 / let-01
                    :ARG0 (c30-1 / you
                                 :part (c30-2 / mouth))
                    :ARG1 (c30-8 / come-out-09
                                 :ARG1 (c30-9 / word
                                              :mod (c30-4 / red))
                                 :time (c30-5 / ever)
                                 :polarity -)
                    :mode imperative)
        :op2 (c30-12 / get-04
                     :ARG1 (c30-3 / slap-01
                                  :ARG1 c30-1))
        :op3 (c30-13 / rub-01
                     :ARG0 c30-1
                     :ARG1 (c30-0 / salt)
                     :ARG2 (c30-7 / wound
                                  :part-of (c30-10 / i))
                     :polarity -
                     :mode imperative))

# ::snt Kendrick
# ::tokens ["Kendrick"]
# ::lemmas ["Kendrick"]
(c31-1 / person
       :name (c31-0 / name
                    :op1 "Kendrick"))

# ::snt I want my to get best reggae album and I want my boys from get best rock song...even though they freaking wont be televised...such BS
# ::tokens ["I", "want", "my", "to", "get", "best", "reggae", "album", "and", "I", "want", "my", "boys", "from", "get", "best", "rock", "song", "...", "even", "though", "they", "freaking", "wo", "nt", "be", "televised", "...", "such", "BS"]
# ::lemmas ["i", "want", "my", "to", "get", "good", "reggae", "album", "and", "i", "want", "my", "boy", "from", "get", "good", "rock", "song", "...", "even", "though", "they", "freak", "will", "not", "be", "televise", "...", "such", "BS"]
(c32-11 / and
        :op1 (c32-20 / want-01
                     :ARG0 (c32-22 / i)
                     :ARG1 (c32-12 / get-01
                                   :ARG0 c32-22
                                   :ARG1 (c32-10 / album
                                                 :mod (c32-18 / reggae)
                                                 :ARG1-of (c32-8 / have-degree-91
                                                                 :ARG2 (c32-3 / good-02
                                                                              :ARG1 c32-10)
                                                                 :ARG3 (c32-16 / most)))))
        :op2 (c32-2 / want-01
                    :ARG0 c32-22
                    :ARG1 (c32-5 / get-01
                                 :ARG0 (c32-19 / person
                                               :ARG0-of (c32-21 / have-rel-role-91
                                                                :ARG1 c32-22
                                                                :ARG2 (c32-15 / boy)))
                                 :ARG1 (c32-0 / song
                                              :mod (c32-4 / rock)
                                              :ARG1-of (c32-7 / have-degree-91
                                                              :ARG2 (c32-14 / good-02
                                                                            :ARG1 c32-0)
                                                              :ARG3 (c32-9 / most))))
                    :concession (c32-13 / televise-01
                                        :ARG1 c32-0
                                        :mod (c32-17 / freaking
                                                     :mode expressive)
                                        :polarity -))
        :ARG1-of (c32-1 / bullshit-01
                        :mod (c32-6 / such)))

# ::snt The most iconic duo, Gaga and Gaga
# ::tokens ["The", "most", "iconic", "duo", ",", "Gaga", "and", "Gaga"]
# ::lemmas ["the", "most", "iconic", "duo", ",", "Gaga", "and", "Gaga"]
(c33-8 / duo
       :domain (c33-7 / and
                      :op1 (c33-4 / person
                                  :name (c33-0 / name
                                               :op1 "Gaga"))
                      :op2 (c33-1 / person
                                  :name (c33-3 / name
                                               :op1 "Gaga")))
       :ARG1-of (c33-5 / have-degree-91
                       :ARG2 (c33-6 / iconic)
                       :ARG3 (c33-2 / most)))

# ::snt U better give Joanne that grammy Honey
# ::tokens ["U", "better", "give", "Joanne", "that", "grammy", "Honey"]
# ::lemmas ["u", "well", "give", "Joanne", "that", "grammy", "Honey"]
(c34-3 / recommend-01
       :ARG1 (c34-7 / give-01
                    :ARG0 (c34-0 / you)
                    :ARG1 (c34-6 / that)
                    :ARG2 (c34-5 / person
                                 :name (c34-1 / name
                                              :op1 "Joanne")))
       :ARG2 (c34-2 / person
                    :name (c34-4 / name
                                 :op1 "Grammy"
                                 :op2 "Honey")))

# ::snt and for BETTER MAN
# ::tokens ["and", "for", "BETTER", "MAN"]
# ::lemmas ["and", "for", "BETTER", "MAN"]
(c35-3 / and
       :op2 (c35-2 / have-degree-91
                   :ARG2 (c35-4 / good-02
                                :ARG1 (c35-0 / man))
                   :ARG3 (c35-1 / more)))

# ::snt If Kesha doesnt win youre officially cancelled. Youve been cancelled for years but itll just be very official this time.
# ::tokens ["If", "Kesha", "does", "nt", "win", "you", "re", "officially", "cancelled", ".", "You", "ve", "been", "cancelled", "for", "years", "but", "it", "ll", "just", "be", "very", "official", "this", "time", "."]
# ::lemmas ["if", "Kesha", "do", "not", "win", "you", "re", "officially", "cancel", ".", "you", "ve", "be", "cancel", "for", "years", "but", "it", "ll", "just", "be", "very", "official", "this", "time", "."]
(c36-11 / multi-sentence
        :snt1 (c36-12 / cancel-01
                      :ARG1 (c36-3 / you)
                      :mod (c36-2 / official)
                      :condition (c36-16 / win-01
                                         :ARG0 (c36-15 / person
                                                       :name (c36-14 / name
                                                                     :op1 "Kesha"))
                                         :polarity -))
        :snt2 (c36-9 / contrast-01
                     :ARG1 (c36-0 / cancel-01
                                  :ARG1 (c36-8 / you)
                                  :duration (c36-5 / multiple
                                                   :op1 (c36-7 / temporal-quantity
                                                               :unit (c36-1 / year)
                                                               :quant 1)))
                     :ARG2 (c36-10 / official
                                   :domain (c36-17 / it)
                                   :mod (c36-6 / just)
                                   :time (c36-13 / time
                                                 :mod (c36-18 / this))
                                   :degree (c36-4 / very))))

# ::snt ALL THINGS BLESSED to our Family !!!!! GODBLESS ALL!!!
# ::tokens ["ALL", "THINGS", "BLESSED", "to", "our", "Family", "!", "!", "!", "!", "!", "GODBLESS", "ALL", "!", "!", "!"]
# ::lemmas ["all", "thing", "blessed", "to", "our", "Family", "!", "!", "!", "!", "!", "GODBLESS", "ALL", "!", "!", "!"]
(c37-2 / multi-sentence
       :snt1 (c37-1 / bless-01
                    :ARG1 (c37-6 / thing
                                 :mod (c37-8 / all))
                    :beneficiary (c37-0 / family
                                        :poss (c37-5 / we))
                    :snt2-of c37-2
                    :mode expressive)
       :ARG1 (c37-4 / person
                    :name (c37-3 / name
                                 :op1 "God"))
       :mod (c37-7 / all)
       :mode expressive)

# ::snt wish was nominated
# ::tokens ["wish", "was", "nominated"]
# ::lemmas ["wish", "be", "nominate"]
(c38-2 / nominate-01
       :ARG1 (c38-0 / person
                    :name (c38-1 / name
                                 :op1 "Wish")))

# ::snt Kesha to sweep Pop solo and pop album.
# ::tokens ["Kesha", "to", "sweep", "Pop", "solo", "and", "pop", "album", "."]
# ::lemmas ["Kesha", "to", "sweep", "pop", "solo", "and", "pop", "album", "."]
(c40-3 / sweep-02
       :ARG0 (c40-4 / person
                    :name (c40-1 / name
                                 :op1 "Kesha"))
       :ARG1 (c40-7 / and
                    :op1 (c40-6 / album
                                :mod (c40-0 / solo))
                    :op2 (c40-5 / album
                                :mod (c40-2 / pop))))

# ::snt Ntp mis predicciones las doy maana
# ::tokens ["Ntp", "mis", "predicciones", "las", "doy", "maana"]
# ::lemmas ["Ntp", "mis", "predicciones", "las", "doy", "maana"]
(c41-2 / multi-sentence
       :snt1 (c41-6 / correct-02
                    :ARG1 (c41-1 / you)
                    :polarity -)
       :snt2 (c41-4 / predicate-00
                    :ARG1 (c41-7 / you)
                    :topic (c41-5 / las
                                  :op1 (c41-3 / maana)
                                  :poss (c41-0 / you))))

# ::snt Lady Gaga for Best Pop Vocal Album and Best Pop Solo Performance!!!
# ::tokens ["Lady", "Gaga", "for", "Best", "Pop", "Vocal", "Album", "and", "Best", "Pop", "Solo", "Performance", "!", "!", "!"]
# ::lemmas ["Lady", "Gaga", "for", "Best", "Pop", "Vocal", "Album", "and", "Best", "Pop", "Solo", "Performance", "!", "!", "!"]
(c43-12 / award-01
        :ARG1 c43-12
        :ARG1 (c43-11 / and
                      :op1 (c43-9 / album
                                  :mod (c43-1 / music
                                              :name (c43-0 / name
                                                           :op1 "Pop"
                                                           :op2 "Vocal"
                                                           :op3 " Album"))
                                  :ARG1-of (c43-4 / have-degree-91
                                                  :ARG2 (c43-13 / good-02
                                                                :ARG1 c43-9)
                                                  :ARG3 (c43-5 / most)))
                      :op2 (c43-6 / perform-01
                                  :ARG1 (c43-15 / music
                                                :mod (c43-2 / solo))
                                  :ARG1-of (c43-10 / have-degree-91
                                                   :ARG2 (c43-14 / good-02
                                                                 :ARG1 c43-6)
                                                   :ARG3 (c43-7 / most))))
        :ARG2 (c43-3 / person
                     :name (c43-8 / name
                                  :op1 "Lady"
                                  :op2 "Gagas")))

# ::snt Joanne - Best Pop Vocal AlbumMillion Reasons - Best Pop Solo Performance
# ::tokens ["Joanne", "-", "Best", "Pop", "Vocal", "AlbumMillion", "Reasons", "-", "Best", "Pop", "Solo", "Performance"]
# ::lemmas ["Joanne", "-", "Best", "Pop", "Vocal", "AlbumMillion", "Reasons", "-", "Best", "Pop", "Solo", "performance"]
(c44-1 / multi-sentence
       :snt1 (c44-5 / person
                    :name (c44-0 / name
                                 :op1 "Joanne"))
       :snt2 (c44-10 / award-01
                     :ARG1 (c44-4 / music
                                  :name (c44-6 / name
                                               :op1 "Million"
                                               :op2 " Reasons"))
                     :ARG2 (c44-12 / music
                                   :mod (c44-3 / vocal)
                                   :mod (c44-2 / pop))
                     :ARG3 (c44-9 / award
                                  :ARG1-of (c44-7 / have-degree-91
                                                  :ARG2 (c44-11 / good-02
                                                                :ARG1 c44-12)
                                                  :ARG3 (c44-8 / most)))))

# ::snt if yall dont give melodrama aoty its over
# ::tokens ["if", "y", "all", "do", "nt", "give", "melodrama", "aoty", "its", "over"]
# ::lemmas ["if", "you", "all", "do", "not", "give", "melodrama", "aoty", "its", "over"]
(c46-0 / over-01
       :ARG1 (c46-3 / it)
       :condition (c46-5 / give-01
                         :ARG0 (c46-1 / you
                                      :mod (c46-4 / all))
                         :ARG1 (c46-2 / melodrama)
                         :ARG2 (c46-6 / aoty)
                         :polarity -))

# ::snt GIVE AOTY TO MELODRAMA OR ELSE
# ::tokens ["GIVE", "AOTY", "TO", "MELODRAMA", "OR", "ELSE"]
# ::lemmas ["give", "AOTY", "to", "MELODRAMA", "or", "else"]
(c48-6 / give-01
       :ARG0 (c48-2 / you)
       :ARG1 (c48-5 / aid-01
                    :ARG0 c48-2
                    :ARG2 (c48-0 / or
                                 :op1 (c48-4 / country
                                             :name (c48-3 / name
                                                          :op1 "Mexico"))
                                 :op2 (c48-1 / other)))
       :mode imperative)

# ::snt why do you guys include justin bieber when Despacito was big without him?
# ::tokens ["why", "do", "you", "guys", "include", "justin", "bieber", "when", "Despacito", "was", "big", "without", "him", "?"]
# ::lemmas ["why", "do", "you", "guy", "include", "justin", "bieber", "when", "Despacito", "be", "big", "without", "he", "?"]
(c49-6 / cause-01
       :ARG0 (c49-8 / amr-unknown)
       :ARG1 (c49-7 / include-01
                    :ARG0 (c49-1 / you
                                 :mod (c49-9 / guy))
                    :ARG1 (c49-5 / person
                                 :name (c49-2 / name
                                              :op1 "Justin"
                                              :op2 "Bieber"))
                    :time (c49-0 / big
                                 :domain (c49-3 / person
                                                :name (c49-4 / name
                                                             :op1 "Despacito"))
                                 :prep-without c49-5)))

# ::snt JOANNE Best Pop Vocal Album
# ::tokens ["JOANNE", "Best", "Pop", "Vocal", "Album"]
# ::lemmas ["JOANNE", "Best", "Pop", "Vocal", "Album"]
(c50-2 / have-degree-91
       :ARG1 (c50-4 / album
                    :name (c50-1 / name
                                 :op1 "Joanne"))
       :ARG2 (c50-3 / award
                    :name c50-1
                    :op1 "Pop"
                    :op2 "Vocal"
                    :op3 " Album")
       :ARG3 (c50-0 / most))
