# ::snt Even if she does she still WON. That shows you how bad JE is. They'll give the child to a demented lady over the bio.
# ::tokens ["Even", "if", "she", "does", "she", "still", "WON", ".", "That", "shows", "you", "how", "bad", "JE", "is", ".", "They", "'ll", "give", "the", "child", "to", "a", "demented", "lady", "over", "the", "bio", "."]
# ::lemmas ["even", "if", "she", "do", "she", "still", "WON", ".", "that", "show", "you", "how", "bad", "JE", "be", ".", "they", "'ll", "give", "the", "child", "to", "a", "demented", "lady", "over", "the", "bio", "."]
(c1-3 / multi-sentence
      :snt1 (c1-6 / have-concession-91
                  :ARG1 (c1-8 / win-01
                              :ARG0 (c1-4 / she)
                              :mod (c1-0 / still))
                  :ARG2 (c1-5 / even-if
                              :op1 (c1-13 / do-02
                                          :ARG0 c1-4)))
      :snt2 (c1-12 / give-01
                   :ARG0 (c1-11 / they)
                   :ARG1 (c1-9 / child)
                   :ARG2 (c1-7 / lady
                               :mod (c1-10 / demented))
                   :manner (c1-1 / over
                                 :op1 (c1-2 / bio))
                   :snt3-of c1-3)
      :ARG0 c1-11
      :ARG1 c1-9
      :ARG2 c1-7)

# ::snt Obviously since she got custody AGAIN.
# ::tokens ["Obviously", "since", "she", "got", "custody", "AGAIN", "."]
# ::lemmas ["obviously", "since", "she", "get", "custody", "AGAIN", "."]
(c2-2 / since
      :op1 (c2-5 / get-01
                 :ARG0 (c2-0 / she)
                 :ARG1 (c2-3 / custody)
                 :mod (c2-4 / again))
      :ARG1-of (c2-1 / obvious-01))

# ::snt Yeah! Great job too!
# ::tokens ["Yeah", "!", "Great", "job", "too", "!"]
# ::lemmas ["yeah", "!", "great", "job", "too", "!"]
(c3-1 / multi-sentence
      :snt1 (c3-0 / yeah
                  :mode expressive)
      :snt2 (c3-2 / job
                  :mod (c3-4 / great)
                  :mod (c3-3 / too)))

# ::snt Looks like she's raising one..... next
# ::tokens ["Looks", "like", "she", "'s", "raising", "one", ".....", "next"]
# ::lemmas ["look", "like", "she", "be", "raise", "one", ".....", "next"]
(c4-1 / multi-sentence
      :snt1 (c4-5 / look-02
                  :ARG1 (c4-4 / raise-03
                              :ARG0 (c4-3 / she)
                              :ARG1 (c4-0 / one)))
      :snt2 (c4-2 / next))

# ::snt Close your legs then!
# ::tokens ["Close", "your", "legs", "then", "!"]
# ::lemmas ["close", "your", "leg", "then", "!"]
(c5-0 / close-01
      :ARG0 (c5-1 / you
                  :part (c5-2 / leg
                              :ARG1-of c5-0))
      :mod (c5-3 / then)
      :mode imperative)

# ::snt Lol I have kids sweetie
# ::tokens ["Lol", "I", "have", "kids", "sweetie"]
# ::lemmas ["Lol", "i", "have", "kid", "sweetie"]
(c7-1 / say-01
      :ARG0 (c7-5 / i)
      :ARG1 (c7-2 / have-05
                  :ARG0 c7-5
                  :ARG1 (c7-4 / kid)
                  :mod (c7-3 / laugh-01
                             :ARG0 c7-5
                             :manner (c7-6 / loud)
                             :mode expressive))
      :ARG2 (c7-0 / sweetie))

# ::snt Happy for you! Are you still fighting to get custody back? Where you have him the majority of the time?
# ::tokens ["Happy", "for", "you", "!", "Are", "you", "still", "fighting", "to", "get", "custody", "back", "?", "Where", "you", "have", "him", "the", "majority", "of", "the", "time", "?"]
# ::lemmas ["happy", "for", "you", "!", "be", "you", "still", "fight", "to", "get", "custody", "back", "?", "where", "you", "have", "he", "the", "majority", "of", "the", "time", "?"]
(c8-3 / multi-sentence
      :snt1 (c8-7 / happy-01
                  :ARG1 (c8-2 / you))
      :snt2 (c8-1 / fight-01
                  :polarity (c8-13 / amr-unknown)
                  :ARG0 (c8-14 / you)
                  :ARG2 (c8-4 / get-back-09
                              :ARG0 c8-14
                              :ARG1 (c8-9 / custody))
                  :mod (c8-5 / still))
      :snt3 (c8-10 / have-03
                   :ARG0 (c8-0 / you)
                   :ARG1 (c8-6 / he)
                   :location (c8-12 / amr-unknown)
                   :frequency (c8-11 / time
                                     :quant (c8-8 / majority))))

# ::snt Are you dumb? Babs has let her have visits all these years when she didn't have to. She could have got rid of JE for good8 years ago.
# ::tokens ["Are", "you", "dumb", "?", "Babs", "has", "let", "her", "have", "visits", "all", "these", "years", "when", "she", "did", "n't", "have", "to", ".", "She", "could", "have", "got", "rid", "of", "JE", "for", "good8", "years", "ago", "."]
# ::lemmas ["be", "you", "dumb", "?", "Babs", "have", "let", "she", "have", "visit", "all", "these", "years", "when", "she", "do", "not", "have", "to", ".", "she", "could", "have", "got", "rid", "of", "JE", "for", "good8", "years", "ago", "."]
(c9-15 / multi-sentence
       :snt1 (c9-23 / dumb
                    :polarity (c9-11 / amr-unknown)
                    :domain (c9-7 / you))
       :snt2 (c9-1 / let-01
                   :ARG0 (c9-21 / person
                                :name (c9-19 / name
                                             :op1 "Babs"))
                   :ARG1 (c9-8 / visit-01
                               :ARG0 (c9-0 / she)
                               :duration (c9-12 / year
                                                :mod (c9-9 / all)
                                                :mod (c9-10 / this))
                               :time (c9-5 / obligate-01
                                           :ARG1 c9-0
                                           :ARG2 (c9-2 / visit-01
                                                       :ARG0 c9-0)
                                           :polarity -)))
       :snt3 (c9-16 / possible-01
                    :ARG1 (c9-20 / rid-01
                                 :ARG0 (c9-6 / she)
                                 :ARG1 (c9-3 / person
                                             :name (c9-17 / name
                                                          :op1 "JE"))
                                 :time (c9-14 / before
                                              :op1 (c9-22 / now)
                                              :quant (c9-18 / temporal-quantity
                                                            :unit (c9-4 / year)
                                                            :quant 8)
                                              :ARG1-of (c9-13 / good-02)))))

# ::snt Yup it's her.
# ::tokens ["Yup", "it", "'s", "her", "."]
# ::lemmas ["yup", "it", "be", "she", "."]
(c10-2 / she
       :domain (c10-1 / it)
       :mod (c10-0 / yup))

# ::snt Your going to have a lot of fun this summer
# ::tokens ["Your", "going", "to", "have", "a", "lot", "of", "fun", "this", "summer"]
# ::lemmas ["your", "go", "to", "have", "a", "lot", "of", "fun", "this", "summer"]
(c11-0 / fun-01
       :ARG0 (c11-1 / you)
       :time (c11-6 / date-entity
                    :season (c11-2 / summer)
                    :mod (c11-5 / year
                                :mod (c11-4 / this)))
       :quant (c11-3 / lot))

# ::snt PS Barbara has dementia.
# ::tokens ["PS", "Barbara", "has", "dementia", "."]
# ::lemmas ["PS", "Barbara", "have", "dementia", "."]
(c12-3 / post-scriptum
       :domain (c12-2 / have-03
                      :ARG0 (c12-1 / person
                                   :name (c12-0 / name
                                                :op1 "Barbara"))
                      :ARG1 (c12-4 / disease
                                   :name c12-0
                                   :op1 "Dementia")))

# ::snt Lmfao y'all just mad cuz Jenelle got visitation to where Barbara cannot manipulate a single thing. HAHAHHAHAHAHAHAHAHAHAH love it!
# ::tokens ["Lmfao", "y'", "all", "just", "mad", "cuz", "Jenelle", "got", "visitation", "to", "where", "Barbara", "can", "not", "manipulate", "a", "single", "thing", ".", "HAHAHHAHAHAHAHAHAHAHAH", "love", "it", "!"]
# ::lemmas ["lmfao", "you", "all", "just", "mad", "cuz", "Jenelle", "get", "visitation", "to", "where", "Barbara", "can", "not", "manipulate", "a", "single", "thing", ".", "HAHAHHAHAHAHAHAHAHAHAH", "love", "it", "!"]
(c13-12 / multi-sentence
        :snt1 (c13-5 / mad-04
                     :ARG0 (c13-10 / get-01
                                   :ARG0 (c13-17 / person
                                                 :name (c13-16 / name
                                                               :op1 "Jenelle"))
                                   :ARG1 (c13-4 / visit-01
                                                :ARG0 c13-17
                                                :ARG1 (c13-1 / location
                                                             :location-of (c13-13 / possible-01
                                                                                  :ARG1 (c13-15 / manipulate-02
                                                                                                :ARG0 (c13-2 / person
                                                                                                             :name (c13-14 / name
                                                                                                                           :op1 "Barbara"))
                                                                                                :ARG1 (c13-9 / thing
                                                                                                             :ARG1-of (c13-0 / single-02)))
                                                                                  :polarity -)))
                                   :ARG1 (c13-3 / you
                                                :mod (c13-8 / all))
                                   :mod (c13-7 / just))
                     :snt2 (c13-11 / love-01
                                   :ARG1 (c13-18 / it)
                                   :mod (c13-6 / haha
                                               :mode expressive)
                                   :mode expressive)))

# ::snt Wtf is wrong with you ya nut!
# ::tokens ["Wtf", "is", "wrong", "with", "you", "ya", "nut", "!"]
# ::lemmas ["Wtf", "be", "wrong", "with", "you", "ya", "nut", "!"]
(c14-3 / wrong-02
       :ARG1 (c14-4 / amr-unknown)
       :ARG2 (c14-1 / you
                    :mod (c14-2 / nut))
       :mod (c14-0 / fuck
                   :mode expressive))

# ::snt There's no hopes for her to have dementia ..she does. She is old and unable to raise a child.
# ::tokens ["There", "'s", "no", "hopes", "for", "her", "to", "have", "dementia", "..", "she", "does", ".", "She", "is", "old", "and", "unable", "to", "raise", "a", "child", "."]
# ::lemmas ["there", "be", "no", "hope", "for", "she", "to", "have", "dementia", "..", "she", "do", ".", "she", "be", "old", "and", "unable", "to", "raise", "a", "child", "."]
(c15-2 / multi-sentence
       :snt1 (c15-7 / hopeful-03
                    :ARG1 (c15-9 / have-03
                                 :ARG0 (c15-4 / she)
                                 :ARG1 (c15-12 / disease
                                               :name (c15-3 / name
                                                            :op1 "Dementia")))
                    :ARG1-of (c15-8 / cause-01
                                    :ARG0 (c15-6 / have-03
                                                 :ARG0 c15-4
                                                 :ARG1 c15-12))
                    :polarity -)
       :snt2 (c15-11 / and
                     :op1 (c15-0 / old
                                 :domain (c15-1 / she))
                     :op2 (c15-13 / capable-01
                                  :ARG1 c15-1
                                  :ARG2 (c15-5 / raise-03
                                               :ARG0 c15-1
                                               :ARG1 (c15-10 / child))
                                  :polarity -)))

# ::snt Oh y'all didnt realize Barbara has dementia? damn
# ::tokens ["Oh", "y'", "all", "did", "nt", "realize", "Barbara", "has", "dementia", "?", "damn"]
# ::lemmas ["oh", "you", "all", "do", "not", "realize", "Barbara", "have", "dementia", "?", "damn"]
(c16-3 / realize-01
       :ARG0 (c16-1 / you
                    :mod (c16-8 / all))
       :ARG1 (c16-4 / have-03
                    :ARG0 (c16-5 / person
                                 :name (c16-2 / name
                                              :op1 "Barbara"))
                    :ARG1 (c16-9 / disease
                                 :name c16-2
                                 :op1 "Dementia"))
       :polarity (c16-7 / amr-unknown)
       :mod (c16-0 / oh
                   :mode expressive)
       :ARG1-of (c16-6 / damn-01)
       :polarity -)

# ::snt Very cool! Happy for Jace! He needs to grow up with his siblings!
# ::tokens ["Very", "cool", "!", "Happy", "for", "Jace", "!", "He", "needs", "to", "grow", "up", "with", "his", "siblings", "!"]
# ::lemmas ["very", "cool", "!", "happy", "for", "Jace", "!", "he", "need", "to", "grow", "up", "with", "his", "sibling", "!"]
(c17-0 / multi-sentence
       :snt1 (c17-9 / cool-04
                    :degree (c17-4 / very))
       :snt2 (c17-6 / happy-01
                    :ARG1 (c17-7 / person
                                 :name (c17-1 / name
                                              :op1 "Jace")))
       :snt3 (c17-8 / need-01
                    :ARG0 (c17-10 / he)
                    :ARG1 (c17-11 / grow-up-04
                                  :ARG1 c17-10
                                  :accompanier (c17-2 / person
                                                      :ARG0-of (c17-5 / have-rel-role-91
                                                                      :ARG1 c17-10
                                                                      :ARG2 (c17-3 / sibling))))))

# ::snt She doesn't. Even if she did. Which is worse. Dementia or heroine, Dick hopping, and bad parenting?
# ::tokens ["She", "does", "n't", ".", "Even", "if", "she", "did", ".", "Which", "is", "worse", ".", "Dementia", "or", "heroine", ",", "Dick", "hopping", ",", "and", "bad", "parenting", "?"]
# ::lemmas ["she", "do", "not", ".", "even", "if", "she", "do", ".", "which", "be", "bad", ".", "Dementia", "or", "heroine", ",", "Dick", "hopping", ",", "and", "bad", "parenting", "?"]
(c18-2 / multi-sentence
       :snt1 (c18-17 / do-02
                     :ARG0 (c18-4 / she)
                     :concession (c18-6 / even-if
                                        :op1 (c18-13 / do-02
                                                     :ARG0 c18-4))
                     :polarity -)
       :snt2 (c18-1 / bad-07
                    :ARG1 (c18-16 / amr-unknown)
                    :ARG2-of (c18-7 / have-degree-91
                                    :ARG1 c18-16
                                    :ARG3 (c18-8 / more)))
       :snt3 (c18-15 / and
                     :op1 (c18-0 / or
                                 :op1 (c18-9 / disease
                                             :name (c18-3 / name
                                                          :op1 "Dementia"))
                                 :op2 (c18-14 / heroine))
                     :op2 (c18-10 / hop-01
                                  :ARG0 (c18-11 / person
                                                :name c18-3
                                                :op1 "Dick")))
       :op3 (c18-5 / parenting
                   :ARG1-of (c18-12 / bad-07)))

# ::snt Grasping at straws. She lost and they can't fathom she's such a horrific Mom
# ::tokens ["Grasping", "at", "straws", ".", "She", "lost", "and", "they", "ca", "n't", "fathom", "she", "'s", "such", "a", "horrific", "Mom"]
# ::lemmas ["grasp", "at", "straw", ".", "she", "lose", "and", "they", "can", "not", "fathom", "she", "be", "such", "a", "horrific", "mom"]
(c19-2 / multi-sentence
       :snt1 (c19-13 / gasp-01
                     :ARG0 (c19-4 / straw))
       :snt2 (c19-12 / and
                     :op1 (c19-7 / lose-03
                                 :ARG0 (c19-0 / she))
                     :op2 (c19-8 / possible-01
                                 :ARG1 (c19-1 / fathom-01
                                              :ARG0 (c19-11 / they)
                                              :ARG1 (c19-3 / person
                                                           :ARG0-of (c19-6 / have-rel-role-91
                                                                           :ARG1 (c19-14 / she)
                                                                           :ARG2 (c19-9 / mom))
                                                           :mod (c19-10 / horrific
                                                                        :degree (c19-5 / such))))
                                 :polarity -)))

# ::snt She's just making Babs look better. If you can't win custody of your own kid from a demented woman then you SUCK as a Mom.
# ::tokens ["She", "'s", "just", "making", "Babs", "look", "better", ".", "If", "you", "ca", "n't", "win", "custody", "of", "your", "own", "kid", "from", "a", "demented", "woman", "then", "you", "SUCK", "as", "a", "Mom", "."]
# ::lemmas ["she", "be", "just", "make", "Babs", "look", "well", ".", "if", "you", "can", "not", "win", "custody", "of", "your", "own", "kid", "from", "a", "demente", "woman", "then", "you", "suck", "as", "a", "Mom", "."]
(c20-12 / multi-sentence
        :snt1 (c20-7 / make-02
                     :ARG0 (c20-0 / she)
                     :ARG1 (c20-1 / look-02
                                  :ARG0 (c20-18 / product
                                                :name (c20-17 / name
                                                              :op1 "Babs"))
                                  :ARG1 (c20-11 / good-02
                                                :ARG2-of (c20-8 / have-degree-91
                                                                :ARG1 c20-18
                                                                :ARG3 (c20-16 / more))))
                     :mod (c20-10 / just))
        :snt2 (c20-4 / suck-03
                     :ARG0 (c20-5 / you)
                     :ARG1 (c20-20 / have-rel-role-91
                                   :ARG0 c20-5
                                   :ARG2 (c20-14 / mom))
                     :condition (c20-13 / possible-01
                                        :ARG1 (c20-19 / win-01
                                                      :ARG0 c20-5
                                                      :ARG1 (c20-15 / custody
                                                                    :poss (c20-3 / person
                                                                                 :ARG0-of (c20-6 / have-rel-role-91
                                                                                                 :ARG1 c20-5
                                                                                                 :ARG2 (c20-9 / kid)))
                                                                    :ARG2 (c20-2 / woman
                                                                                 :mod (c20-21 / demented))))
                                        :polarity -)))

# ::snt Are you a neurologist, dear? What do you know about dementia?
# ::tokens ["Are", "you", "a", "neurologist", ",", "dear", "?", "What", "do", "you", "know", "about", "dementia", "?"]
# ::lemmas ["be", "you", "a", "neurologist", ",", "dear", "?", "what", "do", "you", "know", "about", "dementia", "?"]
(c21-2 / multi-sentence
       :snt1 (c21-1 / neurologist
                    :domain (c21-0 / you)
                    :polarity (c21-7 / amr-unknown))
       :snt2 (c21-4 / know-01
                    :ARG0 (c21-8 / you
                                 :mod (c21-9 / dear))
                    :ARG1 (c21-6 / amr-unknown)
                    :topic (c21-5 / disease
                                  :name (c21-3 / name
                                               :op1 "Disease"))))

# ::snt Poor Jace. And poor Barbara who has put up with abuse from Jenelle &amp; every new BF she has had in the line. Plus she is mean Marisa. So sad
# ::tokens ["Poor", "Jace", ".", "And", "poor", "Barbara", "who", "has", "put", "up", "with", "abuse", "from", "Jenelle", "&", "amp", ";", "every", "new", "BF", "she", "has", "had", "in", "the", "line", ".", "Plus", "she", "is", "mean", "Marisa", ".", "So", "sad"]
# ::lemmas ["poor", "jace", ".", "and", "poor", "Barbara", "who", "have", "put", "up", "with", "abuse", "from", "Jenelle", "&", "amp", ";", "every", "new", "BF", "she", "have", "have", "in", "the", "line", ".", "plus", "she", "be", "mean", "Marisa", ".", "so", "sad"]
(c22-12 / multi-sentence
        :snt1 (c22-21 / person
                      :name (c22-18 / name
                                    :op1 "Jace")
                      :mod (c22-13 / poor))
        :snt2 (c22-9 / and
                     :op2 (c22-8 / and
                                 :op1 (c22-3 / person
                                             :name (c22-14 / name
                                                           :op1 "Barbara")
                                             :mod c22-13
                                             :ARG0-of (c22-2 / put-up-12
                                                             :ARG1 (c22-7 / abuse-01
                                                                          :ARG0 (c22-25 / and
                                                                                        :op1 (c22-10 / person
                                                                                                     :name (c22-22 / name
                                                                                                                   :op1 "Jenelle"))
                                                                                        :op2 (c22-26 / person
                                                                                                     :name (c22-15 / name
                                                                                                                   :op1 "amp")))
                                                                          :ARG1 c22-3)))
                                 :op2 (c22-5 / have-03
                                             :ARG0 c22-3
                                             :ARG1 (c22-17 / person
                                                           :ARG0-of (c22-23 / have-rel-role-91
                                                                            :ARG1 c22-3
                                                                            :ARG2 (c22-11 / boyfriend))
                                                           :ARG1-of (c22-24 / new-01)
                                                           :mod (c22-20 / every))
                                             :location (c22-1 / line)))
                     :op3 (c22-6 / mean-04
                                 :ARG0 c22-3
                                 :ARG1 (c22-16 / person
                                               :name (c22-19 / name
                                                             :op1 "Marisa"))))
        :snt3 (c22-0 / sad-02
                     :degree (c22-4 / so)))

# ::snt Thats says a lot when your only hope of JE getting him is Babs dying. Even with the "onset of dementia" she won the court case.
# ::tokens ["That", "s", "says", "a", "lot", "when", "your", "only", "hope", "of", "JE", "getting", "him", "is", "Babs", "dying", ".", "Even", "with", "the", "\"", "onset", "of", "dementia", "\"", "she", "won", "the", "court", "case", "."]
# ::lemmas ["that", "s", "say", "a", "lot", "when", "your", "only", "hope", "of", "JE", "get", "he", "be", "Babs", "die", ".", "even", "with", "the", "\"", "onset", "of", "dementia", "\"", "she", "win", "the", "court", "case", "."]
(c23-3 / multi-sentence
       :snt1 (c23-5 / say-01
                    :ARG0 (c23-15 / that)
                    :ARG1 (c23-8 / lot)
                    :time (c23-7 / hopeful-03
                                 :ARG0 (c23-2 / you)
                                 :ARG1 (c23-16 / get-01
                                               :ARG0 (c23-9 / person
                                                            :name (c23-4 / name
                                                                         :op1 "JE"))
                                               :ARG1 (c23-6 / person
                                                            :name (c23-10 / name
                                                                          :op1 "Babs")))
                                 :mod (c23-0 / only)))
       :snt2 (c23-11 / win-01
                     :ARG0 (c23-1 / she)
                     :ARG2 (c23-12 / case-03
                                   :ARG0 (c23-17 / court))
                     :concession (c23-13 / have-03
                                         :ARG0 c23-1
                                         :ARG1 (c23-14 / cognitive
                                                       :domain c23-1
                                                       :polarity -))))

# ::snt Of course it'll happen. Barbara isn't going to live forever. She's already got the onset of dementia.
# ::tokens ["Of", "course", "it", "'ll", "happen", ".", "Barbara", "is", "n't", "going", "to", "live", "forever", ".", "She", "'s", "already", "got", "the", "onset", "of", "dementia", "."]
# ::lemmas ["of", "course", "it", "'ll", "happen", ".", "Barbara", "be", "not", "go", "to", "live", "forever", ".", "she", "be", "already", "get", "the", "onset", "of", "dementia", "."]
(c24-3 / multi-sentence
       :snt1 (c24-9 / it
                    :mod (c24-0 / of-course))
       :snt2 (c24-7 / live-01
                    :ARG0 (c24-8 / person
                                 :name (c24-4 / name
                                              :op1 "Barbara"))
                    :duration (c24-1 / forever)
                    :polarity -)
       :snt3 (c24-11 / get-01
                     :ARG0 (c24-5 / she)
                     :ARG1 (c24-2 / onset
                                  :mod (c24-12 / disease
                                               :name (c24-6 / name
                                                            :op1 "Disease")))
                     :time (c24-10 / already)))

# ::snt We all make mistakes and none of you have any right to judge ..it's so sad to read all these negative comments.
# ::tokens ["We", "all", "make", "mistakes", "and", "none", "of", "you", "have", "any", "right", "to", "judge", "..", "it", "'s", "so", "sad", "to", "read", "all", "these", "negative", "comments", "."]
# ::lemmas ["we", "all", "make", "mistake", "and", "none", "of", "you", "have", "any", "right", "to", "judge", "..", "it", "be", "so", "sad", "to", "read", "all", "these", "negative", "comment", "."]
(c25-2 / multi-sentence
       :snt1 (c25-13 / and
                     :op1 (c25-6 / mistake-02
                                 :ARG0 (c25-8 / we
                                              :mod (c25-12 / all)))
                     :op2 (c25-5 / right-05
                                 :ARG1 (c25-1 / you
                                              :mod (c25-3 / none))
                                 :ARG2 (c25-11 / judge-01
                                               :ARG0 c25-1)
                                 :mod (c25-9 / any)))
       :snt2 (c25-4 / sad-02
                    :ARG0 (c25-16 / read-01
                                  :ARG1 (c25-10 / comment-01
                                                :ARG0-of (c25-7 / negative-03)
                                                :mod (c25-15 / all)
                                                :mod (c25-14 / this)))
                    :degree (c25-0 / so)))

# ::snt It will never happen. Took years to get visitation.
# ::tokens ["It", "will", "never", "happen", ".", "Took", "years", "to", "get", "visitation", "."]
# ::lemmas ["it", "will", "never", "happen", ".", "take", "years", "to", "get", "visitation", "."]
(c26-1 / multi-sentence
       :snt1 (c26-4 / have-polarity-91
                    :ARG1 (c26-6 / it)
                    :time (c26-3 / ever)
                    :ARG2 -)
       :snt2 (c26-7 / take-10
                    :ARG0 (c26-8 / get-01
                                 :ARG1 (c26-2 / visitation))
                    :ARG1 (c26-5 / multiple
                                 :op1 (c26-9 / temporal-quantity
                                             :unit (c26-0 / year)
                                             :quant 1))))

# ::snt We all know Jenelle would never break the law. You can't be this stupid.
# ::tokens ["We", "all", "know", "Jenelle", "would", "never", "break", "the", "law", ".", "You", "ca", "n't", "be", "this", "stupid", "."]
# ::lemmas ["we", "all", "know", "Jenelle", "would", "never", "break", "the", "law", ".", "you", "can", "not", "be", "this", "stupid", "."]
(c27-2 / multi-sentence
       :snt1 (c27-7 / know-01
                    :ARG0 (c27-10 / we
                                  :mod (c27-12 / all))
                    :ARG1 (c27-0 / break-18
                                 :ARG0 (c27-8 / person
                                              :name (c27-3 / name
                                                           :op1 "Jenelle"))
                                 :ARG1 (c27-9 / law)
                                 :time (c27-6 / ever)
                                 :polarity -))
       :snt2 (c27-4 / possible-01
                    :ARG1 (c27-5 / stupid
                                 :domain (c27-1 / you)
                                 :degree (c27-11 / this))
                    :polarity -))

# ::snt So happy for all your new beginnings
# ::tokens ["So", "happy", "for", "all", "your", "new", "beginnings"]
# ::lemmas ["so", "happy", "for", "all", "your", "new", "beginning"]
(c28-4 / happy-01
       :ARG0 (c28-0 / begin-01
                    :ARG0 (c28-1 / you)
                    :mod (c28-5 / all)
                    :ARG1-of (c28-2 / new-01))
       :degree (c28-3 / so))

# ::snt So petty of barb for taking care of a child instead of him ending up in foster care.
# ::tokens ["So", "petty", "of", "barb", "for", "taking", "care", "of", "a", "child", "instead", "of", "him", "ending", "up", "in", "foster", "care", "."]
# ::lemmas ["so", "petty", "of", "barb", "for", "take", "care", "of", "a", "child", "instead", "of", "he", "end", "up", "in", "foster", "care", "."]
(c29-2 / barb
       :mod (c29-5 / petty
                   :degree (c29-3 / so))
       :ARG1-of (c29-6 / cause-01
                       :ARG0 (c29-9 / care-03
                                    :ARG0 c29-2
                                    :ARG1 (c29-7 / child)
                                    :ARG1-of (c29-8 / instead-of-91
                                                    :ARG2 (c29-4 / end-up-03
                                                                 :ARG1 c29-2
                                                                 :ARG2 (c29-0 / care-03
                                                                              :ARG0 (c29-1 / foster)
                                                                              :ARG1 c29-7))))))

# ::snt awesome mommy?I pray Nathan gets Kaizer too, no child deserves a yelling banshee.
# ::tokens ["awesome", "mommy?I", "pray", "Nathan", "gets", "Kaizer", "too", ",", "no", "child", "deserves", "a", "yelling", "banshee", "."]
# ::lemmas ["awesome", "mommy?i", "pray", "Nathan", "get", "Kaizer", "too", ",", "no", "child", "deserve", "a", "yell", "banshee", "."]
(c30-2 / multi-sentence
       :snt1 (c30-7 / person
                    :polarity (c30-13 / amr-unknown)
                    :ARG0-of (c30-8 / have-rel-role-91
                                    :ARG2 (c30-6 / mommy
                                                 :mod (c30-12 / awesome)))
                    :polarity c30-13)
       :snt2 (c30-3 / pray-01
                    :ARG0 (c30-14 / i)
                    :ARG1 (c30-4 / get-01
                                 :ARG0 (c30-16 / person
                                               :name (c30-5 / name
                                                            :op1 "Nathan"))
                                 :ARG1 (c30-9 / product
                                              :name c30-5
                                              :op1 "Kaizer"))
                    :mod (c30-11 / too))
       :snt3 (c30-15 / deserve-01
                     :ARG0 (c30-10 / child)
                     :ARG1 (c30-0 / banshee
                                  :mod (c30-1 / yell-01))
                     :polarity -))

# ::snt She's an AWESOME Mom because she put down her beer and blunt to take the pic
# ::tokens ["She", "'s", "an", "AWESOME", "Mom", "because", "she", "put", "down", "her", "beer", "and", "blunt", "to", "take", "the", "pic"]
# ::lemmas ["she", "be", "an", "AWESOME", "mom", "because", "she", "put", "down", "her", "beer", "and", "blunt", "to", "take", "the", "pic"]
(c31-7 / cause-01
       :ARG0 (c31-5 / put-01
                    :ARG0 (c31-3 / she)
                    :ARG1 (c31-10 / and
                                  :op1 (c31-0 / beer
                                              :poss c31-3)
                                  :op2 (c31-4 / blunt-02
                                              :ARG0 c31-3))
                    :ARG2 (c31-11 / down)
                    :purpose (c31-8 / take-01
                                    :ARG0 c31-3
                                    :ARG1 (c31-2 / pic)))
       :ARG1 (c31-9 / awesome-03
                    :ARG1 c31-3
                    :ARG2 (c31-6 / have-rel-role-91
                                 :ARG0 c31-3
                                 :ARG2 (c31-1 / mom))))

# ::snt I was wondering the same thing!
# ::tokens ["I", "was", "wondering", "the", "same", "thing", "!"]
# ::lemmas ["i", "be", "wonder", "the", "same", "thing", "!"]
(c32-1 / wonder-01
       :ARG0 (c32-2 / i)
       :ARG1 (c32-3 / thing
                    :ARG1-of (c32-0 / same-01)))

# ::snt If you have nothing nice to say and you don't know what you're talking about, mind your own business! A lesson you never learned.
# ::tokens ["If", "you", "have", "nothing", "nice", "to", "say", "and", "you", "do", "n't", "know", "what", "you", "'re", "talking", "about", ",", "mind", "your", "own", "business", "!", "A", "lesson", "you", "never", "learned", "."]
# ::lemmas ["if", "you", "have", "nothing", "nice", "to", "say", "and", "you", "do", "not", "know", "what", "you", "be", "talk", "about", ",", "mind", "your", "own", "business", "!", "a", "lesson", "you", "never", "learn", "."]
(c33-2 / multi-sentence
       :snt1 (c33-6 / mind-01
                    :ARG0 (c33-1 / you)
                    :ARG1 (c33-0 / business
                                 :poss c33-1)
                    :condition (c33-12 / and
                                       :op1 (c33-7 / have-03
                                                   :ARG0 c33-1
                                                   :ARG1 (c33-3 / nothing
                                                                :ARG1-of (c33-8 / nice-01)
                                                                :ARG1-of (c33-4 / say-01
                                                                                :ARG0 c33-1)))
                                       :op2 (c33-9 / know-01
                                                   :ARG0 c33-1
                                                   :ARG1 (c33-11 / thing
                                                                 :ARG1-of (c33-15 / talk-01
                                                                                  :ARG0 c33-1))
                                                   :polarity -))
                    :mode imperative)
       :snt2 (c33-10 / lesson
                     :ARG1-of (c33-14 / learn-01
                                      :ARG0 (c33-13 / you)
                                      :time (c33-5 / ever)
                                      :polarity -)))

# ::snt Um, she blocked me first, then looked through my page for excuses to attack me! All I did was defend myself. Don't be ignorant and rude!
# ::tokens ["Um", ",", "she", "blocked", "me", "first", ",", "then", "looked", "through", "my", "page", "for", "excuses", "to", "attack", "me", "!", "All", "I", "did", "was", "defend", "myself", ".", "Do", "n't", "be", "ignorant", "and", "rude", "!"]
# ::lemmas ["um", ",", "she", "block", "i", "first", ",", "then", "look", "through", "my", "page", "for", "excuse", "to", "attack", "i", "!", "all", "i", "do", "be", "defend", "myself", ".", "do", "not", "be", "ignorant", "and", "rude", "!"]
(c34-11 / multi-sentence
        :snt1 (c34-8 / and
                     :op1 (c34-10 / block-01
                                  :ARG0 (c34-0 / she)
                                  :ARG1 (c34-18 / i)
                                  :ord (c34-2 / ordinal-entity
                                              :value 1))
                     :op2 (c34-1 / look-01
                                 :ARG0 c34-0
                                 :ARG1 (c34-17 / page
                                               :poss c34-18)
                                 :ARG2 (c34-7 / thing
                                              :ARG2-of (c34-16 / excuse-02
                                                               :ARG1 (c34-6 / attack-01
                                                                            :ARG0 c34-0
                                                                            :ARG1 c34-18)))
                                 :time (c34-12 / then))
                     :mod (c34-13 / um
                                  :mode expressive))
        :snt2 (c34-14 / defend-01
                      :ARG0 (c34-4 / i
                                   :ARG1-of c34-14)
                      :mod (c34-5 / all))
        :snt3 (c34-19 / and
                      :op1 (c34-9 / ignorant-02
                                  :ARG1 (c34-3 / you))
                      :op2 (c34-15 / rude-01
                                   :ARG0 c34-3
                                   :mode imperative)
                      :mode imperative
                      :polarity -))

# ::snt Umm,lets be our age ladies
# ::tokens ["Umm", ",", "lets", "be", "our", "age", "ladies"]
# ::lemmas ["Umm", ",", "let", "be", "our", "age", "lady"]
(c35-0 / say-01
       :ARG1 (c35-1 / lady
                    :mod (c35-3 / age-01
                                :ARG1 (c35-2 / we
                                             :ARG2-of c35-0)))
       :mod (c35-4 / umm
                   :mode expressive))

# ::snt Thk,u
# ::tokens ["Thk", ",", "u"]
# ::lemmas ["Thk", ",", "u"]
(c36-1 / person
       :name (c36-0 / name
                    :op1 "Thk,u"))

# ::snt Ever doin wat again?
# ::tokens ["Ever", "doin", "wat", "again", "?"]
# ::lemmas ["ever", "doin", "wat", "again", "?"]
(c37-5 / do-02
       :polarity (c37-4 / amr-unknown)
       :ARG0 (c37-0 / you)
       :ARG1 (c37-3 / amr-unknown)
       :mod (c37-2 / again)
       :time (c37-1 / ever))

# ::snt Petty? Really? So the safety and we'll being of a child really isn't that important to you? You're a fucking potato.
# ::tokens ["Petty", "?", "Really", "?", "So", "the", "safety", "and", "we", "'ll", "being", "of", "a", "child", "really", "is", "n't", "that", "important", "to", "you", "?", "You", "'re", "a", "fucking", "potato", "."]
# ::lemmas ["petty", "?", "really", "?", "so", "the", "safety", "and", "we", "'ll", "be", "of", "a", "child", "really", "be", "not", "that", "important", "to", "you", "?", "you", "be", "a", "fucking", "potato", "."]
(c38-2 / multi-sentence
       :snt1 (c38-7 / petty
                    :polarity (c38-12 / amr-unknown)
                    :ARG1-of (c38-6 / real-04))
       :snt2 (c38-11 / important-01
                     :ARG1 (c38-13 / and
                                   :op1 (c38-4 / safe-01
                                               :ARG1 (c38-8 / child))
                                   :op2 (c38-9 / we))
                     :ARG2 (c38-1 / you)
                     :ARG1-of (c38-14 / real-04)
                     :degree (c38-10 / that)
                     :polarity -)
       :snt3 (c38-3 / potato
                    :mod (c38-0 / fucking)
                    :domain (c38-5 / you)))

# ::snt Forced her? What? Barbara is sick and insane and wants to raise Jace as her own when she was a disastrous parent to her adult kids.
# ::tokens ["Forced", "her", "?", "What", "?", "Barbara", "is", "sick", "and", "insane", "and", "wants", "to", "raise", "Jace", "as", "her", "own", "when", "she", "was", "a", "disastrous", "parent", "to", "her", "adult", "kids", "."]
# ::lemmas ["force", "she", "?", "what", "?", "Barbara", "be", "sick", "and", "insane", "and", "want", "to", "raise", "Jace", "as", "her", "own", "when", "she", "be", "a", "disastrous", "parent", "to", "her", "adult", "kid", "."]
(c39-11 / multi-sentence
        :snt1 (c39-14 / force-01
                      :polarity (c39-10 / amr-unknown)
                      :ARG1 (c39-0 / she))
        :snt2 (c39-9 / amr-unknown
                     :polarity (c39-8 / amr-unknown))
        :snt3 (c39-23 / and
                      :op1 (c39-4 / sick-05
                                  :ARG1 (c39-18 / person
                                                :name (c39-15 / name
                                                              :op1 "Barbara")))
                      :op2 (c39-22 / insane
                                   :domain c39-18)
                      :op3 (c39-19 / want-01
                                   :ARG0 c39-18
                                   :ARG1 (c39-16 / raise-03
                                                 :ARG0 c39-18
                                                 :ARG1 (c39-12 / person
                                                               :name (c39-13 / name
                                                                             :op1 "Jace"))
                                                 :manner (c39-3 / raise-03
                                                                :ARG0 c39-18
                                                                :ARG1 c39-12
                                                                :manner (c39-5 / own-01
                                                                               :ARG0 c39-18)))
                                   :time (c39-6 / have-rel-role-91
                                                :ARG0 c39-18
                                                :ARG1 (c39-2 / person
                                                             :mod (c39-20 / adult)
                                                             :ARG0-of (c39-21 / have-rel-role-91
                                                                              :ARG1 c39-18
                                                                              :ARG2 (c39-1 / parent)))
                                                :ARG2 (c39-7 / kid)
                                                :mod (c39-17 / disastrous)))))

# ::snt Finally Barbara can't keep him away from his own mother! About time. Just think it'll be great when Jenelle has FULL custody.
# ::tokens ["Finally", "Barbara", "ca", "n't", "keep", "him", "away", "from", "his", "own", "mother", "!", "About", "time", ".", "Just", "think", "it", "'ll", "be", "great", "when", "Jenelle", "has", "FULL", "custody", "."]
# ::lemmas ["finally", "Barbara", "can", "not", "keep", "he", "away", "from", "his", "own", "mother", "!", "about", "time", ".", "just", "think", "it", "'ll", "be", "great", "when", "Jenelle", "have", "full", "custody", "."]
(c40-11 / multi-sentence
        :snt1 (c40-17 / possible-01
                      :ARG1 (c40-5 / keep-04
                                   :ARG0 (c40-12 / person
                                                 :name (c40-16 / name
                                                               :op1 "Barbara"))
                                   :ARG1 (c40-4 / he)
                                   :ARG2 (c40-9 / away
                                                :op1 (c40-1 / person
                                                            :ARG0-of (c40-19 / have-rel-role-91
                                                                             :ARG1 c40-4
                                                                             :ARG2 (c40-6 / mother)))))
                      :time (c40-15 / final)
                      :polarity -)
        :snt2 (c40-8 / think-01
                     :ARG0 (c40-2 / you)
                     :ARG1 (c40-10 / great
                                   :domain (c40-20 / it)
                                   :time (c40-3 / have-03
                                                :ARG0 (c40-0 / person
                                                             :name (c40-13 / name
                                                                           :op1 "Jenelle"))
                                                :ARG1 (c40-14 / custody
                                                              :ARG1-of (c40-18 / full-09))))
                     :mod (c40-7 / just)
                     :mode imperative))

# ::snt I'm blocking you now, since you're being stalkerish, creepy and making false accusations about me! Please leave me alone.
# ::tokens ["I", "'m", "blocking", "you", "now", ",", "since", "you", "'re", "being", "stalkerish", ",", "creepy", "and", "making", "false", "accusations", "about", "me", "!", "Please", "leave", "me", "alone", "."]
# ::lemmas ["i", "be", "block", "you", "now", ",", "since", "you", "be", "be", "stalkerish", ",", "creepy", "and", "make", "false", "accusation", "about", "i", "!", "please", "leave", "i", "alone", "."]
(c41-4 / multi-sentence
       :snt1 (c41-1 / block-01
                    :ARG0 (c41-10 / i)
                    :ARG1 (c41-2 / you)
                    :time (c41-3 / now)
                    :ARG1-of (c41-8 / cause-01
                                    :ARG0 (c41-11 / and
                                                  :op1 (c41-5 / stalk-02
                                                              :ARG0 c41-2)
                                                  :op2 (c41-14 / creepy-04
                                                               :ARG1 c41-2)
                                                  :op3 (c41-12 / accuse-01
                                                               :ARG0 c41-2
                                                               :ARG1 c41-10
                                                               :mod (c41-0 / false)))))
       :snt2 (c41-7 / leave-14
                    :ARG0 (c41-13 / you)
                    :ARG1 (c41-9 / alone
                                 :domain (c41-6 / i))
                    :mode imperative
                    :polite +))

# ::snt That's a bottle of pink champagne I gave one of my best friends on her wedding day, when I was her bridesmaid! I never drank a drop of it!
# ::tokens ["That", "'s", "a", "bottle", "of", "pink", "champagne", "I", "gave", "one", "of", "my", "best", "friends", "on", "her", "wedding", "day", ",", "when", "I", "was", "her", "bridesmaid", "!", "I", "never", "drank", "a", "drop", "of", "it", "!"]
# ::lemmas ["that", "be", "a", "bottle", "of", "pink", "champagne", "i", "give", "one", "of", "my", "good", "friend", "on", "her", "wedding", "day", ",", "when", "i", "be", "her", "bridesmaid", "!", "i", "never", "drink", "a", "drop", "of", "it", "!"]
(c42-12 / multi-sentence
        :snt1 (c42-11 / bottle
                      :ARG0-of (c42-15 / contain-01
                                       :ARG1 (c42-10 / champagne
                                                     :ARG1-of (c42-19 / pink-04)))
                      :ARG1-of (c42-8 / give-01
                                      :ARG0 (c42-22 / i)
                                      :ARG2 (c42-13 / person
                                                    :ARG1-of (c42-4 / include-91
                                                                    :ARG2 (c42-3 / person
                                                                                 :ARG0-of (c42-6 / have-rel-role-91
                                                                                                 :ARG1 c42-22
                                                                                                 :ARG2 (c42-17 / friend
                                                                                                               :ARG1-of (c42-2 / good-02
                                                                                                                               :ARG2-of (c42-21 / have-degree-91
                                                                                                                                                :ARG1 c42-17
                                                                                                                                                :ARG3 (c42-7 / most)))))))
                                                    :time (c42-23 / day
                                                                  :time-of (c42-20 / wed-01
                                                                                   :ARG1 (c42-0 / she))
                                                                  :time-of (c42-5 / have-rel-role-91
                                                                                  :ARG0 c42-22
                                                                                  :ARG1 c42-0
                                                                                  :ARG2 (c42-1 / bridesmaid)))))
                      :snt2 (c42-16 / drink-01
                                    :ARG0 (c42-9 / i)
                                    :ARG1 c42-10
                                    :quant (c42-14 / drop)
                                    :polarity -)
                      :time (c42-18 / ever)))

# ::snt So did she wait too long or not long enough? Make up your mind! Your arguments are contradictory because you're not being logical.
# ::tokens ["So", "did", "she", "wait", "too", "long", "or", "not", "long", "enough", "?", "Make", "up", "your", "mind", "!", "Your", "arguments", "are", "contradictory", "because", "you", "'re", "not", "being", "logical", "."]
# ::lemmas ["so", "do", "she", "wait", "too", "long", "or", "not", "long", "enough", "?", "make", "up", "your", "mind", "!", "your", "argument", "be", "contradictory", "because", "you", "be", "not", "be", "logical", "."]
(c43-14 / multi-sentence
        :snt1 (c43-3 / or
                     :op1 (c43-17 / wait-01
                                  :ARG1 (c43-0 / she)
                                  :ARG1-of (c43-5 / have-degree-91
                                                  :ARG2 (c43-1 / long-03
                                                               :ARG1 c43-17)
                                                  :ARG3 (c43-10 / too)))
                     :op2 (c43-2 / wait-01
                                 :ARG1 c43-0
                                 :ARG1-of (c43-18 / have-degree-91
                                                  :ARG2 (c43-12 / long-03
                                                                :ARG1 c43-2
                                                                :polarity -)
                                                  :ARG3 (c43-16 / enough)))
                     :polarity (c43-9 / amr-unknown))
        :snt2 (c43-6 / make-up-mind-12
                     :ARG0 (c43-4 / you
                                  :ARG2-of c43-6)
                     :mode imperative)
        :snt3 (c43-15 / contradict-01
                      :ARG0 (c43-7 / logical
                                   :domain c43-4
                                   :polarity -)
                      :ARG1 (c43-8 / argue-01
                                   :ARG0 (c43-11 / you))
                      :ARG1-of (c43-13 / cause-01
                                       :ARG0 c43-7
                                       :polarity -)))

# ::snt Jenelle's been fighting to regain custody of Jace for about four years now... that's half of his life at this point!
# ::tokens ["Jenelle", "'s", "been", "fighting", "to", "regain", "custody", "of", "Jace", "for", "about", "four", "years", "now", "...", "that", "'s", "half", "of", "his", "life", "at", "this", "point", "!"]
# ::lemmas ["Jenelle", "be", "be", "fight", "to", "regain", "custody", "of", "Jace", "for", "about", "four", "years", "now", "...", "that", "be", "half", "of", "his", "life", "at", "this", "point", "!"]
(c44-0 / fight-01
       :ARG0 (c44-7 / person
                    :name (c44-2 / name
                                 :op1 "Jenelle"))
       :ARG2 (c44-5 / regain-01
                    :ARG0 c44-7
                    :ARG1 (c44-10 / custody
                                  :poss (c44-3 / person
                                               :name (c44-6 / name
                                                            :op1 "Jace"))))
       :duration (c44-12 / about
                         :op1 (c44-11 / temporal-quantity
                                      :unit (c44-1 / year)
                                      :quant 4))
       :time (c44-13 / point
                     :mod (c44-14 / this))
       :ARG1-of (c44-4 / mean-01
                       :ARG2 (c44-8 / half
                                    :part-of (c44-9 / life
                                                    :poss c44-3))))

# ::snt And I hope that's not you in that picture coordinate because we could see why you would agree big bottle of alcohol in the back
# ::tokens ["And", "I", "hope", "that", "'s", "not", "you", "in", "that", "picture", "coordinate", "because", "we", "could", "see", "why", "you", "would", "agree", "big", "bottle", "of", "alcohol", "in", "the", "back"]
# ::lemmas ["and", "i", "hope", "that", "be", "not", "you", "in", "that", "picture", "coordinate", "because", "we", "could", "see", "why", "you", "would", "agree", "big", "bottle", "of", "alcohol", "in", "the", "back"]
(c45-9 / and
       :op2 (c45-5 / hope-01
                   :ARG0 (c45-18 / i)
                   :ARG1 (c45-12 / be-located-at-91
                                 :ARG1 (c45-4 / you)
                                 :ARG2 (c45-16 / picture
                                               :mod (c45-8 / that)
                                               :ARG2-of (c45-14 / coordinate-01))
                                 :polarity -)
                   :ARG1-of (c45-10 / cause-01
                                    :ARG0 (c45-13 / possible-01
                                                  :ARG1 (c45-0 / see-01
                                                               :ARG0 (c45-17 / we)
                                                               :ARG1 (c45-15 / thing
                                                                             :ARG0-of (c45-2 / cause-01
                                                                                             :ARG1 (c45-7 / agree-01
                                                                                                          :ARG0 c45-4
                                                                                                          :ARG1 (c45-1 / bottle
                                                                                                                       :mod (c45-6 / alcohol)
                                                                                                                       :mod (c45-3 / big)
                                                                                                                       :location (c45-11 / back))))))))))

# ::snt No, that's not what I said... don't twist my words! I said Babs shouldn't keep Jace from her just to be petty. Also
# ::tokens ["No", ",", "that", "'s", "not", "what", "I", "said", "...", "do", "n't", "twist", "my", "words", "!", "I", "said", "Babs", "should", "n't", "keep", "Jace", "from", "her", "just", "to", "be", "petty", ".", "Also"]
# ::lemmas ["no", ",", "that", "be", "not", "what", "i", "say", "...", "do", "not", "twist", "my", "word", "!", "i", "say", "Babs", "should", "not", "keep", "Jace", "from", "she", "just", "to", "be", "petty", ".", "also"]
(c46-9 / multi-sentence
       :snt1 (c46-0 / say-01
                    :ARG0 (c46-18 / i)
                    :ARG1 (c46-7 / thing
                                 :domain (c46-12 / that))
                    :mod (c46-13 / no)
                    :polarity -)
       :snt2 (c46-19 / twist-01
                     :ARG0 (c46-3 / you)
                     :ARG1 (c46-17 / word-01
                                   :ARG0 c46-18)
                     :mode imperative
                     :polarity -)
       :snt3 (c46-2 / say-01
                    :ARG0 (c46-4 / i)
                    :ARG1 (c46-14 / recommend-01
                                  :ARG0 c46-4
                                  :ARG1 (c46-5 / keep-01
                                               :ARG0 (c46-15 / person
                                                             :name (c46-11 / name
                                                                           :op1 "Babs"))
                                               :ARG1 (c46-10 / person
                                                             :name (c46-16 / name
                                                                           :op1 "Jace"))
                                               :ARG2 c46-15
                                               :purpose (c46-1 / petty
                                                               :domain c46-10
                                                               :mod (c46-6 / just))
                                               :polarity -)))
       :snt4 (c46-8 / also))

# ::snt :I don't have time to dispute with somebody who ignorant as hell so I'm about to block you good day goodbye get Jesus
# ::tokens [":", "I", "do", "n't", "have", "time", "to", "dispute", "with", "somebody", "who", "ignorant", "as", "hell", "so", "I", "'m", "about", "to", "block", "you", "good", "day", "goodbye", "get", "Jesus"]
# ::lemmas [":", "i", "do", "not", "have", "time", "to", "dispute", "with", "somebody", "who", "ignorant", "as", "hell", "so", "i", "be", "about", "to", "block", "you", "good", "day", "goodbye", "get", "Jesus"]
(c47-7 / cause-01
       :ARG0 (c47-6 / have-03
                    :ARG0 (c47-9 / i)
                    :ARG1 (c47-10 / time)
                    :purpose (c47-12 / dispute-01
                                     :ARG0 c47-9
                                     :ARG1 (c47-3 / somebody
                                                  :ARG0-of (c47-4 / ignorant-02
                                                                  :degree (c47-5 / as-hell))))
                    :polarity -)
       :ARG1 (c47-1 / block-01
                    :ARG0 c47-9
                    :ARG1 (c47-0 / say-01
                                 :ARG0 c47-9
                                 :ARG1 (c47-11 / goodbye)
                                 :ARG2 (c47-2 / you)
                                 :time (c47-13 / about-to)
                                 :mod (c47-8 / day
                                             :ARG1-of (c47-14 / good-02)))))

# ::snt Was Janelle abiding by the laws when she got locked up each time oh my bad you must have forgot that part or maybe
# ::tokens ["Was", "Janelle", "abiding", "by", "the", "laws", "when", "she", "got", "locked", "up", "each", "time", "oh", "my", "bad", "you", "must", "have", "forgot", "that", "part", "or", "maybe"]
# ::lemmas ["be", "Janelle", "abide", "by", "the", "law", "when", "she", "got", "lock", "up", "each", "time", "oh", "my", "bad", "you", "must", "have", "forget", "that", "part", "or", "maybe"]
(c48-12 / abide-01
        :ARG0 (c48-7 / person
                     :name (c48-4 / name
                                  :op1 "Janelle"))
        :ARG1 (c48-8 / law)
        :polarity (c48-11 / amr-unknown)
        :time (c48-14 / lock-up-03
                      :ARG1 c48-7
                      :frequency (c48-10 / time
                                         :mod (c48-6 / each)))
        :ARG0-of (c48-9 / cause-01
                        :ARG1 (c48-0 / or
                                     :op1 (c48-13 / infer-01
                                                  :ARG1 (c48-1 / forget-01
                                                               :ARG0 (c48-3 / you)
                                                               :ARG1 (c48-5 / part
                                                                            :mod (c48-16 / that))))
                                     :op2 (c48-15 / possible-01
                                                  :ARG1 c48-1)
                                     :mod (c48-2 / oh-my-god
                                                 :mode expressive))))

# ::snt Restraining orders are put in place for people safety but do everybody abide by them how many times did Jenelle get locked up
# ::tokens ["Restraining", "orders", "are", "put", "in", "place", "for", "people", "safety", "but", "do", "everybody", "abide", "by", "them", "how", "many", "times", "did", "Jenelle", "get", "locked", "up"]
# ::lemmas ["restraining", "order", "be", "put", "in", "place", "for", "people", "safety", "but", "do", "everybody", "abide", "by", "they", "how", "many", "time", "do", "Jenelle", "get", "lock", "up"]
(c49-8 / contrast-01
       :ARG1 (c49-6 / put-03
                    :ARG1 (c49-0 / order-01
                                 :ARG2 (c49-4 / restrain-01))
                    :ARG2 (c49-9 / in-place)
                    :purpose (c49-3 / safe-01
                                    :ARG1 (c49-2 / person)))
       :ARG2 (c49-10 / abide-01
                     :ARG0 (c49-5 / everybody)
                     :ARG1 c49-0
                     :frequency (c49-11 / amr-unknown)
                     :time-of (c49-7 / lock-up-03
                                     :ARG1 (c49-12 / person
                                                   :name (c49-1 / name
                                                                :op1 "Jenelle")))))

# ::snt And you're saying Janelle didn't have good lawyers that could have dragged the case out it's called dispute
# ::tokens ["And", "you", "'re", "saying", "Janelle", "did", "n't", "have", "good", "lawyers", "that", "could", "have", "dragged", "the", "case", "out", "it", "'s", "called", "dispute"]
# ::lemmas ["and", "you", "be", "say", "Janelle", "do", "not", "have", "good", "lawyer", "that", "could", "have", "drag", "the", "case", "out", "it", "be", "call", "dispute"]
(c50-9 / and
       :op2 (c50-3 / say-01
                   :ARG0 (c50-0 / you)
                   :ARG1 (c50-4 / have-03
                                :ARG0 (c50-5 / person
                                             :name (c50-1 / name
                                                          :op1 "Janelle"))
                                :ARG1 (c50-6 / lawyer
                                             :ARG1-of (c50-10 / good-03)
                                             :ARG0-of (c50-11 / drag-out-02
                                                              :ARG1 (c50-7 / case-03)
                                                              :ARG1-of (c50-12 / call-01
                                                                               :ARG2 (c50-8 / dispute-01))
                                                              :ARG1-of (c50-2 / possible-01)))
                                :polarity -)))
