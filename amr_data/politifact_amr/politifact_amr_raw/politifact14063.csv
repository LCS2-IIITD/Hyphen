comment,amr
FakeNews Whats an Orlando news channel reporting on a fake story in Montana GetAClue,"# ::snt FakeNews Whats an Orlando news channel reporting on a fake story in Montana GetAClue
(a / and
      :op1 (b / broadcast-program
            :name (n / name
                  :op1 ""FakeNews""))
      :op2 (b2 / broadcast-program
            :name (n2 / name
                  :op1 ""GetAClue"")
            :location (c / city
                  :name (n3 / name
                        :op1 ""Orlando""))
            :mod (n4 / news)
            :ARG0-of (r / report-01
                  :ARG1 (s / story
                        :ARG1-of (f / fake-02)
                        :location (s2 / state
                              :name (n5 / name
                                    :op1 ""Montana""))))))"
Careful what we wish for remember theres karma ,"# ::snt Careful what we wish for remember theres karma 
(r / remember-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (k / karma
            :ARG1-of (w / wish-01
                  :ARG0 (w2 / we)))
      :ARG1-of (c / care-04))"
Too bad Wish it was true,"# ::snt Too bad Wish it was true
(b / bad-07
      :ARG1 (w / wish-01
            :ARG1 (t / true-01
                  :ARG1 (ii / it)))
      :ARG2-of (h / have-degree-91
            :ARG1 w
            :ARG3 (t2 / too)))"
Fake news,"# ::snt Fake news
(n / news
      :ARG1-of (f / fake-02))"
Oh no I pray it is not true,"# ::snt Oh no I pray it is not true
(p / pray-01
      :ARG0 (ii / i)
      :ARG1 (t / true-01
            :polarity -
            :ARG1 (ii2 / it))
      :mod (o / oh-no
            :mode expressive))"
I just read about this too,"# ::snt I just read about this too
(r / read-01
      :ARG0 (ii / i)
      :ARG3 (t / this)
      :mod (t2 / too)
      :time (j / just))"
ACCIDENT ,"# ::snt ACCIDENT 
(a / accident)"
httphoaxalertleadstoriescom3468601fakenewstednugenthuntingaccidentwasnotmurderdidnothappenhtml …,"# ::snt httphoaxalertleadstoriescom3468601fakenewstednugenthuntingaccidentwasnotmurderdidnothappenhtml …
(h / hyperlink-91
      :ARG3 (u / url-entity
            :value ""httphoaxalertleadstoriescom3468601fakenewstednugenthuntingaccidentwasnotmurderdidnothappenhtml""))"
Shame,"# ::snt Shame
(s / shame-02)"
Probably some guy named Ted Nugent and they wanted to be first god forbid accurate But first,"# ::snt Probably some guy named Ted Nugent and they wanted to be first god forbid accurate But first
(c / contrast-01
      :ARG1 (a / and
            :op1 (p / probable
                  :domain (g / guy
                        :name (n / name
                              :op1 ""Ted""
                              :op2 ""Nugent"")
                        :mod (s / some)
                        :ARG1-of (n2 / name-01
                              :ARG2 (p2 / person
                                    :name (n3 / name
                                          :op1 ""God"")))))
            :op2 (w / want-01
                  :ARG0 g
                  :ARG1 (a2 / accurate
                        :domain g
                        :ord (o / ordinal-entity
                              :value 1)
                        :ARG1-of (f / forbid-01
                              :ARG0 (g2 / god))))
            :ARG2 (o2 / ordinal-entity
                  :value 1)))"
This appears to be a fake story,"# ::snt This appears to be a fake story
(a / appear-02
      :ARG1 (s / story
            :ARG1-of (f / fake-02)
            :domain (t / this)))"
TedNugent,"# ::snt TedNugent
(p / person
      :name (n / name
            :op1 ""TedNugent""))"
oh bolloxgot my hopes up there,"# ::snt oh bolloxgot my hopes up there
(g / get-01
      :ARG1 (h / hopeful-03
            :ARG0 (ii / i)
            :location (t / there
                  :direction (u / up)))
      :mod (o / oh
            :mode expressive))"
Fortunately for Ted you were ,"# ::snt Fortunately for Ted you were 
(f / fortunate-01
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Ted""))
      :ARG2 (y / you))"
Am I a victim of Fake News I read it this morning,"# ::snt Am I a victim of Fake News I read it this morning
(m / multi-sentence
      :snt1 (v / victim
            :polarity (a / amr-unknown)
            :domain (ii / i)
            :topic (n / news
                  :ARG1-of (f / fake-02)))
      :snt2 (r / read-01
            :ARG0 ii
            :ARG1 (ii2 / it)
            :time (d / date-entity
                  :dayperiod (m2 / morning)
                  :mod (t / today))))"
Hes alive and well He was on FB Live not to long ago,"# ::snt Hes alive and well He was on FB Live not to long ago
(a / and
      :op1 (l / live-01
            :ARG0 (h / he))
      :op2 (w / well-09
            :ARG1 h)
      :location (b / broadcast-program
            :name (n / name
                  :op1 ""Facebook""
                  :op2 ""Live""))
      :time (b2 / before
            :op1 (n2 / now)
            :quant (l2 / long
                  :polarity -)))"
This apparently is false,"# ::snt This apparently is false
(f / false
      :domain (t / this)
      :ARG1-of (a / appear-02))"
cant get to article Covered by app ads,"# ::snt cant get to article Covered by app ads
(p / possible-01
      :polarity -
      :ARG1 (g / get-05
            :ARG1 (ii / i)
            :ARG2 (a / article
                  :ARG1-of (c / cover-02
                        :ARG0 (a2 / advertise-01
                              :medium (a3 / app))))))"
That was a professional hit trust me,"# ::snt That was a professional hit trust me
(h / hit-01
      :ARG0 (p / professional)
      :domain (t / that)
      :ARG2-of (t2 / trust-01
            :ARG0 (y / you)
            :ARG1 (ii / i)))"
Its not real Its a hoax,"# ::snt Its not real Its a hoax
(a / and
      :op1 (r / real-04
            :polarity -
            :ARG1 (ii / it))
      :op2 (h / hoax-01
            :ARG2 ii))"
Aweful news ,"# ::snt Aweful news 
(n / news
      :mod (a / awful))"
Couldnt agree more Hes a good dude that represents our 2A,"# ::snt Couldnt agree more Hes a good dude that represents our 2A
(p / possible-01
      :polarity -
      :ARG1 (a / agree-01
            :ARG0 (ii / i)
            :ARG1 (d / dude
                  :ARG1-of (g / good-02)
                  :ARG0-of (r / represent-01
                        :ARG1 (o / organization
                              :name (n / name
                                    :op1 ""2A"")
                              :poss (w / we))))
            :ARG2-of (h / have-degree-91
                  :ARG1 ii
                  :ARG3 (m / more))))"
NO its not  Teds the MAN,"# ::snt NO its not  Teds the MAN
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (t / teds-01
            :polarity -
            :ARG1 (m / man))
      :ARG2 m)"
Thats not a funny hoax I like gun toating Neug,"# ::snt Thats not a funny hoax I like gun toating Neug
(m / multi-sentence
      :snt1 (h / hoax-01
            :polarity -
            :ARG2 (t / that)
            :mod (f / funny))
      :snt2 (l / like-01
            :ARG0 (ii / i)
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Neug"")
                  :ARG0-of (b / bait-01
                        :instrument (g / gun)))))"
merciermike  Seriously Fake news BS Bait click,"# ::snt merciermike  Seriously Fake news BS Bait click
(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""merciermike""))
      :snt2 (c / click-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (b / bait-01
                  :ARG2 (n2 / news)
                  :ARG1-of (f / fake-02)
                  :ARG1-of (s / serious-01))))"
Thank god,"# ::snt Thank god
(t / thank-01
      :ARG1 (p / person
            :name (n / name
                  :op1 ""God"")))"
True or not,"# ::snt True or not
(o / or
      :op1 (t / true-01)
      :op2 (t2 / true-01
            :polarity -))"
IT IS A HOAX,"# ::snt IT IS A HOAX
(l / loophole
      :domain (ii / it))"
its a hoax He is alive and well,"# ::snt its a hoax He is alive and well
(m / multi-sentence
      :snt1 (h / hoax-01
            :domain (ii / it))
      :snt2 (a / and
            :op1 (l / live-01
                  :ARG0 (h2 / he))
            :op2 (w / well-09
                  :ARG1 h2)))"
If only that were true,"# ::snt If only that were true
(h / have-condition-91
      :ARG2 (t / true-01
            :ARG1 (t2 / that))
      :mod (o / only))"
