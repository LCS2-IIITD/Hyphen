comment,amr
Yes but no one believed them so they are okay,"# ::snt Yes but no one believed them so they are okay
(c / contrast-01
      :ARG1 (y / yes)
      :ARG2 (b / believe-01
            :ARG0 (n / no-one)
            :ARG1 (t / they)
            :ARG0-of (c2 / cause-01
                  :ARG1 (o / okay-04
                        :ARG1 t))))"
Finally the balanced coverage theyve promised,"# ::snt Finally the balanced coverage theyve promised
(c / cover-01
      :ARG1-of (b / balance-01)
      :ARG1-of (p / promise-01
            :ARG0 (t / they))
      :mod (f / final))"
In that graphic what is the meaning of the 2nd column titled Trump  What is it measuring,"# ::snt In that graphic what is the meaning of the 2nd column titled Trump  What is it measuring
(m / multi-sentence
      :snt1 (m2 / mean-01
            :ARG1 (c / column
                  :ord (o / ordinal-entity
                        :value 2)
                  :ARG1-of (t / title-01
                        :ARG2 (p / person
                              :name (n / name
                                    :op1 ""Trump""))))
            :ARG2 (a / amr-unknown)
            :location (g / graphic
                  :mod (t2 / that)))
      :snt2 (m3 / measure-01
            :ARG1 (a2 / amr-unknown)))"
freud lives,"# ::snt freud lives
(l / life
      :mod (f / freud))"
I cant,"# ::snt I cant
(p / possible-01
      :polarity -
      :ARG1 (ii / i))"
Most confusing graphic ever but what it shows is that 48 of people trust CNN more than Trump 35 trust Trump more than CNN 30 trust Fox more than Trump and 20 trust Trump more than Fox  FWIW,"# ::snt Most confusing graphic ever but what it shows is that 48 of people trust CNN more than Trump 35 trust Trump more than CNN 30 trust Fox more than Trump and 20 trust Trump more than Fox  FWIW
(c / contrast-01
      :ARG1 (h / have-degree-91
            :ARG1 (g / graphic)
            :ARG2 (c2 / confuse-01
                  :ARG0 g
                  :time (e / ever))
            :ARG3 (m / most))
      :ARG2 (s / show-01
            :ARG0 g
            :ARG1 (a / and
                  :op1 (t / trust-02
                        :ARG0 (p / person
                              :quant 48
                              :ARG1-of (ii / include-91
                                    :ARG2 (p2 / person)))
                        :ARG1 (p3 / publication
                              :name (n / name
                                    :op1 ""CNN""))
                        :ARG2-of (h2 / have-degree-91
                              :ARG1 p3
                              :ARG3 (m2 / more)
                              :ARG4 (p4 / person
                                    :name (n2 / name
                                          :op1 ""Trump""))))
                  :op2 (t2 / trust-02
                        :ARG0 (p5 / person
                              :quant 30
                              :ARG1-of (ii2 / include-91
                                    :ARG2 p2))
                        :ARG1 (p6 / publication
                              :name (n3 / name
                                    :op1 ""Fox""))
                        :ARG2-of (h3 / have-degree-91
                              :ARG1 p6
                              :ARG3 (m3 / more)
                              :ARG4 p4))
                  :op3 (t3 / trust-02
                        :ARG0 (p7 / person
                              :quant 20)
                        :ARG1 p4
                        :ARG2 (m4 / more)
                        :ARG4 (p8 / person
                              :name (n4 / name
                                    :op1 ""FWIW""))))))"
Har God that’s good,"# ::snt Har God that’s good
(g / good-02
      :ARG1 (t / that)
      :mod (h / ha
            :mode expressive))"
This is not the graphic youre looking for,"# ::snt This is not the graphic youre looking for
(l / look-01
      :polarity -
      :ARG0 (y / you)
      :ARG1 (g / graphic
            :domain (t / this)))"
lol,"# ::snt lol
(l / laugh-01
      :mode expressive
      :manner (l2 / loud))"
Mmmmmaaaaarrrrvveelllous,"# ::snt Mmmmmaaaaarrrrvveelllous
(p / person
      :name (n / name
            :op1 ""Mmmmmaaaaarrrrvveelllous""))"
that should be replicated here for slynews,"# ::snt that should be replicated here for slynews
(r / recommend-01
      :ARG1 (r2 / replicate-01
            :ARG1 (t / that)
            :beneficiary (b / broadcast-program
                  :name (n / name
                        :op1 ""SNYnews""))
            :location (h / here)))"
