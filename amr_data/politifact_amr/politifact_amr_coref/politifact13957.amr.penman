# ::snt That is as fake as it gets Buy a clue and try using it
# ::tokens ["That", "is", "as", "fake", "as", "it", "gets", "Buy", "a", "clue", "and", "try", "using", "it"]
# ::lemmas ["that", "be", "as", "fake", "as", "it", "get", "buy", "a", "clue", "and", "try", "use", "it"]
(c1-5 / and
      :op1 (c1-6 / fake-02
                 :ARG1 (c1-4 / that)
                 :ARG2-of (c1-7 / have-degree-91
                                :ARG1 c1-4
                                :ARG3 (c1-0 / equal)
                                :ARG4 (c1-8 / get-03
                                            :ARG1 c1-4)))
      :op2 c1-5
      :op1 (c1-9 / buy-01
                 :ARG0 (c1-10 / you)
                 :ARG1 (c1-1 / clue)
                 :mode imperative)
      :op2 (c1-2 / try-01
                 :ARG0 c1-10
                 :ARG1 (c1-3 / use-01
                             :ARG0 c1-10
                             :ARG1 c1-1)
                 :mode imperative))

# ::snt Spunkmeyer are cookies and Leominster is a city Mass Geez you guys are knee deep in fake news Its OK the 1st protects all BS
# ::tokens ["Spunkmeyer", "are", "cookies", "and", "Leominster", "is", "a", "city", "Mass", "Geez", "you", "guys", "are", "knee", "deep", "in", "fake", "news", "Its", "OK", "the", "1st", "protects", "all", "BS"]
# ::lemmas ["spunkmeyer", "be", "cookie", "and", "Leominster", "be", "a", "city", "Mass", "Geez", "you", "guy", "be", "knee", "deep", "in", "fake", "news", "its", "ok", "the", "1st", "protect", "all", "BS"]
(c2-15 / multi-sentence
       :snt1 (c2-12 / and
                    :op1 (c2-7 / cookie
                               :domain (c2-8 / person
                                             :name (c2-17 / name
                                                          :op1 "Spunkmeyer")))
                    :op2 (c2-14 / city
                                :name (c2-9 / name
                                            :op1 "Leominster")
                                :mod (c2-2 / city
                                           :name (c2-5 / name
                                                       :op1 "Massachussetts"))))
       :snt2 (c2-6 / deep-02
                   :ARG1 (c2-10 / news
                                :ARG1-of (c2-13 / fake-02))
                   :ARG2 (c2-16 / knee)
                   :mod (c2-18 / jeez
                               :mode expressive))
       :snt3 (c2-0 / okay-01
                   :ARG1 (c2-3 / protect-01
                               :ARG0 (c2-4 / first)
                               :ARG1 (c2-1 / bullshit
                                           :mod (c2-11 / all)))))

# ::snt this is not true There is apparently no congressmen with these names
# ::tokens ["this", "is", "not", "true", "There", "is", "apparently", "no", "congressmen", "with", "these", "names"]
# ::lemmas ["this", "be", "not", "true", "there", "be", "apparently", "no", "congressman", "with", "these", "name"]
(c3-8 / multi-sentence
      :snt1 (c3-5 / true-01
                  :ARG1 (c3-11 / this)
                  :polarity -)
      :snt2 (c3-6 / appear-02
                  :ARG1 (c3-9 / have-03
                              :ARG0 (c3-1 / person
                                          :ARG0-of (c3-3 / have-org-role-91
                                                         :ARG1 (c3-10 / government-organization
                                                                      :name (c3-12 / name
                                                                                   :op1 "Congress"))
                                                         :ARG2 (c3-2 / congressman)))
                              :ARG1 (c3-7 / thing
                                          :ARG2-of (c3-4 / name-01)
                                          :mod (c3-0 / this))
                              :polarity -)))

# ::snt what happened to treason
# ::tokens ["what", "happened", "to", "treason"]
# ::lemmas ["what", "happen", "to", "treason"]
(c4-0 / event
      :mod (c4-1 / treason))

# ::snt WTF
# ::tokens ["WTF"]
# ::lemmas ["WTF"]
(c5-0 / amr-unknown
      :mod (c5-1 / fuck
                 :mode expressive))

# ::snt lemme guess Because Trump FAILED TO INCREASE CROSSBORDER TRADE WITH CANADA
# ::tokens ["lemme", "guess", "Because", "Trump", "FAILED", "TO", "INCREASE", "CROSSBORDER", "TRADE", "WITH", "CANADA"]
# ::lemmas ["lemme", "guess", "because", "Trump", "fail", "to", "INCREASE", "CROSSBORDER", "TRADE", "with", "CANADA"]
(c6-10 / guess-01
       :ARG0 (c6-11 / i)
       :ARG1 (c6-4 / cause-01
                   :ARG0 (c6-7 / fail-01
                               :ARG0 (c6-5 / person
                                           :name (c6-9 / name
                                                       :op1 "Trump"))
                               :ARG1 (c6-0 / increase-01
                                           :ARG0 c6-5
                                           :ARG1 (c6-3 / deal-01
                                                       :ARG0 c6-5
                                                       :ARG1 (c6-8 / country
                                                                   :name (c6-6 / name
                                                                               :op1 "Canada"))
                                                       :ARG2 (c6-1 / program
                                                                   :name (c6-2 / name
                                                                               :op1 "COSSBORD")))))))

# ::snt you must be shitting me
# ::tokens ["you", "must", "be", "shitting", "me"]
# ::lemmas ["you", "must", "be", "shit", "me"]
(c7-0 / infer-01
      :ARG1 (c7-2 / shit-01
                  :ARG0 (c7-3 / you)
                  :ARG1 (c7-1 / i)))

# ::snt hahaha
# ::tokens ["hahaha"]
# ::lemmas ["hahaha"]
(c8-0 / haha
      :mode expressive)

# ::snt THEY NEED TO BE LOCKED UP FOR LIFE
# ::tokens ["THEY", "NEED", "TO", "BE", "LOCKED", "UP", "FOR", "LIFE"]
# ::lemmas ["they", "need", "to", "be", "locked", "up", "for", "LIFE"]
(c9-1 / need-01
      :ARG0 (c9-2 / they)
      :ARG1 (c9-3 / lock-up-03
                  :ARG1 c9-2
                  :purpose (c9-0 / live-01)))

# ::snt is this for real
# ::tokens ["is", "this", "for", "real"]
# ::lemmas ["be", "this", "for", "real"]
(c10-1 / real-04
       :polarity (c10-0 / amr-unknown)
       :ARG1 (c10-2 / this))

# ::snt OMG I cant believe this was really to take place Thank God it didnt How embarrassing 2 their family
# ::tokens ["OMG", "I", "ca", "nt", "believe", "this", "was", "really", "to", "take", "place", "Thank", "God", "it", "did", "nt", "How", "embarrassing", "2", "their", "family"]
# ::lemmas ["OMG", "i", "can", "not", "believe", "this", "be", "really", "to", "take", "place", "thank", "God", "it", "do", "not", "how", "embarrassing", "2", "their", "family"]
(c11-11 / multi-sentence
        :snt1 (c11-3 / possible-01
                     :ARG1 (c11-15 / believe-01
                                   :ARG0 (c11-14 / i)
                                   :ARG1 (c11-4 / event
                                                :ARG1-of (c11-1 / real-04)
                                                :domain (c11-6 / this)))
                     :mod (c11-0 / oh-my-god
                                 :mode expressive)
                     :polarity -)
        :snt2 (c11-5 / thank-01
                     :ARG0 c11-14
                     :ARG1 (c11-2 / person
                                  :name (c11-13 / name
                                                :op1 "God"))
                     :ARG2 c11-4
                     :mod c11-6
                     :polarity -)
        :snt3 (c11-7 / embarrass-01
                     :ARG0 c11-2
                     :ARG0-of (c11-12 / have-rel-role-91
                                      :ARG1 (c11-8 / they)
                                      :ARG2 (c11-9 / family))
                     :quant 2)
        :degree (c11-10 / so))

# ::snt this isnt showing up anywhere else
# ::tokens ["this", "is", "nt", "showing", "up", "anywhere", "else"]
# ::lemmas ["this", "be", "not", "show", "up", "anywhere", "else"]
(c12-3 / show-up-02
       :ARG1 (c12-2 / this)
       :location (c12-0 / anywhere
                        :mod (c12-1 / else))
       :polarity -)

# ::snt the names dont match real people appears this is FakeNews
# ::tokens ["the", "names", "do", "nt", "match", "real", "people", "appears", "this", "is", "FakeNews"]
# ::lemmas ["the", "name", "do", "not", "match", "real", "people", "appear", "this", "be", "FakeNews"]
(c13-3 / appear-02
       :ARG1 (c13-4 / fake-News
                    :domain (c13-2 / this))
       :concession (c13-5 / match-01
                          :ARG1 (c13-7 / thing
                                       :ARG2-of (c13-6 / name-01))
                          :ARG2 (c13-1 / person
                                       :ARG1-of (c13-0 / real-04))
                          :polarity -))

# ::snt This is a fake news site Please research the names on Google  youll see what I mean It is from Conservative Flash news all fake
# ::tokens ["This", "is", "a", "fake", "news", "site", "Please", "research", "the", "names", "on", "Google", " ", "you", "ll", "see", "what", "I", "mean", "It", "is", "from", "Conservative", "Flash", "news", "all", "fake"]
# ::lemmas ["this", "be", "a", "fake", "news", "site", "please", "research", "the", "name", "on", "Google", " ", "you", "will", "see", "what", "i", "mean", "it", "be", "from", "Conservative", "Flash", "news", "all", "fake"]
(c14-12 / multi-sentence
        :snt1 (c14-11 / site
                      :mod (c14-16 / news)
                      :ARG1-of (c14-10 / fake-02)
                      :domain (c14-6 / this))
        :snt2 (c14-0 / research-01
                     :ARG0 (c14-19 / you)
                     :ARG1 (c14-18 / thing
                                   :ARG2-of (c14-5 / name-01))
                     :location (c14-14 / google)
                     :ARG1-of (c14-4 / cause-01
                                     :ARG0 (c14-7 / see-01
                                                  :ARG0 c14-19
                                                  :ARG1 (c14-9 / thing
                                                               :ARG2-of (c14-2 / mean-01
                                                                               :ARG0 (c14-17 / i)))))
                     :mode imperative
                     :polite +)
        :snt3 (c14-1 / fake-02
                     :ARG1 (c14-3 / news
                                  :mod (c14-13 / flash)
                                  :mod (c14-15 / conservative))
                     :mod (c14-8 / all)))

# ::snt Is this true
# ::tokens ["Is", "this", "true"]
# ::lemmas ["be", "this", "true"]
(c15-2 / true-01
       :polarity (c15-0 / amr-unknown)
       :ARG1 (c15-1 / this))

# ::snt  Absolutely We the people must make America great again
# ::tokens [" ", "Absolutely", "We", "the", "people", "must", "make", "America", "great", "again"]
# ::lemmas [" ", "absolutely", "we", "the", "people", "must", "make", "America", "great", "again"]
(c16-0 / obligate-01
       :ARG1 (c16-4 / we
                    :mod (c16-1 / person))
       :ARG2 (c16-6 / make-02
                    :ARG0 c16-4
                    :ARG1 (c16-8 / great
                                 :domain (c16-2 / country
                                                :name (c16-7 / name
                                                             :op1 "America"))
                                 :mod (c16-5 / again)))
       :degree (c16-3 / absolute))

# ::snt I hope so too however if something awful happened the MAGA movement must go on
# ::tokens ["I", "hope", "so", "too", "however", "if", "something", "awful", "happened", "the", "MAGA", "movement", "must", "go", "on"]
# ::lemmas ["i", "hope", "so", "too", "however", "if", "something", "awful", "happen", "the", "MAGA", "movement", "must", "go", "on"]
(c17-1 / contrast-01
       :ARG1 (c17-7 / hope-01
                    :ARG0 (c17-10 / i)
                    :ARG1 (c17-6 / so)
                    :mod (c17-4 / too))
       :ARG2 (c17-0 / obligate-01
                    :ARG2 (c17-9 / go-on-15
                                 :ARG1 (c17-2 / political-movement
                                              :name (c17-8 / name
                                                           :op1 "MAGA")))
                    :condition (c17-3 / event
                                      :mod (c17-5 / awful))))

# ::snt I hope  pray that all plots will be caught stopped  given fullest verdict of the law MAGA
# ::tokens ["I", "hope", " ", "pray", "that", "all", "plots", "will", "be", "caught", "stopped", " ", "given", "fullest", "verdict", "of", "the", "law", "MAGA"]
# ::lemmas ["i", "hope", " ", "pray", "that", "all", "plot", "will", "be", "catch", "stop", " ", "give", "full", "verdict", "of", "the", "law", "maga"]
(c18-8 / hope-01
       :ARG0 (c18-12 / i)
       :ARG1 (c18-7 / stop-01
                    :ARG1 (c18-1 / plot
                                 :mod (c18-5 / all))
                    :condition (c18-11 / give-01
                                       :ARG1 (c18-4 / verdict
                                                    :mod (c18-9 / law)
                                                    :ARG1-of (c18-2 / have-degree-91
                                                                    :ARG2 (c18-6 / full-09
                                                                                 :ARG1 c18-4)
                                                                    :ARG3 (c18-10 / most)))))
       :ARG2-of (c18-3 / thank-01
                       :ARG1 (c18-0 / person
                                    :name (c18-13 / name
                                                  :op1 "MAGA"))))

# ::snt I have no doubt there are and will be more plots Just as likely for establishment traitor to plot too All traitors hate Trump
# ::tokens ["I", "have", "no", "doubt", "there", "are", "and", "will", "be", "more", "plots", "Just", "as", "likely", "for", "establishment", "traitor", "to", "plot", "too", "All", "traitors", "hate", "Trump"]
# ::lemmas ["i", "have", "no", "doubt", "there", "be", "and", "will", "be", "more", "plot", "just", "as", "likely", "for", "establishment", "traitor", "to", "plot", "too", "all", "traitor", "hate", "trump"]
(c19-17 / doubt-01
        :ARG0 (c19-3 / i)
        :ARG1 (c19-18 / and
                      :op1 (c19-1 / plot-01
                                  :ARG1 (c19-4 / person
                                               :ARG0-of (c19-14 / betray-01)
                                               :mod (c19-2 / establishment))
                                  :mod (c19-11 / more))
                      :op2 (c19-15 / plot-01
                                   :ARG0 c19-4
                                   :mod (c19-0 / more)))
        :ARG1-of (c19-7 / have-degree-91
                        :ARG2 (c19-12 / likely-01
                                      :ARG1 (c19-13 / plot-01
                                                    :ARG0 c19-4)
                                      :mod (c19-20 / just))
                        :ARG3 (c19-10 / equal)
                        :ARG4 (c19-6 / hate-01
                                     :ARG0 (c19-8 / person
                                                  :ARG0-of (c19-16 / betray-01)
                                                  :mod (c19-9 / all))
                                     :ARG1 (c19-5 / person
                                                  :name (c19-19 / name
                                                                :op1 "Trump"))))
        :polarity -)

# ::snt Fake News
# ::tokens ["Fake", "News"]
# ::lemmas ["Fake", "News"]
(c20-0 / news
       :ARG1-of (c20-1 / fake-02))

# ::snt You actually believe theres a congressman called Harold Spunkmeyer  No wonder Trump won
# ::tokens ["You", "actually", "believe", "there", "s", "a", "congressman", "called", "Harold", "Spunkmeyer", " ", "No", "wonder", "Trump", "won"]
# ::lemmas ["you", "actually", "believe", "there", "s", "a", "congressman", "call", "Harold", "Spunkmeyer", " ", "no", "wonder", "Trump", "win"]
(c21-7 / multi-sentence
       :snt1 (c21-10 / believe-01
                     :ARG0 (c21-11 / you)
                     :ARG1 (c21-2 / person
                                  :name (c21-9 / name
                                               :op1 "Harold"
                                               :op2 "Spunkmeyer")
                                  :ARG0-of (c21-8 / have-org-role-91
                                                  :ARG2 (c21-3 / congressman)))
                     :ARG1-of (c21-6 / actual-02))
       :snt2 (c21-5 / wonder-02
                    :ARG1 (c21-1 / win-01
                                 :ARG0 (c21-0 / person
                                              :name (c21-4 / name
                                                           :op1 "Trump")))
                    :polarity -))

# ::snt its fake news The two people dont exist
# ::tokens ["its", "fake", "news", "The", "two", "people", "do", "nt", "exist"]
# ::lemmas ["its", "fake", "news", "the", "two", "people", "do", "not", "exist"]
(c22-3 / multi-sentence
       :snt1 (c22-2 / fake-02
                    :ARG1 (c22-4 / news))
       :snt2 (c22-0 / exist-01
                    :ARG1 (c22-1 / person
                                 :quant 2)
                    :polarity -))

# ::snt You may want to mark it satire because someone is going to believe it Might be on FOX  Friends in the morning
# ::tokens ["You", "may", "want", "to", "mark", "it", "satire", "because", "someone", "is", "going", "to", "believe", "it", "Might", "be", "on", "FOX", " ", "Friends", "in", "the", "morning"]
# ::lemmas ["you", "may", "want", "to", "mark", "it", "satire", "because", "someone", "be", "go", "to", "believe", "it", "may", "be", "on", "FOX", " ", "Friends", "in", "the", "morning"]
(c23-4 / possible-01
       :ARG1 (c23-7 / want-01
                    :ARG0 (c23-15 / you)
                    :ARG1 (c23-11 / mark-01
                                  :ARG0 c23-15
                                  :ARG1 (c23-13 / it)
                                  :ARG2 (c23-10 / satire)))
       :ARG1-of (c23-5 / cause-01
                       :ARG0 (c23-14 / believe-01
                                     :ARG0 (c23-8 / someone)
                                     :ARG1 (c23-0 / possible-01
                                                  :ARG1 (c23-1 / broadcast-program
                                                               :name (c23-12 / name
                                                                             :op1 "Fox")
                                                               :medium (c23-9 / show
                                                                              :name (c23-6 / name
                                                                                           :op1 "Friends"))
                                                               :time (c23-3 / date-entity
                                                                            :dayperiod (c23-2 / morning)))))))

# ::snt Is this really true
# ::tokens ["Is", "this", "really", "true"]
# ::lemmas ["be", "this", "really", "true"]
(c24-3 / true-01
       :polarity (c24-0 / amr-unknown)
       :ARG1 (c24-2 / this)
       :ARG1-of (c24-1 / real-04))

# ::snt thanks
# ::tokens ["thanks"]
# ::lemmas ["thanks"]
(c25-0 / thank-01)

# ::snt zoombouse seanhannity Is this story really true
# ::tokens ["zoombouse", "seanhannity", "Is", "this", "story", "really", "true"]
# ::lemmas ["zoombouse", "seanhannity", "be", "this", "story", "really", "true"]
(c26-3 / ask-01
       :ARG0 (c26-6 / i)
       :ARG1 (c26-2 / true-01
                    :ARG1 (c26-4 / story
                                 :mod (c26-7 / this))
                    :ARG1-of (c26-0 / real-04))
       :ARG2 (c26-1 / person
                    :name (c26-5 / name
                                 :op1 "zoombouse"
                                 :op2 "seanhannity")))

# ::snt do me a favor and google the names of both of those Congressmen Spoiler warning they dont exist
# ::tokens ["do", "me", "a", "favor", "and", "google", "the", "names", "of", "both", "of", "those", "Congressmen", "Spoiler", "warning", "they", "do", "nt", "exist"]
# ::lemmas ["do", "me", "a", "favor", "and", "google", "the", "name", "of", "both", "of", "those", "Congressmen", "Spoiler", "warning", "they", "do", "not", "exist"]
(c27-7 / and
       :op1 (c27-0 / do-02
                   :ARG0 (c27-15 / you)
                   :ARG1 (c27-8 / favor)
                   :ARG2 (c27-13 / i)
                   :mode imperative)
       :op2 (c27-12 / google-01
                    :ARG0 c27-15
                    :ARG1 (c27-11 / name
                                  :poss (c27-1 / person
                                               :mod (c27-14 / both)
                                               :ARG0-of (c27-10 / have-org-role-91
                                                                :ARG1 (c27-2 / government-organization
                                                                             :name (c27-3 / name
                                                                                          :op1 "Congress"))
                                                                :ARG2 (c27-4 / congressman))
                                               :ARG0-of (c27-6 / warn-01
                                                               :ARG1 (c27-5 / exist-01
                                                                            :ARG1 c27-1
                                                                            :polarity -)
                                                               :ARG0-of (c27-9 / spoil-01))))
                    :mode imperative))

# ::snt TRUE NEWS  OR FAKE NEWS I DONT KNOW BUT MAKES ME SICKI SUPPORT TRUMP 100 MAKE AMERICA GREAT AGAINpl
# ::tokens ["TRUE", "NEWS", " ", "OR", "FAKE", "NEWS", "I", "DONT", "KNOW", "BUT", "MAKES", "ME", "SICKI", "SUPPORT", "TRUMP", "100", "MAKE", "AMERICA", "GREAT", "AGAINpl"]
# ::lemmas ["true", "NEWS", " ", "or", "FAKE", "news", "i", "dont", "KNOW", "but", "make", "ME", "SICKI", "SUPPORT", "TRUMP", "100", "make", "america", "great", "againpl"]
(c28-3 / contrast-01
       :ARG1 (c28-9 / know-01
                    :ARG0 (c28-15 / i)
                    :ARG1 (c28-0 / or
                                 :op1 (c28-14 / news
                                              :ARG1-of (c28-6 / true-01))
                                 :op2 (c28-4 / news
                                             :ARG1-of (c28-8 / fake-02)))
                    :polarity -)
       :ARG2 (c28-10 / make-02
                     :ARG0 (c28-11 / support-01
                                   :ARG0 c28-15
                                   :ARG0 (c28-5 / person
                                                :name (c28-1 / name
                                                             :op1 "Trump"))
                                   :ARG1 100))
       :ARG1 (c28-12 / great
                     :domain (c28-13 / country
                                     :name (c28-2 / name
                                                  :op1 "America")))
       :mod (c28-7 / again))

# ::snt Now please read this these congress reps do not exist httpbitly2sGXcxz
# ::tokens ["Now", "please", "read", "this", "these", "congress", "reps", "do", "not", "exist", "httpbitly2sGXcxz"]
# ::lemmas ["now", "please", "read", "this", "these", "congress", "rep", "do", "not", "exist", "httpbitly2sGXcxz"]
(c29-0 / read-01
       :ARG0 (c29-9 / you)
       :ARG1 (c29-4 / this)
       :ARG3 (c29-1 / exist-01
                    :ARG1 (c29-2 / person
                                 :ARG0-of (c29-6 / have-org-role-91
                                                 :ARG1 (c29-8 / government-organization
                                                              :name (c29-7 / name
                                                                           :op1 "Congress"))
                                                 :ARG2 (c29-5 / rep))
                                 :mod c29-4)
                    :polarity -)
       :mod (c29-3 / now)
       :mode imperative
       :polite +)

# ::snt Just sick  Lock THEM UP
# ::tokens ["Just", "sick", " ", "Lock", "THEM", "UP"]
# ::lemmas ["just", "sick", " ", "lock", "them", "up"]
(c30-1 / and
       :op1 (c30-2 / sick-05
                   :ARG1 (c30-4 / i)
                   :mod (c30-5 / just))
       :op2 (c30-3 / lock-up-03
                   :ARG0 (c30-6 / you)
                   :ARG1 (c30-0 / they)
                   :mode imperative))
