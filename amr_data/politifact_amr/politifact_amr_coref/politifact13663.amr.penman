# ::snt also mythical George Jefferson by mythical The Jefferson sitcom wanted a statue among general laughs
# ::tokens ["also", "mythical", "George", "Jefferson", "by", "mythical", "The", "Jefferson", "sitcom", "wanted", "a", "statue", "among", "general", "laughs"]
# ::lemmas ["also", "mythical", "George", "Jefferson", "by", "mythical", "the", "Jefferson", "sitcom", "want", "a", "statue", "among", "general", "laugh"]
(c1-0 / want-01
      :ARG0 (c1-3 / sitcom
                  :name (c1-7 / name
                              :op1 "The"
                              :op2 "Jefferson")
                  :mod (c1-4 / mythic)
                  :mod (c1-2 / also))
      :ARG1 (c1-1 / statue)
      :prep-among (c1-5 / laugh-01
                        :ARG1-of (c1-6 / general-02)))

# ::snt earning your name I see
# ::tokens ["earning", "your", "name", "I", "see"]
# ::lemmas ["earn", "your", "name", "i", "see"]
(c2-0 / see-01
      :ARG0 (c2-3 / i)
      :ARG1 (c2-1 / hear-01
                  :ARG1 (c2-2 / name
                              :poss (c2-4 / you))))

# ::snt ANA4PEACE2016  IS THIS TRUE
# ::tokens ["ANA4PEACE2016", " ", "IS", "THIS", "TRUE"]
# ::lemmas ["ana4peace2016", " ", "be", "this", "true"]
(c3-2 / true-01
      :ARG1 (c3-1 / this)
      :time (c3-0 / date-entity
                  :year 2016
                  :month 4
                  :day 4))

# ::snt I think it should get the Saddam Hussein statue treatment
# ::tokens ["I", "think", "it", "should", "get", "the", "Saddam", "Hussein", "statue", "treatment"]
# ::lemmas ["i", "think", "it", "should", "get", "the", "Saddam", "Hussein", "statue", "treatment"]
(c4-3 / think-01
      :ARG0 (c4-6 / i)
      :ARG1 (c4-0 / recommend-01
                  :ARG1 (c4-7 / treat-03
                              :ARG1 (c4-4 / statue
                                          :poss (c4-2 / person
                                                      :name (c4-5 / name
                                                                  :op1 "Saddam"
                                                                  :op2 "Hussein")))
                              :ARG2 (c4-1 / it))))

# ::snt maybe along the dog run outside
# ::tokens ["maybe", "along", "the", "dog", "run", "outside"]
# ::lemmas ["maybe", "along", "the", "dog", "run", "outside"]
(c5-1 / possible-01
      :ARG1 (c5-2 / run-02
                  :ARG0 (c5-0 / dog)
                  :ARG1 (c5-3 / outside)))

# ::snt hes a joke in highest
# ::tokens ["he", "s", "a", "joke", "in", "highest"]
# ::lemmas ["he", "s", "a", "joke", "in", "high"]
(c6-4 / joke-01
      :ARG2 (c6-3 / he)
      :ARG1-of (c6-1 / have-degree-91
                     :ARG2 (c6-0 / high-02
                                 :ARG1 c6-4)
                     :ARG3 (c6-2 / most)))

# ::snt Always the narcissist to the very end This is what large sheets  blankets are for
# ::tokens ["Always", "the", "narcissist", "to", "the", "very", "end", "This", "is", "what", "large", "sheets", " ", "blankets", "are", "for"]
# ::lemmas ["always", "the", "narcissist", "to", "the", "very", "end", "this", "be", "what", "large", "sheet", " ", "blanket", "be", "for"]
(c7-5 / multi-sentence
      :snt1 (c7-8 / narcissist
                  :time (c7-3 / always)
                  :destination (c7-0 / end
                                     :mod (c7-2 / very)))
      :snt2 (c7-6 / have-purpose-91
                  :ARG1 (c7-9 / blanket
                              :mod (c7-7 / large)
                              :consist-of (c7-4 / sheet))
                  :ARG2 (c7-1 / thing)))

# ::snt Obamas 8 Years in office
# ::tokens ["Obamas", "8", "Years", "in", "office"]
# ::lemmas ["Obamas", "8", "Years", "in", "office"]
(c8-3 / have-org-role-91
      :ARG0 (c8-1 / person
                  :name (c8-4 / name
                              :op1 "Obama"))
      :ARG2 (c8-0 / president)
      :duration (c8-2 / temporal-quantity
                      :unit (c8-5 / year)
                      :quant 8))

# ::snt I dont think so
# ::tokens ["I", "do", "nt", "think", "so"]
# ::lemmas ["i", "do", "not", "think", "so"]
(c9-2 / think-01
      :ARG0 (c9-1 / i)
      :ARG1 (c9-0 / so)
      :polarity -)

# ::snt Trump can always put a blanket over it
# ::tokens ["Trump", "can", "always", "put", "a", "blanket", "over", "it"]
# ::lemmas ["Trump", "can", "always", "put", "a", "blanket", "over", "it"]
(c10-3 / possible-01
       :ARG1 (c10-2 / put-01
                    :ARG0 (c10-1 / person
                                 :name (c10-5 / name
                                              :op1 "Trump"))
                    :ARG1 (c10-7 / blanket)
                    :ARG2 (c10-0 / over
                                 :op1 (c10-6 / it)))
       :time (c10-4 / always))

# ::snt I felt he would do something asinine  Give to Hollywood Im sure Streep could use it in her garden
# ::tokens ["I", "felt", "he", "would", "do", "something", "asinine", " ", "Give", "to", "Hollywood", "I", "m", "sure", "Streep", "could", "use", "it", "in", "her", "garden"]
# ::lemmas ["i", "feel", "he", "would", "do", "something", "asinine", " ", "give", "to", "Hollywood", "i", "be", "sure", "Streep", "could", "use", "it", "in", "her", "garden"]
(c11-14 / multi-sentence
        :snt1 (c11-12 / feel-02
                      :ARG0 (c11-18 / i)
                      :ARG1 (c11-4 / do-02
                                   :ARG0 (c11-15 / he)
                                   :ARG1 (c11-13 / something
                                                 :mod (c11-11 / asinine))))
        :snt2 (c11-17 / give-01
                      :ARG0 (c11-0 / i)
                      :ARG2 (c11-3 / market-sector
                                   :name (c11-19 / name
                                                 :op1 "Hollywood"))
                      :ARG1-of (c11-5 / cause-01
                                      :ARG0 (c11-10 / sure-02
                                                    :ARG0 (c11-16 / i)
                                                    :ARG1 (c11-6 / possible-01
                                                                 :ARG1 (c11-7 / use-01
                                                                              :ARG0 (c11-1 / person
                                                                                           :name (c11-8 / name
                                                                                                        :op1 "Streep"))
                                                                              :ARG1 (c11-2 / it)
                                                                              :location (c11-9 / garden
                                                                                               :poss c11-1)))))))

# ::snt httpwwwusatodaycomstorynewsnationnow20140826obamastatuesixpackparkbench14609447 â€¦
# ::tokens ["httpwwwusatodaycomstorynewsnationnow20140826obamastatuesixpackparkbench14609447", "\u2026"]
# ::lemmas ["httpwwwusatodaycomstorynewsnationnow20140826obamastatuesixpackparkbench14609447", "\u2026"]
(c12-0 / url-entity
       :value "httpwwwusatodaycomstorynewsnationnow20140826obamastatuesixpackparkbench14609447")

# ::snt Trump should install a bigger gold statue of himself in front of it to obscure the atrocious thing
# ::tokens ["Trump", "should", "install", "a", "bigger", "gold", "statue", "of", "himself", "in", "front", "of", "it", "to", "obscure", "the", "atrocious", "thing"]
# ::lemmas ["Trump", "should", "install", "a", "big", "gold", "statue", "of", "himself", "in", "front", "of", "it", "to", "obscure", "the", "atrocious", "thing"]
(c13-1 / recommend-01
       :ARG1 (c13-11 / install-01
                     :ARG0 (c13-3 / person
                                  :name (c13-10 / name
                                                :op1 "Trump"))
                     :ARG1 (c13-6 / statue
                                  :topic c13-3
                                  :mod (c13-9 / gold)
                                  :ARG1-of (c13-7 / have-degree-91
                                                  :ARG2 (c13-12 / big)
                                                  :ARG3 (c13-8 / more)))
                     :ARG2 (c13-2 / in-front-of
                                  :op1 c13-6)
                     :purpose (c13-0 / obscure-01
                                     :ARG0 c13-3
                                     :ARG1 (c13-4 / thing
                                                  :mod (c13-5 / atrocious)))))

# ::snt Cover it with a trump logo banner
# ::tokens ["Cover", "it", "with", "a", "trump", "logo", "banner"]
# ::lemmas ["cover", "it", "with", "a", "trump", "logo", "banner"]
(c14-0 / cover-01
       :ARG0 (c14-5 / you)
       :ARG1 (c14-3 / it)
       :ARG2 (c14-4 / banner
                    :mod (c14-2 / logo
                                :mod (c14-1 / trump)))
       :mode imperative)

# ::snt Should send it to ISIS Theyre his biggest remaining group of supporters
# ::tokens ["Should", "send", "it", "to", "ISIS", "They", "re", "his", "biggest", "remaining", "group", "of", "supporters"]
# ::lemmas ["should", "send", "it", "to", "ISIS", "they", "be", "his", "big", "remaining", "group", "of", "supporter"]
(c15-8 / multi-sentence
       :snt1 (c15-0 / recommend-01
                    :ARG1 (c15-7 / send-01
                                 :ARG1 (c15-12 / it)
                                 :ARG2 (c15-2 / criminal-organization
                                              :name (c15-11 / name
                                                            :op1 "ISIS"))))
       :snt2 (c15-9 / have-degree-91
                    :ARG1 (c15-10 / group
                                  :domain (c15-4 / he)
                                  :ARG1-of (c15-6 / remain-01)
                                  :consist-of (c15-3 / person
                                                     :ARG0-of (c15-5 / support-01)))
                    :ARG2 (c15-13 / big)
                    :ARG3 (c15-1 / most)))

# ::snt Jaysus is there no limit to his ego
# ::tokens ["Jaysus", "is", "there", "no", "limit", "to", "his", "ego"]
# ::lemmas ["Jaysus", "be", "there", "no", "limit", "to", "his", "ego"]
(c16-2 / limit-01
       :ARG1 (c16-0 / ego
                    :poss (c16-1 / person
                                 :name (c16-3 / name
                                              :op1 "Jesus")
                                 :ARG2-of c16-2))
       :polarity -)

# ::snt big ears wart  and crap eatin grin and all
# ::tokens ["big", "ears", "wart", " ", "and", "crap", "eatin", "grin", "and", "all"]
# ::lemmas ["big", "ear", "wart", " ", "and", "crap", "eatin", "grin", "and", "all"]
(c17-4 / and
       :op1 (c17-3 / wart
                   :mod (c17-0 / ear
                               :mod (c17-7 / big)))
       :op2 (c17-6 / grin-01
                   :mod (c17-5 / eat-01
                               :ARG1 (c17-1 / crap)))
       :op3 (c17-2 / all))

# ::snt to stick our gum on when we tour
# ::tokens ["to", "stick", "our", "gum", "on", "when", "we", "tour"]
# ::lemmas ["to", "stick", "our", "gum", "on", "when", "we", "tour"]
(c18-2 / stick-01
       :ARG1 (c18-0 / gum
                    :poss (c18-3 / we))
       :time (c18-1 / tour-01
                    :ARG0 c18-3))

# ::snt in fairness bronze is a brown color and sht is brown
# ::tokens ["in", "fairness", "bronze", "is", "a", "brown", "color", "and", "sht", "is", "brown"]
# ::lemmas ["in", "fairness", "bronze", "be", "a", "brown", "color", "and", "sht", "be", "brown"]
(c19-3 / and
       :op1 (c19-2 / color
                   :mod (c19-6 / brown)
                   :domain (c19-0 / bronze))
       :op2 (c19-1 / brown
                   :domain (c19-4 / shit))
       :mod (c19-5 / in-fact))

# ::snt morgansparhawk Heck I heard Obama will have a lifesized bronze statue installed there for libs  media to worship
# ::tokens ["morgansparhawk", "Heck", "I", "heard", "Obama", "will", "have", "a", "lifesized", "bronze", "statue", "installed", "there", "for", "libs", " ", "media", "to", "worship"]
# ::lemmas ["morgansparhawk", "Heck", "i", "hear", "Obama", "will", "have", "a", "lifesized", "bronze", "statue", "instal", "there", "for", "libs", " ", "medium", "to", "worship"]
(c20-10 / say-01
        :ARG0 (c20-15 / i)
        :ARG1 (c20-11 / hear-01
                      :ARG0 c20-15
                      :ARG1 (c20-0 / install-01
                                   :ARG0 (c20-2 / person
                                                :name (c20-14 / name
                                                              :op1 "Obama"))
                                   :ARG1 (c20-7 / statue
                                                :mod (c20-16 / bronze)
                                                :ARG1-of (c20-6 / save-02
                                                                :ARG2 (c20-12 / life)))
                                   :ARG2 (c20-5 / there)
                                   :purpose (c20-8 / worship-01
                                                   :ARG0 (c20-13 / media
                                                                 :ARG1-of (c20-9 / liberal-02))
                                                   :ARG1 c20-7)))
        :ARG2 (c20-1 / person
                     :name (c20-3 / name
                                  :op1 "morgansparhawk"))
        :mod (c20-4 / heck
                    :mode expressive))

# ::snt good oneI like the trim  you used the  gold standardthink what Trump will do to the insidelol changes 4 life
# ::tokens ["good", "oneI", "like", "the", "trim", " ", "you", "used", "the", " ", "gold", "standardthink", "what", "Trump", "will", "do", "to", "the", "insidelol", "changes", "4", "life"]
# ::lemmas ["good", "onei", "like", "the", "trim", " ", "you", "use", "the", " ", "gold", "standardthink", "what", "Trump", "will", "do", "to", "the", "insidelol", "change", "4", "life"]
(c21-11 / multi-sentence
        :snt1 (c21-13 / good-02
                      :ARG1 (c21-0 / one))
        :snt2 (c21-12 / like-01
                      :ARG0 (c21-14 / i)
                      :ARG1 (c21-7 / trim-02
                                   :ARG1-of (c21-4 / use-01
                                                   :ARG0 (c21-17 / you)
                                                   :ARG2 (c21-10 / standard
                                                                 :mod (c21-5 / gold)))))
        :snt3 (c21-15 / think-01
                      :ARG0 c21-17
                      :mode imperative)
        :ARG1 (c21-9 / thing
                     :ARG1-of (c21-2 / do-02
                                     :ARG0 (c21-3 / person
                                                  :name (c21-16 / name
                                                                :op1 "Trump"))
                                     :ARG2 (c21-6 / change-01
                                                  :ARG1 (c21-8 / life
                                                               :quant 4)
                                                  :ARG2 (c21-1 / insidelol)))))

# ::snt Obamass
# ::tokens ["Obamass"]
# ::lemmas ["obamass"]
(c22-0 / obamass)

# ::snt Yeah Trump can put on the White House lawn
# ::tokens ["Yeah", "Trump", "can", "put", "on", "the", "White", "House", "lawn"]
# ::lemmas ["yeah", "Trump", "can", "put", "on", "the", "White", "House", "lawn"]
(c23-2 / possible-01
       :ARG1 (c23-1 / put-01
                    :ARG0 (c23-0 / person
                                 :name (c23-6 / name
                                              :op1 "Trump"))
                    :ARG2 (c23-4 / lawn
                                 :poss (c23-5 / government-organization
                                              :name (c23-3 / name
                                                           :op1 "White"
                                                           :op2 "House")))))

# ::snt They should put a gas lantern in its hand  Here in the south we call that a lawn jockey
# ::tokens ["They", "should", "put", "a", "gas", "lantern", "in", "its", "hand", " ", "Here", "in", "the", "south", "we", "call", "that", "a", "lawn", "jockey"]
# ::lemmas ["they", "should", "put", "a", "gas", "lantern", "in", "its", "hand", " ", "here", "in", "the", "south", "we", "call", "that", "a", "lawn", "jockey"]
(c24-9 / multi-sentence
       :snt1 (c24-0 / recommend-01
                    :ARG1 (c24-2 / put-01
                                 :ARG0 (c24-5 / they)
                                 :ARG1 (c24-10 / lantern
                                               :mod (c24-12 / gas))
                                 :ARG2 (c24-11 / hand)))
       :snt2 (c24-3 / call-01
                    :ARG0 (c24-6 / we)
                    :ARG1 (c24-13 / that)
                    :ARG2 (c24-1 / jockey
                                 :purpose (c24-7 / lawn))
                    :location (c24-4 / here
                                     :location (c24-8 / south))))

# ::snt  Lol
# ::tokens [" ", "Lol"]
# ::lemmas [" ", "Lol"]
(c25-2 / laugh-01
       :ARG0 (c25-1 / i)
       :manner (c25-0 / loud)
       :mode expressive)

# ::snt gcain63 Cool I bet Trump sells Obamas statue at his first yardsale
# ::tokens ["gcain63", "Cool", "I", "bet", "Trump", "sells", "Obamas", "statue", "at", "his", "first", "yardsale"]
# ::lemmas ["gcain63", "cool", "i", "bet", "Trump", "sell", "Obamas", "statue", "at", "his", "first", "yardsale"]
(c26-9 / say-01
       :ARG0 (c26-11 / i)
       :ARG1 (c26-12 / bet-01
                     :ARG0 c26-11
                     :ARG2 (c26-8 / sell-01
                                  :ARG0 (c26-4 / person
                                               :name (c26-10 / name
                                                             :op1 "Trump"))
                                  :ARG1 (c26-7 / statue
                                               :poss (c26-2 / person
                                                            :name (c26-5 / name
                                                                         :op1 "Obama")))
                                  :location (c26-13 / yardale
                                                    :poss c26-4
                                                    :ord (c26-0 / ordinal-entity
                                                                :value 1))))
       :ARG2 (c26-1 / person
                    :name (c26-3 / name
                                 :op1 "Ggcain63")
                    :ARG1-of (c26-6 / cool-04)))

# ::snt Looks like the military will have a new prop for target practice What a narcissist POS
# ::tokens ["Looks", "like", "the", "military", "will", "have", "a", "new", "prop", "for", "target", "practice", "What", "a", "narcissist", "POS"]
# ::lemmas ["look", "like", "the", "military", "will", "have", "a", "new", "prop", "for", "target", "practice", "what", "a", "narcissist", "pos"]
(c27-7 / look-02
       :ARG1 (c27-6 / have-03
                    :ARG0 (c27-5 / military)
                    :ARG1 (c27-1 / prop
                                 :ARG1-of (c27-8 / new-01)
                                 :purpose (c27-0 / practice-01
                                                 :ARG1 (c27-3 / target))))
       :mod (c27-2 / narcissist)
       :degree (c27-4 / amr-unknown))

# ::snt Trump will cancel it BO was a fake all of his orders mean nothing
# ::tokens ["Trump", "will", "cancel", "it", "BO", "was", "a", "fake", "all", "of", "his", "orders", "mean", "nothing"]
# ::lemmas ["Trump", "will", "cancel", "it", "BO", "be", "a", "fake", "all", "of", "his", "order", "mean", "nothing"]
(c28-8 / multi-sentence
       :snt1 (c28-2 / cancel-01
                    :ARG0 (c28-3 / person
                                 :name (c28-10 / name
                                               :op1 "Trump"))
                    :ARG1 (c28-11 / it))
       :snt2 (c28-7 / fake-02
                    :ARG1 (c28-5 / thing
                                 :ARG1-of (c28-0 / order-01
                                                 :ARG0 (c28-9 / he))
                                 :mod (c28-6 / all)
                                 :ARG1-of (c28-1 / mean-01
                                                 :ARG2 (c28-4 / nothing)))))

# ::snt NLTCNY Nope Obama ordered it put at WH entrance so everyone coming and going sees it TrumpsArmy TrumpStrong tcot ccot
# ::tokens ["NLTCNY", "Nope", "Obama", "ordered", "it", "put", "at", "WH", "entrance", "so", "everyone", "coming", "and", "going", "sees", "it", "TrumpsArmy", "TrumpStrong", "tcot", "ccot"]
# ::lemmas ["NLTCNY", "Nope", "Obama", "order", "it", "put", "at", "WH", "entrance", "so", "everyone", "come", "and", "going", "see", "it", "TrumpsArmy", "TrumpStrong", "tcot", "ccot"]
(c29-14 / multi-sentence
        :snt1 (c29-13 / have-polarity-91
                      :ARG1 (c29-0 / order-01
                                   :ARG0 (c29-4 / person
                                                :name (c29-17 / name
                                                              :op1 "Obama"))
                                   :ARG1 (c29-1 / put-01
                                                :ARG1 (c29-18 / it)
                                                :ARG2 (c29-5 / entrance
                                                             :poss (c29-15 / government-organization
                                                                           :name (c29-6 / name
                                                                                        :op1 "White"
                                                                                        :op2 "House"))))
                                   :ARG0-of (c29-7 / cause-01
                                                   :ARG1 (c29-12 / see-01
                                                                 :ARG0 (c29-11 / everyone
                                                                               :ARG0-of (c29-16 / come-01)
                                                                               :ARG0-of (c29-8 / go-02))
                                                                 :ARG1 c29-18)))
                      :ARG2 -)
        :snt2 (c29-2 / event
                     :name (c29-3 / name
                                  :op1 "Tcot"
                                  :op2 "Strong")
                     :mod (c29-9 / military
                                 :name (c29-10 / name
                                               :op1 "TrumpsArmy"))))

# ::snt Pretty sure they have a basement or a tool shed on white house property It should look great there
# ::tokens ["Pretty", "sure", "they", "have", "a", "basement", "or", "a", "tool", "shed", "on", "white", "house", "property", "It", "should", "look", "great", "there"]
# ::lemmas ["pretty", "sure", "they", "have", "a", "basement", "or", "a", "tool", "shed", "on", "white", "house", "property", "it", "should", "look", "great", "there"]
(c30-11 / multi-sentence
        :snt1 (c30-9 / sure-02
                     :ARG0 (c30-14 / i)
                     :ARG1 (c30-10 / have-03
                                   :ARG0 (c30-6 / they)
                                   :ARG1 (c30-0 / or
                                                :op1 (c30-15 / basement)
                                                :op2 (c30-8 / shed
                                                            :purpose (c30-3 / tool)))
                                   :location (c30-4 / property
                                                    :mod (c30-5 / house
                                                                :ARG1-of (c30-7 / white-03))))
                     :degree (c30-1 / pretty))
        :snt2 (c30-12 / look-02
                      :ARG0 (c30-2 / it)
                      :ARG1 (c30-13 / great)
                      :location c30-4))

# ::snt I cant stand Obama but please dont use the n word  I know I cant tell u what to say but plz no n word
# ::tokens ["I", "ca", "nt", "stand", "Obama", "but", "please", "do", "nt", "use", "the", "n", "word", " ", "I", "know", "I", "ca", "nt", "tell", "u", "what", "to", "say", "but", "plz", "no", "n", "word"]
# ::lemmas ["i", "can", "not", "stand", "Obama", "but", "please", "do", "not", "use", "the", "n", "word", " ", "i", "know", "i", "can", "not", "tell", "u", "what", "to", "say", "but", "plz", "no", "n", "word"]
(c31-2 / contrast-01
       :ARG1 (c31-3 / possible-01
                    :ARG1 (c31-8 / stand-03
                                 :ARG0 (c31-12 / i)
                                 :ARG1 (c31-1 / person
                                              :name (c31-11 / name
                                                            :op1 "Obama")))
                    :polarity -)
       :ARG2 (c31-4 / use-01
                    :ARG0 (c31-14 / you)
                    :ARG1 (c31-6 / word)
                    :ARG1-of (c31-9 / cause-01
                                    :ARG0 (c31-10 / know-01
                                                  :ARG0 c31-12
                                                  :ARG1 (c31-0 / possible-01
                                                               :ARG1 (c31-5 / tell-01
                                                                            :ARG0 c31-12
                                                                            :ARG1 (c31-13 / thing
                                                                                          :ARG1-of (c31-7 / say-01
                                                                                                          :ARG0 c31-14))
                                                                            :ARG2 c31-14)
                                                               :polarity -)))
                    :mode imperative
                    :polite +))

# ::snt Obama Removed Churchill we can remove OBAMA What is Bronze selling for these days
# ::tokens ["Obama", "Removed", "Churchill", "we", "can", "remove", "OBAMA", "What", "is", "Bronze", "selling", "for", "these", "days"]
# ::lemmas ["Obama", "Removed", "Churchill", "we", "can", "remove", "OBAMA", "what", "be", "Bronze", "sell", "for", "these", "days"]
(c32-11 / multi-sentence
        :snt1 (c32-1 / remove-01
                     :ARG0 (c32-5 / person
                                  :name (c32-13 / name
                                                :op1 "Obama"))
                     :ARG1 (c32-2 / person
                                  :name (c32-6 / name
                                               :op1 "Churchill")))
        :snt2 (c32-0 / possible-01
                     :ARG1 (c32-9 / remove-01
                                  :ARG0 (c32-8 / we)
                                  :ARG1 c32-5))
        :snt3 (c32-10 / sell-01
                      :ARG0 (c32-12 / person
                                    :name (c32-3 / name
                                                 :op1 "Bronze"))
                      :time (c32-4 / day
                                   :mod (c32-7 / this))))

# ::snt diva
# ::tokens ["diva"]
# ::lemmas ["diva"]
(c33-0 / person
       :name (c33-1 / name
                    :op1 "diva"))

# ::snt coat hanger
# ::tokens ["coat", "hanger"]
# ::lemmas ["coat", "hanger"]
(c34-1 / hanger
       :purpose (c34-0 / coat))

# ::snt Trump will melt it down for bullets  Or have it dressed as a clown  Fang
# ::tokens ["Trump", "will", "melt", "it", "down", "for", "bullets", " ", "Or", "have", "it", "dressed", "as", "a", "clown", " ", "Fang"]
# ::lemmas ["Trump", "will", "melt", "it", "down", "for", "bullet", " ", "or", "have", "it", "dress", "as", "a", "clown", " ", "Fang"]
(c35-0 / or
       :op1 (c35-6 / melt-01
                   :ARG0 (c35-2 / person
                                :name (c35-8 / name
                                             :op1 "Trump"))
                   :ARG1 (c35-9 / it)
                   :purpose (c35-10 / bullet))
       :op2 (c35-7 / have-04
                   :ARG0 c35-2
                   :ARG1 (c35-1 / dress-01
                                :ARG1 c35-9
                                :ARG2 (c35-3 / clown
                                             :domain c35-9)))
       :ARG1-of (c35-5 / say-01
                       :ARG2 c35-2
                       :name (c35-4 / name
                                    :op1 "Fang")))

# ::snt Trump should send it back to Kenya where it belongs  Obamas been a stain in the WhiteHouse that will be scrubbed out Friday
# ::tokens ["Trump", "should", "send", "it", "back", "to", "Kenya", "where", "it", "belongs", " ", "Obamas", "been", "a", "stain", "in", "the", "WhiteHouse", "that", "will", "be", "scrubbed", "out", "Friday"]
# ::lemmas ["Trump", "should", "send", "it", "back", "to", "Kenya", "where", "it", "belong", " ", "Obamas", "be", "a", "stain", "in", "the", "WhiteHouse", "that", "will", "be", "scrub", "out", "Friday"]
(c36-13 / multi-sentence
        :snt1 (c36-0 / recommend-01
                     :ARG1 (c36-12 / send-01
                                   :ARG0 (c36-5 / person
                                                :name (c36-15 / name
                                                              :op1 "Trump"))
                                   :ARG1 (c36-16 / it)
                                   :ARG2 (c36-6 / country
                                                :name (c36-7 / name
                                                             :op1 "Kenya")
                                                :ARG2-of (c36-17 / belong-01
                                                                 :ARG0 c36-16))
                                   :direction (c36-1 / back)))
        :snt2 (c36-10 / stain-01
                      :ARG1 (c36-2 / person
                                   :name (c36-3 / name
                                                :op1 "Obama"))
                      :location (c36-14 / government-organization
                                        :name (c36-4 / name
                                                     :op1 "WhiteHouse"))
                      :ARG1-of (c36-9 / scrub-out-03
                                      :time (c36-8 / date-entity
                                                   :weekday (c36-11 / friday)))))

# ::snt Maybe Trump will have it moved to the basement
# ::tokens ["Maybe", "Trump", "will", "have", "it", "moved", "to", "the", "basement"]
# ::lemmas ["maybe", "Trump", "will", "have", "it", "move", "to", "the", "basement"]
(c37-1 / possible-01
       :ARG1 (c37-3 / have-04
                    :ARG0 (c37-0 / person
                                 :name (c37-4 / name
                                              :op1 "Trump"))
                    :ARG1 (c37-2 / move-01
                                 :ARG1 (c37-5 / it)
                                 :ARG2 (c37-6 / basement))))

# ::snt I hope it doesnt clog the drain when the swamp is drained
# ::tokens ["I", "hope", "it", "does", "nt", "clog", "the", "drain", "when", "the", "swamp", "is", "drained"]
# ::lemmas ["i", "hope", "it", "do", "not", "clog", "the", "drain", "when", "the", "swamp", "be", "drain"]
(c38-4 / hope-01
       :ARG0 (c38-5 / i)
       :ARG1 (c38-1 / clog-01
                    :ARG0 (c38-0 / drain-01)
                    :time (c38-2 / drain-01
                                 :ARG1 (c38-3 / swamp))
                    :polarity -))

# ::snt Throw it in the trash dumpster or send it to Cuba
# ::tokens ["Throw", "it", "in", "the", "trash", "dumpster", "or", "send", "it", "to", "Cuba"]
# ::lemmas ["throw", "it", "in", "the", "trash", "dumpster", "or", "send", "it", "to", "Cuba"]
(c39-0 / or
       :op1 (c39-3 / throw-01
                   :ARG0 (c39-8 / you)
                   :ARG1 (c39-6 / it)
                   :ARG2 (c39-1 / dumpster
                                :mod (c39-7 / trash))
                   :mode imperative)
       :op2 (c39-4 / send-01
                   :ARG0 c39-8
                   :ARG1 c39-6
                   :ARG2 (c39-2 / country
                                :name (c39-5 / name
                                             :op1 "Cuba"))
                   :mode imperative))

# ::snt what did he do to deserve that by now everyone knows hes antiUS hope it can be stopped too hateful to be remembered
# ::tokens ["what", "did", "he", "do", "to", "deserve", "that", "by", "now", "everyone", "knows", "he", "s", "antiUS", "hope", "it", "can", "be", "stopped", "too", "hateful", "to", "be", "remembered"]
# ::lemmas ["what", "do", "he", "do", "to", "deserve", "that", "by", "now", "everyone", "know", "he", "s", "antiUS", "hope", "it", "can", "be", "stop", "too", "hateful", "to", "be", "remember"]
(c40-2 / do-02
       :ARG0 (c40-12 / he)
       :ARG1 (c40-9 / amr-unknown)
       :purpose (c40-10 / deserve-01
                        :ARG0 c40-12
                        :ARG1 (c40-7 / that))
       :ARG1-of (c40-11 / know-01
                        :ARG0 (c40-3 / everyone)
                        :time (c40-16 / by
                                      :op1 (c40-14 / now)))
       :purpose (c40-5 / hope-01
                       :ARG0 c40-12
                       :ARG1 (c40-4 / possible-01
                                    :ARG1 (c40-13 / stop-01
                                                  :ARG1 (c40-15 / it)
                                                  :ARG1-of (c40-6 / have-degree-91
                                                                  :ARG2 (c40-0 / hate-01
                                                                               :ARG0 c40-13)
                                                                  :ARG3 (c40-8 / too)
                                                                  :ARG6 (c40-1 / remember-01
                                                                               :ARG1 c40-15))))))

# ::snt Trump can use that as boat anchor for one of his yachts
# ::tokens ["Trump", "can", "use", "that", "as", "boat", "anchor", "for", "one", "of", "his", "yachts"]
# ::lemmas ["Trump", "can", "use", "that", "as", "boat", "anchor", "for", "one", "of", "his", "yacht"]
(c41-2 / possible-01
       :ARG1 (c41-3 / use-01
                    :ARG0 (c41-0 / person
                                 :name (c41-6 / name
                                              :op1 "Trump"))
                    :ARG1 (c41-4 / that)
                    :ARG2 (c41-5 / anchor-01
                                 :ARG1 (c41-8 / boat)
                                 :ARG2 (c41-9 / yacht
                                              :ARG1-of (c41-7 / include-91
                                                              :ARG2 (c41-1 / yacht
                                                                           :poss c41-0))
                                              :quant 1))))

# ::snt Thats ok we will just melt it down and use the metal for something important
# ::tokens ["That", "s", "ok", "we", "will", "just", "melt", "it", "down", "and", "use", "the", "metal", "for", "something", "important"]
# ::lemmas ["that", "s", "ok", "we", "will", "just", "melt", "it", "down", "and", "use", "the", "metal", "for", "something", "important"]
(c42-0 / okay-04
       :ARG1 (c42-6 / and
                    :op1 (c42-8 / melt-01
                                :ARG0 (c42-5 / we)
                                :ARG1 (c42-9 / it)
                                :mod (c42-10 / just)
                                :direction (c42-3 / down))
                    :op2 (c42-4 / use-01
                                :ARG0 c42-5
                                :ARG1 (c42-2 / metal)
                                :ARG2 (c42-7 / something
                                             :ARG1-of (c42-1 / important-01)))))

# ::snt that should be interesting heres a preview of it
# ::tokens ["that", "should", "be", "interesting", "heres", "a", "preview", "of", "it"]
# ::lemmas ["that", "should", "be", "interesting", "here", "a", "preview", "of", "it"]
(c43-3 / and
       :op1 (c43-4 / interest-01
                   :ARG0 (c43-2 / that))
       :op2 (c43-1 / preview-01
                   :ARG1 (c43-0 / it)))

# ::snt Installed in DC  Sewer with his fellow rats
# ::tokens ["Installed", "in", "DC", " ", "Sewer", "with", "his", "fellow", "rats"]
# ::lemmas ["instal", "in", "DC", " ", "Sewer", "with", "his", "fellow", "rat"]
(c44-7 / be-located-at-91
       :ARG1 (c44-4 / and
                    :op1 (c44-1 / person
                                :name (c44-6 / name
                                             :op1 "Sewer"))
                    :op2 (c44-0 / rat
                                :mod (c44-5 / fellow)
                                :poss c44-1))
       :ARG2 (c44-2 / city
                    :name (c44-3 / name
                                 :op1 "DC")))

# ::snt WTF Trump can send that to Kenya
# ::tokens ["WTF", "Trump", "can", "send", "that", "to", "Kenya"]
# ::lemmas ["WTF", "Trump", "can", "send", "that", "to", "Kenya"]
(c45-1 / possible-01
       :ARG1 (c45-6 / send-01
                    :ARG0 (c45-0 / person
                                 :name (c45-7 / name
                                              :op1 "Trump"))
                    :ARG1 (c45-4 / that)
                    :ARG2 (c45-2 / country
                                 :name (c45-3 / name
                                              :op1 "Kenya")))
       :mod (c45-5 / fuck
                   :mode expressive))

# ::snt If it cant be removed then put it in the public bathroom
# ::tokens ["If", "it", "ca", "nt", "be", "removed", "then", "put", "it", "in", "the", "public", "bathroom"]
# ::lemmas ["if", "it", "can", "not", "be", "remove", "then", "put", "it", "in", "the", "public", "bathroom"]
(c46-3 / put-01
       :ARG0 (c46-6 / you)
       :ARG1 (c46-4 / it)
       :ARG2 (c46-5 / bathroom
                    :ARG1-of (c46-1 / public-02))
       :condition (c46-0 / possible-01
                         :ARG1 (c46-2 / remove-01
                                      :ARG1 c46-4)
                         :polarity -))

# ::snt NO WAY
# ::tokens ["NO", "WAY"]
# ::lemmas ["no", "way"]
(c47-0 / way
       :polarity -)

# ::snt what a giant egomaniac this man is to leave himself in the Whitehouse
# ::tokens ["what", "a", "giant", "egomaniac", "this", "man", "is", "to", "leave", "himself", "in", "the", "Whitehouse"]
# ::lemmas ["what", "a", "giant", "egomaniac", "this", "man", "be", "to", "leave", "himself", "in", "the", "Whitehouse"]
(c48-1 / egomaniac
       :degree (c48-3 / so)
       :domain (c48-4 / man
                      :mod (c48-2 / this))
       :mod (c48-6 / giant)
       :ARG0-of (c48-5 / leave-12
                       :ARG1 c48-4
                       :ARG2 (c48-7 / be-located-at-91
                                    :ARG1 c48-4
                                    :ARG2 (c48-0 / building
                                                 :name (c48-8 / name
                                                              :op1 "Whitehouse")))))

# ::snt You used a Photoshop of a fake Oval Office  idiots fakenews
# ::tokens ["You", "used", "a", "Photoshop", "of", "a", "fake", "Oval", "Office", " ", "idiots", "fakenews"]
# ::lemmas ["you", "use", "a", "Photoshop", "of", "a", "fake", "Oval", "Office", " ", "idiot", "fakenew"]
(c49-6 / multi-sentence
       :snt1 (c49-3 / use-01
                    :ARG0 (c49-9 / you)
                    :ARG1 (c49-2 / product
                                 :name (c49-7 / name
                                              :op1 "Photoshop"))
                    :ARG2 (c49-0 / office
                                 :name (c49-4 / name
                                              :op1 "Oval"
                                              :op2 "Office")
                                 :ARG1-of (c49-5 / fake-02)))
       :snt2 (c49-1 / fakenews
                    :domain (c49-8 / idiot)))

# ::snt hate him
# ::tokens ["hate", "him"]
# ::lemmas ["hate", "him"]
(c50-1 / hate-01
       :ARG1 (c50-0 / he))
