# ::snt Lmao this is fake news
# ::tokens ["Lmao", "this", "is", "fake", "news"]
# ::lemmas ["Lmao", "this", "be", "fake", "news"]
(c1-2 / fake-02
      :ARG1 (c1-4 / news
                  :mod (c1-0 / this))
      :mod (c1-3 / laugh-01
                 :ARG0 (c1-5 / i)
                 :manner (c1-1 / loud)
                 :mode expressive))

# ::snt if truethat sucksTrump sure can dish it out but he cant take it You know what he saidbecause he wonwhateverI still think he was putin
# ::tokens ["if", "truethat", "sucksTrump", "sure", "can", "dish", "it", "out", "but", "he", "ca", "nt", "take", "it", "You", "know", "what", "he", "saidbecause", "he", "wonwhateverI", "still", "think", "he", "was", "putin"]
# ::lemmas ["if", "truethat", "suckstrump", "sure", "can", "dish", "it", "out", "but", "he", "can", "not", "take", "it", "you", "know", "what", "he", "saidbecause", "he", "wonwhateverI", "still", "think", "he", "be", "putin"]
(c2-14 / multi-sentence
       :snt1 (c2-13 / have-condition-91
                    :ARG1 (c2-5 / contrast-01
                                :ARG1 (c2-6 / possible-01
                                            :ARG1 (c2-4 / dish-out-02
                                                        :ARG0 (c2-1 / person
                                                                    :name (c2-16 / name
                                                                                 :op1 "Trump"))
                                                        :ARG1 (c2-17 / it))
                                            :ARG1-of (c2-12 / sure-02))
                                :ARG2 (c2-0 / possible-01
                                            :ARG1 (c2-7 / take-02
                                                        :ARG0 c2-1
                                                        :ARG1 c2-17)
                                            :polarity -))
                    :ARG2 (c2-9 / suck-03
                                :ARG0 c2-1
                                :name c2-16
                                :op1 " truethat"))
       :snt2 (c2-15 / cause-01
                    :ARG0 (c2-8 / win-01
                                :ARG0 c2-1
                                :ARG1 (c2-3 / whatever))
                    :ARG1 (c2-18 / think-01
                                 :ARG0 (c2-2 / i)
                                 :ARG1 (c2-11 / put-in-06
                                              :ARG0 c2-1)
                                 :mod (c2-10 / still))))

# ::snt Is this true  Reliable
# ::tokens ["Is", "this", "true", " ", "Reliable"]
# ::lemmas ["be", "this", "true", " ", "reliable"]
(c3-2 / true-01
      :polarity (c3-0 / amr-unknown)
      :ARG1 (c3-1 / this))

# ::snt Oh well  I was kinda hoping theyd shoot him so Disney would stop making any more Pirates of the Caribbean movies
# ::tokens ["Oh", "well", " ", "I", "was", "kinda", "hoping", "they", "d", "shoot", "him", "so", "Disney", "would", "stop", "making", "any", "more", "Pirates", "of", "the", "Caribbean", "movies"]
# ::lemmas ["oh", "well", " ", "i", "be", "kinda", "hope", "they", "d", "shoot", "him", "so", "Disney", "would", "stop", "make", "any", "more", "Pirates", "of", "the", "Caribbean", "movie"]
(c4-9 / hope-01
      :ARG0 (c4-13 / i)
      :ARG1 (c4-8 / shoot-02
                  :ARG0 (c4-5 / they)
                  :ARG1 (c4-4 / he)
                  :purpose (c4-6 / stop-01
                                 :ARG0 (c4-2 / company
                                             :name (c4-12 / name
                                                          :op1 "Disney"))
                                 :ARG1 (c4-10 / make-01
                                              :ARG0 c4-2
                                              :ARG1 (c4-1 / movie
                                                          :name (c4-3 / name
                                                                      :op1 "Pirates"
                                                                      :op2 "of"
                                                                      :op3 "the"
                                                                      :op4 "Caribbean")
                                                          :mod (c4-14 / more
                                                                      :mod (c4-7 / any))))))
      :degree (c4-11 / kind-of)
      :mod (c4-0 / oh-well
                 :mode expressive))

# ::snt True or fake time will tellI found it but didnt write itit seems plausible but these days who knows
# ::tokens ["True", "or", "fake", "time", "will", "tellI", "found", "it", "but", "did", "nt", "write", "itit", "seems", "plausible", "but", "these", "days", "who", "knows"]
# ::lemmas ["true", "or", "fake", "time", "will", "tellI", "find", "it", "but", "do", "not", "write", "itit", "seem", "plausible", "but", "these", "days", "who", "know"]
(c5-14 / multi-sentence
       :snt1 (c5-7 / tell-01
                   :ARG0 (c5-0 / or
                               :op1 (c5-18 / time
                                           :ARG1-of (c5-10 / true-01))
                               :op2 (c5-19 / time
                                           :ARG1-of (c5-11 / fake-02))))
       :snt2 (c5-5 / contrast-01
                   :ARG1 (c5-2 / find-01
                               :ARG0 (c5-17 / i)
                               :ARG1 (c5-1 / it))
                   :ARG2 (c5-8 / write-01
                               :ARG0 c5-17
                               :ARG1 c5-1
                               :polarity -))
       :snt3 (c5-13 / seem-01
                    :ARG1 (c5-6 / plausible))
       :snt4 (c5-15 / contrast-01
                    :ARG1 (c5-16 / know-01
                                 :ARG0 (c5-9 / amr-unknown)
                                 :time (c5-4 / day
                                             :mod (c5-3 / this)))
                    :ARG2 (c5-12 / know-01
                                 :ARG0 c5-9)))

# ::snt What  Seriously  Holy crap
# ::tokens ["What", " ", "Seriously", " ", "Holy", "crap"]
# ::lemmas ["what", " ", "Seriously", " ", "Holy", "crap"]
(c6-0 / crap-01
      :mod (c6-2 / holy)
      :ARG2-of (c6-1 / serious-01)
      :mode expressive)

# ::snt  gullible fool
# ::tokens [" ", "gullible", "fool"]
# ::lemmas [" ", "gullible", "fool"]
(c7-1 / fool
      :ARG1-of (c7-0 / gullible-00))

# ::snt By the way to answer the question it was John Wilkes Booth A confederate democrat incensed that POUTS Lincoln was freeing the slaves
# ::tokens ["By", "the", "way", "to", "answer", "the", "question", "it", "was", "John", "Wilkes", "Booth", "A", "confederate", "democrat", "incensed", "that", "POUTS", "Lincoln", "was", "freeing", "the", "slaves"]
# ::lemmas ["by", "the", "way", "to", "answer", "the", "question", "it", "be", "John", "Wilkes", "Booth", "A", "confederate", "democrat", "incense", "that", "POUTS", "Lincoln", "be", "free", "the", "slave"]
(c8-11 / multi-sentence
       :snt1 (c8-7 / answer-01
                   :ARG1 (c8-8 / question-01)
                   :ARG2 (c8-4 / person
                               :name (c8-12 / name
                                            :op1 "John"
                                            :op2 "Wilkes"
                                            :op3 "Booth")))
       :snt2 (c8-13 / incense-01
                    :ARG0 (c8-9 / free-01
                                :ARG0 (c8-1 / person
                                            :name (c8-5 / name
                                                        :op1 "Poulter"
                                                        :op2 "Lincoln"))
                                :ARG1 (c8-10 / slave))
                    :ARG1 (c8-3 / democrat
                                :mod (c8-6 / confederate)))
       :snt3 c8-7
       :ARG1 c8-8
       :ARG2 (c8-0 / person
                   :name (c8-2 / name
                               :op1 "John"
                               :op2 "Wilkes"
                               :op3 "Booth"))
       :mod (c8-14 / by-the-way))

# ::snt fake news people
# ::tokens ["fake", "news", "people"]
# ::lemmas ["fake", "news", "people"]
(c9-0 / person
      :mod (c9-1 / news
                 :ARG1-of (c9-2 / fake-02)))

# ::snt If that was the case  they would have to take the President as well  He threatened to shoot people on 5th Avenue
# ::tokens ["If", "that", "was", "the", "case", " ", "they", "would", "have", "to", "take", "the", "President", "as", "well", " ", "He", "threatened", "to", "shoot", "people", "on", "5th", "Avenue"]
# ::lemmas ["if", "that", "be", "the", "case", " ", "they", "would", "have", "to", "take", "the", "President", "as", "well", " ", "he", "threaten", "to", "shoot", "people", "on", "5th", "Avenue"]
(c10-10 / multi-sentence
        :snt1 (c10-0 / obligate-01
                     :ARG1 (c10-6 / they)
                     :ARG2 (c10-13 / take-01
                                   :ARG0 c10-6
                                   :ARG1 (c10-4 / person
                                                :ARG0-of (c10-11 / have-org-role-91
                                                                 :ARG2 (c10-2 / president)))
                                   :mod (c10-7 / as-well))
                     :condition (c10-8 / that))
        :snt2 (c10-14 / threaten-01
                      :ARG0 (c10-5 / he)
                      :ARG1 (c10-9 / shoot-02
                                   :ARG0 c10-5
                                   :ARG1 (c10-1 / person)
                                   :location (c10-3 / road
                                                    :name (c10-12 / name
                                                                  :op1 "5th"
                                                                  :op2 "Avenue")))))

# ::snt Good
# ::tokens ["Good"]
# ::lemmas ["good"]
(c11-0 / good-02)

# ::snt God bless America and the Secret Service Lets see the next Hollywood thug threaten the President
# ::tokens ["God", "bless", "America", "and", "the", "Secret", "Service", "Lets", "see", "the", "next", "Hollywood", "thug", "threaten", "the", "President"]
# ::lemmas ["God", "bless", "America", "and", "the", "Secret", "Service", "Lets", "see", "the", "next", "Hollywood", "thug", "threaten", "the", "President"]
(c12-14 / multi-sentence
        :snt1 (c12-18 / bless-01
                      :ARG0 (c12-4 / person
                                   :name (c12-17 / name
                                                 :op1 "God"))
                      :ARG1 (c12-11 / and
                                    :op1 (c12-5 / country
                                                :name (c12-6 / name
                                                             :op1 "America"))
                                    :op2 (c12-16 / government-organization
                                                 :name (c12-2 / name
                                                              :op1 "Secret"
                                                              :op2 "Service"))))
        :snt2 (c12-13 / see-01
                      :ARG0 (c12-9 / we)
                      :ARG1 (c12-8 / threaten-01
                                   :ARG0 (c12-7 / thug
                                                :mod (c12-3 / next)
                                                :mod (c12-10 / market-sector
                                                             :name (c12-12 / name
                                                                           :op1 "Hollywood")))
                                   :ARG2 (c12-1 / person
                                                :ARG0-of (c12-15 / have-org-role-91
                                                                 :ARG2 (c12-0 / president))))
                      :mode imperative))

# ::snt Not sure this is accurate
# ::tokens ["Not", "sure", "this", "is", "accurate"]
# ::lemmas ["not", "sure", "this", "be", "accurate"]
(c13-3 / sure-02
       :ARG0 (c13-1 / i)
       :ARG1 (c13-0 / accurate
                    :domain (c13-2 / this))
       :polarity -)

# ::snt Unfortunately not true Yet
# ::tokens ["Unfortunately", "not", "true", "Yet"]
# ::lemmas ["unfortunately", "not", "true", "yet"]
(c14-1 / true-01
       :time (c14-2 / yet)
       :ARG2-of (c14-0 / fortunate-01
                       :polarity -)
       :polarity -)

# ::snt And Ted Nugent hung himself today whataday
# ::tokens ["And", "Ted", "Nugent", "hung", "himself", "today", "whataday"]
# ::lemmas ["and", "Ted", "Nugent", "hang", "himself", "today", "whataday"]
(c15-4 / and
       :op2 (c15-5 / hang-01
                   :ARG0 (c15-0 / person
                                :name (c15-6 / name
                                             :op1 "Ted"
                                             :op2 "Nugent")
                                :ARG1-of c15-5)
                   :time (c15-3 / today)
                   :ARG1-of (c15-1 / cause-01
                                   :ARG0 (c15-2 / amr-unknown))))

# ::snt yup all made up
# ::tokens ["yup", "all", "made", "up"]
# ::lemmas ["yup", "all", "make", "up"]
(c16-2 / make-up-10
       :ARG1 (c16-0 / all)
       :mod (c16-1 / yup))

# ::snt Good Hope he Grets so scared Wonder what will they do to him
# ::tokens ["Good", "Hope", "he", "Grets", "so", "scared", "Wonder", "what", "will", "they", "do", "to", "him"]
# ::lemmas ["good", "Hope", "he", "Grets", "so", "scare", "Wonder", "what", "will", "they", "do", "to", "him"]
(c17-7 / hope-01
       :ARG1 (c17-5 / and
                    :op1 (c17-6 / scare-01
                                :ARG0 (c17-1 / he)
                                :degree (c17-4 / so))
                    :op2 (c17-3 / Wonder-01
                                :ARG1 (c17-2 / thing
                                             :ARG1-of (c17-0 / do-02
                                                             :ARG0 (c17-9 / they)
                                                             :ARG2 c17-1))))
       :ARG1-of (c17-8 / good-02))

# ::snt Hope so
# ::tokens ["Hope", "so"]
# ::lemmas ["Hope", "so"]
(c18-1 / hope-01
       :mod (c18-0 / so))

# ::snt Good He doesnt deserve special treatment just cuz he makes pirate movies
# ::tokens ["Good", "He", "does", "nt", "deserve", "special", "treatment", "just", "cuz", "he", "makes", "pirate", "movies"]
# ::lemmas ["good", "he", "do", "not", "deserve", "special", "treatment", "just", "cuz", "he", "make", "pirate", "movie"]
(c19-8 / good-02
       :ARG1 (c19-1 / deserve-01
                    :ARG0 (c19-6 / he)
                    :ARG1 (c19-4 / treat-01
                                 :ARG1 c19-6
                                 :ARG1-of (c19-5 / special-02))
                    :ARG1-of (c19-2 / cause-01
                                    :ARG0 (c19-7 / make-01
                                                 :ARG0 c19-6
                                                 :ARG1 (c19-0 / movie
                                                              :mod (c19-3 / pirate)))
                                    :mod (c19-9 / just))
                    :polarity -))

# ::snt GoodKeep him
# ::tokens ["GoodKeep", "him"]
# ::lemmas ["goodkeep", "him"]
(c20-2 / keep-02
       :ARG0 (c20-3 / you)
       :ARG1 (c20-1 / he)
       :ARG1-of (c20-0 / good-02)
       :mode imperative)

# ::snt Serves him right
# ::tokens ["Serves", "him", "right"]
# ::lemmas ["serve", "him", "right"]
(c21-1 / reserve-01
       :ARG1 (c21-0 / right-06
                    :ARG2 (c21-2 / he)))

# ::snt Good
# ::tokens ["Good"]
# ::lemmas ["good"]
(c22-0 / good-02)
