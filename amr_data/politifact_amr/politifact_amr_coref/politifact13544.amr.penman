# ::snt a friend on FB said she checked it and it was true
# ::tokens ["a", "friend", "on", "FB", "said", "she", "checked", "it", "and", "it", "was", "true"]
# ::lemmas ["a", "friend", "on", "FB", "say", "she", "check", "it", "and", "it", "be", "true"]
(c1-6 / say-01
      :ARG0 (c1-1 / person
                  :ARG0-of (c1-7 / have-rel-role-91
                                 :ARG2 (c1-5 / friend))
                  :location (c1-0 / publication
                                  :name (c1-8 / name
                                              :op1 "Facebook")))
      :ARG1 (c1-4 / and
                  :op1 (c1-2 / check-01
                             :ARG0 c1-1
                             :ARG1 (c1-9 / it))
                  :op2 (c1-3 / true-01
                             :ARG1 c1-9)))

# ::snt ok was wondering
# ::tokens ["ok", "was", "wondering"]
# ::lemmas ["ok", "be", "wonder"]
(c2-2 / wonder-01
      :ARG0 (c2-1 / i)
      :ARG1-of (c2-0 / okay-04))

# ::snt democratic voter fraud
# ::tokens ["democratic", "voter", "fraud"]
# ::lemmas ["democratic", "voter", "fraud"]
(c3-0 / defraud-01
      :ARG0 (c3-1 / person
                  :ARG0-of (c3-3 / vote-01)
                  :mod (c3-2 / democracy)))

# ::snt Judge refused to hear case as of 230 EST
# ::tokens ["Judge", "refused", "to", "hear", "case", "as", "of", "230", "EST"]
# ::lemmas ["Judge", "refuse", "to", "hear", "case", "as", "of", "230", "EST"]
(c4-0 / refuse-01
      :ARG0 (c4-2 / person
                  :ARG0-of (c4-7 / have-org-role-91
                                 :ARG3 (c4-8 / judge-01)))
      :ARG1 (c4-4 / hear-01
                  :ARG0 c4-2
                  :ARG1 (c4-3 / case-03))
      :time (c4-6 / as-of
                  :op1 (c4-1 / date-entity
                             :month (c4-5 / EST)
                             :day 230)))

# ::snt Go HillaryClinton Go BecauseDemocracy Recount2016 StolenElection
# ::tokens ["Go", "HillaryClinton", "Go", "BecauseDemocracy", "Recount2016", "StolenElection"]
# ::lemmas ["go", "HillaryClinton", "go", "BecauseDemocracy", "Recount2016", "StolenElection"]
(c5-9 / go-02
      :ARG0 (c5-3 / person
                  :name (c5-8 / name
                              :op1 "HillaryClinton"))
      :ARG1-of (c5-4 / cause-01
                     :ARG0 (c5-0 / recount-01
                                 :ARG0 (c5-1 / political-party
                                             :name (c5-5 / name
                                                         :op1 "Democracy"))
                                 :ARG1 (c5-7 / spoil-01
                                             :ARG1 (c5-6 / elect-01)
                                             :time (c5-2 / date-entity
                                                         :year 2016)))))

# ::snt MSM seems completely disinterested in recount stories That makes them complicit
# ::tokens ["MSM", "seems", "completely", "disinterested", "in", "recount", "stories", "That", "makes", "them", "complicit"]
# ::lemmas ["MSM", "seem", "completely", "disintereste", "in", "recount", "story", "that", "make", "them", "complicit"]
(c6-4 / seem-01
      :ARG1 (c6-8 / interest-01
                  :ARG1 (c6-7 / newspaper
                              :name (c6-2 / name
                                          :op1 "MSM"))
                  :ARG2 (c6-0 / recount-01
                              :ARG0 c6-7
                              :ARG1 (c6-3 / story))
                  :ARG1-of (c6-1 / complete-02)
                  :ARG0-of (c6-5 / make-02
                                 :ARG1 (c6-6 / complicit
                                             :domain c6-7))
                  :polarity -))

# ::snt Once fraud was discovered that should have caused forfeiture of winner results Hillary should win by default
# ::tokens ["Once", "fraud", "was", "discovered", "that", "should", "have", "caused", "forfeiture", "of", "winner", "results", "Hillary", "should", "win", "by", "default"]
# ::lemmas ["once", "fraud", "be", "discover", "that", "should", "have", "cause", "forfeiture", "of", "winner", "result", "Hillary", "should", "win", "by", "default"]
(c7-12 / have-condition-91
       :ARG1 (c7-0 / recommend-01
                   :ARG1 (c7-7 / win-01
                               :ARG0 (c7-4 / person
                                           :name (c7-13 / name
                                                        :op1 "Hillary"))
                               :manner (c7-3 / default-02)))
       :ARG2 (c7-8 / discover-01
                   :ARG1 (c7-14 / defraud-01
                                :ARG0-of (c7-5 / cause-01
                                               :ARG1 (c7-11 / forfeit-01
                                                            :ARG1 (c7-6 / thing
                                                                        :ARG2-of (c7-10 / result-01
                                                                                        :ARG1 (c7-1 / person
                                                                                                    :ARG0-of (c7-2 / win-01))))
                                                            :ARG1-of (c7-9 / recommend-01))))))

# ::snt click bait wording Its just a lawsuit from citizens No chance that will happen in time to matter
# ::tokens ["click", "bait", "wording", "Its", "just", "a", "lawsuit", "from", "citizens", "No", "chance", "that", "will", "happen", "in", "time", "to", "matter"]
# ::lemmas ["click", "bait", "word", "its", "just", "a", "lawsuit", "from", "citizen", "no", "chance", "that", "will", "happen", "in", "time", "to", "matter"]
(c8-7 / multi-sentence
      :snt1 (c8-5 / word-01
                  :ARG1 (c8-10 / bait-01
                               :ARG2 (c8-3 / click-01)))
      :snt2 (c8-6 / sue-02
                  :ARG0 (c8-8 / citizen)
                  :mod (c8-2 / just))
      :snt3 (c8-0 / chance-02
                  :ARG1 (c8-4 / that)
                  :time (c8-9 / in-time
                              :op1 (c8-1 / matter-01
                                         :ARG1 c8-4))
                  :polarity -))

# ::snt What happens after Dec29th if electrols vote for Trump Does the recount still happen
# ::tokens ["What", "happens", "after", "Dec29th", "if", "electrols", "vote", "for", "Trump", "Does", "the", "recount", "still", "happen"]
# ::lemmas ["what", "happen", "after", "dec29th", "if", "electrol", "vote", "for", "Trump", "do", "the", "recount", "still", "happen"]
(c9-8 / multi-sentence
      :snt1 (c9-6 / amr-unknown
                  :condition (c9-5 / vote-01
                                   :ARG0 (c9-2 / electrol)
                                   :ARG1 (c9-3 / person
                                               :name (c9-9 / name
                                                           :op1 "Trump")))
                  :time (c9-4 / after
                              :op1 (c9-1 / date-entity
                                         :month 12
                                         :day 29)))
      :snt2 (c9-0 / recount-01
                  :mod (c9-7 / still)))

# ::snt Considering everywhere they hv counted Trump PICKS UP more votes go ahead Maybe theyll see he won popular vote too
# ::tokens ["Considering", "everywhere", "they", "hv", "counted", "Trump", "PICKS", "UP", "more", "votes", "go", "ahead", "Maybe", "they", "ll", "see", "he", "won", "popular", "vote", "too"]
# ::lemmas ["consider", "everywhere", "they", "hv", "count", "Trump", "pick", "up", "more", "vote", "go", "ahead", "maybe", "they", "will", "see", "he", "win", "popular", "vote", "too"]
(c10-3 / consider-01
       :ARG1 (c10-16 / go-06
                     :ARG0 (c10-7 / vote-01
                                  :ARG1 (c10-4 / person
                                               :name (c10-13 / name
                                                             :op1 "Trump"))
                                  :ARG1-of (c10-12 / have-quant-91
                                                   :ARG3 (c10-14 / more)))
                     :ARG2 (c10-9 / ahead)
                     :ARG1-of (c10-11 / cause-01
                                      :ARG0 c10-3
                                      :ARG0 (c10-6 / they)
                                      :ARG1 (c10-1 / possible-01
                                                   :ARG1 (c10-15 / see-01
                                                                 :ARG0 c10-6
                                                                 :ARG1 (c10-8 / win-01
                                                                              :ARG0 c10-4
                                                                              :ARG1 (c10-10 / vote-01
                                                                                            :mod (c10-0 / popular))
                                                                              :mod (c10-17 / too)))))
                     :location (c10-5 / everywhere
                                      :location-of (c10-2 / count-01
                                                          :ARG0 c10-6))))

# ::snt libs trying to make people question resultsThe State has until 1229 to respond or they can ignore the election is over then
# ::tokens ["libs", "trying", "to", "make", "people", "question", "resultsThe", "State", "has", "until", "1229", "to", "respond", "or", "they", "can", "ignore", "the", "election", "is", "over", "then"]
# ::lemmas ["libs", "trying", "to", "make", "people", "question", "resultsThe", "State", "have", "until", "1229", "to", "respond", "or", "they", "can", "ignore", "the", "election", "be", "over", "then"]
(c11-14 / multi-sentence
        :snt1 (c11-10 / try-01
                      :ARG0 (c11-7 / person
                                   :ARG1-of (c11-15 / liberal-02))
                      :ARG1 (c11-5 / make-02
                                   :ARG0 c11-7
                                   :ARG1 (c11-11 / question-03
                                                 :ARG0 (c11-2 / person)
                                                 :ARG1 (c11-3 / result))))
        :snt2 (c11-0 / or
                     :op1 (c11-16 / have-03
                                  :ARG0 (c11-13 / state)
                                  :ARG1 (c11-8 / until
                                               :op1 (c11-6 / date-entity
                                                           :year 1229)
                                               :purpose (c11-12 / respond-01
                                                                :ARG0 c11-13)))
                     :op2 (c11-1 / possible-01
                                 :ARG1 (c11-17 / ignore-01
                                               :ARG0 c11-13
                                               :ARG1 (c11-4 / over-01
                                                            :ARG1 (c11-9 / elect-01)
                                                            :time (c11-18 / then))))))

# ::snt I dont know its the first time Ive seen it
# ::tokens ["I", "do", "nt", "know", "its", "the", "first", "time", "I", "ve", "seen", "it"]
# ::lemmas ["i", "do", "not", "know", "its", "the", "first", "time", "i", "have", "see", "it"]
(c12-3 / know-01
       :ARG0 (c12-4 / i)
       :ARG1 (c12-1 / it
                    :ord (c12-0 / ordinal-entity
                                :value 1)
                    :ARG1-of (c12-2 / see-01
                                    :ARG0 c12-4))
       :polarity -)

# ::snt Wtf
# ::tokens ["Wtf"]
# ::lemmas ["Wtf"]
(c13-0 / amr-unknown
       :mod (c13-1 / fuck))

# ::snt Great news
# ::tokens ["Great", "news"]
# ::lemmas ["great", "news"]
(c14-1 / news
       :mod (c14-0 / great))

# ::snt 3 people have filed a long shot lawsuit doesnt mean a recount will take place
# ::tokens ["3", "people", "have", "filed", "a", "long", "shot", "lawsuit", "does", "nt", "mean", "a", "recount", "will", "take", "place"]
# ::lemmas ["3", "people", "have", "file", "a", "long", "shot", "lawsuit", "do", "not", "mean", "a", "recount", "will", "take", "place"]
(c15-5 / mean-01
       :ARG1 (c15-3 / file-01
                    :ARG0 (c15-1 / person
                                 :quant 3)
                    :ARG1 (c15-4 / sue-02
                                 :ARG0 c15-1
                                 :ARG2 (c15-2 / shoot-01
                                              :ARG1-of (c15-6 / long-03))))
       :ARG2 (c15-0 / recount-01)
       :polarity -)

# ::snt Ok
# ::tokens ["Ok"]
# ::lemmas ["ok"]
(c16-0 / okay-01)

# ::snt I think its true I didnt see it n Snopes You check too just to b sure
# ::tokens ["I", "think", "its", "true", "I", "did", "nt", "see", "it", "n", "Snopes", "You", "check", "too", "just", "to", "b", "sure"]
# ::lemmas ["i", "think", "its", "true", "i", "do", "not", "see", "it", "n", "Snopes", "you", "check", "too", "just", "to", "b", "sure"]
(c17-9 / multi-sentence
       :snt1 (c17-4 / think-01
                    :ARG0 (c17-11 / i)
                    :ARG1 (c17-12 / true-01
                                  :ARG1 (c17-0 / it)))
       :snt2 (c17-6 / and
                    :op1 (c17-8 / see-01
                                :ARG0 (c17-10 / i)
                                :ARG1 (c17-1 / it)
                                :polarity -)
                    :op2 (c17-3 / check-01
                                :ARG0 (c17-13 / you)
                                :mod (c17-7 / too)
                                :purpose (c17-5 / sure-02
                                                :ARG0 (c17-2 / i)))))

# ::snt Margaretherapy I read something about hundreds of thousands of votes that werent counted in Miami Dont know if true
# ::tokens ["Margaretherapy", "I", "read", "something", "about", "hundreds", "of", "thousands", "of", "votes", "that", "were", "nt", "counted", "in", "Miami", "Do", "nt", "know", "if", "true"]
# ::lemmas ["Margaretherapy", "i", "read", "something", "about", "hundreds", "of", "thousands", "of", "vote", "that", "be", "not", "count", "in", "Miami", "do", "not", "know", "if", "true"]
(c18-9 / multi-sentence
       :snt1 (c18-8 / say-01
                    :ARG1 (c18-0 / read-01
                                 :ARG0 (c18-13 / i)
                                 :ARG1 (c18-7 / something
                                              :topic (c18-6 / vote-01
                                                            :quant (c18-1 / multiple
                                                                          :op1 100000)
                                                            :ARG1-of (c18-2 / count-01
                                                                            :location (c18-10 / city
                                                                                              :name (c18-12 / name
                                                                                                            :op1 "Miami"))
                                                                            :polarity -))))
                    :ARG2 (c18-3 / person
                                 :name (c18-4 / name
                                              :op1 "Margaretherapy")))
       :snt2 (c18-11 / know-01
                     :ARG0 c18-13
                     :ARG1 (c18-5 / truth-value
                                  :polarity-of (c18-14 / true-01
                                                       :ARG1 c18-7))
                     :polarity -))

# ::snt kkLeft Center  Right who cares they are all the same  only the perspective changes nothiong else
# ::tokens ["kkLeft", "Center", " ", "Right", "who", "cares", "they", "are", "all", "the", "same", " ", "only", "the", "perspective", "changes", "nothiong", "else"]
# ::lemmas ["kkLeft", "Center", " ", "right", "who", "care", "they", "be", "all", "the", "same", " ", "only", "the", "perspective", "change", "nothiong", "else"]
(c19-10 / multi-sentence
        :snt1 (c19-4 / center-02
                     :ARG1-of (c19-11 / left-19))
        :snt2 (c19-9 / care-01
                     :ARG0 (c19-5 / person
                                  :ARG1-of (c19-1 / right-08))
                     :ARG1 (c19-12 / same-01
                                   :ARG1 (c19-7 / they)
                                   :degree (c19-8 / all)))
        :snt3 (c19-2 / change-01
                     :ARG1 (c19-3 / perspective)
                     :mod (c19-0 / only)
                     :concession (c19-6 / else
                                        :polarity -)))

# ::snt Have you read any articles in the source you quoted Its a lefty hit site It would be like quoting Limbaugh as news
# ::tokens ["Have", "you", "read", "any", "articles", "in", "the", "source", "you", "quoted", "Its", "a", "lefty", "hit", "site", "It", "would", "be", "like", "quoting", "Limbaugh", "as", "news"]
# ::lemmas ["have", "you", "read", "any", "article", "in", "the", "source", "you", "quote", "its", "a", "lefty", "hit", "site", "it", "would", "be", "like", "quote", "Limbaugh", "as", "news"]
(c20-10 / multi-sentence
        :snt1 (c20-0 / read-01
                     :ARG0 (c20-17 / you)
                     :ARG1 (c20-6 / article
                                  :mod (c20-4 / any)
                                  :location (c20-9 / source
                                                   :ARG2-of (c20-7 / quote-01
                                                                   :ARG0 c20-17)))
                     :polarity (c20-16 / amr-unknown))
        :snt2 (c20-5 / site
                     :ARG1-of (c20-11 / hit-02)
                     :ARG1-of (c20-12 / left-19)
                     :domain (c20-14 / it))
        :snt3 (c20-8 / resemble-01
                     :ARG1 (c20-1 / quote-01
                                  :ARG1 (c20-2 / person
                                               :name (c20-13 / name
                                                             :op1 "Limbaugh"))
                                  :ARG2 (c20-3 / news))
                     :polarity (c20-15 / amr-unknown)))

# ::snt how come all the news media outlets said there was no fraud the attempted steal is on what a joke of a country we live in
# ::tokens ["how", "come", "all", "the", "news", "media", "outlets", "said", "there", "was", "no", "fraud", "the", "attempted", "steal", "is", "on", "what", "a", "joke", "of", "a", "country", "we", "live", "in"]
# ::lemmas ["how", "come", "all", "the", "news", "medium", "outlet", "say", "there", "be", "no", "fraud", "the", "attempt", "steal", "be", "on", "what", "a", "joke", "of", "a", "country", "we", "live", "in"]
(c21-2 / cause-01
       :ARG0 (c21-6 / amr-unknown)
       :ARG1 (c21-7 / say-01
                    :ARG0 (c21-0 / outlet
                                 :mod (c21-8 / media)
                                 :mod (c21-11 / news)
                                 :mod (c21-3 / all))
                    :ARG1 (c21-1 / defraud-01
                                 :ARG1-of c21-2
                                 :ARG0 (c21-12 / joke-01
                                               :ARG2 (c21-9 / country
                                                            :location-of (c21-10 / live-01
                                                                                 :ARG0 (c21-4 / we)))
                                               :degree (c21-5 / so))
                                 :polarity -)))

# ::snt It cant and we all know it I feel powerless to get anything done Call AG is only thing I know
# ::tokens ["It", "ca", "nt", "and", "we", "all", "know", "it", "I", "feel", "powerless", "to", "get", "anything", "done", "Call", "AG", "is", "only", "thing", "I", "know"]
# ::lemmas ["it", "can", "not", "and", "we", "all", "know", "it", "i", "feel", "powerless", "to", "get", "anything", "do", "Call", "AG", "be", "only", "thing", "i", "know"]
(c22-13 / multi-sentence
        :snt1 (c22-9 / and
                     :op1 (c22-5 / possible-01
                                 :ARG1 (c22-16 / it)
                                 :polarity -)
                     :op2 (c22-12 / know-01
                                  :ARG0 (c22-8 / we
                                               :mod (c22-6 / all))
                                  :ARG1 (c22-1 / it)))
        :snt2 (c22-10 / feel-01
                      :ARG0 (c22-14 / i)
                      :ARG1 (c22-2 / powerless
                                   :domain (c22-15 / get-04
                                                   :ARG0 c22-14
                                                   :ARG1 (c22-4 / do-02
                                                                :ARG0 c22-14
                                                                :ARG1 (c22-17 / anything)))))
        :snt3 (c22-11 / know-01
                      :ARG0 (c22-3 / i)
                      :ARG1 (c22-7 / thing
                                   :mod (c22-0 / only))))

# ::snt USvsTrump1 this makes sense TargetSmart information on early voting did not compute with results How could it be THAT wrong
# ::tokens ["USvsTrump1", "this", "makes", "sense", "TargetSmart", "information", "on", "early", "voting", "did", "not", "compute", "with", "results", "How", "could", "it", "be", "THAT", "wrong"]
# ::lemmas ["USvsTrump1", "this", "make", "sense", "TargetSmart", "information", "on", "early", "voting", "do", "not", "compute", "with", "result", "how", "could", "it", "be", "that", "wrong"]
(c23-11 / multi-sentence
        :snt1 (c23-10 / sense-02
                      :ARG1 (c23-5 / this)
                      :ARG1-of (c23-7 / say-01
                                      :ARG0 (c23-14 / i)
                                      :ARG2 (c23-2 / person
                                                   :name (c23-13 / name
                                                                 :op1 "USvsTrump1"))))
        :snt2 (c23-3 / compute-01
                     :ARG1 (c23-0 / information
                                  :mod (c23-6 / smart)
                                  :topic (c23-8 / vote-01
                                                :time (c23-4 / early)))
                     :ARG2 (c23-1 / result-01)
                     :ARG1-of (c23-12 / cause-01
                                      :ARG0 (c23-9 / amr-unknown))
                     :polarity -))

# ::snt Dont worry Democrats have been assuring us for years that there is no voter fraud
# ::tokens ["Do", "nt", "worry", "Democrats", "have", "been", "assuring", "us", "for", "years", "that", "there", "is", "no", "voter", "fraud"]
# ::lemmas ["do", "not", "worry", "Democrats", "have", "be", "assure", "us", "for", "years", "that", "there", "be", "no", "voter", "fraud"]
(c24-7 / worry-01
       :ARG0 (c24-13 / you)
       :ARG1 (c24-9 / assure-01
                    :ARG0 (c24-5 / person
                                 :ARG0-of (c24-10 / have-org-role-91
                                                  :ARG1 (c24-1 / political-party
                                                               :name (c24-12 / name
                                                                             :op1 "Democratic"
                                                                             :op2 "Party"))))
                    :ARG1 (c24-2 / we)
                    :ARG2 (c24-4 / defraud-01
                                 :ARG0 (c24-0 / person
                                              :ARG0-of (c24-8 / vote-01))
                                 :polarity -)
                    :duration (c24-11 / multiple
                                      :op1 (c24-6 / temporal-quantity
                                                  :unit (c24-3 / year)
                                                  :quant 1)))
       :polarity -
       :mode imperative)

# ::snt Is this for real
# ::tokens ["Is", "this", "for", "real"]
# ::lemmas ["be", "this", "for", "real"]
(c25-1 / real-04
       :polarity (c25-0 / amr-unknown)
       :ARG1 (c25-2 / this))

# ::snt CTO1ChipNagel bipartisan yet has racism as one of its main header links XD
# ::tokens ["CTO1ChipNagel", "bipartisan", "yet", "has", "racism", "as", "one", "of", "its", "main", "header", "links", "XD"]
# ::lemmas ["CTO1ChipNagel", "bipartisan", "yet", "have", "racism", "as", "one", "of", "its", "main", "header", "link", "XD"]
(c26-2 / contrast-01
       :ARG1 (c26-10 / bipartisan
                     :domain (c26-3 / person
                                    :name (c26-8 / name
                                                 :op1 "CTO1ChipNagel")))
       :ARG2 (c26-0 / racism
                    :ARG0-of (c26-4 / cause-01
                                    :ARG1 (c26-9 / include-91
                                                 :ARG1 c26-0
                                                 :ARG2 (c26-5 / link
                                                              :mod (c26-6 / header)
                                                              :mod (c26-7 / main)
                                                              :poss (c26-1 / it))))))

# ::snt Its not people voting that shouldnt Its the politicians with Voter Suppression  Gerrymandering thats out of control
# ::tokens ["Its", "not", "people", "voting", "that", "should", "nt", "Its", "the", "politicians", "with", "Voter", "Suppression", " ", "Gerrymandering", "that", "s", "out", "of", "control"]
# ::lemmas ["its", "not", "people", "vote", "that", "should", "not", "its", "the", "politician", "with", "Voter", "Suppression", " ", "gerrymander", "that", "s", "out", "of", "control"]
(c27-9 / multi-sentence
       :snt1 (c27-6 / vote-01
                    :ARG0 (c27-4 / person)
                    :ARG1-of (c27-2 / recommend-01
                                    :polarity -)
                    :polarity -)
       :snt2 (c27-3 / politician
                    :ARG0-of (c27-8 / suppress-01
                                    :ARG1 (c27-1 / person
                                                 :ARG0-of (c27-7 / vote-01)))
                    :ARG1-of (c27-0 / out-06
                                    :ARG2 (c27-5 / control-01)))
       :snt3 (c27-11 / Gerrymandering
                     :ARG1-of (c27-10 / control-01
                                      :polarity -)))

# ::snt Election Fraud not Voter Fraud theres a big difference between the two hint one is practically imaginary
# ::tokens ["Election", "Fraud", "not", "Voter", "Fraud", "there", "s", "a", "big", "difference", "between", "the", "two", "hint", "one", "is", "practically", "imaginary"]
# ::lemmas ["election", "Fraud", "not", "Voter", "Fraud", "there", "s", "a", "big", "difference", "between", "the", "two", "hint", "one", "be", "practically", "imaginary"]
(c28-2 / differ-02
       :ARG1 (c28-6 / defraud-01
                    :ARG1 (c28-3 / elect-01))
       :ARG2 (c28-10 / defraud-01
                     :ARG1 (c28-4 / person
                                  :ARG0-of (c28-5 / vote-01)))
       :ARG3 (c28-7 / hint-01
                    :ARG1 (c28-8 / imaginary
                                 :mod (c28-1 / practical)
                                 :domain (c28-0 / one))
                    :quant 2)
       :degree (c28-9 / big))

# ::snt Voter fraud in my state needs to be addressed by a RECOUNT Recount votes in Florida now
# ::tokens ["Voter", "fraud", "in", "my", "state", "needs", "to", "be", "addressed", "by", "a", "RECOUNT", "Recount", "votes", "in", "Florida", "now"]
# ::lemmas ["voter", "fraud", "in", "my", "state", "need", "to", "be", "address", "by", "a", "RECOUNT", "Recount", "vote", "in", "Florida", "now"]
(c29-6 / address-02
       :ARG1 (c29-1 / defraud-01
                    :ARG0 (c29-2 / person
                                 :ARG0-of (c29-4 / vote-01)))
       :ARG2 (c29-5 / vote-01
                    :mod (c29-0 / recount-01)
                    :location (c29-7 / state
                                     :name (c29-8 / name
                                                  :op1 "Florida")))
       :time (c29-3 / now))

# ::snt Again
# ::tokens ["Again"]
# ::lemmas ["again"]
(c30-0 / again)

# ::snt Fraud On whos side Interesting
# ::tokens ["Fraud", "On", "who", "s", "side", "Interesting"]
# ::lemmas ["fraud", "on", "who", "s", "side", "interesting"]
(c31-1 / interest-01
       :ARG2 (c31-0 / defraud-01
                    :ARG0 (c31-3 / side
                                 :poss (c31-2 / they))))

# ::snt FakeNews
# ::tokens ["FakeNews"]
# ::lemmas ["FakeNews"]
(c32-0 / fake-News)

# ::snt republican own the white nationa party group and the media was warned so stop living in denial
# ::tokens ["republican", "own", "the", "white", "nationa", "party", "group", "and", "the", "media", "was", "warned", "so", "stop", "living", "in", "denial"]
# ::lemmas ["republican", "own", "the", "white", "nationa", "party", "group", "and", "the", "media", "be", "warn", "so", "stop", "live", "in", "denial"]
(c33-7 / and
       :op1 (c33-0 / own-01
                   :ARG0 (c33-4 / person
                                :ARG0-of (c33-9 / have-org-role-91
                                                :ARG1 (c33-1 / political-party
                                                             :name (c33-13 / name
                                                                           :op1 "Republican"
                                                                           :op2 "Party"))))
                   :ARG1 (c33-11 / group
                                 :mod (c33-5 / nation)
                                 :ARG1-of (c33-6 / white-02)))
       :op2 (c33-2 / warn-01
                   :ARG1 (c33-8 / stop-01
                                :ARG0 (c33-10 / media)
                                :ARG1 (c33-12 / live-01
                                              :ARG0 c33-10
                                              :manner (c33-3 / deny-01
                                                             :ARG1 c33-10))
                                :mode imperative)
                   :ARG2 c33-10))

# ::snt and no I dont think is even true If it was the pro Hillary channels would be having a Field day with this even Stein would
# ::tokens ["and", "no", "I", "do", "nt", "think", "is", "even", "true", "If", "it", "was", "the", "pro", "Hillary", "channels", "would", "be", "having", "a", "Field", "day", "with", "this", "even", "Stein", "would"]
# ::lemmas ["and", "no", "i", "do", "not", "think", "be", "even", "true", "if", "it", "be", "the", "pro", "Hillary", "channel", "would", "be", "have", "a", "field", "day", "with", "this", "even", "Stein", "would"]
(c34-6 / and
       :op2 (c34-5 / think-01
                   :ARG0 (c34-12 / i)
                   :ARG1 (c34-13 / true-01
                                 :mod (c34-2 / even)
                                 :condition (c34-10 / have-03
                                                    :ARG0 (c34-3 / channel
                                                                 :ARG0-of (c34-8 / favor-01
                                                                                 :ARG1 (c34-4 / person
                                                                                              :name (c34-11 / name
                                                                                                            :op1 "Hillary"))))
                                                    :ARG1 (c34-1 / day
                                                                 :mod (c34-0 / field))
                                                    :ARG1-of (c34-9 / cause-01
                                                                    :ARG0 (c34-7 / this))))
                   :polarity -))

# ::snt thats because r Scott is a fucking butt wart
# ::tokens ["that", "s", "because", "r", "Scott", "is", "a", "fucking", "butt", "wart"]
# ::lemmas ["that", "s", "because", "r", "Scott", "be", "a", "fucking", "butt", "wart"]
(c35-0 / cause-01
       :ARG0 (c35-3 / wart
                    :mod (c35-6 / butt)
                    :mod (c35-4 / fucking)
                    :domain (c35-1 / person
                                   :name (c35-5 / name
                                                :op1 "Scott")))
       :ARG1 (c35-2 / that))

# ::snt So deceptive headline It is some PPL who have filed a lawsuit RICK SCOTT the gov of FL wants nothing to do wi it
# ::tokens ["So", "deceptive", "headline", "It", "is", "some", "PPL", "who", "have", "filed", "a", "lawsuit", "RICK", "SCOTT", "the", "gov", "of", "FL", "wants", "nothing", "to", "do", "wi", "it"]
# ::lemmas ["so", "deceptive", "headline", "it", "be", "some", "PPL", "who", "have", "file", "a", "lawsuit", "RICK", "SCOTT", "the", "gov", "of", "FL", "want", "nothing", "to", "do", "wi", "it"]
(c36-15 / multi-sentence
        :snt1 (c36-14 / headline
                      :ARG0-of (c36-2 / deceive-01)
                      :mod (c36-13 / so))
        :snt2 (c36-11 / file-01
                      :ARG0 (c36-3 / company
                                   :name (c36-17 / name
                                                 :op1 "PPL")
                                   :quant (c36-9 / some))
                      :ARG1 (c36-8 / sue-02
                                   :ARG0 c36-3))
        :snt3 (c36-19 / say-01
                      :ARG0 (c36-18 / i)
                      :ARG1 (c36-10 / want-01
                                    :ARG0 (c36-16 / government-organization
                                                  :ARG0-of (c36-4 / govern-01
                                                                  :ARG1 (c36-12 / state
                                                                                :name (c36-5 / name
                                                                                             :op1 "Florida"))))
                                    :ARG1 (c36-1 / nothing)
                                    :ARG2 (c36-0 / it))
                      :ARG2 (c36-6 / person
                                   :name (c36-7 / name
                                                :op1 "RICK"
                                                :op2 "SCOTT"))))

# ::snt PLEASE LET THIS BE TRUE
# ::tokens ["PLEASE", "LET", "THIS", "BE", "TRUE"]
# ::lemmas ["please", "let", "this", "be", "true"]
(c37-3 / let-01
       :ARG0 (c37-0 / you)
       :ARG1 (c37-2 / true-01
                    :ARG1 (c37-1 / this))
       :mode imperative
       :polite +)
