# ::snt Simply shows once again how elite isolated and out of touch they truly are
# ::tokens ["Simply", "shows", "once", "again", "how", "elite", "isolated", "and", "out", "of", "touch", "they", "truly", "are"]
# ::lemmas ["simply", "show", "once", "again", "how", "elite", "isolate", "and", "out", "of", "touch", "they", "truly", "be"]
(c1-6 / show-01
      :ARG0 (c1-4 / simple-02)
      :ARG1 (c1-2 / elite
                  :ARG1-of (c1-7 / isolate-01)
                  :ARG1-of (c1-1 / in-touch-11
                                 :ARG2 c1-2
                                 :ARG1-of (c1-3 / true-01)
                                 :polarity -)
                  :domain c1-2)
      :mod (c1-5 / again
                 :mod (c1-0 / once)))

# ::snt Unbelievable Cancel taxes and then tell me how your going to pay for wall military police AF1 golf etc
# ::tokens ["Unbelievable", "Cancel", "taxes", "and", "then", "tell", "me", "how", "your", "going", "to", "pay", "for", "wall", "military", "police", "AF1", "golf", "etc"]
# ::lemmas ["unbelievable", "Cancel", "taxis", "and", "then", "tell", "me", "how", "your", "go", "to", "pay", "for", "wall", "military", "police", "AF1", "golf", "etc"]
(c2-10 / and
       :op1 (c2-4 / possible-01
                  :ARG1 (c2-5 / cancel-01
                              :ARG1 (c2-8 / tax-01))
                  :polarity -)
       :op2 (c2-16 / tell-01
                   :ARG0 (c2-17 / you)
                   :ARG1 (c2-11 / thing
                                :manner-of (c2-1 / pay-01
                                                 :ARG0 c2-17
                                                 :ARG3 (c2-7 / and
                                                             :op1 (c2-14 / golf-01
                                                                         :ARG0 (c2-12 / military
                                                                                      :name (c2-13 / name
                                                                                                   :op1 "AF1"))
                                                                         :mod (c2-9 / wall))
                                                             :op2 (c2-6 / et-cetera))))
                   :ARG2 (c2-15 / i)
                   :time (c2-3 / then))
       :ARG1-of (c2-0 / believe-01
                      :ARG1-of (c2-2 / possible-01)))

# ::snt In other words Eric Trump says that hardworking wealthy people will be rewarded for doing so much for the country they wont pay taxes
# ::tokens ["In", "other", "words", "Eric", "Trump", "says", "that", "hardworking", "wealthy", "people", "will", "be", "rewarded", "for", "doing", "so", "much", "for", "the", "country", "they", "wo", "nt", "pay", "taxes"]
# ::lemmas ["in", "other", "word", "Eric", "Trump", "say", "that", "hardworke", "wealthy", "people", "will", "be", "reward", "for", "do", "so", "much", "for", "the", "country", "they", "will", "not", "pay", "taxis"]
(c3-12 / say-01
       :ARG0 (c3-6 / person
                   :name (c3-16 / name
                                :op1 "Eric"
                                :op2 "Trump"))
       :ARG1 (c3-2 / reward-01
                   :ARG1 (c3-3 / person
                               :mod (c3-10 / wealth)
                               :ARG0-of (c3-4 / work-01
                                              :ARG1-of (c3-13 / hard-02)))
                   :ARG2 (c3-5 / do-02
                               :ARG0 c3-3
                               :ARG1 (c3-14 / much
                                            :degree (c3-11 / so))
                               :ARG2 (c3-7 / country))
                   :ARG0-of (c3-15 / cause-01
                                   :ARG1 (c3-1 / pay-01
                                               :ARG0 c3-3
                                               :ARG1 (c3-9 / tax)
                                               :polarity -)))
       :ARG1-of (c3-8 / word-01
                      :mod (c3-0 / other)))

# ::snt Actually he said a lot more Basically if youre not wealthy then you havent worked hard enough  lazy people will just have to deal
# ::tokens ["Actually", "he", "said", "a", "lot", "more", "Basically", "if", "you", "re", "not", "wealthy", "then", "you", "have", "nt", "worked", "hard", "enough", " ", "lazy", "people", "will", "just", "have", "to", "deal"]
# ::lemmas ["actually", "he", "say", "a", "lot", "more", "basically", "if", "you", "be", "not", "wealthy", "then", "you", "have", "not", "work", "hard", "enough", " ", "lazy", "people", "will", "just", "have", "to", "deal"]
(c4-14 / multi-sentence
       :snt1 (c4-12 / say-01
                    :ARG0 (c4-13 / he)
                    :ARG1 (c4-8 / thing
                                :ARG1-of (c4-6 / have-quant-91
                                               :ARG3 (c4-2 / more
                                                           :quant (c4-15 / lot))))
                    :ARG1-of (c4-10 / actual-02))
       :snt2 (c4-7 / have-condition-91
                   :ARG1 (c4-9 / work-01
                               :ARG0 (c4-18 / you)
                               :ARG1-of (c4-0 / hard-02
                                              :ARG2-of (c4-16 / have-degree-91
                                                              :ARG1 c4-9
                                                              :ARG3 (c4-4 / enough)))
                               :polarity -)
                   :ARG2 (c4-1 / obligate-01
                               :ARG1 (c4-5 / person
                                           :mod (c4-11 / lazy))
                               :ARG2 (c4-3 / deal-01
                                           :ARG0 c4-5)
                               :mod (c4-17 / just))))

# ::snt Early on I tried to be openminded re the Trump offspringspouses Now I see through a glass darkly Its pretty dark but not unclear
# ::tokens ["Early", "on", "I", "tried", "to", "be", "openminded", "re", "the", "Trump", "offspringspouses", "Now", "I", "see", "through", "a", "glass", "darkly", "Its", "pretty", "dark", "but", "not", "unclear"]
# ::lemmas ["early", "on", "i", "try", "to", "be", "openminde", "re", "the", "trump", "offspringspouse", "now", "i", "see", "through", "a", "glass", "darkly", "its", "pretty", "dark", "but", "not", "unclear"]
(c5-12 / multi-sentence
       :snt1 (c5-9 / try-01
                   :ARG0 (c5-16 / i)
                   :ARG1 (c5-0 / openminded
                               :topic (c5-6 / person
                                            :ARG1-of (c5-2 / offsprings-00)
                                            :mod (c5-3 / person
                                                       :name (c5-15 / name
                                                                    :op1 "Trump"))))
                   :time (c5-7 / early))
       :snt2 (c5-8 / contrast-01
                   :ARG1 (c5-11 / see-01
                                :ARG0 (c5-4 / i)
                                :ARG1 (c5-14 / it)
                                :manner (c5-5 / dark
                                              :degree (c5-1 / pretty))
                                :manner (c5-10 / dark))
                   :ARG2 (c5-13 / clear-06
                                :ARG1 c5-14
                                :polarity -)))

# ::snt He makes me shudder with revulsion
# ::tokens ["He", "makes", "me", "shudder", "with", "revulsion"]
# ::lemmas ["he", "make", "me", "shudder", "with", "revulsion"]
(c6-3 / make-02
      :ARG0 (c6-2 / he)
      :ARG1 (c6-1 / shudder-01
                  :ARG0 (c6-4 / i)
                  :manner (c6-0 / revulsion)))

# ::snt Sorry Im sure he wishes his daddy would do that but the article was fake Truly
# ::tokens ["Sorry", "I", "m", "sure", "he", "wishes", "his", "daddy", "would", "do", "that", "but", "the", "article", "was", "fake", "Truly"]
# ::lemmas ["sorry", "i", "be", "sure", "he", "wish", "his", "daddy", "would", "do", "that", "but", "the", "article", "be", "fake", "Truly"]
(c7-10 / say-01
       :ARG0 (c7-12 / i)
       :ARG1 (c7-6 / sorry-01
                   :ARG1 c7-12
                   :ARG2 (c7-5 / sure-02
                               :ARG0 c7-12
                               :ARG1 (c7-4 / wish-01
                                           :ARG0 (c7-11 / he)
                                           :ARG1 (c7-0 / do-02
                                                       :ARG0 (c7-1 / person
                                                                   :ARG0-of (c7-2 / have-rel-role-91
                                                                                  :ARG1 c7-11
                                                                                  :ARG2 (c7-7 / daddy)))
                                                       :ARG1 (c7-3 / that)))
                               :concession-of (c7-9 / fake-02
                                                    :ARG1 (c7-8 / article))))
       :ARG2 c7-1
       :ARG1-of (c7-13 / true-01))

# ::snt I dislike that creepy kid as much as anyone but this story is false
# ::tokens ["I", "dislike", "that", "creepy", "kid", "as", "much", "as", "anyone", "but", "this", "story", "is", "false"]
# ::lemmas ["i", "dislike", "that", "creepy", "kid", "as", "much", "as", "anyone", "but", "this", "story", "be", "false"]
(c8-1 / contrast-01
      :ARG1 (c8-0 / dislike-01
                  :ARG0 (c8-10 / i)
                  :ARG1 (c8-6 / kid
                              :ARG0-of (c8-7 / creepy-04)
                              :mod (c8-3 / that))
                  :ARG1-of (c8-8 / have-quant-91
                                 :ARG3 (c8-2 / equal)
                                 :ARG4 (c8-4 / anyone)))
      :ARG2 (c8-5 / false
                  :domain (c8-9 / story
                                :mod (c8-11 / this))))

# ::snt snopes says FALSE
# ::tokens ["snopes", "says", "FALSE"]
# ::lemmas ["snopes", "say", "FALSE"]
(c9-2 / say-01
      :ARG0 (c9-3 / magazine
                  :name (c9-0 / name
                              :op1 "Snopes"))
      :ARG1 (c9-1 / false))

# ::snt Or a brain trust this one
# ::tokens ["Or", "a", "brain", "trust", "this", "one"]
# ::lemmas ["or", "a", "brain", "trust", "this", "one"]
(c10-0 / or
       :op2 (c10-3 / trust-02
                   :ARG0 (c10-1 / brain)
                   :ARG1 (c10-2 / one
                                :mod (c10-4 / this))))

# ::snt Did he seriously say that
# ::tokens ["Did", "he", "seriously", "say", "that"]
# ::lemmas ["do", "he", "seriously", "say", "that"]
(c11-3 / say-01
       :polarity (c11-2 / amr-unknown)
       :ARG0 (c11-4 / he)
       :ARG1 (c11-0 / that)
       :manner (c11-1 / serious-01))

# ::snt Was he not on his medication
# ::tokens ["Was", "he", "not", "on", "his", "medication"]
# ::lemmas ["be", "he", "not", "on", "his", "medication"]
(c12-2 / medicate-01
       :ARG1 (c12-1 / he)
       :polarity (c12-0 / amr-unknown)
       :polarity -)

# ::snt We need to dig a deep trench to accommodate just how low the bar has fallen
# ::tokens ["We", "need", "to", "dig", "a", "deep", "trench", "to", "accommodate", "just", "how", "low", "the", "bar", "has", "fallen"]
# ::lemmas ["we", "need", "to", "dig", "a", "deep", "trench", "to", "accommodate", "just", "how", "low", "the", "bar", "have", "fall"]
(c13-8 / need-01
       :ARG0 (c13-3 / we)
       :ARG1 (c13-1 / dig-01
                    :ARG0 c13-3
                    :ARG1 (c13-2 / trench
                                 :ARG1-of (c13-4 / deep-02))
                    :purpose (c13-5 / accommodate-01
                                    :ARG0 c13-3
                                    :ARG1 (c13-9 / thing
                                                 :degree-of (c13-7 / low-04
                                                                   :ARG1 (c13-0 / bar)
                                                                   :extent (c13-6 / so))))))

# ::snt Is Eric Beavis or Butthead  I forget
# ::tokens ["Is", "Eric", "Beavis", "or", "Butthead", " ", "I", "forget"]
# ::lemmas ["be", "Eric", "Beavis", "or", "Butthead", " ", "i", "forget"]
(c14-4 / forget-01
       :ARG0 (c14-6 / i)
       :ARG1 (c14-3 / amr-choice
                    :op1 (c14-1 / person
                                :name (c14-5 / name
                                             :op1 "Eric"
                                             :op2 "Beavis"))
                    :op2 (c14-0 / person
                                :name (c14-2 / name
                                             :op1 "Butthead"))))

# ::snt You tell em Qusay I stutter
# ::tokens ["You", "tell", "em", "Qusay", "I", "stutter"]
# ::lemmas ["you", "tell", "em", "Qusay", "i", "stutter"]
(c15-1 / tell-01
       :ARG0 (c15-5 / you)
       :ARG1 (c15-2 / stutter-01
                    :ARG0 (c15-4 / i))
       :ARG2 (c15-0 / person
                    :name (c15-3 / name
                                 :op1 "Qusay")))

# ::snt do u think these guys r really this stupid or just figure they r better than all of us
# ::tokens ["do", "u", "think", "these", "guys", "r", "really", "this", "stupid", "or", "just", "figure", "they", "r", "better", "than", "all", "of", "us"]
# ::lemmas ["do", "u", "think", "these", "guy", "r", "really", "this", "stupid", "or", "just", "figure", "they", "r", "well", "than", "all", "of", "us"]
(c16-0 / or
       :op1 (c16-5 / think-01
                   :ARG0 (c16-14 / you)
                   :ARG1 (c16-9 / stupid
                                :domain (c16-12 / guy
                                                :mod (c16-13 / this))
                                :ARG1-of (c16-1 / real-04)
                                :degree c16-13))
       :op2 (c16-8 / figure-01
                   :ARG0 c16-14
                   :ARG1 (c16-10 / have-degree-91
                                 :ARG1 c16-12
                                 :ARG2 (c16-3 / good-03
                                              :ARG1 c16-12)
                                 :ARG3 (c16-11 / more)
                                 :ARG4 (c16-6 / we
                                              :mod (c16-7 / all)))
                   :mod (c16-2 / just))
       :polarity (c16-4 / amr-unknown))

# ::snt This is a fake news story picked up by democraticmoms
# ::tokens ["This", "is", "a", "fake", "news", "story", "picked", "up", "by", "democraticmoms"]
# ::lemmas ["this", "be", "a", "fake", "news", "story", "pick", "up", "by", "democraticmom"]
(c17-6 / story
       :mod (c17-7 / news
                   :ARG1-of (c17-5 / fake-02))
       :domain (c17-4 / this)
       :ARG1-of (c17-2 / pick-up-04
                       :ARG0 (c17-1 / person
                                    :mod (c17-0 / political-party
                                                :name (c17-3 / name
                                                             :op1 "Democrat")))))

# ::snt Eric Trump is so freaking creepy looking
# ::tokens ["Eric", "Trump", "is", "so", "freaking", "creepy", "looking"]
# ::lemmas ["Eric", "Trump", "be", "so", "freak", "creepy", "look"]
(c18-3 / look-02
       :ARG0 (c18-0 / person
                    :name (c18-4 / name
                                 :op1 "Eric"
                                 :op2 "Trump"))
       :ARG1 (c18-1 / creepy-04
                    :ARG1 c18-0
                    :mod (c18-2 / freaking
                                :mode expressive)))

# ::snt No eric You and your gop nazis will be in prison soon
# ::tokens ["No", "eric", "You", "and", "your", "gop", "nazis", "will", "be", "in", "prison", "soon"]
# ::lemmas ["no", "eric", "you", "and", "your", "gop", "nazi", "will", "be", "in", "prison", "soon"]
(c19-4 / and
       :op1 (c19-6 / have-polarity-91
                   :ARG2 -)
       :op2 (c19-9 / be-located-at-91
                   :ARG1 (c19-3 / and
                                :op1 (c19-10 / you)
                                :op2 (c19-2 / person
                                            :mod (c19-1 / political-movement
                                                        :name (c19-8 / name
                                                                     :op1 "Nazism"))
                                            :mod (c19-7 / grand)
                                            :poss c19-10))
                   :ARG2 (c19-0 / prison)
                   :time (c19-5 / soon)))

# ::snt Seriously dont you want to punch that face repeatedly
# ::tokens ["Seriously", "do", "nt", "you", "want", "to", "punch", "that", "face", "repeatedly"]
# ::lemmas ["seriously", "do", "not", "you", "want", "to", "punch", "that", "face", "repeatedly"]
(c20-3 / want-01
       :ARG0 (c20-6 / you)
       :ARG1 (c20-1 / punch-01
                    :ARG0 c20-6
                    :ARG1 (c20-4 / face
                                 :mod (c20-2 / that))
                    :ARG1-of (c20-0 / repeat-01))
       :ARG2-of (c20-5 / serious-01)
       :polarity -)

# ::snt Every time Trump Jr opened his mouth its a major warning sign but still Trump supporters plug up their ears and let it happen
# ::tokens ["Every", "time", "Trump", "Jr", "opened", "his", "mouth", "its", "a", "major", "warning", "sign", "but", "still", "Trump", "supporters", "plug", "up", "their", "ears", "and", "let", "it", "happen"]
# ::lemmas ["every", "time", "Trump", "Jr", "open", "his", "mouth", "its", "a", "major", "warning", "sign", "but", "still", "Trump", "supporter", "plug", "up", "their", "ear", "and", "let", "it", "happen"]
(c21-12 / signal-07
        :ARG1 (c21-8 / warn-01)
        :ARG1-of (c21-13 / major-02)
        :frequency (c21-2 / rate-entity-91
                          :ARG4 (c21-0 / open-01
                                       :ARG0 (c21-5 / person
                                                    :name (c21-15 / name
                                                                  :op1 "Trump"
                                                                  :op2 "Jr")
                                                    :part (c21-4 / mouth
                                                                 :ARG1-of c21-0))))
        :ARG1-of (c21-6 / contrast-01
                        :ARG2 (c21-10 / and
                                      :op1 (c21-3 / plug-up-03
                                                  :ARG0 (c21-1 / person
                                                               :ARG0-of (c21-9 / support-01
                                                                               :ARG1 c21-5)
                                                               :part (c21-7 / ear))
                                                  :ARG1 c21-4)
                                      :op2 (c21-14 / let-01
                                                   :ARG0 c21-1
                                                   :ARG1 c21-0)
                                      :mod (c21-11 / still)))
        :domain c21-0)

# ::snt So I guess that makes him a TURD
# ::tokens ["So", "I", "guess", "that", "makes", "him", "a", "TURD"]
# ::lemmas ["so", "i", "guess", "that", "make", "him", "a", "turd"]
(c22-3 / guess-01
       :ARG0 (c22-4 / i)
       :ARG1 (c22-1 / make-02
                    :ARG0 (c22-0 / that)
                    :ARG1 (c22-5 / terrorist
                                 :domain (c22-2 / he))))

# ::snt He Is As Dumb As He Looks AND Sounds a chip off the ol block of shit
# ::tokens ["He", "Is", "As", "Dumb", "As", "He", "Looks", "AND", "Sounds", "a", "chip", "off", "the", "ol", "block", "of", "shit"]
# ::lemmas ["he", "be", "as", "dumb", "as", "he", "look", "and", "sound", "a", "chip", "off", "the", "old", "block", "of", "shit"]
(c23-6 / and
       :op1 (c23-8 / have-degree-91
                   :ARG1 (c23-4 / he)
                   :ARG2 (c23-1 / dumb)
                   :ARG3 (c23-2 / equal)
                   :ARG4 (c23-9 / look-02
                                :ARG0 c23-4))
       :op2 (c23-7 / sound-01
                   :ARG1 c23-4
                   :ARG2 (c23-3 / chip-off-02
                                :ARG1 (c23-10 / block
                                              :consist-of (c23-5 / shit)
                                              :mod (c23-0 / old)))))

# ::snt Uncovfefe Bad
# ::tokens ["Uncovfefe", "Bad"]
# ::lemmas ["uncovfefe", "bad"]
(c24-2 / bad-07
       :ARG1 (c24-0 / disease
                    :name (c24-1 / name
                                 :op1 "Uncovfefe")))
