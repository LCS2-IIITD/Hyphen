# ::snt the egg wants attention followers
# ::tokens ["the", "egg", "wants", "attention", "followers"]
# ::lemmas ["the", "egg", "want", "attention", "follower"]
(c1-3 / want-01
      :ARG0 (c1-1 / egg)
      :ARG1 (c1-2 / follow-02
                  :ARG0 c1-1
                  :ARG1 (c1-0 / attend-02
                              :ARG1 c1-1)))

# ::snt liberals will eat anything
# ::tokens ["liberals", "will", "eat", "anything"]
# ::lemmas ["liberal", "will", "eat", "anything"]
(c2-1 / eat-01
      :ARG0 (c2-2 / person
                  :ARG1-of (c2-3 / liberal-02))
      :ARG1 (c2-0 / anything))

# ::snt PLTCPastLives DrThomasPaul DISGUSTING I saved 3 from OK kill lots last year So sad One just a 3 yr old palimino w her mom
# ::tokens ["PLTCPastLives", "DrThomasPaul", "DISGUSTING", "I", "saved", "3", "from", "OK", "kill", "lots", "last", "year", "So", "sad", "One", "just", "a", "3", "yr", "old", "palimino", "w", "her", "mom"]
# ::lemmas ["pltcpastlive", "drthomaspaul", "DISGUSTING", "i", "save", "3", "from", "ok", "kill", "lot", "last", "year", "so", "sad", "One", "just", "a", "3", "yr", "old", "palimino", "w", "her", "mom"]
(c3-12 / multi-sentence
       :snt1 (c3-16 / disgrace-01
                    :ARG0 (c3-2 / person
                                :name (c3-18 / name
                                             :op1 "DrThomasPaul"))
                    :ARG1 (c3-4 / person
                                :name (c3-5 / name
                                            :op1 "PLTCPastLives")))
       :snt2 (c3-17 / save-02
                    :ARG0 (c3-3 / i)
                    :ARG1 (c3-15 / person
                                 :quant 3)
                    :ARG2 (c3-11 / kill-01
                                 :ARG1 (c3-13 / lot)
                                 :mod (c3-0 / okay)
                                 :time (c3-20 / year
                                              :mod (c3-10 / last))))
       :snt3 (c3-9 / sad-02
                   :ARG1 (c3-14 / palimino
                                :age (c3-8 / temporal-quantity
                                           :unit c3-20
                                           :quant 3))
                   :mod (c3-19 / just)
                   :accompanier (c3-7 / person
                                      :ARG0-of (c3-6 / have-rel-role-91
                                                     :ARG1 c3-14
                                                     :ARG2 (c3-1 / mom)))))

# ::snt sugarpop35 WPDevTeam that happened during the last depression A sign
# ::tokens ["sugarpop35", "WPDevTeam", "that", "happened", "during", "the", "last", "depression", "A", "sign"]
# ::lemmas ["sugarpop35", "WPDevTeam", "that", "happen", "during", "the", "last", "depression", "a", "sign"]
(c4-6 / multi-sentence
      :snt1 (c4-2 / person
                  :name (c4-8 / name
                              :op1 "sugarpop35")
                  :ARG0-of (c4-5 / have-org-role-91
                                 :ARG1 (c4-0 / organization
                                             :name (c4-3 / name
                                                         :op1 "WPDevTeam"))))
      :snt2 (c4-4 / signal-07
                  :ARG0 (c4-1 / depress-02
                              :mod (c4-7 / last))))

# ::snt PLTCPastLives oh man
# ::tokens ["PLTCPastLives", "oh", "man"]
# ::lemmas ["pltcpastlive", "oh", "man"]
(c5-3 / multi-sentence
      :snt1 (c5-2 / person
                  :name (c5-4 / name
                              :op1 "PLTCPastLives"))
      :snt2 (c5-0 / oh
                  :op1 (c5-1 / man)
                  :mode expressive))

# ::snt PLTCPastLives DrThomasPaul
# ::tokens ["PLTCPastLives", "DrThomasPaul"]
# ::lemmas ["pltcpastlive", "DrThomasPaul"]
(c6-1 / person
      :name (c6-4 / name
                  :op1 "DrThomasPaul")
      :ARG0-of (c6-3 / have-rel-role-91
                     :ARG1 (c6-0 / organization
                                 :name c6-4
                                 :op1 "PLTCPastLives"))
      :ARG2 (c6-2 / member))

# ::snt Why I’m sorry I find this disturbing
# ::tokens ["Why", "I", "\u2019m", "sorry", "I", "find", "this", "disturbing"]
# ::lemmas ["why", "i", "be", "sorry", "i", "find", "this", "disturbing"]
(c7-5 / sorry-01
      :ARG1 (c7-6 / i)
      :ARG2 (c7-4 / find-02
                  :ARG0 c7-6
                  :ARG1 (c7-0 / disturb-01
                              :ARG0 (c7-2 / this)))
      :ARG1-of (c7-1 / cause-01
                     :ARG0 (c7-3 / amr-unknown)))

# ::snt And how do the horses feel about this Im appalled
# ::tokens ["And", "how", "do", "the", "horses", "feel", "about", "this", "I", "m", "appalled"]
# ::lemmas ["and", "how", "do", "the", "horse", "feel", "about", "this", "i", "be", "appal"]
(c8-2 / and
      :op2 (c8-3 / feel-01
                 :ARG0 (c8-4 / horse)
                 :ARG1 (c8-0 / amr-unknown)
                 :ARG2 (c8-1 / this))
      :ARG0-of (c8-6 / appall-01
                     :ARG1 (c8-5 / i)))

# ::snt WPDevTeam is horse meat good protein Doesnt talk about the nutritional value or anything
# ::tokens ["WPDevTeam", "is", "horse", "meat", "good", "protein", "Does", "nt", "talk", "about", "the", "nutritional", "value", "or", "anything"]
# ::lemmas ["WPDevTeam", "be", "horse", "meat", "good", "protein", "do", "not", "talk", "about", "the", "nutritional", "value", "or", "anything"]
(c9-8 / multi-sentence
      :snt1 (c9-3 / protein
                  :domain (c9-1 / product
                                :name (c9-9 / name
                                            :op1 "WPDevTeam"))
                  :ARG1-of (c9-11 / good-02)
                  :consist-of (c9-2 / meat
                                    :source (c9-10 / horse)))
      :snt2 (c9-5 / talk-01
                  :ARG1 (c9-0 / or
                              :op1 (c9-6 / value
                                         :mod (c9-4 / nutrition))
                              :op2 (c9-7 / anything))
                  :polarity -))

# ::snt Not Right At All
# ::tokens ["Not", "Right", "At", "All"]
# ::lemmas ["not", "right", "at", "all"]
(c10-1 / right-06
       :mod (c10-0 / at-all)
       :polarity -)

# ::snt Looks like I might be a vegetarian someday
# ::tokens ["Looks", "like", "I", "might", "be", "a", "vegetarian", "someday"]
# ::lemmas ["look", "like", "i", "may", "be", "a", "vegetarian", "someday"]
(c11-3 / look-02
       :ARG1 (c11-0 / possible-01
                    :ARG1 (c11-1 / vegetarian
                                 :domain (c11-4 / i))
                    :time (c11-2 / someday)))

# ::snt Uh oh
# ::tokens ["Uh", "oh"]
# ::lemmas ["uh", "oh"]
(c12-0 / uh-oh
       :mode expressive)

# ::snt Gross
# ::tokens ["Gross"]
# ::lemmas ["gross"]
(c13-0 / gross)

# ::snt not meI dont eat meatgo organic or at the very least NonGMO gluten free and vegan if you value your health
# ::tokens ["not", "meI", "do", "nt", "eat", "meatgo", "organic", "or", "at", "the", "very", "least", "NonGMO", "gluten", "free", "and", "vegan", "if", "you", "value", "your", "health"]
# ::lemmas ["not", "mei", "do", "not", "eat", "meatgo", "organic", "or", "at", "the", "very", "least", "nongmo", "gluten", "free", "and", "vegan", "if", "you", "value", "your", "health"]
(c14-11 / i
        :ARG0-of (c14-1 / eat-01
                        :ARG1 (c14-7 / meatgo
                                     :mod (c14-0 / organic)
                                     :ARG1-of (c14-6 / free-03
                                                     :ARG2 (c14-5 / and
                                                                  :op1 (c14-10 / gluten)
                                                                  :op2 (c14-3 / vegan))
                                                     :mod (c14-2 / at-least
                                                                 :degree (c14-4 / very))))
                        :condition (c14-9 / value-02
                                          :ARG0 (c14-12 / you)
                                          :ARG1 (c14-8 / health
                                                       :poss c14-12)))
        :polarity -)

# ::snt Lets cry about horse meat while the Pacific Ocean is dead Pick a stance ranger stop being 10 sided
# ::tokens ["Lets", "cry", "about", "horse", "meat", "while", "the", "Pacific", "Ocean", "is", "dead", "Pick", "a", "stance", "ranger", "stop", "being", "10", "sided"]
# ::lemmas ["let", "cry", "about", "horse", "meat", "while", "the", "Pacific", "Ocean", "be", "dead", "Pick", "a", "stance", "ranger", "stop", "be", "10", "side"]
(c15-12 / multi-sentence
        :snt1 (c15-11 / let-01
                      :ARG0 (c15-8 / we)
                      :ARG1 (c15-5 / cry-01
                                   :ARG0 c15-8
                                   :ARG1 (c15-3 / meat
                                                :consist-of (c15-13 / horse))
                                   :time (c15-4 / die-01
                                                :ARG1 (c15-0 / ocean
                                                             :name (c15-14 / name
                                                                           :op1 "Pacific"
                                                                           :op2 "Ocean"))))
                      :mode imperative)
        :snt2 (c15-10 / stop-01
                      :ARG0 (c15-15 / you)
                      :ARG1 (c15-1 / ranger
                                   :ARG0-of (c15-9 / stand-11))
                      :snt3-of c15-12
                      :mode imperative)
        :ARG0 (c15-2 / you)
        :ARG1 (c15-6 / have-mod-91
                     :ARG1 c15-2
                     :ARG2 (c15-7 / ten-sided))
        :mode imperative)

# ::snt Its just meat
# ::tokens ["Its", "just", "meat"]
# ::lemmas ["its", "just", "meat"]
(c16-2 / meat
       :mod (c16-1 / just)
       :domain (c16-0 / it))

# ::snt two thumbs down
# ::tokens ["two", "thumbs", "down"]
# ::lemmas ["two", "thumb", "down"]
(c17-0 / thumbs-down-03
       :quant 2)

# ::snt What a cute unicorn
# ::tokens ["What", "a", "cute", "unicorn"]
# ::lemmas ["what", "a", "cute", "unicorn"]
(c18-1 / unicorn
       :mod (c18-0 / cute
                   :degree (c18-2 / so)))

# ::snt Totally vegan  Id like to make a suggestion for replacing the meat that is eaten now but Ill save it for another day
# ::tokens ["Totally", "vegan", " ", "I", "d", "like", "to", "make", "a", "suggestion", "for", "replacing", "the", "meat", "that", "is", "eaten", "now", "but", "Ill", "save", "it", "for", "another", "day"]
# ::lemmas ["totally", "vegan", " ", "i", "d", "like", "to", "make", "a", "suggestion", "for", "replace", "the", "meat", "that", "be", "eat", "now", "but", "Ill", "save", "it", "for", "another", "day"]
(c19-9 / multi-sentence
       :snt1 (c19-5 / vegan
                    :degree (c19-4 / total))
       :snt2 (c19-10 / like-02
                     :ARG0 (c19-12 / i)
                     :ARG1 (c19-8 / suggest-01
                                  :ARG0 c19-12
                                  :ARG1 (c19-0 / replace-01
                                               :ARG1 (c19-1 / meat
                                                            :ARG1-of (c19-3 / eat-01
                                                                            :time (c19-11 / now)))))
                     :concession-of (c19-6 / save-01
                                           :ARG0 c19-12
                                           :ARG1 c19-1
                                           :duration (c19-2 / day
                                                            :mod (c19-7 / another)))))

# ::snt Oh no mister Ed
# ::tokens ["Oh", "no", "mister", "Ed"]
# ::lemmas ["oh", "no", "mister", "Ed"]
(c20-3 / say-01
       :ARG0 (c20-7 / i)
       :ARG1 (c20-6 / no
                    :mod (c20-0 / oh
                                :mode expressive))
       :ARG2 (c20-1 / person
                    :name (c20-2 / name
                                 :op1 "Ed")
                    :ARG0-of (c20-4 / have-rel-role-91
                                    :ARG2 (c20-5 / mister))))

# ::snt WPDevTeam Always slaughterhouses  more suffering of animalsbad
# ::tokens ["WPDevTeam", "Always", "slaughterhouses", " ", "more", "suffering", "of", "animalsbad"]
# ::lemmas ["WPDevTeam", "always", "slaughterhouse", " ", "more", "suffering", "of", "animalsbad"]
(c21-6 / multi-sentence
       :snt1 (c21-5 / slaughterhouse
                    :domain (c21-2 / team
                                   :name (c21-8 / name
                                                :op1 "WPDevTeam"))
                    :time (c21-4 / always))
       :snt2 (c21-3 / suffer-01
                    :ARG0 (c21-1 / animal
                                 :ARG1-of (c21-9 / bad-07))
                    :ARG1-of (c21-7 / have-quant-91
                                    :ARG3 (c21-0 / more))))

# ::snt they did earlier in the ancient times already better meat than beef chicken and pork
# ::tokens ["they", "did", "earlier", "in", "the", "ancient", "times", "already", "better", "meat", "than", "beef", "chicken", "and", "pork"]
# ::lemmas ["they", "do", "early", "in", "the", "ancient", "time", "already", "well", "meat", "than", "beef", "chicken", "and", "pork"]
(c22-3 / do-02
       :ARG0 (c22-7 / they)
       :time (c22-0 / before)
       :time (c22-12 / time
                     :mod (c22-8 / ancient))
       :time-of (c22-9 / have-degree-91
                       :ARG1 (c22-10 / meat)
                       :ARG2 (c22-11 / good-02
                                     :ARG1 c22-10)
                       :ARG3 (c22-2 / more)
                       :ARG4 (c22-6 / and
                                    :op1 (c22-4 / chicken)
                                    :op2 (c22-5 / pork)
                                    :mod (c22-1 / beef))
                       :time (c22-13 / already)))

# ::snt wild horses
# ::tokens ["wild", "horses"]
# ::lemmas ["wild", "horse"]
(c23-0 / horse
       :mod (c23-1 / wild))

# ::snt When they say grass fed does that means horse meat How will we know  Will the USDA allow labeling
# ::tokens ["When", "they", "say", "grass", "fed", "does", "that", "means", "horse", "meat", "How", "will", "we", "know", " ", "Will", "the", "USDA", "allow", "labeling"]
# ::lemmas ["when", "they", "say", "grass", "fed", "do", "that", "mean", "horse", "meat", "how", "will", "we", "know", " ", "will", "the", "USDA", "allow", "labeling"]
(c24-9 / multi-sentence
       :snt1 (c24-8 / know-01
                    :ARG0 (c24-5 / we)
                    :ARG1 (c24-0 / mean-01
                                 :ARG1 (c24-7 / feed-01
                                              :ARG1 (c24-13 / grass))
                                 :ARG2 (c24-14 / meat
                                               :source (c24-10 / horse)))
                    :manner (c24-6 / amr-unknown)
                    :time (c24-11 / say-01
                                  :ARG0 (c24-4 / they)
                                  :ARG1 (c24-1 / do-02
                                               :ARG0 c24-7)))
       :snt2 (c24-3 / allow-01
                    :ARG0 (c24-2 / government-organization
                                 :name (c24-16 / name
                                               :op1 "USDA"))
                    :ARG1 (c24-12 / label-01)
                    :polarity (c24-15 / amr-unknown)))

# ::snt WPDevTeam Gross Well the movie O brother where are Thou wasnt to far off Great movie if youve never seen it
# ::tokens ["WPDevTeam", "Gross", "Well", "the", "movie", "O", "brother", "where", "are", "Thou", "was", "nt", "to", "far", "off", "Great", "movie", "if", "you", "ve", "never", "seen", "it"]
# ::lemmas ["wpdevteam", "Gross", "well", "the", "movie", "o", "brother", "where", "be", "Thou", "be", "not", "to", "far", "off", "great", "movie", "if", "you", "have", "never", "see", "it"]
(c25-8 / multi-sentence
       :snt1 (c25-2 / person
                    :name (c25-10 / name
                                  :op1 "WPDevTeam"
                                  :op2 "Gross"))
       :snt2 (c25-7 / have-condition-91
                    :ARG1 (c25-11 / be-located-at-91
                                  :ARG1 c25-2
                                  :name (c25-3 / name
                                               :op1 "O"
                                               :op2 "Brother")
                                  :polarity -)
                    :ARG2 (c25-0 / off
                                 :mod (c25-5 / far)))
       :ARG2 (c25-6 / see-01
                    :ARG0 (c25-12 / you)
                    :ARG1 (c25-1 / movie
                                 :mod (c25-9 / great))
                    :time (c25-4 / ever)
                    :polarity -))

# ::snt WOW hope they are required to actually label it as horse meat Whats next up for approval
# ::tokens ["WOW", "hope", "they", "are", "required", "to", "actually", "label", "it", "as", "horse", "meat", "What", "s", "next", "up", "for", "approval"]
# ::lemmas ["wow", "hope", "they", "be", "require", "to", "actually", "label", "it", "as", "horse", "meat", "what", "s", "next", "up", "for", "approval"]
(c26-7 / hope-01
       :ARG1 (c26-0 / require-01
                    :ARG1 (c26-6 / label-01
                                 :ARG0 (c26-3 / they)
                                 :ARG1 (c26-10 / it)
                                 :ARG2 (c26-8 / meat
                                              :mod (c26-1 / horse))
                                 :ARG1-of (c26-5 / actual-02))
                    :ARG2 c26-3
                    :purpose (c26-2 / approve-01
                                    :ARG1 c26-6)
                    :time (c26-9 / next))
       :mod (c26-4 / wow
                   :mode expressive))

# ::snt No way This sucks
# ::tokens ["No", "way", "This", "sucks"]
# ::lemmas ["no", "way", "this", "suck"]
(c27-2 / way
       :manner-of (c27-1 / suck-03
                         :ARG0 (c27-0 / this))
       :polarity -)

# ::snt No thank you
# ::tokens ["No", "thank", "you"]
# ::lemmas ["no", "thank", "you"]
(c28-2 / thank-01
       :ARG0 (c28-1 / i)
       :ARG1 (c28-3 / you)
       :mod (c28-0 / no))

# ::snt Got recipes Perfect for my paleo diet
# ::tokens ["Got", "recipes", "Perfect", "for", "my", "paleo", "diet"]
# ::lemmas ["Got", "recipe", "perfect", "for", "my", "paleo", "diet"]
(c29-4 / get-02
       :ARG0 (c29-5 / i)
       :ARG1 (c29-0 / recipe
                    :ARG1-of (c29-3 / perfect-02
                                    :ARG2 (c29-2 / diet
                                                 :mod (c29-1 / paleo)
                                                 :poss c29-5))))

# ::snt It’s not nice to think about but it’s leaner and healthier than beef
# ::tokens ["It", "\u2019s", "not", "nice", "to", "think", "about", "but", "it", "\u2019s", "leaner", "and", "healthier", "than", "beef"]
# ::lemmas ["it", "\u2019", "not", "nice", "to", "think", "about", "but", "it", "\u2019", "lean", "and", "healthy", "than", "beef"]
(c30-1 / contrast-01
       :ARG1 (c30-9 / nice-01
                    :ARG1 (c30-4 / think-01
                                 :ARG1 (c30-10 / it))
                    :polarity -)
       :ARG2 (c30-5 / and
                    :op1 (c30-6 / lean-01
                                :ARG1 c30-10
                                :ARG2-of (c30-7 / have-degree-91
                                                :ARG1 c30-10
                                                :ARG3 (c30-8 / more)
                                                :ARG4 (c30-11 / beef)))
                    :op2 (c30-2 / have-degree-91
                                :ARG1 c30-10
                                :ARG2 (c30-3 / healthy)
                                :ARG3 (c30-0 / more)
                                :ARG4 c30-11)))

# ::snt Meat eaters should be used for human consumption  Poor animals
# ::tokens ["Meat", "eaters", "should", "be", "used", "for", "human", "consumption", " ", "Poor", "animals"]
# ::lemmas ["meat", "eater", "should", "be", "use", "for", "human", "consumption", " ", "poor", "animal"]
(c31-8 / multi-sentence
       :snt1 (c31-0 / recommend-01
                    :ARG1 (c31-4 / use-01
                                 :ARG1 (c31-3 / person
                                              :ARG0-of (c31-5 / eat-01
                                                              :ARG1 (c31-2 / meat)))
                                 :ARG2 (c31-6 / consume-01
                                              :ARG0 (c31-9 / human)
                                              :ARG1 c31-2)))
       :snt2 (c31-7 / animal
                    :mod (c31-1 / poor)))

# ::snt Alistairovereem
# ::tokens ["Alistairovereem"]
# ::lemmas ["Alistairovereem"]
(c32-0 / person
       :name (c32-1 / name
                    :op1 "Alistairovereem"))

# ::snt go vegan dont eat any animals
# ::tokens ["go", "vegan", "do", "nt", "eat", "any", "animals"]
# ::lemmas ["go", "vegan", "do", "not", "eat", "any", "animal"]
(c33-3 / and
       :op1 (c33-2 / vegan
                   :domain (c33-5 / you)
                   :mode imperative)
       :op2 (c33-0 / eat-01
                   :ARG0 c33-5
                   :ARG1 (c33-1 / animal
                                :mod (c33-4 / any))
                   :polarity -
                   :mode imperative))

# ::snt I cant
# ::tokens ["I", "ca", "nt"]
# ::lemmas ["i", "can", "not"]
(c34-0 / possible-01
       :ARG1 (c34-1 / i)
       :polarity -)

# ::snt I guess if its already happened elicitly in Europe so if they cant beat it  then just move the goal post and make it legal
# ::tokens ["I", "guess", "if", "its", "already", "happened", "elicitly", "in", "Europe", "so", "if", "they", "ca", "nt", "beat", "it", " ", "then", "just", "move", "the", "goal", "post", "and", "make", "it", "legal"]
# ::lemmas ["i", "guess", "if", "its", "already", "happen", "elicitly", "in", "Europe", "so", "if", "they", "can", "not", "beat", "it", " ", "then", "just", "move", "the", "goal", "post", "and", "make", "it", "legal"]
(c35-16 / guess-01
        :ARG0 (c35-17 / i)
        :ARG1 (c35-14 / have-condition-91
                      :ARG1 (c35-12 / and
                                    :op1 (c35-13 / move-01
                                                 :ARG1 (c35-5 / post
                                                              :mod (c35-6 / goal))
                                                 :mod (c35-18 / just))
                                    :op2 (c35-4 / make-02
                                                :ARG1 (c35-15 / legal-02
                                                              :ARG1 (c35-1 / it))))
                      :ARG2 (c35-7 / have-condition-91
                                   :ARG1 (c35-0 / be-temporally-at-91
                                                :ARG1 c35-1
                                                :ARG2 (c35-8 / already)
                                                :manner (c35-9 / elicit)
                                                :location (c35-10 / continent
                                                                  :name (c35-19 / name
                                                                                :op1 "Europe")))
                                   :ARG2 (c35-2 / possible-01
                                                :ARG1 (c35-3 / beat-03
                                                             :ARG0 (c35-11 / they)
                                                             :ARG1 c35-1)
                                                :polarity -))))

# ::snt Disgusting Its pure barbary
# ::tokens ["Disgusting", "Its", "pure", "barbary"]
# ::lemmas ["disgust", "its", "pure", "barbary"]
(c36-0 / disgust-01
       :ARG0 (c36-3 / barbary
                    :ARG1-of (c36-1 / pure-02)
                    :domain (c36-2 / it)))

# ::snt Oh God NO
# ::tokens ["Oh", "God", "NO"]
# ::lemmas ["oh", "God", "no"]
(c37-1 / no
       :mod (c37-0 / oh
                   :mod (c37-3 / person
                               :name (c37-2 / name
                                            :op1 "God"))
                   :mode expressive))

# ::snt good this will draw more people towards veganism
# ::tokens ["good", "this", "will", "draw", "more", "people", "towards", "veganism"]
# ::lemmas ["good", "this", "will", "draw", "more", "people", "towards", "veganism"]
(c38-5 / good-02
       :ARG1 (c38-0 / draw-02
                    :ARG0 (c38-2 / this)
                    :ARG1 (c38-1 / person
                                 :quant (c38-4 / more))
                    :ARG2 (c38-3 / veganism)))

# ::snt finally
# ::tokens ["finally"]
# ::lemmas ["finally"]
(c39-0 / final)

# ::snt love that USDA
# ::tokens ["love", "that", "USDA"]
# ::lemmas ["love", "that", "USDA"]
(c40-2 / love-01
       :ARG0 (c40-1 / i)
       :ARG1 (c40-0 / government-organization
                    :name (c40-3 / name
                                 :op1 "USDA")))

# ::snt Thank you Chris
# ::tokens ["Thank", "you", "Chris"]
# ::lemmas ["thank", "you", "Chris"]
(c41-2 / say-01
       :ARG0 (c41-4 / i)
       :ARG1 (c41-1 / thank-01
                    :ARG0 c41-4
                    :ARG1 (c41-0 / person
                                 :name (c41-3 / name
                                              :op1 "Chris")
                                 :ARG2-of c41-2)))

# ::snt ERIN KELLY  USA TODAY  412 pm EDT March 26 2018 WASHINGTON — A ban on slaughtering horses for meat has been renewed after a group of bipartisan animal lovers in Congress got it included in a massive spending bill that President Trump signed last week “Not legal in the USA”
# ::tokens ["ERIN", "KELLY", " ", "USA", "TODAY", " ", "412", "pm", "EDT", "March", "26", "2018", "WASHINGTON", "\u2014", "A", "ban", "on", "slaughtering", "horses", "for", "meat", "has", "been", "renewed", "after", "a", "group", "of", "bipartisan", "animal", "lovers", "in", "Congress", "got", "it", "included", "in", "a", "massive", "spending", "bill", "that", "President", "Trump", "signed", "last", "week", "\u201c", "Not", "legal", "in", "the", "USA", "\u201d"]
# ::lemmas ["ERIN", "KELLY", " ", "USA", "TODAY", " ", "412", "pm", "EDT", "March", "26", "2018", "WASHINGTON", "\u2014", "a", "ban", "on", "slaughter", "horse", "for", "meat", "have", "be", "renew", "after", "a", "group", "of", "bipartisan", "animal", "lover", "in", "Congress", "get", "it", "include", "in", "a", "massive", "spending", "bill", "that", "President", "Trump", "sign", "last", "week", "\"", "not", "legal", "in", "the", "USA", "\""]
(c42-34 / say-01
        :ARG0 (c42-3 / person
                     :name (c42-16 / name
                                   :op1 "Erin"
                                   :op2 "Kelly")
                     :ARG0-of (c42-15 / have-org-role-91
                                      :ARG1 (c42-6 / publication
                                                   :name (c42-11 / name
                                                                 :op1 "USA"
                                                                 :op2 "Today"))))
        :ARG1 (c42-0 / renew-01
                     :ARG1 (c42-26 / ban-01
                                   :ARG1 (c42-21 / slaughter-01
                                                 :ARG1 (c42-12 / horse)
                                                 :purpose (c42-23 / meat)))
                     :time (c42-33 / after
                                   :op1 (c42-37 / get-04
                                                :ARG0 (c42-18 / group
                                                              :consist-of (c42-28 / person
                                                                                  :ARG0-of (c42-24 / love-01
                                                                                                   :ARG1 (c42-20 / animal))
                                                                                  :mod (c42-29 / bipartisan)
                                                                                  :location (c42-7 / government-organization
                                                                                                   :name (c42-1 / name
                                                                                                                :op1 "Congress"))))
                                                :ARG1 (c42-5 / include-01
                                                             :ARG1 c42-26
                                                             :ARG2 (c42-8 / bill
                                                                          :ARG3-of (c42-31 / spend-01)
                                                                          :mod (c42-2 / massive)
                                                                          :ARG1-of (c42-27 / sign-01
                                                                                           :ARG0 (c42-25 / person
                                                                                                         :name (c42-9 / name
                                                                                                                      :op1 "Trump")
                                                                                                         :ARG0-of (c42-19 / have-org-role-91
                                                                                                                          :ARG2 (c42-17 / president)))
                                                                                           :time (c42-4 / week
                                                                                                        :mod (c42-22 / last)))
                                                                          :ARG0-of (c42-14 / say-01
                                                                                           :ARG1 (c42-13 / legal-02
                                                                                                         :location (c42-10 / country
                                                                                                                           :name (c42-32 / name
                                                                                                                                         :op1 "USA"))
                                                                                                         :polarity -))))))
                     :time (c42-30 / date-entity
                                   :location (c42-35 / city
                                                     :name (c42-36 / name
                                                                   :op1 "Washington"))
                                   :month 3
                                   :day 26
                                   :year 2018)))

# ::snt I didnt fact check it yet I will and if true I want to know what could be done to stop this  I would never eat that I will be rescuing horses someday on the land my husband and I purchased That story is horrifying
# ::tokens ["I", "did", "nt", "fact", "check", "it", "yet", "I", "will", "and", "if", "true", "I", "want", "to", "know", "what", "could", "be", "done", "to", "stop", "this", " ", "I", "would", "never", "eat", "that", "I", "will", "be", "rescuing", "horses", "someday", "on", "the", "land", "my", "husband", "and", "I", "purchased", "That", "story", "is", "horrifying"]
# ::lemmas ["i", "do", "not", "fact", "check", "it", "yet", "i", "will", "and", "if", "true", "i", "want", "to", "know", "what", "could", "be", "do", "to", "stop", "this", " ", "i", "would", "never", "eat", "that", "i", "will", "be", "rescue", "horse", "someday", "on", "the", "land", "my", "husband", "and", "i", "purchase", "that", "story", "be", "horrify"]
(c43-20 / multi-sentence
        :snt1 (c43-7 / check-01
                     :ARG0 (c43-4 / i)
                     :ARG1 (c43-13 / it)
                     :mod (c43-31 / yet)
                     :polarity -)
        :snt2 (c43-27 / and
                      :op1 (c43-29 / check-01
                                   :ARG0 (c43-11 / i)
                                   :ARG1 (c43-28 / fact)
                                   :time c43-31))
        :op2 (c43-3 / want-01
                    :ARG0 c43-11
                    :ARG1 (c43-19 / know-01
                                  :ARG0 c43-11
                                  :ARG1 (c43-16 / thing
                                                :ARG1-of (c43-25 / do-02
                                                                 :ARG2 (c43-30 / stop-01
                                                                               :ARG1 (c43-5 / this))
                                                                 :ARG1-of (c43-1 / possible-01))))
                    :condition (c43-9 / true-01
                                      :ARG1 (c43-15 / and
                                                    :op1 (c43-2 / eat-01
                                                                :ARG0 c43-11
                                                                :time (c43-18 / ever)
                                                                :polarity -)
                                                    :op2 (c43-0 / rescue-01
                                                                :ARG0 c43-11
                                                                :ARG1 (c43-10 / horse)
                                                                :time (c43-17 / someday)
                                                                :location (c43-21 / land
                                                                                  :ARG1-of (c43-6 / purchase-01
                                                                                                  :ARG0 (c43-22 / and
                                                                                                                :op1 (c43-23 / person
                                                                                                                             :ARG0-of (c43-8 / have-rel-role-91
                                                                                                                                             :ARG1 c43-11
                                                                                                                                             :ARG2 (c43-14 / husband)))
                                                                                                                :op2 c43-11)))))))
        :snt3 (c43-12 / horrify-01
                      :ARG0 (c43-26 / story
                                    :mod (c43-24 / that))))

# ::snt You’re probably singing to the choir I’m a vegetarian
# ::tokens ["You", "\u2019re", "probably", "singing", "to", "the", "choir", "I", "\u2019m", "a", "vegetarian"]
# ::lemmas ["you", "be", "probably", "singe", "to", "the", "choir", "i", "be", "a", "vegetarian"]
(c44-3 / sing-01
       :ARG0 (c44-5 / you)
       :ARG2 (c44-0 / choir)
       :mod (c44-1 / probable)
       :ARG1-of (c44-4 / cause-01
                       :ARG0 (c44-2 / vegetarian
                                    :domain c44-5)))

# ::snt Try to treat a pig or a cow in the same way you’re treating your horse or dog and you’ll see very small difference in intelligence animals in between
# ::tokens ["Try", "to", "treat", "a", "pig", "or", "a", "cow", "in", "the", "same", "way", "you", "\u2019re", "treating", "your", "horse", "or", "dog", "and", "you", "\u2019ll", "see", "very", "small", "difference", "in", "intelligence", "animals", "in", "between"]
# ::lemmas ["try", "to", "treat", "a", "pig", "or", "a", "cow", "in", "the", "same", "way", "you", "be", "treat", "your", "horse", "or", "dog", "and", "you", "will", "see", "very", "small", "difference", "in", "intelligence", "animal", "in", "between"]
(c45-15 / have-condition-91
        :ARG1 (c45-14 / see-01
                      :ARG0 (c45-18 / you)
                      :ARG1 (c45-2 / differ-02
                                   :ARG1 (c45-10 / animal
                                                 :mod (c45-16 / intelligent))
                                   :ARG2 (c45-6 / animal
                                                :mod c45-16)
                                   :mod (c45-9 / small
                                               :degree (c45-8 / very))))
        :ARG2 (c45-7 / try-01
                     :ARG0 c45-18
                     :ARG1 (c45-17 / treat-01
                                   :ARG0 c45-18
                                   :ARG1 (c45-0 / or
                                                :op1 (c45-3 / pig)
                                                :op2 (c45-4 / cow))
                                   :manner (c45-11 / same-01
                                                   :ARG2 (c45-12 / treat-01
                                                                 :ARG0 c45-18
                                                                 :ARG1 (c45-1 / or
                                                                              :op1 (c45-5 / horse)
                                                                              :op2 (c45-13 / dog)
                                                                              :poss c45-18))))
                     :mode imperative))

# ::snt Did you fact check that That is utterly disgusting and disturbing That’s like eating a dog Horses are so intelligent this is a horrible article I hope you’re wrong Ugh Thank God I’m a vegetarian
# ::tokens ["Did", "you", "fact", "check", "that", "That", "is", "utterly", "disgusting", "and", "disturbing", "That", "\u2019s", "like", "eating", "a", "dog", "Horses", "are", "so", "intelligent", "this", "is", "a", "horrible", "article", "I", "hope", "you", "\u2019re", "wrong", "Ugh", "Thank", "God", "I", "\u2019m", "a", "vegetarian"]
# ::lemmas ["do", "you", "fact", "check", "that", "that", "be", "utterly", "disgusting", "and", "disturbing", "that", "\u2019", "like", "eat", "a", "dog", "horse", "be", "so", "intelligent", "this", "be", "a", "horrible", "article", "i", "hope", "you", "be", "wrong", "ugh", "thank", "God", "i", "be", "a", "vegetarian"]
(c46-20 / multi-sentence
        :snt1 (c46-9 / check-01
                     :ARG0 (c46-7 / you)
                     :ARG1 (c46-25 / and
                                   :op1 (c46-23 / disgust-01
                                                :ARG0 (c46-19 / that)
                                                :ARG1-of (c46-2 / utter-02))
                                   :op2 (c46-26 / disturb-01
                                                :ARG0 c46-19))
                     :mod (c46-27 / fact)
                     :polarity (c46-18 / amr-unknown))
        :snt2 (c46-0 / resemble-01
                     :ARG1 (c46-6 / that)
                     :ARG2 (c46-1 / eat-01
                                  :ARG1 (c46-30 / dog)))
        :snt3 (c46-12 / have-degree-91
                      :ARG1 (c46-10 / horse)
                      :ARG2 (c46-5 / intelligent-01
                                   :ARG1 c46-10)
                      :ARG3 (c46-28 / so))
        :snt4 (c46-21 / article
                      :mod (c46-17 / horrible)
                      :domain (c46-11 / this))
        :snt5 (c46-15 / hope-01
                      :ARG0 (c46-16 / i)
                      :ARG1 (c46-4 / wrong-04
                                   :ARG1 (c46-8 / you)))
        :snt6 (c46-22 / thank-01
                      :ARG0 (c46-13 / i)
                      :ARG1 (c46-3 / person
                                   :name (c46-29 / name
                                                 :op1 "God")))
        :snt7 (c46-24 / vegetarian
                      :domain c46-13)
        :snt8 (c46-14 / ugh
                      :mode expressive))

# ::snt All fast food places will now add it
# ::tokens ["All", "fast", "food", "places", "will", "now", "add", "it"]
# ::lemmas ["all", "fast", "food", "place", "will", "now", "add", "it"]
(c47-3 / add-02
       :ARG0 (c47-1 / place
                    :mod (c47-4 / food
                                :ARG1-of (c47-0 / fast-02))
                    :mod (c47-2 / all))
       :ARG1 (c47-6 / it)
       :time (c47-5 / now))

# ::snt Feed it to the entire USDA administration and Congress for a year first then tell us about it
# ::tokens ["Feed", "it", "to", "the", "entire", "USDA", "administration", "and", "Congress", "for", "a", "year", "first", "then", "tell", "us", "about", "it"]
# ::lemmas ["feed", "it", "to", "the", "entire", "USDA", "administration", "and", "Congress", "for", "a", "year", "first", "then", "tell", "us", "about", "it"]
(c48-8 / and
       :op1 (c48-10 / feed-01
                    :ARG0 (c48-16 / you)
                    :ARG1 (c48-13 / it)
                    :ARG2 (c48-5 / and
                                 :op1 (c48-12 / government-organization
                                              :ARG0-of (c48-15 / administer-01
                                                               :ARG1 (c48-3 / government-organization
                                                                            :name (c48-11 / name
                                                                                          :op1 "USDA"))))
                                 :op2 (c48-0 / government-organization
                                             :name (c48-4 / name
                                                          :op1 "Congress"))
                                 :mod (c48-2 / entire))
                    :duration (c48-6 / temporal-quantity
                                     :unit (c48-1 / year)
                                     :quant 1)
                    :mode imperative)
       :op2 (c48-14 / tell-01
                    :ARG0 c48-16
                    :ARG1 c48-13
                    :ARG2 (c48-7 / we)
                    :time (c48-9 / then)
                    :mode imperative))

# ::snt As a plant based vegan I am speechless once more
# ::tokens ["As", "a", "plant", "based", "vegan", "I", "am", "speechless", "once", "more"]
# ::lemmas ["as", "a", "plant", "base", "vegan", "i", "be", "speechless", "once", "more"]
(c49-4 / speechless
       :domain (c49-5 / i
                      :mod (c49-2 / vegan
                                  :ARG1-of (c49-6 / base-02
                                                  :ARG2 (c49-1 / plant))))
       :mod (c49-3 / again
                   :mod (c49-0 / once)))

# ::snt  Terrible
# ::tokens [" ", "Terrible"]
# ::lemmas [" ", "Terrible"]
(c50-0 / horrible)
