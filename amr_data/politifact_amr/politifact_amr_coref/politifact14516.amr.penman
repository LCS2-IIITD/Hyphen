# ::snt It would be impossible to give any relief supplies to this mosque since it doesnt exist  Do you research anything
# ::tokens ["It", "would", "be", "impossible", "to", "give", "any", "relief", "supplies", "to", "this", "mosque", "since", "it", "does", "nt", "exist", " ", "Do", "you", "research", "anything"]
# ::lemmas ["it", "would", "be", "impossible", "to", "give", "any", "relief", "supply", "to", "this", "mosque", "since", "it", "do", "not", "exist", " ", "do", "you", "research", "anything"]
(c1-9 / multi-sentence
      :snt1 (c1-2 / possible-01
                  :ARG1 (c1-10 / give-01
                               :ARG1 (c1-8 / supply-01
                                           :ARG2 (c1-1 / mosque
                                                       :mod (c1-5 / this))
                                           :ARG0-of (c1-0 / relieve-01))
                               :ARG2 c1-1)
                  :ARG1-of (c1-3 / cause-01
                                 :ARG0 (c1-4 / exist-01
                                             :ARG1 c1-1
                                             :polarity -))
                  :polarity -)
      :snt2 (c1-7 / research-01
                  :ARG0 (c1-11 / you)
                  :ARG1 (c1-6 / anything)))

# ::snt I wouldnt give anything to any mosque bc if its happening in one you can be sure its happening in others
# ::tokens ["I", "would", "nt", "give", "anything", "to", "any", "mosque", "bc", "if", "its", "happening", "in", "one", "you", "can", "be", "sure", "its", "happening", "in", "others"]
# ::lemmas ["i", "would", "not", "give", "anything", "to", "any", "mosque", "bc", "if", "its", "happening", "in", "one", "you", "can", "be", "sure", "its", "happening", "in", "other"]
(c2-2 / cause-01
      :ARG0 (c2-3 / possible-01
                  :ARG1 (c2-8 / sure-02
                              :ARG0 (c2-12 / you)
                              :ARG1 (c2-4 / event
                                          :location (c2-9 / mosque
                                                          :mod (c2-6 / any)))
                              :condition (c2-7 / event
                                               :location (c2-1 / mosque
                                                               :mod (c2-0 / other)))))
      :ARG1 (c2-10 / give-01
                   :ARG0 (c2-11 / i)
                   :ARG1 (c2-5 / anything)
                   :ARG2 c2-1
                   :polarity -))

# ::snt Lying  cheating your way in Islam is lawful nothing to see here pretty disturbing if you ask melet that one sink in
# ::tokens ["Lying", " ", "cheating", "your", "way", "in", "Islam", "is", "lawful", "nothing", "to", "see", "here", "pretty", "disturbing", "if", "you", "ask", "melet", "that", "one", "sink", "in"]
# ::lemmas ["lie", " ", "cheat", "your", "way", "in", "Islam", "be", "lawful", "nothing", "to", "see", "here", "pretty", "disturbing", "if", "you", "ask", "melet", "that", "one", "sink", "in"]
(c3-8 / and
      :op1 (c3-11 / lawful
                  :domain (c3-9 / lie-08
                                :ARG0 (c3-14 / you)
                                :ARG1 (c3-3 / cheat-03
                                            :ARG0 c3-14
                                            :ARG1 (c3-7 / way
                                                        :poss c3-14
                                                        :mod (c3-1 / religious-group
                                                                   :name (c3-12 / name
                                                                                :op1 "Islam"))))))
      :op2 (c3-2 / disturb-01
                 :ARG0 c3-9
                 :degree (c3-4 / pretty)
                 :condition (c3-5 / ask-02
                                  :ARG0 c3-14
                                  :ARG1 (c3-10 / sink-in-00
                                               :ARG0 (c3-0 / one
                                                           :mod (c3-6 / that)))
                                  :ARG2 (c3-13 / i))))

# ::snt CNN People donated to Harvey victims
# ::tokens ["CNN", "People", "donated", "to", "Harvey", "victims"]
# ::lemmas ["CNN", "people", "donate", "to", "Harvey", "victim"]
(c4-3 / donate-01
      :ARG0 (c4-4 / person
                  :ARG0-of (c4-7 / have-org-role-91
                                 :ARG1 (c4-1 / publication
                                             :name (c4-8 / name
                                                         :op1 "CNN"))))
      :ARG2 (c4-0 / person
                  :ARG1-of (c4-6 / victimize-01
                                 :ARG0 (c4-5 / natural-disaster
                                             :name (c4-2 / name
                                                         :op1 "Harvey")))))

# ::snt This story is untrue
# ::tokens ["This", "story", "is", "untrue"]
# ::lemmas ["this", "story", "be", "untrue"]
(c5-2 / true-01
      :ARG1 (c5-0 / story
                  :mod (c5-1 / this))
      :polarity -)

# ::snt Like isnt this fraud
# ::tokens ["Like", "is", "nt", "this", "fraud"]
# ::lemmas ["like", "be", "not", "this", "fraud"]
(c6-2 / resemble-01
      :ARG2 (c6-0 / defraud-01
                  :mod (c6-3 / this)
                  :polarity (c6-1 / amr-unknown)
                  :polarity -))

# ::snt This story is not true
# ::tokens ["This", "story", "is", "not", "true"]
# ::lemmas ["this", "story", "be", "not", "true"]
(c7-2 / true-01
      :ARG1 (c7-0 / story
                  :mod (c7-1 / this))
      :polarity -)

# ::snt Not surprised
# ::tokens ["Not", "surprised"]
# ::lemmas ["not", "surprised"]
(c8-0 / surprise-01
      :polarity -)

# ::snt This is just plain not true and Im ashamed to share a last name with you httpwwwbusiness2communitycomusnewsgeorgiamosquesendinghurricaneharveydonationssyrianrefugeesfakenews019148452bbTEJX7mJiUPUI797 …
# ::tokens ["This", "is", "just", "plain", "not", "true", "and", "I", "m", "ashamed", "to", "share", "a", "last", "name", "with", "you", "httpwwwbusiness2communitycomusnewsgeorgiamosquesendinghurricaneharveydonationssyrianrefugeesfakenews019148452bbTEJX7mJiUPUI797", "\u2026"]
# ::lemmas ["this", "be", "just", "plain", "not", "true", "and", "i", "be", "ashamed", "to", "share", "a", "last", "name", "with", "you", "httpwwwbusiness2communitycomusnewsgeorgiamosquesendinghurricaneharveydonationssyrianrefugeesfakenews019148452bbTEJX7mJiUPUI797", "\u2026"]
(c9-4 / and
      :op1 (c9-2 / true-01
                 :ARG1 (c9-1 / this)
                 :mod (c9-0 / plain
                            :mod (c9-9 / just))
                 :polarity -)
      :op2 (c9-5 / shame-02
                 :ARG0 (c9-3 / share-01
                             :ARG0 (c9-8 / i)
                             :ARG1 (c9-7 / name
                                         :mod (c9-6 / last))
                             :ARG2 (c9-10 / you))
                 :ARG1 c9-8))

# ::snt Not surprised  That none of you researched the story or that a mosque that doesnt exist in a town that doesnt exist got supplies
# ::tokens ["Not", "surprised", " ", "That", "none", "of", "you", "researched", "the", "story", "or", "that", "a", "mosque", "that", "does", "nt", "exist", "in", "a", "town", "that", "does", "nt", "exist", "got", "supplies"]
# ::lemmas ["not", "surprised", " ", "that", "none", "of", "you", "research", "the", "story", "or", "that", "a", "mosque", "that", "do", "not", "exist", "in", "a", "town", "that", "do", "not", "exist", "get", "supply"]
(c10-6 / surprise-01
       :ARG0 (c10-0 / or
                    :op1 (c10-1 / research-01
                                :ARG0 (c10-9 / none
                                             :ARG1-of (c10-10 / include-91
                                                              :ARG2 (c10-12 / you)))
                                :ARG1 (c10-5 / story))
                    :op2 (c10-8 / get-01
                                :ARG0 (c10-7 / mosque
                                             :ARG1-of (c10-2 / exist-01
                                                             :location (c10-3 / town)
                                                             :polarity -))
                                :ARG1 (c10-11 / thing
                                              :ARG1-of (c10-4 / supply-01))))
       :polarity -)

# ::snt Wow
# ::tokens ["Wow"]
# ::lemmas ["wow"]
(c11-0 / wow
       :mode expressive)

# ::snt SoCalEdgyGal DailyNotifyCom  wow
# ::tokens ["SoCalEdgyGal", "DailyNotifyCom", " ", "wow"]
# ::lemmas ["SoCalEdgyGal", "DailyNotifyCom", " ", "wow"]
(c12-3 / say-01
       :ARG1 (c12-2 / wow
                    :mode expressive)
       :ARG2 (c12-1 / person
                    :name (c12-4 / name
                                 :op1 "SoCalEdgyGal"))
       :medium (c12-0 / publication
                      :name c12-4
                      :op1 "DailyNotifyCom"))

# ::snt I donated to Harvey victims but I sure wouldnt go to a mosque to do it
# ::tokens ["I", "donated", "to", "Harvey", "victims", "but", "I", "sure", "would", "nt", "go", "to", "a", "mosque", "to", "do", "it"]
# ::lemmas ["i", "donate", "to", "Harvey", "victim", "but", "i", "sure", "would", "not", "go", "to", "a", "mosque", "to", "do", "it"]
(c13-0 / donate-01
       :ARG0 (c13-8 / i)
       :ARG2 (c13-2 / victim
                    :mod (c13-7 / natural-disaster
                                :name (c13-1 / name
                                             :op1 "Harvey")))
       :concession-of (c13-6 / go-02
                             :ARG0 c13-8
                             :ARG4 (c13-5 / mosque)
                             :ARG1-of (c13-4 / sure-02)
                             :purpose (c13-3 / do-02
                                             :ARG0 c13-8
                                             :ARG1 c13-0)
                             :polarity -))

# ::snt No no they didnt
# ::tokens ["No", "no", "they", "did", "nt"]
# ::lemmas ["no", "no", "they", "do", "not"]
(c14-0 / do-02
       :ARG0 (c14-1 / they)
       :polarity -)

# ::snt This is fucked up
# ::tokens ["This", "is", "fucked", "up"]
# ::lemmas ["this", "be", "fuck", "up"]
(c15-0 / fuck-up-02
       :ARG1 (c15-1 / this))

# ::snt Seriously theyre crooks
# ::tokens ["Seriously", "they", "re", "crooks"]
# ::lemmas ["seriously", "they", "be", "crook"]
(c16-0 / crook
       :domain (c16-2 / they)
       :ARG1-of (c16-1 / serious-01))

# ::snt Isnt that fraud
# ::tokens ["Is", "nt", "that", "fraud"]
# ::lemmas ["be", "not", "that", "fraud"]
(c17-0 / defraud-01
       :domain (c17-2 / that)
       :polarity (c17-1 / amr-unknown)
       :polarity -)

# ::snt AMike4761 is another fakenews propagator Not good for the nation Just divisive
# ::tokens ["AMike4761", "is", "another", "fakenews", "propagator", "Not", "good", "for", "the", "nation", "Just", "divisive"]
# ::lemmas ["AMike4761", "be", "another", "fakenews", "propagator", "not", "good", "for", "the", "nation", "just", "divisive"]
(c18-4 / and
       :op1 (c18-2 / propagate-01
                   :ARG0 (c18-0 / person
                                :name (c18-6 / name
                                             :op1 "AMike4761"))
                   :ARG1 (c18-5 / fake-02)
                   :mod (c18-3 / another))
       :op2 (c18-1 / divide-02
                   :ARG0 c18-0
                   :mod (c18-7 / just)))

# ::snt Hope thats not true
# ::tokens ["Hope", "that", "s", "not", "true"]
# ::lemmas ["hope", "that", "s", "not", "true"]
(c19-2 / hope-01
       :ARG1 (c19-1 / true-01
                    :ARG1 (c19-0 / that)
                    :polarity -))

# ::snt This was from a parody site  The mosque in question does not exist  FakeNews
# ::tokens ["This", "was", "from", "a", "parody", "site", " ", "The", "mosque", "in", "question", "does", "not", "exist", " ", "FakeNews"]
# ::lemmas ["this", "be", "from", "a", "parody", "site", " ", "the", "mosque", "in", "question", "do", "not", "exist", " ", "FakeNews"]
(c20-7 / multi-sentence
       :snt1 (c20-9 / be-from-91
                    :ARG1 (c20-4 / this)
                    :ARG2 (c20-6 / site
                                 :mod (c20-2 / parody-01)))
       :snt2 (c20-3 / exist-01
                    :ARG1 (c20-1 / mosque
                                 :ARG1-of (c20-5 / question-01))
                    :polarity -)
       :snt3 (c20-0 / broadcast-program
                    :name (c20-8 / name
                                 :op1 " FakeNews")))

# ::snt POTUS if is it legal News reports mosque had raised 3400004 Harvey victims now overseas 2 Syria refugees httpbossfeednet20170907georgiamosquekeepshurricaneharveydonationswillsendtosyrianrefugeesinstead … …
# ::tokens ["POTUS", "if", "is", "it", "legal", "News", "reports", "mosque", "had", "raised", "3400004", "Harvey", "victims", "now", "overseas", "2", "Syria", "refugees", "httpbossfeednet20170907georgiamosquekeepshurricaneharveydonationswillsendtosyrianrefugeesinstead", "\u2026", "\u2026"]
# ::lemmas ["potu", "if", "be", "it", "legal", "News", "report", "mosque", "have", "raise", "3400004", "Harvey", "victim", "now", "overseas", "2", "Syria", "refugee", "httpbossfeednet20170907georgiamosquekeepshurricaneharveydonationswillsendtosyrianrefugeesinstead", "\u2026", "\u2026"]
(c21-15 / multi-sentence
        :snt1 (c21-13 / have-condition-91
                      :ARG1 (c21-5 / person
                                   :ARG0-of (c21-11 / have-org-role-91
                                                    :ARG1 (c21-9 / country
                                                                 :name (c21-21 / name
                                                                               :op1 "United"
                                                                               :op2 "States"))
                                                    :ARG2 (c21-7 / president)))
                      :ARG2 (c21-16 / legal-02
                                    :ARG1 (c21-6 / it)))
        :snt2 (c21-1 / report-01
                     :ARG0 (c21-10 / news)
                     :ARG1 (c21-12 / raise-02
                                   :ARG0 (c21-3 / mosque)
                                   :ARG1 (c21-17 / victim
                                                 :ARG1-of (c21-19 / cause-01
                                                                  :ARG0 (c21-4 / natural-disaster
                                                                               :name (c21-8 / name
                                                                                            :op1 "Harvey")))
                                                 :quant 3400004)
                                   :time (c21-18 / now)
                                   :location (c21-0 / overseas)
                                   :beneficiary (c21-14 / refugee
                                                        :mod (c21-2 / country
                                                                    :name (c21-20 / name
                                                                                  :op1 "Syria"))
                                                        :quant 2))))

# ::snt Should shut down all dome covered mosques in this country especially those subsidized with MidE money
# ::tokens ["Should", "shut", "down", "all", "dome", "covered", "mosques", "in", "this", "country", "especially", "those", "subsidized", "with", "MidE", "money"]
# ::lemmas ["should", "shut", "down", "all", "dome", "cover", "mosques", "in", "this", "country", "especially", "those", "subsidize", "with", "MidE", "money"]
(c22-1 / recommend-01
       :ARG1 (c22-9 / shut-down-05
                    :ARG1 (c22-10 / mosque
                                  :ARG1-of (c22-4 / cover-02
                                                  :ARG2 (c22-3 / dome))
                                  :mod (c22-8 / all)
                                  :location (c22-11 / country
                                                    :mod (c22-6 / this))
                                  :ARG2-of (c22-7 / subsidize-01
                                                  :ARG1 (c22-2 / mosque
                                                               :mod (c22-5 / especially))
                                                  :instrument (c22-13 / money
                                                                      :mod (c22-0 / organization
                                                                                  :name (c22-12 / name
                                                                                                :op1 "MidEast")))))))

# ::snt Frigging child rapists
# ::tokens ["Frigging", "child", "rapists"]
# ::lemmas ["frig", "child", "rapist"]
(c23-2 / bribe-01
       :ARG1 (c23-0 / person
                    :ARG0-of (c23-3 / rape-01
                                    :ARG1 (c23-1 / child))))

# ::snt You mean ISIS they will send the money to ISIS
# ::tokens ["You", "mean", "ISIS", "they", "will", "send", "the", "money", "to", "ISIS"]
# ::lemmas ["you", "mean", "ISIS", "they", "will", "send", "the", "money", "to", "isis"]
(c24-4 / mean-01
       :ARG0 (c24-6 / you)
       :ARG2 (c24-3 / send-01
                    :ARG0 (c24-2 / they)
                    :ARG1 (c24-0 / money)
                    :ARG2 (c24-1 / criminal-organization
                                 :name (c24-5 / name
                                              :op1 "Islamic"
                                              :op2 "organization"))))

# ::snt Sell giving them  and donations
# ::tokens ["Sell", "giving", "them", " ", "and", "donations"]
# ::lemmas ["sell", "give", "them", " ", "and", "donation"]
(c25-3 / sell-01
       :ARG1 (c25-2 / and
                    :op1 (c25-4 / give-01
                                :ARG1 (c25-1 / they))
                    :op2 (c25-5 / thing
                                :ARG1-of (c25-0 / donate-01))))

# ::snt Thats a law breaker
# ::tokens ["That", "s", "a", "law", "breaker"]
# ::lemmas ["that", "s", "a", "law", "breaker"]
(c26-0 / person
       :ARG0-of (c26-1 / break-18
                       :ARG1 (c26-3 / law))
       :domain (c26-2 / that))

# ::snt Deport em all
# ::tokens ["Deport", "em", "all"]
# ::lemmas ["deport", "em", "all"]
(c27-0 / deport-01
       :ARG0 (c27-3 / you)
       :ARG1 (c27-2 / they
                    :mod (c27-1 / all))
       :mode imperative)

# ::snt Yay  Americans try 2 help other Americans  somehow the funds end up in the Middle East Anyone else sick of this I am
# ::tokens ["Yay", " ", "Americans", "try", "2", "help", "other", "Americans", " ", "somehow", "the", "funds", "end", "up", "in", "the", "Middle", "East", "Anyone", "else", "sick", "of", "this", "I", "am"]
# ::lemmas ["Yay", " ", "Americans", "try", "2", "help", "other", "Americans", " ", "somehow", "the", "fund", "end", "up", "in", "the", "Middle", "East", "Anyone", "else", "sick", "of", "this", "i", "be"]
(c28-13 / multi-sentence
        :snt1 (c28-18 / yay)
        :snt2 (c28-9 / and
                     :op1 (c28-6 / try-01
                                 :ARG0 (c28-2 / person
                                              :mod (c28-3 / country
                                                          :name (c28-15 / name
                                                                        :op1 "America")))
                                 :ARG1 (c28-14 / help-01
                                               :ARG0 c28-2
                                               :ARG1 (c28-1 / person
                                                            :mod (c28-0 / other)
                                                            :mod c28-3)))
                     :op2 (c28-4 / end-up-03
                                 :ARG1 (c28-11 / fund)
                                 :ARG2 (c28-17 / be-located-at-91
                                               :ARG1 c28-11
                                               :ARG2 (c28-7 / world-region
                                                            :name (c28-5 / name
                                                                         :op1 "Middle"
                                                                         :op2 "East")))
                                 :manner (c28-12 / somehow)))
        :snt3 (c28-8 / sick-04
                     :ARG0 (c28-10 / this)
                     :ARG1 (c28-16 / i)))

# ::snt Feds should step in and freeze all their assets
# ::tokens ["Feds", "should", "step", "in", "and", "freeze", "all", "their", "assets"]
# ::lemmas ["fed", "should", "step", "in", "and", "freeze", "all", "their", "asset"]
(c29-0 / recommend-01
       :ARG1 (c29-4 / and
                    :op1 (c29-6 / step-in-02
                                :ARG1 (c29-2 / person
                                             :ARG0-of (c29-7 / have-org-role-91
                                                             :ARG2 (c29-5 / fed))))
                    :op2 (c29-1 / freeze-02
                                :ARG0 c29-2
                                :ARG1 (c29-3 / asset
                                             :poss c29-2
                                             :mod (c29-8 / all)))))

# ::snt Mosque raised more than 340000 in cash and supplies “for the victims of Hurricane Harvey” All of that will now be sent overseas to Syria
# ::tokens ["Mosque", "raised", "more", "than", "340000", "in", "cash", "and", "supplies", "\u201c", "for", "the", "victims", "of", "Hurricane", "Harvey", "\u201d", "All", "of", "that", "will", "now", "be", "sent", "overseas", "to", "Syria"]
# ::lemmas ["Mosque", "raise", "more", "than", "340000", "in", "cash", "and", "supply", "\"", "for", "the", "victim", "of", "Hurricane", "Harvey", "\"", "all", "of", "that", "will", "now", "be", "send", "overseas", "to", "Syria"]
(c30-15 / multi-sentence
        :snt1 (c30-12 / and
                      :op1 (c30-1 / raise-02
                                  :ARG0 (c30-0 / organization
                                               :name (c30-18 / name
                                                             :op1 "Mosque"))
                                  :ARG1 (c30-3 / more-than
                                               :ARG1 (c30-5 / cash)
                                               :op1 340000))
                      :op2 (c30-14 / supply-01
                                   :ARG0 c30-0
                                   :ARG2 (c30-6 / person
                                                :ARG1-of (c30-10 / victimize-01
                                                                 :ARG0 (c30-7 / natural-disaster
                                                                              :name (c30-4 / name
                                                                                           :op1 "Hurricane"
                                                                                           :op2 "Harvey"))))))
        :snt2 (c30-11 / send-01
                      :ARG1 (c30-8 / all
                                   :ARG1-of (c30-19 / include-91
                                                    :ARG2 (c30-9 / that)))
                      :ARG2 (c30-16 / country
                                    :name (c30-17 / name
                                                  :op1 "Syria"))
                      :time (c30-13 / now)
                      :location (c30-2 / overseas)))

# ::snt I believe there were arrests made yesterday
# ::tokens ["I", "believe", "there", "were", "arrests", "made", "yesterday"]
# ::lemmas ["i", "believe", "there", "be", "arrest", "make", "yesterday"]
(c31-2 / believe-01
       :ARG0 (c31-1 / i)
       :ARG1 (c31-0 / arrest-01
                    :time (c31-3 / yesterday)))

# ::snt Well if they are touched by the storm tell them to call Syria for help
# ::tokens ["Well", "if", "they", "are", "touched", "by", "the", "storm", "tell", "them", "to", "call", "Syria", "for", "help"]
# ::lemmas ["well", "if", "they", "be", "touch", "by", "the", "storm", "tell", "them", "to", "call", "Syria", "for", "help"]
(c32-1 / tell-01
       :ARG0 (c32-9 / you)
       :ARG1 (c32-0 / call-02
                    :ARG0 (c32-8 / they)
                    :ARG1 (c32-4 / country
                                 :name (c32-7 / name
                                              :op1 "Syria"))
                    :purpose (c32-5 / help-01
                                    :ARG0 c32-4
                                    :ARG1 c32-8))
       :ARG2 c32-8
       :condition (c32-3 / touch-01
                         :ARG0 (c32-6 / storm)
                         :ARG1 c32-8)
       :mod (c32-2 / well)
       :mode imperative)

# ::snt Huh
# ::tokens ["Huh"]
# ::lemmas ["huh"]
(c33-0 / amr-unintelligible
       :value "Huh")

# ::snt lock em up take their money
# ::tokens ["lock", "em", "up", "take", "their", "money"]
# ::lemmas ["lock", "em", "up", "take", "their", "money"]
(c34-2 / lock-up-03
       :ARG0 (c34-4 / you)
       :ARG1 (c34-0 / they)
       :purpose (c34-3 / take-01
                       :ARG0 c34-4
                       :ARG1 (c34-1 / money
                                    :poss c34-0))
       :mode imperative)

# ::snt Really what did you think was gonna happen
# ::tokens ["Really", "what", "did", "you", "think", "was", "gon", "na", "happen"]
# ::lemmas ["really", "what", "do", "you", "think", "be", "go", "to", "happen"]
(c35-2 / think-01
       :ARG0 (c35-4 / you)
       :ARG1 (c35-1 / event
                    :mod (c35-3 / amr-unknown))
       :ARG1-of (c35-0 / real-04))

# ::snt What would you want to donate to a mosque for goodness sake
# ::tokens ["What", "would", "you", "want", "to", "donate", "to", "a", "mosque", "for", "goodness", "sake"]
# ::lemmas ["what", "would", "you", "want", "to", "donate", "to", "a", "mosque", "for", "goodness", "sake"]
(c36-1 / want-01
       :ARG0 (c36-6 / you)
       :ARG1 (c36-0 / donate-01
                    :ARG0 c36-6
                    :ARG1 (c36-2 / amr-unknown)
                    :ARG2 (c36-4 / mosque))
       :purpose (c36-3 / sake
                       :mod (c36-5 / goodness)))

# ::snt Pork Chop fearing bastards
# ::tokens ["Pork", "Chop", "fearing", "bastards"]
# ::lemmas ["Pork", "Chop", "fearing", "bastard"]
(c37-3 / bastard
       :ARG0-of (c37-2 / fear-01
                       :ARG1 (c37-0 / person
                                    :name (c37-1 / name
                                                 :op1 "Pork"
                                                 :op2 "Chop"))))

# ::snt Didnt that man who was in charge of collecting funds just get arrested  Yes I believe I saw this yesterday on twitter  Great work MAGA
# ::tokens ["Did", "nt", "that", "man", "who", "was", "in", "charge", "of", "collecting", "funds", "just", "get", "arrested", " ", "Yes", "I", "believe", "I", "saw", "this", "yesterday", "on", "twitter", " ", "Great", "work", "MAGA"]
# ::lemmas ["do", "not", "that", "man", "who", "be", "in", "charge", "of", "collect", "fund", "just", "get", "arrest", " ", "yes", "i", "believe", "i", "see", "this", "yesterday", "on", "twitter", " ", "Great", "work", "maga"]
(c38-12 / multi-sentence
        :snt1 (c38-14 / arrest-01
                      :ARG1 (c38-1 / man
                                   :ARG1-of (c38-7 / charge-05
                                                   :ARG2 (c38-16 / collect-01
                                                                 :ARG0 c38-1
                                                                 :ARG1 (c38-15 / fund)))
                                   :mod (c38-10 / that))
                      :mod (c38-19 / just)
                      :ARG1-of (c38-0 / request-confirmation-91)
                      :polarity -)
        :snt2 (c38-13 / believe-01
                      :ARG0 (c38-4 / i)
                      :ARG1 (c38-17 / see-01
                                    :ARG0 c38-4
                                    :ARG1 (c38-5 / this)
                                    :time (c38-20 / yesterday)
                                    :medium (c38-2 / publication
                                                   :name (c38-9 / name
                                                                :op1 "Twitter"))))
        :snt3 (c38-3 / work-01
                     :ARG1-of (c38-18 / great-02)
                     :ARG1-of (c38-11 / say-01
                                      :ARG0 c38-4)
                     :ARG2 (c38-6 / person
                                  :name (c38-8 / name
                                               :op1 "MAGA"))))

# ::snt When will we learn you cant trust Muslims
# ::tokens ["When", "will", "we", "learn", "you", "ca", "nt", "trust", "Muslims"]
# ::lemmas ["when", "will", "we", "learn", "you", "can", "not", "trust", "Muslims"]
(c39-6 / learn-01
       :ARG0 (c39-4 / we)
       :ARG1 (c39-2 / possible-01
                    :ARG1 (c39-3 / trust-02
                                 :ARG0 (c39-8 / you)
                                 :ARG1 (c39-0 / person
                                              :mod (c39-1 / religious-group
                                                          :name (c39-7 / name
                                                                       :op1 "Muslim"))))
                    :polarity -)
       :time (c39-5 / amr-unknown))

# ::snt I am told The sheriff just arrested there Iman
# ::tokens ["I", "am", "told", "The", "sheriff", "just", "arrested", "there", "Iman"]
# ::lemmas ["i", "be", "tell", "the", "sheriff", "just", "arrest", "there", "Iman"]
(c40-2 / tell-01
       :ARG1 (c40-3 / arrest-01
                    :ARG0 (c40-4 / sheriff)
                    :ARG1 (c40-1 / person
                                 :name (c40-5 / name
                                              :op1 "Iman"))
                    :location (c40-7 / there)
                    :time (c40-0 / just))
       :ARG2 (c40-6 / i))

# ::snt Was something different expected Would it help if NOAA tags all new tropical depressions with more traditional Islamic names Imbeciles
# ::tokens ["Was", "something", "different", "expected", "Would", "it", "help", "if", "NOAA", "tags", "all", "new", "tropical", "depressions", "with", "more", "traditional", "Islamic", "names", "Imbeciles"]
# ::lemmas ["be", "something", "different", "expect", "would", "it", "help", "if", "NOAA", "tag", "all", "new", "tropical", "depression", "with", "more", "traditional", "Islamic", "name", "Imbeciles"]
(c41-14 / multi-sentence
        :snt1 (c41-3 / expect-01
                     :polarity (c41-10 / amr-unknown)
                     :ARG1 (c41-13 / something
                                   :ARG1-of (c41-2 / differ-02)))
        :snt2 (c41-15 / help-01
                      :condition (c41-7 / tag-01
                                        :ARG0 (c41-17 / government-organization
                                                      :name (c41-19 / name
                                                                    :op1 "National"
                                                                    :op2 "Oceanic"
                                                                    :op3 "and"
                                                                    :op4 "Atmospheric"
                                                                    :op5 "Administration"))
                                        :ARG1 (c41-11 / depress-01
                                                      :ARG1-of (c41-4 / new-01)
                                                      :mod (c41-18 / tropic)
                                                      :mod (c41-6 / all)
                                                      :ARG0-of (c41-5 / have-03
                                                                      :ARG1 (c41-1 / name
                                                                                   :op1 "Imbecile")
                                                                      :ARG1-of (c41-8 / have-degree-91
                                                                                      :ARG2 (c41-12 / traditional)
                                                                                      :ARG3 (c41-9 / more)
                                                                                      :ARG4 (c41-0 / religious-group
                                                                                                   :name (c41-16 / name
                                                                                                                 :op1 "Islam"))))))))

# ::snt They are not and will never be Americans They will always put Islam before the United States or any other country They cant be trusted
# ::tokens ["They", "are", "not", "and", "will", "never", "be", "Americans", "They", "will", "always", "put", "Islam", "before", "the", "United", "States", "or", "any", "other", "country", "They", "ca", "nt", "be", "trusted"]
# ::lemmas ["they", "be", "not", "and", "will", "never", "be", "Americans", "they", "will", "always", "put", "Islam", "before", "the", "United", "States", "or", "any", "other", "country", "they", "can", "not", "be", "trust"]
(c42-15 / multi-sentence
        :snt1 (c42-21 / and
                      :op1 (c42-4 / person
                                  :mod (c42-9 / country
                                              :name (c42-23 / name
                                                            :op1 "United"
                                                            :op2 "States"))
                                  :domain (c42-14 / they)
                                  :polarity -)
                      :op2 (c42-7 / person
                                  :mod (c42-22 / country
                                               :name (c42-10 / name
                                                             :op1 "America"))
                                  :domain c42-14
                                  :time (c42-5 / ever)
                                  :polarity -))
        :snt2 (c42-19 / put-01
                      :ARG0 (c42-6 / they)
                      :ARG1 (c42-1 / religious-group
                                   :name (c42-3 / name
                                                :op1 "Islam"))
                      :ARG2 (c42-17 / before
                                    :op1 (c42-0 / or
                                                :op1 (c42-2 / country
                                                            :name (c42-8 / name
                                                                         :op1 "United"
                                                                         :op2 "States"))
                                                :op2 (c42-12 / country
                                                             :mod (c42-13 / any)
                                                             :mod (c42-20 / other))))
                      :time (c42-18 / always))
        :snt3 (c42-16 / possible-01
                      :ARG1 (c42-11 / trust-01
                                    :ARG2 (c42-24 / they))
                      :polarity -))

# ::snt If there are no legal consequences things like this happen more and more We have immigrants who do NOT consider USA their country
# ::tokens ["If", "there", "are", "no", "legal", "consequences", "things", "like", "this", "happen", "more", "and", "more", "We", "have", "immigrants", "who", "do", "NOT", "consider", "USA", "their", "country"]
# ::lemmas ["if", "there", "be", "no", "legal", "consequence", "thing", "like", "this", "happen", "more", "and", "more", "we", "have", "immigrant", "who", "do", "not", "consider", "USA", "their", "country"]
(c43-6 / have-03
       :ARG0 (c43-4 / we)
       :ARG1 (c43-2 / person
                    :ARG0-of (c43-9 / immigrate-01)
                    :ARG0-of (c43-3 / consider-01
                                    :ARG1 (c43-5 / country
                                                 :name (c43-8 / name
                                                              :op1 "USA")
                                                 :poss c43-2)
                                    :polarity -))
       :condition (c43-0 / consequence-03
                         :ARG1-of (c43-7 / legal-02)
                         :polarity -)
       :ARG1-of (c43-1 / increase-01))

# ::snt Deportations overdue The warring factions have been subdued  it is safe for them to return Ship em back
# ::tokens ["Deportations", "overdue", "The", "warring", "factions", "have", "been", "subdued", " ", "it", "is", "safe", "for", "them", "to", "return", "Ship", "em", "back"]
# ::lemmas ["deportation", "overdue", "the", "war", "faction", "have", "be", "subdue", " ", "it", "be", "safe", "for", "them", "to", "return", "Ship", "em", "back"]
(c44-5 / and
       :op1 (c44-2 / Deport-01
                   :mod (c44-0 / overdue))
       :op2 (c44-8 / subdue-01
                   :ARG1 (c44-7 / faction
                                :ARG0-of (c44-3 / war-01)))
       :op3 (c44-4 / safe-01
                   :ARG1 (c44-1 / return-01
                                :ARG0 c44-7
                                :ARG1 c44-7
                                :ARG4 (c44-6 / ship-01
                                             :ARG0 c44-7
                                             :ARG1 c44-7
                                             :direction (c44-9 / back)))))

# ::snt Disgraceful
# ::tokens ["Disgraceful"]
# ::lemmas ["Disgraceful"]
(c45-0 / disgrace-01)

# ::snt Who donates to a Mosque
# ::tokens ["Who", "donates", "to", "a", "Mosque"]
# ::lemmas ["who", "donate", "to", "a", "Mosque"]
(c46-0 / donate-01
       :ARG0 (c46-1 / amr-unknown)
       :ARG2 (c46-2 / mosque))

# ::snt Best news Ive heard all dayare you sure
# ::tokens ["Best", "news", "I", "ve", "heard", "all", "dayare", "you", "sure"]
# ::lemmas ["good", "news", "i", "have", "hear", "all", "dayare", "you", "sure"]
(c47-4 / sure-02
       :ARG0 (c47-9 / i)
       :ARG1 (c47-8 / news
                    :ARG1-of (c47-5 / hear-01
                                    :ARG0 c47-9
                                    :time (c47-0 / day
                                                 :mod (c47-3 / all)))
                    :ARG1-of (c47-1 / have-degree-91
                                    :ARG2 (c47-7 / good-02
                                                 :ARG1 c47-8)
                                    :ARG3 (c47-6 / most)))
       :polarity (c47-2 / amr-unknown))

# ::snt What a bunch of bullshitarrest them for fraud
# ::tokens ["What", "a", "bunch", "of", "bullshitarrest", "them", "for", "fraud"]
# ::lemmas ["what", "a", "bunch", "of", "bullshitarrest", "them", "for", "fraud"]
(c48-4 / barrest-01
       :ARG0 (c48-0 / bunch)
       :ARG1 (c48-2 / they)
       :ARG2 (c48-1 / defraud-01
                    :ARG0 c48-2)
       :degree (c48-3 / so))

# ::snt Its committing fraud Prosecute
# ::tokens ["Its", "committing", "fraud", "Prosecute"]
# ::lemmas ["its", "commit", "fraud", "prosecute"]
(c49-1 / prosecute-01
       :ARG2 (c49-2 / commit-02
                    :ARG0 (c49-0 / it)
                    :ARG1 (c49-3 / defraud-01
                                 :ARG0 c49-0)))

# ::snt Woe kinda of deceptive arent they
# ::tokens ["Woe", "kinda", "of", "deceptive", "are", "nt", "they"]
# ::lemmas ["Woe", "kinda", "of", "deceptive", "be", "not", "they"]
(c50-0 / deceive-01
       :ARG0 (c50-3 / they)
       :degree (c50-1 / kind-of)
       :ARG1-of (c50-2 / request-confirmation-91))
