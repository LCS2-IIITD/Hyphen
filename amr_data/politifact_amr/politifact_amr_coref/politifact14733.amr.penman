# ::snt TAKES after Mom  Dad In their DNA
# ::tokens ["TAKES", "after", "Mom", " ", "Dad", "In", "their", "DNA"]
# ::lemmas ["TAKES", "after", "Mom", " ", "Dad", "in", "their", "dna"]
(c1-6 / kiss-01
      :time (c1-5 / after
                  :op1 (c1-2 / person
                             :ARG0-of (c1-7 / have-rel-role-91
                                            :ARG1 (c1-0 / person
                                                        :ARG0-of (c1-4 / have-rel-role-91
                                                                       :ARG2 (c1-1 / dad)))
                                            :ARG2 (c1-8 / mom))
                             :location (c1-9 / nucleic-acid
                                             :name (c1-3 / name
                                                         :op1 "DNA")
                                             :poss c1-0))))

# ::snt LIKE DADDY AKES AFTER PARENTS
# ::tokens ["LIKE", "DADDY", "AKES", "AFTER", "PARENTS"]
# ::lemmas ["like", "daddy", "akes", "after", "parent"]
(c2-4 / shout-01
      :ARG0 (c2-2 / person
                  :name (c2-6 / name
                              :op1 "DADDY"))
      :time (c2-3 / after
                  :op1 (c2-1 / person
                             :ARG0-of (c2-5 / have-rel-role-91
                                            :ARG2 (c2-0 / parent)))))

# ::snt this is not true Why are you spreading lies
# ::tokens ["this", "is", "not", "true", "Why", "are", "you", "spreading", "lies"]
# ::lemmas ["this", "be", "not", "true", "why", "be", "you", "spread", "lie"]
(c3-0 / cause-01
      :ARG0 (c3-2 / amr-unknown)
      :ARG1 (c3-4 / spread-03
                  :ARG0 (c3-7 / you)
                  :ARG1 (c3-1 / thing
                              :ARG1-of (c3-5 / lie-08)))
      :condition (c3-6 / true-01
                       :ARG1 (c3-3 / this)
                       :polarity -))

# ::snt Think before you post FakeNews
# ::tokens ["Think", "before", "you", "post", "FakeNews"]
# ::lemmas ["think", "before", "you", "post", "FakeNews"]
(c4-2 / think-01
      :ARG0 (c4-5 / you)
      :time (c4-4 / before
                  :op1 (c4-1 / post-01
                             :ARG0 c4-5
                             :ARG1 (c4-0 / broadcast-program
                                         :name (c4-3 / name
                                                     :op1 " FakeNews"))))
      :mode imperative)

# ::snt Youre a dummy Marlene  And Im assuming Lukowski is Russian
# ::tokens ["You", "re", "a", "dummy", "Marlene", " ", "And", "I", "m", "assuming", "Lukowski", "is", "Russian"]
# ::lemmas ["you", "be", "a", "dummy", "Marlene", " ", "and", "i", "be", "assume", "Lukowski", "be", "Russian"]
(c5-9 / say-01
      :ARG0 (c5-11 / i)
      :ARG1 (c5-8 / and
                  :op1 (c5-3 / dummy
                             :domain (c5-4 / person
                                           :name (c5-10 / name
                                                        :op1 "Marlene")))
                  :op2 (c5-7 / assume-02
                             :ARG0 c5-11
                             :ARG1 (c5-1 / person
                                         :mod (c5-5 / country
                                                    :name (c5-6 / name
                                                                :op1 "Russia"))
                                         :domain (c5-0 / person
                                                       :name (c5-2 / name
                                                                   :op1 "Lukowski")))))
      :ARG2 c5-4)

# ::snt Youâ€™re telling naughty lies again
# ::tokens ["You", "\u2019re", "telling", "naughty", "lies", "again"]
# ::lemmas ["you", "be", "tell", "naughty", "lie", "again"]
(c6-3 / lie-08
      :ARG0 (c6-0 / you)
      :mod (c6-1 / naughty)
      :mod (c6-2 / again))

# ::snt I CANT BELIEVE THAT MALIA OBAMA DID ANYTHING WRONG
# ::tokens ["I", "CANT", "BELIEVE", "THAT", "MALIA", "OBAMA", "DID", "ANYTHING", "WRONG"]
# ::lemmas ["i", "cant", "believe", "that", "MALIA", "OBAMA", "do", "anything", "wrong"]
(c7-1 / possible-01
      :ARG1 (c7-6 / believe-01
                  :ARG0 (c7-5 / i)
                  :ARG1 (c7-2 / wrong-04
                              :ARG1 (c7-0 / person
                                          :name (c7-4 / name
                                                      :op1 "MALIA"
                                                      :op2 "Obama"))
                              :ARG2 (c7-3 / anything))))

# ::snt if truewhere was her security detail
# ::tokens ["if", "truewhere", "was", "her", "security", "detail"]
# ::lemmas ["if", "truewhere", "be", "her", "security", "detail"]
(c8-4 / have-condition-91
      :ARG2 (c8-0 / detail
                  :mod (c8-3 / security)
                  :poss (c8-2 / she)
                  :location (c8-1 / here
                                  :ARG1-of (c8-5 / near-02))))
