# ::snt God Like it should never be a thing EVER
# ::tokens ["God", "Like", "it", "should", "never", "be", "a", "thing", "EVER"]
# ::lemmas ["God", "like", "it", "should", "never", "be", "a", "thing", "ever"]
(c1-0 / recommend-01
      :ARG1 (c1-3 / thing
                  :domain (c1-6 / it)
                  :time (c1-1 / ever)
                  :polarity -)
      :ARG1-of (c1-4 / resemble-01
                     :ARG2 (c1-2 / person
                                 :name (c1-5 / name
                                             :op1 "God"))))

# ::snt You need a comma in there otherwise it looks the kids are smoking as well   pernicketyautistic
# ::tokens ["You", "need", "a", "comma", "in", "there", "otherwise", "it", "looks", "the", "kids", "are", "smoking", "as", "well", "  ", "pernicketyautistic"]
# ::lemmas ["you", "need", "a", "comma", "in", "there", "otherwise", "it", "look", "the", "kid", "be", "smoke", "as", "well", "  ", "pernicketyautistic"]
(c2-6 / need-01
      :ARG0 (c2-9 / you)
      :ARG1 (c2-0 / comma)
      :location (c2-1 / there)
      :condition (c2-4 / look-02
                       :ARG0 (c2-7 / it)
                       :ARG1 (c2-3 / smoke-02
                                   :ARG0 (c2-5 / kid)
                                   :mod (c2-2 / as-well)))
      :ARG1-of (c2-8 / typical-02))

# ::snt Passive smoking increases lung cancer by 10
# ::tokens ["Passive", "smoking", "increases", "lung", "cancer", "by", "10"]
# ::lemmas ["passive", "smoking", "increase", "lung", "cancer", "by", "10"]
(c3-5 / increase-01
      :ARG0 (c3-3 / smoke-02
                  :mod (c3-2 / passive))
      :ARG1 (c3-1 / disease
                  :name (c3-4 / name
                              :op1 "lung"
                              :op2 "cancer"))
      :ARG2 (c3-0 / percentage-entity
                  :value 10))

# ::snt Perfect
# ::tokens ["Perfect"]
# ::lemmas ["perfect"]
(c4-0 / perfect-02)

# ::snt Its been illegal
# ::tokens ["Its", "been", "illegal"]
# ::lemmas ["its", "be", "illegal"]
(c5-1 / legal-02
      :ARG1 (c5-0 / it)
      :polarity -)

# ::snt Good is overdue
# ::tokens ["Good", "is", "overdue"]
# ::lemmas ["good", "be", "overdue"]
(c6-0 / overdue
      :domain (c6-1 / good-02))

# ::snt That didnt take long at all How long before women can vote
# ::tokens ["That", "did", "nt", "take", "long", "at", "all", "How", "long", "before", "women", "can", "vote"]
# ::lemmas ["that", "do", "not", "take", "long", "at", "all", "how", "long", "before", "woman", "can", "vote"]
(c7-2 / take-10
      :ARG0 (c7-0 / that)
      :ARG1 (c7-6 / long-03
                  :mod (c7-5 / at-all))
      :ARG2 (c7-7 / before
                  :op1 (c7-1 / possible-01
                             :ARG1 (c7-3 / vote-01
                                         :ARG0 (c7-4 / woman))))
      :polarity -)
