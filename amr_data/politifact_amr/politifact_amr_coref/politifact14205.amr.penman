# ::snt I really cant see him living in the Bahamas for some reason IF he was alive
# ::tokens ["I", "really", "ca", "nt", "see", "him", "living", "in", "the", "Bahamas", "for", "some", "reason", "IF", "he", "was", "alive"]
# ::lemmas ["i", "really", "can", "not", "see", "him", "live", "in", "the", "Bahamas", "for", "some", "reason", "if", "he", "be", "alive"]
(c1-1 / possible-01
      :ARG1 (c1-6 / see-01
                  :ARG0 (c1-11 / i)
                  :ARG1 (c1-8 / live-01
                              :ARG0 (c1-7 / he)
                              :location (c1-2 / country
                                              :name (c1-10 / name
                                                           :op1 "Bahamas"))))
      :ARG1-of (c1-0 / real-04)
      :ARG1-of (c1-9 / cause-01
                     :ARG0 (c1-5 / reason
                                 :mod (c1-3 / some)))
      :condition (c1-4 / live-01
                       :ARG0 c1-7)
      :polarity -)

# ::snt How can we be sure of anything Thats what I thought too Thats what we were leaked Or someone has a lovely fleecing scam going
# ::tokens ["How", "can", "we", "be", "sure", "of", "anything", "That", "s", "what", "I", "thought", "too", "That", "s", "what", "we", "were", "leaked", "Or", "someone", "has", "a", "lovely", "fleecing", "scam", "going"]
# ::lemmas ["how", "can", "we", "be", "sure", "of", "anything", "that", "s", "what", "i", "think", "too", "that", "s", "what", "we", "be", "leak", "or", "someone", "have", "a", "lovely", "fleece", "scam", "go"]
(c2-11 / multi-sentence
       :snt1 (c2-0 / possible-01
                   :ARG1 (c2-10 / sure-02
                                :ARG0 (c2-3 / we)
                                :ARG1 (c2-5 / anything))
                   :manner (c2-1 / amr-unknown))
       :snt2 (c2-2 / think-01
                   :ARG0 (c2-15 / i)
                   :ARG1 (c2-17 / and
                                :op1 (c2-12 / leak-01
                                            :ARG1 (c2-16 / that))
                                :op2 (c2-13 / have-03
                                            :ARG0 (c2-4 / someone)
                                            :ARG1 (c2-6 / scam-01
                                                        :ARG2 (c2-8 / fleec-01)
                                                        :mod (c2-7 / lovely)
                                                        :ARG1-of (c2-14 / go-01))))
                   :mod (c2-9 / too)))

# ::snt This is disinformation by Edward Snowden as Osama Bin Laden died in 2001 due to Kidney failure
# ::tokens ["This", "is", "disinformation", "by", "Edward", "Snowden", "as", "Osama", "Bin", "Laden", "died", "in", "2001", "due", "to", "Kidney", "failure"]
# ::lemmas ["this", "be", "disinformation", "by", "Edward", "Snowden", "as", "Osama", "Bin", "Laden", "die", "in", "2001", "due", "to", "Kidney", "failure"]
(c3-1 / disinform-01
      :ARG0 (c3-2 / person
                  :name (c3-10 / name
                               :op1 "Edward"
                               :op2 "Snowden"))
      :ARG1 (c3-5 / this)
      :ARG1-of (c3-3 / cause-01
                     :ARG0 (c3-6 / die-01
                                 :ARG1 (c3-0 / person
                                             :name (c3-4 / name
                                                         :op1 "Osama"
                                                         :op2 "Bin"
                                                         :op3 "Laden"))
                                 :time (c3-11 / date-entity
                                              :year 2001)
                                 :ARG1-of (c3-8 / cause-01
                                                :ARG0 (c3-7 / fail-01
                                                            :ARG2 (c3-9 / kidney))))))

# ::snt Government chesseveryone gets moved around but nobody leaves
# ::tokens ["Government", "chesseveryone", "gets", "moved", "around", "but", "nobody", "leaves"]
# ::lemmas ["government", "chesseveryone", "get", "move", "around", "but", "nobody", "leave"]
(c4-0 / contrast-01
      :ARG1 (c4-3 / move-01
                  :ARG1 (c4-5 / government-organization
                              :ARG0-of (c4-1 / govern-01))
                  :ARG2 (c4-2 / around))
      :ARG2 (c4-4 / leave-11
                  :ARG0 (c4-6 / nobody)
                  :polarity -))

# ::snt 真的，假的？
# ::tokens ["\u771f\u7684\uff0c\u5047\u7684", "\uff1f"]
# ::lemmas ["\u771f\u7684\uff0c\u5047\u7684", "\uff1f"]
(c5-2 / have-li-91
      :ARG0-of (c5-0 / mean-01
                     :ARG1 (c5-1 / string-entity
                                 :value "假"))
      :ARG2 "真")

# ::snt Nova zarota nov dolar Kar naenkrat bo vse drugače in Rdeča kapica je Radovan Crveni
# ::tokens ["Nova", "zarota", "nov", "dolar", "Kar", "naenkrat", "bo", "vse", "druga\u010de", "in", "Rde\u010da", "kapica", "je", "Radovan", "Crveni"]
# ::lemmas ["Nova", "zarota", "nov", "dolar", "Kar", "naenkrat", "bo", "vse", "druga\u010de", "in", "Rde\u010da", "kapica", "je", "Radovan", "Crveni"]
(c6-10 / say-01
       :ARG0 (c6-5 / person
                   :name (c6-13 / name
                                :op1 "Radovan"
                                :op2 "Crveni"))
       :ARG1 (c6-8 / zarota
                   :mod (c6-6 / nov)
                   :mod (c6-2 / person
                              :name (c6-3 / name
                                          :op1 "Kar")
                              :mod (c6-1 / political-party
                                         :name (c6-4 / name
                                                     :op1 "Naenkrat")))
                   :ARG0-of (c6-0 / oppose-01
                                  :ARG1 (c6-12 / person
                                               :name (c6-9 / name
                                                           :op1 "Drugače"))
                                  :location (c6-7 / city-district
                                                  :name (c6-11 / name
                                                               :op1 "Rdeča"
                                                               :op2 "Kapica"))))
       :ARG2 c6-5)

# ::snt Morda res igra šah z Gadafijem na Bahamih ampak če ima fant dokaze naj jih objavi proda pa je Domov itak ne bo šel v tem stoletju
# ::tokens ["Morda", "res", "igra", "\u0161ah", "z", "Gadafijem", "na", "Bahamih", "ampak", "\u010de", "i", "m", "a", "fant", "dokaze", "naj", "jih", "objavi", "proda", "pa", "je", "Domov", "itak", "ne", "bo", "\u0161el", "v", "tem", "stoletju"]
# ::lemmas ["Morda", "re", "igra", "\u0161ah", "z", "Gadafijem", "na", "Bahamih", "ampak", "\u010de", "i", "be", "going to", "fant", "dokaze", "naj", "jih", "objavi", "proda", "pa", "je", "Domov", "itak", "ne", "bo", "\u0161el", "v", "tem", "stoletju"]
(c7-13 / multi-sentence
       :snt1 (c7-20 / say-01
                    :ARG0 (c7-5 / i)
                    :ARG1 (c7-12 / string-entity
                                 :mod (c7-1 / res)
                                 :value "Morda")
                    :ARG2 (c7-4 / person
                                :name (c7-21 / name
                                             :op1 "Gadafijem")))
       :snt2 (c7-17 / string-entity
                    :mod (c7-6 / person
                               :name (c7-8 / name
                                           :op1 "Bahamih"))
                    :value " ampak")
       :snt3 (c7-18 / and
                    :op1 (c7-11 / ima
                                :mod (c7-19 / fant)
                                :mod (c7-16 / dokaze))
                    :op2 (c7-3 / naj
                               :mod (c7-0 / objavi))
                    :op3 (c7-2 / favor-01
                               :ARG0 (c7-10 / i)
                               :ARG1 (c7-15 / person
                                            :name (c7-7 / name
                                                        :op1 "Domov")))
                    :op4 (c7-14 / string-entity
                                :value "polite +")
                    :op5 (c7-9 / string-entity
                               :value "polite +")))

# ::snt Je Osama res bil v USi bolnicidializi en dan pred 11 septČisto možno jeda je še živkot tudi Arabci ki so kao ugrabili avione 11 sept
# ::tokens ["Je", "Osama", "res", "bil", "v", "USi", "bolnicidializi", "en", "dan", "pred", "11", "sept\u010cisto", "mo\u017eno", "jeda", "je", "\u0161e", "\u017eivkot", "tudi", "Arabci", "ki", "so", "kao", "ugrabili", "avione", "11", "sept"]
# ::lemmas ["Je", "Osama", "re", "bil", "v", "USi", "bolnicidializi", "en", "dan", "pre", "11", "sept\u010cisto", "mo\u017eno", "jeda", "je", "\u0161e", "\u017eivkot", "tudi", "Arabci", "ki", "so", "kao", "ugrabili", "avione", "11", "sept"]
(c8-8 / and
      :op1 (c8-7 / try-02
                 :ARG0 (c8-3 / person
                             :name (c8-10 / name
                                          :op1 "Osama"
                                          :op2 "Res"
                                          :op3 " bil"))
                 :ARG1 (c8-1 / person
                             :mod (c8-4 / country
                                        :name (c8-5 / name
                                                    :op1 "US"))))
      :op2 (c8-11 / try-02
                  :ARG0 c8-1
                  :ARG1 (c8-9 / system
                              :mod (c8-0 / bolnicidial)))
      :op3 (c8-6 / et-cetera)
      :time (c8-2 / date-entity
                  :day 11
                  :month 9))

# ::snt Tale očitno še dolgo ne bo šel domov
# ::tokens ["Tale", "o\u010ditno", "\u0161e", "dolgo", "ne", "bo", "\u0161el", "domov"]
# ::lemmas ["tale", "o\u010ditno", "\u0161e", "dolgo", "ne", "bo", "\u0161el", "domov"]
(c9-0 / person
      :name (c9-3 / name
                  :op1 "Tale"
                  :op2 "Očitno"
                  :op3 " še dolgo")
      :ARG1-of (c9-1 / compare-01
                     :ARG2 (c9-4 / bo
                                 :op1 c9-0
                                 :name (c9-2 / name
                                             :op1 "Slobodan"
                                             :op2 " domov"))))

# ::snt httpwwwsnopescomsnowdenbinladenalive …
# ::tokens ["httpwwwsnopescomsnowdenbinladenalive", "\u2026"]
# ::lemmas ["httpwwwsnopescomsnowdenbinladenalive", "\u2026"]
(c10-0 / url-entity
       :value "httpwwwsnopescomsnowdenbinladenalive")

# ::snt Usama bin Laden still lives in Bahamas He I still in CIA payroll earning more than 100000 USD per month
# ::tokens ["Usama", "bin", "Laden", "still", "lives", "in", "Bahamas", "He", "I", "still", "in", "CIA", "payroll", "earning", "more", "than", "100000", "USD", "per", "month"]
# ::lemmas ["Usama", "bin", "Laden", "still", "live", "in", "Bahamas", "he", "i", "still", "in", "CIA", "payroll", "earn", "more", "than", "100000", "usd", "per", "month"]
(c11-13 / multi-sentence
        :snt1 (c11-12 / live-01
                      :ARG0 (c11-4 / person
                                   :name (c11-16 / name
                                                 :op1 "Usama"
                                                 :op2 "bin"
                                                 :op3 "Laden"))
                      :location (c11-5 / country
                                       :name (c11-6 / name
                                                    :op1 "Bahamas"))
                      :mod (c11-11 / still))
        :snt2 (c11-17 / i
                      :location (c11-0 / payroll
                                       :poss (c11-14 / government-organization
                                                     :name (c11-2 / name
                                                                  :op1 "CIA")))
                      :ARG0-of (c11-7 / earn-01
                                      :ARG1 (c11-1 / rate-entity-91
                                                   :ARG1 (c11-3 / more-than
                                                                :op1 (c11-18 / monetary-quantity
                                                                             :unit (c11-8 / dollar)
                                                                             :quant 100000))
                                                   :ARG2 (c11-9 / temporal-quantity
                                                                :unit (c11-15 / month)
                                                                :quant 1)))
                      :mod (c11-10 / still)))

# ::snt GaetaSusan I can believe it No body big story OBAMA bull shit
# ::tokens ["GaetaSusan", "I", "can", "believe", "it", "No", "body", "big", "story", "OBAMA", "bull", "shit"]
# ::lemmas ["GaetaSusan", "i", "can", "believe", "it", "no", "body", "big", "story", "OBAMA", "bull", "shit"]
(c12-8 / say-01
       :ARG0 (c12-10 / i)
       :ARG1 (c12-4 / possible-01
                    :ARG1 (c12-11 / believe-01
                                  :ARG0 c12-10
                                  :ARG1 (c12-1 / bullshit-01
                                               :ARG0 (c12-2 / person
                                                            :name (c12-9 / name
                                                                         :op1 "Obama"))
                                               :ARG1 (c12-6 / story
                                                            :mod (c12-3 / big)
                                                            :mod (c12-7 / bullshit)))))
       :ARG2 (c12-0 / person
                    :name (c12-5 / name
                                 :op1 "Gaeta"
                                 :op2 "Susan")))

# ::snt GaetaSusan   I told people that Obama didnt have Him killed  a long time ago didnt I  but NOBODY listens to me
# ::tokens ["GaetaSusan", "  ", "I", "told", "people", "that", "Obama", "did", "nt", "have", "Him", "killed", " ", "a", "long", "time", "ago", "did", "nt", "I", " ", "but", "NOBODY", "listens", "to", "me"]
# ::lemmas ["GaetaSusan", "  ", "i", "tell", "people", "that", "Obama", "do", "not", "have", "him", "kill", " ", "a", "long", "time", "ago", "do", "not", "i", " ", "but", "NOBODY", "listen", "to", "me"]
(c13-11 / say-01
        :ARG0 (c13-16 / i)
        :ARG1 (c13-4 / contrast-01
                     :ARG1 (c13-8 / tell-01
                                  :ARG0 c13-16
                                  :ARG1 (c13-12 / have-04
                                                :ARG0 (c13-5 / person
                                                             :name (c13-15 / name
                                                                           :op1 "Obama"))
                                                :ARG1 (c13-13 / kill-01
                                                              :ARG1 (c13-6 / he))
                                                :time (c13-17 / before
                                                              :op1 (c13-7 / now)
                                                              :quant (c13-9 / time
                                                                            :ARG1-of (c13-14 / long-03)))
                                                :polarity -)
                                  :ARG2 (c13-1 / person))
                     :ARG2 (c13-10 / listen-01
                                   :ARG0 (c13-2 / nobody)
                                   :ARG1 c13-16))
        :ARG2 (c13-0 / person
                     :name (c13-3 / name
                                  :op1 "GaetaSusan")))

# ::snt GaetaSusan Juliet777777 Yes is true he is alive and well living with the Little Tooth Fairy
# ::tokens ["GaetaSusan", "Juliet777777", "Yes", "is", "true", "he", "is", "alive", "and", "well", "living", "with", "the", "Little", "Tooth", "Fairy"]
# ::lemmas ["GaetaSusan", "Juliet777777", "yes", "be", "true", "he", "be", "alive", "and", "well", "live", "with", "the", "Little", "Tooth", "Fairy"]
(c14-7 / multi-sentence
       :snt1 (c14-1 / person
                    :name (c14-10 / name
                                  :op1 "GaetaSusan"
                                  :op2 "Juliet7777"))
       :snt2 (c14-3 / true-01
                    :ARG1 (c14-5 / and
                                 :op1 (c14-8 / live-01
                                             :ARG0 (c14-9 / he)
                                             :accompanier (c14-0 / person
                                                                 :name (c14-2 / name
                                                                              :op1 "Little"
                                                                              :op2 "Tooth"
                                                                              :op3 "Fairy")))
                                 :op2 (c14-6 / live-01
                                             :ARG0 c14-9
                                             :accompanier c14-0)
                                 :mod (c14-4 / well))))

# ::snt GaetaSusan ChristieC733 Ok Ed please show us your proof
# ::tokens ["GaetaSusan", "ChristieC733", "Ok", "Ed", "please", "show", "us", "your", "proof"]
# ::lemmas ["GaetaSusan", "ChristieC733", "ok", "Ed", "please", "show", "us", "your", "proof"]
(c15-7 / say-01
       :ARG0 (c15-9 / i)
       :ARG1 (c15-6 / and
                    :op1 (c15-0 / okay-01)
                    :op2 (c15-5 / show-01
                                :ARG0 (c15-2 / person
                                             :name (c15-8 / name
                                                          :op1 "Ed"))
                                :ARG1 (c15-1 / prove-01
                                             :ARG0 c15-2)
                                :ARG2 (c15-4 / we)
                                :mode imperative
                                :polite +))
       :ARG2 c15-2
       :name (c15-3 / name
                    :op1 "GaetaSusan"
                    :op2 "ChristieC733"))

# ::snt GaetaSusan ChristieC733 He is working with Elvis
# ::tokens ["GaetaSusan", "ChristieC733", "He", "is", "working", "with", "Elvis"]
# ::lemmas ["GaetaSusan", "ChristieC733", "he", "be", "work", "with", "Elvis"]
(c16-1 / person
       :name (c16-4 / name
                    :op1 "GaetaSusan"
                    :op2 "ChristieC733")
       :ARG0-of (c16-3 / work-01
                       :ARG3 (c16-0 / person
                                    :name (c16-2 / name
                                                 :op1 "Elvis"))))

# ::snt GaetaSusan LeahR77 Americans think terrorists responsible for the controlled demolition of World Trade Center and murdering US citizens
# ::tokens ["GaetaSusan", "LeahR77", "Americans", "think", "terrorists", "responsible", "for", "the", "controlled", "demolition", "of", "World", "Trade", "Center", "and", "murdering", "US", "citizens"]
# ::lemmas ["GaetaSusan", "leahr77", "Americans", "think", "terrorist", "responsible", "for", "the", "control", "demolition", "of", "World", "Trade", "Center", "and", "murder", "US", "citizen"]
(c17-11 / say-01
        :ARG0 (c17-6 / person
                     :name (c17-14 / name
                                   :op1 "GaetaSusan"
                                   :op2 "LeahR77"))
        :ARG1 (c17-9 / think-01
                     :ARG0 (c17-1 / person
                                  :mod (c17-7 / country
                                              :name (c17-8 / name
                                                           :op1 "America")))
                     :ARG1 (c17-15 / terrorist
                                   :ARG0-of (c17-2 / responsible-01
                                                   :ARG1 (c17-10 / and
                                                                 :op1 (c17-5 / demolish-01
                                                                             :ARG1 (c17-0 / building
                                                                                          :name (c17-4 / name
                                                                                                       :op1 "World"
                                                                                                       :op2 "Trade"
                                                                                                       :op3 "Center"))
                                                                             :ARG1-of (c17-12 / control-01))
                                                                 :op2 (c17-13 / murder-01
                                                                              :ARG0 c17-15
                                                                              :ARG1 (c17-3 / citizen
                                                                                           :mod c17-7)))))))

# ::snt GaetaSusan TaperedOut conspiracy theory No 666 and I believe it is true
# ::tokens ["GaetaSusan", "TaperedOut", "conspiracy", "theory", "No", "666", "and", "I", "believe", "it", "is", "true"]
# ::lemmas ["GaetaSusan", "TaperedOut", "conspiracy", "theory", "no", "666", "and", "i", "believe", "it", "be", "true"]
(c18-4 / and
       :op1 (c18-3 / theory
                   :name (c18-5 / name
                                :op1 "GaetaSusan"
                                :op2 "TaperedOut")
                   :topic (c18-1 / conspire-01)
                   :ord (c18-0 / ordinal-entity
                               :value 666))
       :op2 (c18-7 / believe-01
                   :ARG0 (c18-6 / i)
                   :ARG1 (c18-2 / true-01
                                :ARG1 c18-3)))

# ::snt GaetaSusan Oh Snowden the Omniscient gimme some info I can use like should I buy AAPL at this level Otherwise stfu Not buying your book
# ::tokens ["GaetaSusan", "Oh", "Snowden", "the", "Omniscient", "gimme", "some", "info", "I", "can", "use", "like", "should", "I", "buy", "AAPL", "at", "this", "level", "Otherwise", "stfu", "Not", "buying", "your", "book"]
# ::lemmas ["GaetaSusan", "Oh", "Snowden", "the", "Omniscient", "gimme", "some", "info", "i", "can", "use", "like", "should", "i", "buy", "AAPL", "at", "this", "level", "Otherwise", "stfu", "not", "buy", "your", "book"]
(c19-12 / say-01
        :ARG0 (c19-16 / i)
        :ARG1 (c19-15 / give-01
                      :ARG0 (c19-6 / person
                                   :name (c19-14 / name
                                                 :op1 "Gaeta"
                                                 :op2 "Susan"
                                                 :op3 "Oh"
                                                 :op4 "Snowden")
                                   :mod (c19-0 / omniscient))
                      :ARG1 (c19-1 / information
                                   :ARG1-of (c19-7 / use-01
                                                   :ARG0 c19-16
                                                   :ARG1-of (c19-2 / possible-01))
                                   :ARG1-of (c19-3 / resemble-01
                                                   :ARG2 (c19-11 / recommend-01
                                                                 :ARG1 (c19-17 / buy-01
                                                                               :ARG0 c19-16
                                                                               :ARG1 (c19-8 / company
                                                                                            :name (c19-9 / name
                                                                                                         :op1 "AAPL"))
                                                                               :manner (c19-13 / level
                                                                                               :mod (c19-10 / this))
                                                                               :condition (c19-4 / buy-01
                                                                                                 :ARG0 c19-16
                                                                                                 :ARG1 (c19-5 / book
                                                                                                              :poss (c19-18 / you))
                                                                                                 :polarity -)))))
                      :ARG2 c19-6)
        :ARG2 c19-6)

# ::snt GaetaSusan Puzzling Osamas curious identity unverified  a quick disposal after death into the ocean Not Believed nor Accepted as True
# ::tokens ["GaetaSusan", "Puzzling", "Osamas", "curious", "identity", "unverified", " ", "a", "quick", "disposal", "after", "death", "into", "the", "ocean", "Not", "Believed", "nor", "Accepted", "as", "True"]
# ::lemmas ["GaetaSusan", "Puzzling", "Osamas", "curious", "identity", "unverifie", " ", "a", "quick", "disposal", "after", "death", "into", "the", "ocean", "not", "Believed", "nor", "accept", "as", "true"]
(c20-11 / multi-sentence
        :snt1 (c20-4 / person
                     :name (c20-13 / name
                                   :op1 "Gaeta")
                     :ARG0-of (c20-2 / puzzle-01
                                     :ARG1 (c20-1 / person
                                                  :name (c20-5 / name
                                                               :op1 "Osamas"))))
        :snt2 (c20-7 / verify-01
                     :ARG1 (c20-14 / identity
                                   :ARG1-of (c20-6 / curious-01)
                                   :poss c20-1)
                     :polarity -)
        :snt3 (c20-3 / dispose-01
                     :ARG1 (c20-8 / die-01)
                     :ARG1-of (c20-9 / quick-02)
                     :destination (c20-0 / ocean)
                     :ARG1-of (c20-15 / believe-01
                                      :polarity -)
                     :ARG1-of (c20-10 / accept-01
                                      :ARG1-of (c20-12 / possible-01)
                                      :polarity -)))

# ::snt GaetaSusan I believe this to be true  No pics of death and dumped in ocean  What a lie
# ::tokens ["GaetaSusan", "I", "believe", "this", "to", "be", "true", " ", "No", "pics", "of", "death", "and", "dumped", "in", "ocean", " ", "What", "a", "lie"]
# ::lemmas ["GaetaSusan", "i", "believe", "this", "to", "be", "true", " ", "no", "pic", "of", "death", "and", "dump", "in", "ocean", " ", "what", "a", "lie"]
(c21-10 / multi-sentence
        :snt1 (c21-9 / say-01
                     :ARG0 (c21-13 / i)
                     :ARG1 (c21-14 / believe-01
                                   :ARG0 c21-13
                                   :ARG1 (c21-5 / true-01
                                                :ARG1 (c21-3 / this)))
                     :ARG2 (c21-4 / person
                                  :name (c21-12 / name
                                                :op1 "GaetaSusan")))
        :snt2 (c21-1 / pics
                     :topic (c21-7 / and
                                   :op1 (c21-2 / die-01)
                                   :op2 (c21-8 / dump-01
                                               :ARG1 (c21-0 / ocean)))
                     :ARG1-of (c21-11 / lie-08
                                      :degree (c21-6 / so))
                     :polarity -))

# ::snt GaetaSusan Callisto1947 Oh Goody take the boat over and visit
# ::tokens ["GaetaSusan", "Callisto1947", "Oh", "Goody", "take", "the", "boat", "over", "and", "visit"]
# ::lemmas ["GaetaSusan", "Callisto1947", "Oh", "Goody", "take", "the", "boat", "over", "and", "visit"]
(c22-6 / say-01
       :ARG0 (c22-8 / i)
       :ARG1 (c22-5 / and
                    :op1 (c22-3 / take-01
                                :ARG0 (c22-1 / person
                                             :name (c22-7 / name
                                                          :op1 "Oh"
                                                          :op2 "Goody"))
                                :ARG1 (c22-9 / boat)
                                :ARG3 (c22-0 / over)
                                :mode imperative)
                    :op2 (c22-4 / visit-01
                                :ARG0 c22-1
                                :mode imperative))
       :ARG2 c22-1
       :name (c22-2 / name
                    :op1 "Gaeta"
                    :op2 "Susan"))

# ::snt GaetaSusan Yeah Right tell that to the man who shot him multiple times face to face  Oh Elvis is still alive
# ::tokens ["GaetaSusan", "Yeah", "Right", "tell", "that", "to", "the", "man", "who", "shot", "him", "multiple", "times", "face", "to", "face", " ", "Oh", "Elvis", "is", "still", "alive"]
# ::lemmas ["GaetaSusan", "yeah", "right", "tell", "that", "to", "the", "man", "who", "shoot", "him", "multiple", "time", "face", "to", "face", " ", "oh", "Elvis", "be", "still", "alive"]
(c23-14 / multi-sentence
        :snt1 (c23-20 / say-01
                      :ARG0 (c23-4 / person
                                   :name (c23-21 / name
                                                 :op1 "GaetaSusan"))
                      :ARG1 (c23-1 / right-06
                                   :ARG2 (c23-12 / tell-01
                                                 :ARG0 (c23-22 / you)
                                                 :ARG1 (c23-7 / that)
                                                 :ARG2 (c23-2 / man
                                                              :ARG0-of (c23-13 / shoot-02
                                                                               :ARG2 (c23-8 / person
                                                                                            :name (c23-11 / name
                                                                                                          :op1 "Elvis"))
                                                                               :frequency (c23-6 / multiple)
                                                                               :manner (c23-19 / face-to-face)))))
                      :snt2 (c23-15 / live-01
                                    :ARG0 (c23-17 / person
                                                  :name (c23-3 / name
                                                               :op1 "Elvis"))
                                    :mod (c23-18 / still)
                                    :mod (c23-0 / oh))
                      :snt3 c23-20
                      :ARG0 (c23-5 / i)
                      :ARG1 (c23-9 / yeah)
                      :ARG2 (c23-16 / person
                                    :name (c23-10 / name
                                                  :op1 "GaetaSusan"))))

# ::snt GaetaSusan Callisto1947 sharing a home with Elvis and Michael Jacksonlol
# ::tokens ["GaetaSusan", "Callisto1947", "sharing", "a", "home", "with", "Elvis", "and", "Michael", "Jacksonlol"]
# ::lemmas ["GaetaSusan", "Callisto1947", "share", "a", "home", "with", "Elvis", "and", "Michael", "Jacksonlol"]
(c24-7 / share-01
       :ARG0 (c24-3 / person
                    :name (c24-10 / name
                                  :op1 "Gaeta"
                                  :op2 "Susan"
                                  :op3 "Callisto1947"))
       :ARG1 (c24-8 / home)
       :ARG2 (c24-5 / and
                    :op1 (c24-1 / person
                                :name (c24-4 / name
                                             :op1 "Elvis"))
                    :op2 (c24-0 / person
                                :name (c24-2 / name
                                             :op1 "Michael"
                                             :op2 "Jackson")))
       :manner (c24-9 / laugh-01
                      :ARG0 (c24-11 / i)
                      :manner (c24-6 / loud)
                      :mode expressive))

# ::snt GaetaSusan Callisto1947 long swim
# ::tokens ["GaetaSusan", "Callisto1947", "long", "swim"]
# ::lemmas ["GaetaSusan", "Callisto1947", "long", "swim"]
(c25-2 / swim-01
       :ARG0 (c25-1 / person
                    :name (c25-4 / name
                                 :op1 "GaetaSusan"
                                 :op2 "Callisto"))
       :ARG1-of (c25-3 / long-03)
       :time (c25-0 / date-entity))

# ::snt GaetaSusan Damn the perfect hiding place
# ::tokens ["GaetaSusan", "Damn", "the", "perfect", "hiding", "place"]
# ::lemmas ["GaetaSusan", "Damn", "the", "perfect", "hiding", "place"]
(c26-4 / say-01
       :ARG0 (c26-7 / i)
       :ARG1 (c26-2 / damn-01
                    :ARG0 (c26-3 / person
                                 :name (c26-6 / name
                                              :op1 "GaetaSusan"))
                    :ARG1 (c26-1 / place
                                 :ARG1-of (c26-5 / hide-01)
                                 :ARG1-of (c26-0 / perfect-02))
                    :mode expressive)
       :ARG2 c26-3)

# ::snt AlwayanAmerican LodiSilverado GaetaSusan Callisto1947 he was in Dallas Tx 3 weeks Ago
# ::tokens ["AlwayanAmerican", "LodiSilverado", "GaetaSusan", "Callisto1947", "he", "was", "in", "Dallas", "Tx", "3", "weeks", "Ago"]
# ::lemmas ["AlwayanAmerican", "LodiSilverado", "GaetaSusan", "Callisto1947", "he", "be", "in", "Dallas", "Tx", "3", "weeks", "Ago"]
(c27-11 / multi-sentence
        :snt1 (c27-5 / person
                     :name (c27-13 / name
                                   :op1 "AlwayanAmerican"
                                   :op2 "Lodi"))
        :snt2 (c27-1 / person
                     :name (c27-6 / name
                                  :op1 "Silverado"
                                  :op2 "Gaeta"))
        :snt3 (c27-14 / be-located-at-91
                      :ARG1 (c27-12 / he)
                      :ARG2 (c27-7 / city
                                   :name (c27-3 / name
                                                :op1 "Dallas"))
                      :time (c27-2 / before
                                   :op1 (c27-4 / now)
                                   :quant (c27-8 / temporal-quantity
                                                 :unit (c27-9 / week)
                                                 :quant 3)))
        :snt4 (c27-0 / person
                     :name (c27-10 / name
                                   :op1 "Susan"
                                   :op2 "Callisto"
                                   :op3 "1947")))

# ::snt GaetaSusan CathyTo47590555  That would surprise me not one bit
# ::tokens ["GaetaSusan", "CathyTo47590555", " ", "That", "would", "surprise", "me", "not", "one", "bit"]
# ::lemmas ["GaetaSusan", "CathyTo47590555", " ", "that", "would", "surprise", "me", "not", "one", "bit"]
(c28-4 / say-01
       :ARG1 (c28-3 / surprise-01
                    :ARG0 (c28-2 / that)
                    :ARG1 (c28-6 / i)
                    :degree (c28-7 / bit
                                   :polarity -))
       :ARG2 (c28-1 / person
                    :name (c28-5 / name
                                 :op1 "GaetaSusan"
                                 :op2 "Cathy"))
       :time (c28-0 / date-entity
                    :day 5
                    :month 9
                    :year 1997))

# ::snt GaetaSusan Yes  And ELVIS is his NEIGHBOR
# ::tokens ["GaetaSusan", "Yes", " ", "And", "ELVIS", "is", "his", "NEIGHBOR"]
# ::lemmas ["GaetaSusan", "yes", " ", "and", "ELVIS", "be", "his", "NEIGHBOR"]
(c29-6 / multi-sentence
       :snt1 (c29-2 / person
                    :name (c29-8 / name
                                 :op1 "GaetaSusan")
                    :mod (c29-9 / yes))
       :snt2 (c29-5 / and
                    :op2 (c29-0 / person
                                :name (c29-3 / name
                                             :op1 "ELVIS")
                                :ARG0-of (c29-7 / have-rel-role-91
                                                :ARG1 (c29-4 / he)
                                                :ARG2 (c29-1 / neighbor)))))

# ::snt GaetaSusan bcwilliams92 is say that theres a navy seal from Butte MT that would beg to differ wouldnt be hard to arrange that mtg
# ::tokens ["GaetaSusan", "bcwilliams92", "is", "say", "that", "there", "s", "a", "navy", "seal", "from", "Butte", "MT", "that", "would", "beg", "to", "differ", "would", "nt", "be", "hard", "to", "arrange", "that", "mtg"]
# ::lemmas ["GaetaSusan", "bcwilliams92", "be", "say", "that", "there", "s", "a", "navy", "seal", "from", "Butte", "MT", "that", "would", "beg", "to", "differ", "would", "not", "be", "hard", "to", "arrange", "that", "mtg"]
(c30-11 / say-01
        :ARG0 (c30-2 / person
                     :name (c30-14 / name
                                   :op1 "GaetaSusan"
                                   :op2 "BCwilliams92"))
        :ARG1 (c30-12 / hard-02
                      :ARG1 (c30-9 / arrange-01
                                   :ARG1 (c30-13 / mtg
                                                 :mod (c30-6 / that)))
                      :ARG1-of (c30-3 / cause-01
                                      :ARG0 (c30-8 / seal
                                                   :mod (c30-4 / navy)
                                                   :source (c30-0 / mountain
                                                                  :name (c30-1 / name
                                                                               :op1 "Butte")
                                                                  :location (c30-7 / state
                                                                                   :name (c30-5 / name
                                                                                                :op1 "Montana")))
                                                   :ARG0-of (c30-15 / beg-01
                                                                    :ARG1 (c30-10 / differ-01
                                                                                  :ARG0 c30-8))))
                      :polarity -))

# ::snt 00anabel GaetaSusan I dont believe anything Obama says  I dont believe anything Snowden says either He is a EU propaganda puppet
# ::tokens ["00anabel", "GaetaSusan", "I", "do", "nt", "believe", "anything", "Obama", "says", " ", "I", "do", "nt", "believe", "anything", "Snowden", "says", "either", "He", "is", "a", "EU", "propaganda", "puppet"]
# ::lemmas ["00anabel", "GaetaSusan", "i", "do", "not", "believe", "anything", "Obama", "say", " ", "i", "do", "not", "believe", "anything", "Snowden", "say", "either", "he", "be", "a", "EU", "propaganda", "puppet"]
(c31-11 / say-01
        :ARG0 (c31-13 / i)
        :ARG1 (c31-10 / and
                      :op1 (c31-14 / believe-01
                                   :ARG0 c31-13
                                   :ARG1 (c31-7 / anything
                                                :ARG1-of (c31-9 / say-01
                                                                :ARG0 (c31-4 / person
                                                                             :name (c31-12 / name
                                                                                           :op1 "Obama"))))
                                   :polarity -)
                      :op2 (c31-1 / believe-01
                                  :ARG0 c31-13
                                  :ARG1 (c31-15 / anything
                                                :ARG1-of (c31-8 / say-01
                                                                :ARG0 (c31-2 / person
                                                                             :name (c31-5 / name
                                                                                          :op1 "Snowden"))))
                                  :mod (c31-6 / either)
                                  :polarity -))
        :ARG2 (c31-0 / person
                     :name (c31-3 / name
                                  :op1 "Anabel"
                                  :op2 "Gaeta")))

# ::snt GaetaSusan 2014Gone I wouldnt doubt it in the leastour PROMUSLIM govt will do ANYTHING 2 FURTHER Muslim WORLDWIDE CALIPHATE
# ::tokens ["GaetaSusan", "2014Gone", "I", "would", "nt", "doubt", "it", "in", "the", "leastour", "PROMUSLIM", "govt", "will", "do", "ANYTHING", "2", "FURTHER", "Muslim", "WORLDWIDE", "CALIPHATE"]
# ::lemmas ["GaetaSusan", "2014Gone", "i", "would", "not", "doubt", "it", "in", "the", "leastour", "PROMUSLIM", "govt", "will", "do", "anything", "2", "further", "Muslim", "worldwide", "CALIPHATE"]
(c32-12 / multi-sentence
        :snt1 (c32-5 / person
                     :name (c32-15 / name
                                   :op1 "GaetaSusan")
                     :time (c32-4 / date-entity
                                  :year 2014))
        :snt2 (c32-9 / doubt-01
                     :ARG0 (c32-16 / i)
                     :ARG1 (c32-17 / do-02
                                   :ARG0 (c32-14 / government-organization
                                                 :ARG0-of (c32-6 / govern-01)
                                                 :mod (c32-0 / pious)
                                                 :poss (c32-8 / we))
                                   :ARG1 (c32-10 / anything)
                                   :condition (c32-13 / hate-01
                                                      :ARG0 (c32-1 / religious-group
                                                                   :name (c32-7 / name
                                                                                :op1 "Muslim"))
                                                      :location (c32-2 / world-region
                                                                       :name (c32-3 / name
                                                                                    :op1 "World"))
                                                      :mod (c32-11 / further)
                                                      :quant 2))
                     :polarity -))

# ::snt GaetaSusan For what its worth heres what Ive always held If it was bin Laden why did they dump the body at sea never 2b identified
# ::tokens ["GaetaSusan", "For", "what", "its", "worth", "heres", "what", "I", "ve", "always", "held", "If", "it", "was", "bin", "Laden", "why", "did", "they", "dump", "the", "body", "at", "sea", "never", "2b", "identified"]
# ::lemmas ["GaetaSusan", "for", "what", "its", "worth", "here", "what", "i", "have", "always", "hold", "if", "it", "be", "bin", "Laden", "why", "do", "they", "dump", "the", "body", "at", "sea", "never", "2b", "identify"]
(c33-13 / multi-sentence
        :snt1 (c33-3 / person
                     :name (c33-15 / name
                                   :op1 "GaetaSusan"))
        :snt2 (c33-12 / hold-01
                      :ARG0 (c33-16 / i)
                      :ARG1 (c33-7 / thing
                                   :ARG1-of (c33-8 / worth-02
                                                   :ARG2 (c33-1 / it)))
                      :time (c33-10 / always)
                      :condition (c33-2 / person
                                        :name (c33-4 / name
                                                     :op1 "bin"
                                                     :op2 "Laden"))
                      :ARG1-of (c33-5 / cause-01
                                      :ARG0 (c33-6 / amr-unknown)))
        :snt3 (c33-14 / identify-01
                      :ARG0 (c33-17 / they)
                      :ARG1 (c33-0 / body)
                      :location (c33-11 / sea)
                      :time (c33-9 / ever)
                      :polarity -))

# ::snt GaetaSusan Bin Laden in Detroit with Jimmy Hoffa
# ::tokens ["GaetaSusan", "Bin", "Laden", "in", "Detroit", "with", "Jimmy", "Hoffa"]
# ::lemmas ["GaetaSusan", "Bin", "Laden", "in", "Detroit", "with", "Jimmy", "Hoffa"]
(c34-7 / and
       :op1 (c34-4 / person
                   :name (c34-8 / name
                                :op1 "Gaeta"))
       :op2 (c34-1 / person
                   :name (c34-5 / name
                                :op1 "Jimmy"
                                :op2 "Hoffer"))
       :location (c34-6 / city
                        :name (c34-2 / name
                                     :op1 "Detroit"))
       :accompanier (c34-0 / person
                           :name (c34-3 / name
                                        :op1 "Gaeta")))

# ::snt GaetaSusan No Body is very Suspicious to say the Least
# ::tokens ["GaetaSusan", "No", "Body", "is", "very", "Suspicious", "to", "say", "the", "Least"]
# ::lemmas ["GaetaSusan", "No", "Body", "be", "very", "suspicious", "to", "say", "the", "least"]
(c35-4 / say-01
       :ARG1 (c35-2 / suspicious-03
                    :ARG0 (c35-0 / person
                                 :name (c35-5 / name
                                              :op1 "Gaeta"
                                              :op2 "Susan"
                                              :op3 "No"
                                              :op4 "Body"))
                    :degree (c35-1 / very))
       :mod (c35-3 / at-least))

# ::snt GaetaSusan I believe navy sealsThey killed him
# ::tokens ["GaetaSusan", "I", "believe", "navy", "sealsThey", "killed", "him"]
# ::lemmas ["GaetaSusan", "i", "believe", "navy", "sealsThey", "kill", "him"]
(c36-3 / say-01
       :ARG0 (c36-5 / i)
       :ARG1 (c36-6 / believe-01
                    :ARG0 c36-5
                    :ARG1 (c36-2 / kill-01
                                 :ARG0 (c36-1 / they)
                                 :ARG1 (c36-0 / person
                                              :name (c36-4 / name
                                                           :op1 "Gaeta")
                                              :ARG2-of c36-3))))

# ::snt GaetaSusan If this article is serious it just demonstrates Snowdens handlers have drained him of use beyond peddling ridiculous stories
# ::tokens ["GaetaSusan", "If", "this", "article", "is", "serious", "it", "just", "demonstrates", "Snowdens", "handlers", "have", "drained", "him", "of", "use", "beyond", "peddling", "ridiculous", "stories"]
# ::lemmas ["GaetaSusan", "if", "this", "article", "be", "serious", "it", "just", "demonstrate", "Snowdens", "handler", "have", "drain", "him", "of", "use", "beyond", "peddle", "ridiculous", "story"]
(c37-12 / say-01
        :ARG0 (c37-16 / i)
        :ARG1 (c37-3 / demonstrate-01
                     :ARG0 (c37-10 / article
                                   :mod (c37-7 / this))
                     :ARG1 (c37-11 / drain-01
                                   :ARG0 (c37-4 / person
                                                :ARG0-of (c37-13 / handle-01
                                                                 :ARG1 (c37-1 / person
                                                                              :name (c37-15 / name
                                                                                            :op1 "Snowdens")
                                                                              :ARG1-of c37-11)))
                                   :ARG2 (c37-5 / use-01
                                                :ARG0 c37-1)
                                   :manner (c37-17 / beyond
                                                   :op1 (c37-0 / peddle-01
                                                               :ARG0 c37-1
                                                               :ARG1 (c37-9 / story
                                                                            :ARG1-of (c37-2 / ridiculous-02)))))
                     :mod (c37-6 / just)
                     :condition (c37-8 / serious-02
                                       :ARG1 c37-10))
        :ARG2 (c37-14 / person
                      :name c37-15
                      :op1 "GaetaSusan"))

# ::snt GaetaSusan  I KNEW IT
# ::tokens ["GaetaSusan", " ", "I", "KNEW", "IT"]
# ::lemmas ["GaetaSusan", " ", "i", "knew", "it"]
(c38-3 / know-01
       :ARG0 (c38-5 / i)
       :ARG1 (c38-0 / it)
       :ARG1-of (c38-2 / say-01
                       :ARG0 c38-5
                       :ARG2 (c38-1 / person
                                    :name (c38-4 / name
                                                 :op1 "GaetaSusan"))))

# ::snt howardjohny GaetaSusan c5hardtop1999 There aint no body Another false flag
# ::tokens ["howardjohny", "GaetaSusan", "c5hardtop1999", "There", "ai", "nt", "no", "body", "Another", "false", "flag"]
# ::lemmas ["howardjohny", "GaetaSusan", "c5hardtop1999", "there", "be", "not", "no", "body", "another", "false", "flag"]
(c39-5 / multi-sentence
       :snt1 (c39-2 / person
                    :name (c39-6 / name
                                 :op1 "howardjohny"
                                 :op2 "GaetaSusan")
                    :time (c39-1 / date-entity
                                 :year 1999))
       :snt2 (c39-7 / body
                    :polarity -)
       :snt3 (c39-4 / flag
                    :mod (c39-0 / false)
                    :mod (c39-3 / another)))

# ::snt GaetaSusan c5hardtop1999 Bingo
# ::tokens ["GaetaSusan", "c5hardtop1999", "Bingo"]
# ::lemmas ["GaetaSusan", "c5hardtop1999", "Bingo"]
(c40-2 / person
       :name (c40-4 / name
                    :op1 "GaetaSusan")
       :mod (c40-0 / person
                   :name (c40-3 / name
                                :op1 "C5hardtop"))
       :time (c40-1 / date-entity
                    :year 1999
                    :month 1
                    :day 1))

# ::snt howardjohny c5hardtop1999 No bodythats why
# ::tokens ["howardjohny", "c5hardtop1999", "No", "bodythats", "why"]
# ::lemmas ["howardjohny", "c5hardtop1999", "no", "bodythat", "why"]
(c41-3 / multi-sentence
       :snt1 (c41-1 / person
                    :name (c41-4 / name
                                 :op1 "howardjohny")
                    :time (c41-0 / date-entity
                                 :year 1999))
       :snt2 (c41-5 / bodythats
                    :ARG0-of (c41-2 / cause-01)))

# ::snt GaetaSusan c5hardtop1999 We were never allowed to see the body and was mysteriously buried at sea  why
# ::tokens ["GaetaSusan", "c5hardtop1999", "We", "were", "never", "allowed", "to", "see", "the", "body", "and", "was", "mysteriously", "buried", "at", "sea", " ", "why"]
# ::lemmas ["GaetaSusan", "c5hardtop1999", "we", "be", "never", "allow", "to", "see", "the", "body", "and", "be", "mysteriously", "bury", "at", "sea", " ", "why"]
(c42-11 / multi-sentence
        :snt1 (c42-3 / person
                     :name (c42-12 / name
                                   :op1 "GaetaSusan")
                     :time (c42-2 / date-entity
                                  :year 1999))
        :snt2 (c42-9 / and
                     :op1 (c42-6 / allow-01
                                 :ARG1 (c42-10 / see-01
                                               :ARG0 (c42-7 / we)
                                               :ARG1 (c42-13 / body))
                                 :time (c42-4 / ever)
                                 :polarity -)
                     :op2 (c42-0 / bury-01
                                 :ARG1 c42-13
                                 :ARG2 (c42-8 / sea)
                                 :manner (c42-1 / mysterious))
                     :ARG1-of (c42-5 / cause-01
                                     :ARG0 (c42-14 / amr-unknown))))

# ::snt no ntiendo ingles pero djaron salir solo los vuelos d su flia luego d la dstruccion dsustorresxq iban a matar a su socio
# ::tokens ["no", "ntiendo", "ingles", "pero", "djaron", "salir", "solo", "los", "vuelos", "d", "su", "flia", "luego", "d", "la", "dstruccion", "dsustorresxq", "iban", "a", "matar", "a", "su", "socio"]
# ::lemmas ["no", "ntiendo", "ingles", "pero", "djaron", "salir", "solo", "los", "vuelos", "d", "su", "flia", "luego", "d", "la", "dstruccion", "dsustorresxq", "iban", "a", "matar", "a", "su", "socio"]
(c43-8 / and
       :op1 (c43-14 / have-polarity-91
                    :ARG2 -)
       :op2 (c43-18 / intend-01
                    :ARG0 (c43-0 / i)
                    :ARG1 (c43-16 / ingles)
                    :polarity -)
       :op3 (c43-3 / contrast-01
                   :ARG1 (c43-13 / salir-01
                                 :ARG1 (c43-5 / and
                                              :op1 (c43-6 / vuelo)
                                              :op2 (c43-11 / flia
                                                           :mod (c43-15 / luego))
                                              :op3 (c43-9 / la
                                                          :mod (c43-2 / dstruccion
                                                                      :mod (c43-7 / sustorresxq))))
                                 :manner (c43-10 / solo))
                   :ARG2 (c43-19 / say-01
                                 :ARG0 c43-0
                                 :ARG1 (c43-1 / iban-00
                                              :ARG1 (c43-17 / matar-00
                                                            :ARG1 (c43-12 / socio
                                                                          :poss (c43-4 / person)))))))

# ::snt snowden trained by KGB in 9 years  Manipulation etc
# ::tokens ["snowden", "trained", "by", "KGB", "in", "9", "years", " ", "Manipulation", "etc"]
# ::lemmas ["snowden", "train", "by", "KGB", "in", "9", "years", " ", "Manipulation", "etc"]
(c44-3 / and
       :op1 (c44-2 / train-01
                   :ARG0 (c44-6 / government-organization
                                :name (c44-5 / name
                                             :op1 "KGB"))
                   :ARG2 (c44-0 / person
                                :name c44-5
                                :op1 "Snowden"))
       :duration (c44-7 / temporal-quantity
                        :unit (c44-8 / year)
                        :quant 9)
       :op2 (c44-4 / manipulate-02)
       :op3 (c44-1 / et-cetera))

# ::snt SMetzeler I am not Edward Snowden or Osama Bin Laden  I am reporting a statement by Snowden who has proven factual on other matters
# ::tokens ["SMetzeler", "I", "am", "not", "Edward", "Snowden", "or", "Osama", "Bin", "Laden", " ", "I", "am", "reporting", "a", "statement", "by", "Snowden", "who", "has", "proven", "factual", "on", "other", "matters"]
# ::lemmas ["SMetzeler", "i", "be", "not", "Edward", "Snowden", "or", "Osama", "Bin", "Laden", " ", "i", "be", "report", "a", "statement", "by", "Snowden", "who", "have", "prove", "factual", "on", "other", "matter"]
(c45-11 / say-01
        :ARG0 (c45-15 / i)
        :ARG1 (c45-6 / contrast-01
                     :ARG1 (c45-0 / or
                                  :op1 (c45-7 / person
                                              :name (c45-14 / name
                                                            :op1 "Edward"
                                                            :op2 "Snowden"))
                                  :op2 (c45-2 / person
                                              :name (c45-8 / name
                                                           :op1 "Osama"
                                                           :op2 "Bin"
                                                           :op3 "Laden"))
                                  :polarity -)
                     :ARG2 (c45-3 / report-01
                                  :ARG0 c45-15
                                  :ARG1 (c45-9 / state-01
                                               :ARG0 c45-7
                                               :ARG0-of (c45-1 / prove-01
                                                               :ARG1 (c45-10 / fact)
                                                               :topic (c45-12 / matter
                                                                              :mod (c45-4 / other))))))
        :ARG2 (c45-13 / person
                      :name (c45-5 / name
                                   :op1 "SMetzeler")))

# ::snt Show us the evidence otherwise this is just words
# ::tokens ["Show", "us", "the", "evidence", "otherwise", "this", "is", "just", "words"]
# ::lemmas ["show", "us", "the", "evidence", "otherwise", "this", "be", "just", "word"]
(c46-6 / show-01
       :ARG0 (c46-8 / you)
       :ARG1 (c46-3 / thing
                    :ARG0-of (c46-1 / evidence-01)
                    :mod (c46-5 / something))
       :ARG2 (c46-4 / we)
       :concession (c46-0 / word
                          :mod (c46-7 / just)
                          :domain (c46-2 / this))
       :mode imperative)

# ::snt Anything or anybody tied to the Obama International Gang is capable of anything This shenanigan too
# ::tokens ["Anything", "or", "anybody", "tied", "to", "the", "Obama", "International", "Gang", "is", "capable", "of", "anything", "This", "shenanigan", "too"]
# ::lemmas ["anything", "or", "anybody", "tie", "to", "the", "Obama", "International", "Gang", "be", "capable", "of", "anything", "this", "shenanigan", "too"]
(c47-1 / capable-01
       :ARG1 (c47-0 / or
                    :op1 (c47-4 / anything)
                    :op2 (c47-2 / anybody
                                :ARG1-of (c47-3 / tie-01
                                                :ARG2 (c47-8 / gang
                                                             :name (c47-7 / name
                                                                          :op1 "Obama"
                                                                          :op2 "International"
                                                                          :op3 "Gang")))))
       :ARG2 (c47-10 / anything
                     :mod (c47-6 / shenanigan
                                 :mod (c47-9 / this)))
       :mod (c47-5 / too))

# ::snt A lot of people questioned that whole thing back then  Is there any lie the Govt wont tell us if it fits into their agenda  No  Lets see if Snowden offers any actual proof of that
# ::tokens ["A", "lot", "of", "people", "questioned", "that", "whole", "thing", "back", "then", " ", "Is", "there", "any", "lie", "the", "Govt", "wo", "nt", "tell", "us", "if", "it", "fits", "into", "their", "agenda", " ", "No", " ", "Lets", "see", "if", "Snowden", "offers", "any", "actual", "proof", "of", "that"]
# ::lemmas ["a", "lot", "of", "people", "question", "that", "whole", "thing", "back", "then", " ", "be", "there", "any", "lie", "the", "Govt", "will", "not", "tell", "us", "if", "it", "fit", "into", "their", "agenda", " ", "no", " ", "Lets", "see", "if", "Snowden", "offer", "any", "actual", "proof", "of", "that"]
(c48-16 / multi-sentence
        :snt1 (c48-3 / question-03
                     :ARG0 (c48-1 / person
                                  :quant (c48-17 / lot))
                     :ARG1 (c48-14 / thing
                                   :mod (c48-2 / whole)
                                   :mod (c48-5 / that))
                     :time (c48-7 / then
                                  :mod (c48-18 / back)))
        :snt2 (c48-15 / lie-08
                      :polarity (c48-22 / amr-unknown)
                      :ARG0 (c48-25 / government-organization
                                    :ARG0-of (c48-12 / govern-01))
                      :ARG2 (c48-11 / we)
                      :condition (c48-23 / fit-06
                                         :ARG1 (c48-4 / it)
                                         :ARG2 (c48-13 / agenda
                                                       :poss c48-25)))
        :snt3 (c48-9 / have-polarity-91
                     :ARG2 -)
        :snt4 (c48-24 / see-01
                      :ARG0 c48-11
                      :ARG1 (c48-26 / truth-value
                                    :polarity-of (c48-0 / offer-01
                                                        :ARG0 (c48-6 / person
                                                                     :name (c48-10 / name
                                                                                   :op1 "Snowden"))
                                                        :ARG1 (c48-21 / thing
                                                                      :ARG0-of (c48-20 / prove-01
                                                                                       :ARG1 (c48-8 / that)
                                                                                       :ARG1-of (c48-19 / actual-02)))))
                      :mode imperative))

# ::snt Body dropped overboard at Sea Never bought that BS
# ::tokens ["Body", "dropped", "overboard", "at", "Sea", "Never", "bought", "that", "BS"]
# ::lemmas ["body", "drop", "overboard", "at", "Sea", "Never", "buy", "that", "BS"]
(c49-5 / buy-05
       :ARG0 (c49-6 / you)
       :ARG1 (c49-0 / bullshit
                    :mod (c49-2 / that))
       :time (c49-1 / ever)
       :location (c49-3 / sea
                        :name (c49-4 / name
                                     :op1 "Sea"))
       :polarity -)

# ::snt fake news
# ::tokens ["fake", "news"]
# ::lemmas ["fake", "news"]
(c50-0 / news
       :ARG1-of (c50-1 / fake-02))
