# ::snt FakeNews Whats an Orlando news channel reporting on a fake story in Montana GetAClue
# ::tokens ["FakeNews", "What", "s", "an", "Orlando", "news", "channel", "reporting", "on", "a", "fake", "story", "in", "Montana", "GetAClue"]
# ::lemmas ["fakenews", "what", "s", "an", "Orlando", "news", "channel", "report", "on", "a", "fake", "story", "in", "Montana", "getaclue"]
(c1-8 / and
      :op1 (c1-12 / broadcast-program
                  :name (c1-11 / name
                               :op1 "FakeNews"))
      :op2 (c1-0 / broadcast-program
                 :name (c1-5 / name
                             :op1 "GetAClue")
                 :location (c1-4 / city
                                 :name (c1-2 / name
                                             :op1 "Orlando"))
                 :mod (c1-3 / news)
                 :ARG0-of (c1-1 / report-01
                                :ARG1 (c1-10 / story
                                             :ARG1-of (c1-9 / fake-02)
                                             :location (c1-7 / state
                                                             :name (c1-6 / name
                                                                         :op1 "Montana"))))))

# ::snt Careful what we wish for remember theres karma
# ::tokens ["Careful", "what", "we", "wish", "for", "remember", "there", "s", "karma"]
# ::lemmas ["careful", "what", "we", "wish", "for", "remember", "there", "s", "karma"]
(c2-0 / remember-01
      :ARG0 (c2-5 / you)
      :ARG1 (c2-4 / karma
                  :ARG1-of (c2-3 / wish-01
                                 :ARG0 (c2-1 / we)))
      :ARG1-of (c2-2 / care-04)
      :mode imperative)

# ::snt Too bad Wish it was true
# ::tokens ["Too", "bad", "Wish", "it", "was", "true"]
# ::lemmas ["too", "bad", "wish", "it", "be", "true"]
(c3-5 / bad-07
      :ARG1 (c3-2 / wish-01
                  :ARG1 (c3-1 / true-01
                              :ARG1 (c3-4 / it)))
      :ARG2-of (c3-3 / have-degree-91
                     :ARG1 c3-2
                     :ARG3 (c3-0 / too)))

# ::snt Fake news
# ::tokens ["Fake", "news"]
# ::lemmas ["fake", "news"]
(c4-0 / news
      :ARG1-of (c4-1 / fake-02))

# ::snt Oh no I pray it is not true
# ::tokens ["Oh", "no", "I", "pray", "it", "is", "not", "true"]
# ::lemmas ["oh", "no", "i", "pray", "it", "be", "not", "true"]
(c5-2 / pray-01
      :ARG0 (c5-4 / i)
      :ARG1 (c5-3 / true-01
                  :ARG1 (c5-1 / it)
                  :polarity -)
      :mod (c5-0 / oh-no
                 :mode expressive))

# ::snt I just read about this too
# ::tokens ["I", "just", "read", "about", "this", "too"]
# ::lemmas ["i", "just", "read", "about", "this", "too"]
(c6-0 / read-01
      :ARG0 (c6-3 / i)
      :ARG3 (c6-2 / this)
      :mod (c6-1 / too)
      :time (c6-4 / just))

# ::snt ACCIDENT
# ::tokens ["ACCIDENT"]
# ::lemmas ["ACCIDENT"]
(c7-0 / accident)

# ::snt httphoaxalertleadstoriescom3468601fakenewstednugenthuntingaccidentwasnotmurderdidnothappenhtml â€¦
# ::tokens ["httphoaxalertleadstoriescom3468601fakenewstednugenthuntingaccidentwasnotmurderdidnothappenhtml", "\u2026"]
# ::lemmas ["httphoaxalertleadstoriescom3468601fakenewstednugenthuntingaccidentwasnotmurderdidnothappenhtml", "\u2026"]
(c8-1 / hyperlink-91
      :ARG3 (c8-0 / url-entity
                  :value "httphoaxalertleadstoriescom3468601fakenewstednugenthuntingaccidentwasnotmurderdidnothappenhtml"))

# ::snt Shame
# ::tokens ["Shame"]
# ::lemmas ["shame"]
(c9-0 / shame-02)

# ::snt Probably some guy named Ted Nugent and they wanted to be first god forbid accurate But first
# ::tokens ["Probably", "some", "guy", "named", "Ted", "Nugent", "and", "they", "wanted", "to", "be", "first", "god", "forbid", "accurate", "But", "first"]
# ::lemmas ["probably", "some", "guy", "name", "Ted", "Nugent", "and", "they", "want", "to", "be", "first", "god", "forbid", "accurate", "but", "first"]
(c10-4 / contrast-01
       :ARG1 (c10-10 / and
                     :op1 (c10-5 / probable
                                 :domain (c10-14 / guy
                                                 :name (c10-13 / name
                                                               :op1 "Ted"
                                                               :op2 "Nugent")
                                                 :mod (c10-12 / some)
                                                 :ARG1-of (c10-6 / name-01
                                                                 :ARG2 (c10-1 / person
                                                                              :name (c10-3 / name
                                                                                           :op1 "God")))))
                     :op2 (c10-9 / want-01
                                 :ARG0 c10-14
                                 :ARG1 (c10-7 / accurate
                                              :domain c10-14
                                              :ord (c10-0 / ordinal-entity
                                                          :value 1)
                                              :ARG1-of (c10-11 / forbid-01
                                                               :ARG0 (c10-8 / god))))
                     :ARG2 (c10-2 / ordinal-entity
                                  :value 1)))

# ::snt This appears to be a fake story
# ::tokens ["This", "appears", "to", "be", "a", "fake", "story"]
# ::lemmas ["this", "appear", "to", "be", "a", "fake", "story"]
(c11-0 / appear-02
       :ARG1 (c11-3 / story
                    :ARG1-of (c11-1 / fake-02)
                    :domain (c11-2 / this)))

# ::snt TedNugent
# ::tokens ["TedNugent"]
# ::lemmas ["TedNugent"]
(c12-0 / person
       :name (c12-1 / name
                    :op1 "TedNugent"))

# ::snt oh bolloxgot my hopes up there
# ::tokens ["oh", "bolloxgot", "my", "hopes", "up", "there"]
# ::lemmas ["oh", "bolloxgot", "my", "hope", "up", "there"]
(c13-4 / get-01
       :ARG1 (c13-3 / hopeful-03
                    :ARG0 (c13-5 / i)
                    :location (c13-2 / there
                                     :direction (c13-1 / up)))
       :mod (c13-0 / oh
                   :mode expressive))

# ::snt Fortunately for Ted you were
# ::tokens ["Fortunately", "for", "Ted", "you", "were"]
# ::lemmas ["fortunately", "for", "Ted", "you", "be"]
(c14-2 / fortunate-01
       :ARG1 (c14-0 / person
                    :name (c14-1 / name
                                 :op1 "Ted"))
       :ARG2 (c14-3 / you))

# ::snt Am I a victim of Fake News I read it this morning
# ::tokens ["Am", "I", "a", "victim", "of", "Fake", "News", "I", "read", "it", "this", "morning"]
# ::lemmas ["be", "i", "a", "victim", "of", "Fake", "News", "i", "read", "it", "this", "morning"]
(c15-8 / multi-sentence
       :snt1 (c15-5 / victim
                    :polarity (c15-6 / amr-unknown)
                    :domain (c15-10 / i)
                    :topic (c15-9 / news
                                  :ARG1-of (c15-7 / fake-02)))
       :snt2 (c15-0 / read-01
                    :ARG0 c15-10
                    :ARG1 (c15-1 / it)
                    :time (c15-3 / date-entity
                                 :dayperiod (c15-2 / morning)
                                 :mod (c15-4 / today))))

# ::snt Hes alive and well He was on FB Live not to long ago
# ::tokens ["He", "s", "alive", "and", "well", "He", "was", "on", "FB", "Live", "not", "to", "long", "ago"]
# ::lemmas ["he", "s", "alive", "and", "well", "he", "be", "on", "FB", "Live", "not", "to", "long", "ago"]
(c16-3 / and
       :op1 (c16-6 / live-01
                   :ARG0 (c16-5 / he))
       :op2 (c16-2 / well-09
                   :ARG1 c16-5)
       :location (c16-8 / broadcast-program
                        :name (c16-7 / name
                                     :op1 "Facebook"
                                     :op2 "Live"))
       :time (c16-0 / before
                    :op1 (c16-1 / now)
                    :quant (c16-4 / long
                                  :polarity -)))

# ::snt This apparently is false
# ::tokens ["This", "apparently", "is", "false"]
# ::lemmas ["this", "apparently", "be", "false"]
(c17-1 / false
       :domain (c17-2 / this)
       :ARG1-of (c17-0 / appear-02))

# ::snt cant get to article Covered by app ads
# ::tokens ["ca", "nt", "get", "to", "article", "Covered", "by", "app", "ads"]
# ::lemmas ["can", "not", "get", "to", "article", "cover", "by", "app", "ad"]
(c18-0 / possible-01
       :ARG1 (c18-4 / get-05
                    :ARG1 (c18-5 / i)
                    :ARG2 (c18-3 / article
                                 :ARG1-of (c18-1 / cover-02
                                                 :ARG0 (c18-2 / advertise-01
                                                              :medium (c18-6 / app)))))
       :polarity -)

# ::snt That was a professional hit trust me
# ::tokens ["That", "was", "a", "professional", "hit", "trust", "me"]
# ::lemmas ["that", "be", "a", "professional", "hit", "trust", "me"]
(c19-2 / hit-01
       :ARG0 (c19-0 / professional)
       :domain (c19-1 / that)
       :ARG2-of (c19-4 / trust-01
                       :ARG0 (c19-5 / you)
                       :ARG1 (c19-3 / i)))

# ::snt Its not real Its a hoax
# ::tokens ["Its", "not", "real", "Its", "a", "hoax"]
# ::lemmas ["its", "not", "real", "its", "a", "hoax"]
(c20-0 / and
       :op1 (c20-2 / real-04
                   :ARG1 (c20-1 / it)
                   :polarity -)
       :op2 (c20-3 / hoax-01
                   :ARG2 c20-1))

# ::snt Aweful news
# ::tokens ["Aweful", "news"]
# ::lemmas ["aweful", "news"]
(c21-1 / news
       :mod (c21-0 / awful))

# ::snt Couldnt agree more Hes a good dude that represents our 2A
# ::tokens ["Could", "nt", "agree", "more", "He", "s", "a", "good", "dude", "that", "represents", "our", "2A"]
# ::lemmas ["could", "not", "agree", "more", "he", "s", "a", "good", "dude", "that", "represent", "our", "2A"]
(c22-3 / possible-01
       :ARG1 (c22-5 / agree-01
                    :ARG0 (c22-10 / i)
                    :ARG1 (c22-2 / dude
                                 :ARG1-of (c22-9 / good-02)
                                 :ARG0-of (c22-1 / represent-01
                                                 :ARG1 (c22-0 / organization
                                                              :name (c22-7 / name
                                                                           :op1 "2A")
                                                              :poss (c22-4 / we))))
                    :ARG2-of (c22-6 / have-degree-91
                                    :ARG1 c22-10
                                    :ARG3 (c22-8 / more)))
       :polarity -)

# ::snt NO its not  Teds the MAN
# ::tokens ["NO", "its", "not", " ", "Teds", "the", "MAN"]
# ::lemmas ["no", "its", "not", " ", "Teds", "the", "man"]
(c23-2 / say-01
       :ARG0 (c23-0 / i)
       :ARG1 (c23-1 / teds-01
                    :ARG1 (c23-3 / man
                                 :ARG2-of c23-2)
                    :polarity -))

# ::snt Thats not a funny hoax I like gun toating Neug
# ::tokens ["That", "s", "not", "a", "funny", "hoax", "I", "like", "gun", "toating", "Neug"]
# ::lemmas ["that", "s", "not", "a", "funny", "hoax", "i", "like", "gun", "toate", "Neug"]
(c24-6 / multi-sentence
       :snt1 (c24-5 / hoax-01
                    :ARG2 (c24-1 / that)
                    :mod (c24-2 / funny)
                    :polarity -)
       :snt2 (c24-4 / like-01
                    :ARG0 (c24-8 / i)
                    :ARG1 (c24-0 / person
                                 :name (c24-7 / name
                                              :op1 "Neug")
                                 :ARG0-of (c24-9 / bait-01
                                                 :instrument (c24-3 / gun)))))

# ::snt merciermike  Seriously Fake news BS Bait click
# ::tokens ["merciermike", " ", "Seriously", "Fake", "news", "BS", "Bait", "click"]
# ::lemmas ["merciermike", " ", "Seriously", "Fake", "news", "BS", "Bait", "click"]
(c25-5 / multi-sentence
       :snt1 (c25-0 / person
                    :name (c25-6 / name
                                 :op1 "merciermike"))
       :snt2 (c25-1 / click-01
                    :ARG0 (c25-8 / you)
                    :ARG1 (c25-7 / bait-01
                                 :ARG2 (c25-2 / news)
                                 :ARG1-of (c25-3 / fake-02)
                                 :ARG1-of (c25-4 / serious-01))
                    :mode imperative))

# ::snt Thank god
# ::tokens ["Thank", "god"]
# ::lemmas ["thank", "god"]
(c26-2 / thank-01
       :ARG1 (c26-0 / person
                    :name (c26-1 / name
                                 :op1 "God")))

# ::snt True or not
# ::tokens ["True", "or", "not"]
# ::lemmas ["true", "or", "not"]
(c27-0 / or
       :op1 (c27-2 / true-01)
       :op2 (c27-1 / true-01
                   :polarity -))

# ::snt IT IS A HOAX
# ::tokens ["IT", "IS", "A", "HOAX"]
# ::lemmas ["it", "be", "a", "HOAX"]
(c28-1 / loophole
       :domain (c28-0 / it))

# ::snt its a hoax He is alive and well
# ::tokens ["its", "a", "hoax", "He", "is", "alive", "and", "well"]
# ::lemmas ["its", "a", "hoax", "he", "be", "alive", "and", "well"]
(c29-5 / multi-sentence
       :snt1 (c29-4 / hoax-01
                    :domain (c29-6 / it))
       :snt2 (c29-2 / and
                    :op1 (c29-3 / live-01
                                :ARG0 (c29-0 / he))
                    :op2 (c29-1 / well-09
                                :ARG1 c29-0)))

# ::snt If only that were true
# ::tokens ["If", "only", "that", "were", "true"]
# ::lemmas ["if", "only", "that", "be", "true"]
(c30-3 / have-condition-91
       :ARG2 (c30-2 / true-01
                    :ARG1 (c30-1 / that))
       :mod (c30-0 / only))
