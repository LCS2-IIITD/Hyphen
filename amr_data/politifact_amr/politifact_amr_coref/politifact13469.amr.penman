# ::snt Poor Donny Jimmy is so mean to him
# ::tokens ["Poor", "Donny", "Jimmy", "is", "so", "mean", "to", "him"]
# ::lemmas ["Poor", "Donny", "Jimmy", "be", "so", "mean", "to", "him"]
(c1-3 / mean-04
      :ARG0 (c1-1 / person
                  :name (c1-5 / name
                              :op1 "Donny"
                              :op2 "Jimmy")
                  :mod (c1-0 / poor))
      :ARG1 (c1-4 / he)
      :degree (c1-2 / so))

# ::snt The only fake news comes from Donny
# ::tokens ["The", "only", "fake", "news", "comes", "from", "Donny"]
# ::lemmas ["the", "only", "fake", "news", "come", "from", "Donny"]
(c2-1 / come-03
      :ARG1 (c2-5 / news
                  :ARG1-of (c2-4 / fake-02)
                  :mod (c2-0 / only))
      :ARG2 (c2-2 / person
                  :name (c2-3 / name
                              :op1 "Donny")))

# ::snt You give me an example of Fake News
# ::tokens ["You", "give", "me", "an", "example", "of", "Fake", "News"]
# ::lemmas ["you", "give", "me", "an", "example", "of", "Fake", "News"]
(c3-2 / give-01
      :ARG0 (c3-4 / you)
      :ARG1 (c3-0 / thing
                  :example-of (c3-1 / fake-News))
      :ARG2 (c3-3 / i))

# ::snt Go ahead list a page of CNN fake news stories They retract if not 100 accurate something Donny never does  I’ll wait for these “Fake” CNN stories
# ::tokens ["Go", "ahead", "list", "a", "page", "of", "CNN", "fake", "news", "stories", "They", "retract", "if", "not", "100", "accurate", "something", "Donny", "never", "does", " ", "I", "\u2019ll", "wait", "for", "these", "\u201c", "Fake", "\u201d", "CNN", "stories"]
# ::lemmas ["go", "ahead", "list", "a", "page", "of", "CNN", "fake", "news", "story", "they", "retract", "if", "not", "100", "accurate", "something", "Donny", "never", "do", " ", "i", "will", "wait", "for", "these", "\"", "fake", "\"", "CNN", "story"]
(c4-18 / multi-sentence
       :snt1 (c4-23 / go-06
                    :ARG0 (c4-24 / you)
                    :ARG1 (c4-17 / list-01
                                 :ARG0 c4-24
                                 :ARG1 (c4-4 / page
                                             :part-of (c4-22 / story
                                                             :mod (c4-13 / news
                                                                         :ARG1-of (c4-21 / fake-02))
                                                             :source (c4-9 / publication
                                                                           :name (c4-10 / name
                                                                                        :op1 "CNN")))))
                    :ARG2 (c4-20 / ahead)
                    :mode imperative)
       :snt2 (c4-0 / retract-01
                   :ARG0 (c4-15 / they)
                   :condition (c4-14 / accurate
                                     :ARG2-of (c4-12 / have-degree-91
                                                     :ARG1 c4-0
                                                     :ARG3 (c4-2 / more)
                                                     :ARG4 (c4-11 / retract-01
                                                                  :ARG0 (c4-19 / person
                                                                               :name (c4-3 / name
                                                                                           :op1 "Donny"))
                                                                  :time (c4-5 / ever)))
                                     :polarity -))
       :snt3 (c4-6 / wait-01
                   :ARG1 (c4-7 / i)
                   :ARG2 (c4-16 / story
                                :ARG1-of (c4-1 / fake-02)
                                :source c4-9
                                :mod (c4-8 / this))))

# ::snt I’m waiting
# ::tokens ["I", "\u2019m", "waiting"]
# ::lemmas ["i", "be", "wait"]
(c5-1 / wait-01
      :ARG1 (c5-0 / i))

# ::snt The only fake news comes from Lying Donny Trump
# ::tokens ["The", "only", "fake", "news", "comes", "from", "Lying", "Donny", "Trump"]
# ::lemmas ["the", "only", "fake", "news", "come", "from", "Lying", "Donny", "Trump"]
(c6-1 / come-03
      :ARG1 (c6-6 / news
                  :ARG1-of (c6-4 / fake-02)
                  :mod (c6-0 / only))
      :ARG2 (c6-5 / lie-08
                  :ARG2 (c6-2 / person
                              :name (c6-3 / name
                                          :op1 "Donny"
                                          :op2 "Trump"))))

# ::snt This Fake News is pure horse from Lying Donny Trump and the Trump apologists You don’t have pages of examples Out of the thousands of CNN reports they put out a small percentage gets retracted Trump just lies about his lies
# ::tokens ["This", "Fake", "News", "is", "pure", "horse", "from", "Lying", "Donny", "Trump", "and", "the", "Trump", "apologists", "You", "do", "n\u2019t", "have", "pages", "of", "examples", "Out", "of", "the", "thousands", "of", "CNN", "reports", "they", "put", "out", "a", "small", "percentage", "gets", "retracted", "Trump", "just", "lies", "about", "his", "lies"]
# ::lemmas ["this", "Fake", "News", "be", "pure", "horse", "from", "Lying", "Donny", "Trump", "and", "the", "Trump", "apologist", "you", "do", "not", "have", "page", "of", "example", "out", "of", "the", "thousands", "of", "CNN", "report", "they", "put", "out", "a", "small", "percentage", "get", "retract", "Trump", "just", "lie", "about", "his", "lie"]
(c7-19 / multi-sentence
       :snt1 (c7-13 / horse
                    :ARG1-of (c7-3 / pure-02)
                    :domain (c7-25 / news
                                   :ARG1-of (c7-24 / fake-02)
                                   :mod (c7-16 / this))
                    :ARG1-of (c7-9 / cause-01
                                   :ARG0 (c7-20 / lie-08
                                                :ARG0 (c7-23 / and
                                                             :op1 (c7-6 / person
                                                                        :name (c7-10 / name
                                                                                     :op1 "Donny"
                                                                                     :op2 "Trump"))
                                                             :op2 (c7-22 / person
                                                                         :ARG0-of (c7-15 / apologize-01)
                                                                         :mod c7-6)))))
       :snt2 (c7-11 / have-03
                    :ARG0 (c7-26 / you)
                    :ARG1 (c7-21 / page
                                 :consist-of (c7-4 / example))
                    :polarity -)
       :snt3 (c7-0 / retract-01
                   :ARG1 (c7-12 / report-01
                                :ARG0 (c7-14 / publication
                                             :name (c7-1 / name
                                                         :op1 "CNN"))
                                :ARG1 c7-0
                                :ARG1 (c7-18 / report-01
                                             :ARG0 c7-14
                                             :ARG1 (c7-17 / lie-08
                                                          :ARG0 (c7-7 / person
                                                                      :name (c7-8 / name
                                                                                  :op1 "Trump")))
                                             :quant (c7-2 / multiple
                                                          :op1 1000)
                                             :ARG1-of (c7-5 / put-out-10
                                                            :ARG0 c7-14)))))

# ::snt Still waiting
# ::tokens ["Still", "waiting"]
# ::lemmas ["still", "wait"]
(c8-1 / wait-01
      :mod (c8-0 / still))

# ::snt He dishes out in response to fake news   I could list pages of CNN fake stories
# ::tokens ["He", "dishes", "out", "in", "response", "to", "fake", "news", "  ", "I", "could", "list", "pages", "of", "CNN", "fake", "stories"]
# ::lemmas ["he", "dish", "out", "in", "response", "to", "fake", "news", "  ", "i", "could", "list", "page", "of", "CNN", "fake", "story"]
(c9-4 / dish-out-02
      :ARG0 (c9-9 / he)
      :ARG2-of (c9-1 / respond-01
                     :ARG1 (c9-12 / news
                                  :ARG1-of (c9-7 / fake-02)))
      :ARG1-of (c9-10 / mean-01
                      :ARG2 (c9-5 / possible-01
                                  :ARG1 (c9-11 / list-01
                                               :ARG0 (c9-13 / i)
                                               :ARG1 (c9-2 / page
                                                           :poss (c9-8 / story
                                                                       :ARG1-of (c9-3 / fake-02)
                                                                       :source (c9-0 / publication
                                                                                     :name (c9-6 / name
                                                                                                 :op1 "CNN"))))))))

# ::snt So what  Donny’s a rude person he gets what he dishes out
# ::tokens ["So", "what", " ", "Donny", "\u2019s", "a", "rude", "person", "he", "gets", "what", "he", "dishes", "out"]
# ::lemmas ["so", "what", " ", "Donny", "\u2019", "a", "rude", "person", "he", "get", "what", "he", "dish", "out"]
(c10-7 / infer-01
       :ARG1 (c10-3 / person
                    :ARG1-of (c10-1 / rude-01)
                    :domain (c10-0 / person
                                   :name (c10-6 / name
                                                :op1 "Donny"))
                    :ARG0-of (c10-5 / get-01
                                    :ARG1 (c10-4 / thing
                                                 :ARG1-of (c10-2 / dish-out-02
                                                                 :ARG0 c10-0)))))

# ::snt That was one person and it was totally inappropriate  But Acosta has done this grandstanding and shouted over people many times
# ::tokens ["That", "was", "one", "person", "and", "it", "was", "totally", "inappropriate", " ", "But", "Acosta", "has", "done", "this", "grandstanding", "and", "shouted", "over", "people", "many", "times"]
# ::lemmas ["that", "be", "one", "person", "and", "it", "be", "totally", "inappropriate", " ", "but", "Acosta", "have", "do", "this", "grandstanding", "and", "shout", "over", "people", "many", "time"]
(c11-11 / multi-sentence
        :snt1 (c11-8 / and
                     :op1 (c11-4 / person
                                 :domain (c11-7 / that))
                     :op2 (c11-6 / appropriate-02
                                 :ARG1 c11-7
                                 :degree (c11-14 / total)
                                 :polarity -))
        :snt2 (c11-5 / contrast-01
                     :ARG2 (c11-15 / and
                                   :op1 (c11-3 / do-02
                                               :ARG0 (c11-1 / person
                                                            :name (c11-13 / name
                                                                          :op1 "Acosta"))
                                               :ARG1 (c11-12 / grandstand-01
                                                             :ARG0 c11-1
                                                             :mod (c11-9 / this)))
                                   :op2 (c11-10 / shout-01
                                                :ARG0 c11-1
                                                :ARG2 (c11-0 / person)
                                                :frequency (c11-2 / many)))))

# ::snt Which was mainly aimed at the Vatican which is the same foreign power pushing the Caravan
# ::tokens ["Which", "was", "mainly", "aimed", "at", "the", "Vatican", "which", "is", "the", "same", "foreign", "power", "pushing", "the", "Caravan"]
# ::lemmas ["which", "be", "mainly", "aim", "at", "the", "Vatican", "which", "be", "the", "same", "foreign", "power", "push", "the", "Caravan"]
(c12-4 / aim-02
       :ARG1 (c12-9 / it)
       :ARG2 (c12-0 / organization
                    :name (c12-8 / name
                                 :op1 "Vatican")
                    :ARG1-of (c12-6 / same-01
                                    :ARG2 (c12-2 / power
                                                 :mod (c12-5 / foreign)
                                                 :ARG0-of (c12-1 / push-01
                                                                 :ARG1 (c12-3 / caravan)))))
       :mod (c12-7 / main))

# ::snt When people today say theyre Republicans they generally do so in name only Most might not have have approved of what Rchard Nixon did on this day in 1970 create the Environmental Protection Agency
# ::tokens ["When", "people", "today", "say", "they", "re", "Republicans", "they", "generally", "do", "so", "in", "name", "only", "Most", "might", "not", "have", "have", "approved", "of", "what", "Rchard", "Nixon", "did", "on", "this", "day", "in", "1970", "create", "the", "Environmental", "Protection", "Agency"]
# ::lemmas ["when", "people", "today", "say", "they", "be", "Republicans", "they", "generally", "do", "so", "in", "name", "only", "most", "may", "not", "have", "have", "approve", "of", "what", "Rchard", "Nixon", "do", "on", "this", "day", "in", "1970", "create", "the", "Environmental", "Protection", "Agency"]
(c13-18 / do-02
        :ARG0 (c13-2 / person
                     :quant (c13-15 / most)
                     :mod (c13-0 / only))
        :ARG1 (c13-21 / so)
        :manner (c13-10 / name)
        :ARG1-of (c13-23 / general-02)
        :time (c13-14 / say-01
                      :ARG0 c13-2
                      :ARG1 (c13-5 / person
                                   :ARG0-of (c13-9 / have-org-role-91
                                                   :ARG1 (c13-17 / political-party
                                                                 :name (c13-8 / name
                                                                              :op1 "Republican"))))
                      :time (c13-13 / today))
        :manner (c13-3 / in-name)
        :ARG1-of (c13-7 / cause-01
                        :ARG0 (c13-16 / possible-01
                                      :ARG1 (c13-19 / approve-01
                                                    :ARG0 c13-2
                                                    :ARG1 (c13-22 / create-01
                                                                  :ARG0 (c13-11 / person
                                                                                :name (c13-1 / name
                                                                                             :op1 "Rchard"
                                                                                             :op2 "Nixon"))
                                                                  :ARG1 (c13-12 / government-organization
                                                                                :name (c13-6 / name
                                                                                             :op1 "Environmental"
                                                                                             :op2 "Protection"
                                                                                             :op3 "Agency"))
                                                                  :time (c13-20 / day
                                                                                :mod (c13-4 / this)
                                                                                :time (c13-24 / date-entity
                                                                                              :year 1970)))
                                                    :polarity -))))

# ::snt The journal entry of Theodore Roosevelt from the day his wife and his mother died in 1884 The light has gone out of my life Cant imagine the grief
# ::tokens ["The", "journal", "entry", "of", "Theodore", "Roosevelt", "from", "the", "day", "his", "wife", "and", "his", "mother", "died", "in", "1884", "The", "light", "has", "gone", "out", "of", "my", "life", "Ca", "nt", "imagine", "the", "grief"]
# ::lemmas ["the", "journal", "entry", "of", "Theodore", "Roosevelt", "from", "the", "day", "his", "wife", "and", "his", "mother", "die", "in", "1884", "the", "light", "have", "go", "out", "of", "my", "life", "can", "not", "imagine", "the", "grief"]
(c14-13 / multi-sentence
        :snt1 (c14-1 / enter-01
                     :ARG0 (c14-2 / person
                                  :name (c14-9 / name
                                               :op1 "Theodore"
                                               :op2 "Roosevelt"))
                     :ARG1 (c14-21 / journal)
                     :time (c14-17 / day
                                   :time-of (c14-18 / die-01
                                                    :ARG1 (c14-19 / and
                                                                  :op1 (c14-5 / person
                                                                              :ARG0-of (c14-8 / have-rel-role-91
                                                                                              :ARG1 c14-2
                                                                                              :ARG2 (c14-3 / wife)))
                                                                  :op2 (c14-16 / person
                                                                               :ARG0-of (c14-7 / have-rel-role-91
                                                                                               :ARG1 c14-2
                                                                                               :ARG2 (c14-0 / mother))))
                                                    :time (c14-22 / date-entity
                                                                  :year 1884))))
        :snt2 (c14-20 / go-out-17
                      :ARG1 (c14-14 / light)
                      :location (c14-12 / life
                                        :poss (c14-4 / i)))
        :snt3 (c14-15 / possible-01
                      :ARG1 (c14-10 / imagine-01
                                    :ARG0 (c14-6 / you)
                                    :ARG1 (c14-11 / grief))
                      :polarity -))

# ::snt Coincidentally I believe is the word you are groping for Or ‘tragically’
# ::tokens ["Coincidentally", "I", "believe", "is", "the", "word", "you", "are", "groping", "for", "Or", "\u2018", "tragically", "\u2019"]
# ::lemmas ["coincidentally", "i", "believe", "be", "the", "word", "you", "be", "grope", "for", "or", "'", "tragically", "'"]
(c15-6 / believe-01
       :ARG0 (c15-5 / i)
       :ARG1 (c15-0 / or
                    :op1 (c15-4 / grop-01
                                :ARG0 (c15-7 / you)
                                :ARG1 (c15-3 / word))
                    :op2 (c15-2 / tragic)
                    :domain c15-3)
       :manner (c15-1 / coincide-01))

# ::snt Ironically That’s an interesting choice of a word I would say Tragically
# ::tokens ["Ironically", "That", "\u2019s", "an", "interesting", "choice", "of", "a", "word", "I", "would", "say", "Tragically"]
# ::lemmas ["ironically", "that", "\u2019", "an", "interesting", "choice", "of", "a", "word", "i", "would", "say", "tragically"]
(c16-1 / choose-01
       :ARG1 (c16-3 / word
                    :ARG1-of (c16-4 / say-01
                                    :ARG0 (c16-6 / i)
                                    :manner (c16-2 / tragic)))
       :ARG2 (c16-7 / that)
       :ARG2-of (c16-0 / interest-01)
       :mod (c16-5 / ironic))

# ::snt A most consequential marriage Theodore Roosevelt married Edith Carrow in London  on this day in 1886 Roosevelts first wife Alice had died in 1884 ironically on the same day as his mother
# ::tokens ["A", "most", "consequential", "marriage", "Theodore", "Roosevelt", "married", "Edith", "Carrow", "in", "London", " ", "on", "this", "day", "in", "1886", "Roosevelts", "first", "wife", "Alice", "had", "died", "in", "1884", "ironically", "on", "the", "same", "day", "as", "his", "mother"]
# ::lemmas ["a", "most", "consequential", "marriage", "Theodore", "Roosevelt", "marry", "Edith", "Carrow", "in", "London", " ", "on", "this", "day", "in", "1886", "roosevelt", "first", "wife", "Alice", "have", "die", "in", "1884", "ironically", "on", "the", "same", "day", "as", "his", "mother"]
(c17-15 / marry-01
        :ARG1 (c17-4 / person
                     :name (c17-22 / name
                                   :op1 "Theodore"
                                   :op2 "Roosevelt"))
        :ARG2 (c17-8 / person
                     :name (c17-11 / name
                                   :op1 "Edith"
                                   :op2 "Carrow"))
        :location (c17-10 / city
                          :name (c17-2 / name
                                       :op1 "London"))
        :time (c17-18 / date-entity
                      :year 1886)
        :ARG1-of (c17-20 / consequential-01
                         :ARG2-of (c17-13 / have-degree-91
                                          :ARG1 c17-15
                                          :ARG3 (c17-3 / most)))
        :ARG1-of (c17-1 / cause-01
                        :ARG0 (c17-19 / die-01
                                      :ARG1 (c17-17 / person
                                                    :name (c17-9 / name
                                                                 :op1 "Alice")
                                                    :ARG0-of (c17-12 / have-rel-role-91
                                                                     :ARG1 c17-4
                                                                     :ARG2 (c17-5 / wife
                                                                                  :ord (c17-0 / ordinal-entity
                                                                                              :value 1))))
                                      :time (c17-23 / date-entity
                                                    :year 1884)
                                      :time (c17-21 / same-01
                                                    :ARG1 (c17-16 / person
                                                                  :ARG0-of (c17-14 / have-rel-role-91
                                                                                   :ARG1 c17-4
                                                                                   :ARG2 (c17-7 / mother)))
                                                    :ARG1 c17-19
                                                    :ARG2 c17-19)
                                      :manner (c17-6 / ironic))))

# ::snt Monroes comments were aimed at Britain Spain France and Russia which had settlements in what is today central California Numerous presidents including Polk Theodore Roosevelt Kennedy and Reagan have used the Monroe Doctrine to justify their respective foreign policies
# ::tokens ["Monroes", "comments", "were", "aimed", "at", "Britain", "Spain", "France", "and", "Russia", "which", "had", "settlements", "in", "what", "is", "today", "central", "California", "Numerous", "presidents", "including", "Polk", "Theodore", "Roosevelt", "Kennedy", "and", "Reagan", "have", "used", "the", "Monroe", "Doctrine", "to", "justify", "their", "respective", "foreign", "policies"]
# ::lemmas ["Monroes", "comment", "be", "aim", "at", "Britain", "Spain", "France", "and", "Russia", "which", "have", "settlement", "in", "what", "be", "today", "central", "California", "numerous", "president", "include", "Polk", "Theodore", "Roosevelt", "Kennedy", "and", "Reagan", "have", "use", "the", "Monroe", "Doctrine", "to", "justify", "their", "respective", "foreign", "policy"]
(c18-25 / aim-02
        :ARG0 (c18-10 / comment-01
                      :ARG0 (c18-3 / person
                                   :name (c18-30 / name
                                                 :op1 "Monroes")))
        :ARG1 (c18-17 / and
                      :op1 (c18-27 / country
                                   :name (c18-11 / name
                                                 :op1 "Britain"))
                      :op2 (c18-0 / country
                                  :name (c18-1 / name
                                               :op1 "France"))
                      :op3 (c18-14 / country
                                   :name (c18-9 / name
                                                :op1 "Russia"))
                      :ARG0-of (c18-28 / settle-03
                                       :location (c18-19 / state
                                                         :name (c18-24 / name
                                                                       :op1 "California")
                                                         :part (c18-13 / center)
                                                         :time (c18-18 / today))))
        :ARG2 (c18-4 / use-01
                     :ARG0 (c18-7 / person
                                  :ARG0-of (c18-15 / have-org-role-91
                                                   :ARG2 (c18-22 / president))
                                  :ARG2-of (c18-6 / include-91
                                                  :ARG1 (c18-21 / and
                                                                :op1 (c18-20 / person
                                                                             :name (c18-29 / name
                                                                                           :op1 "Polk"
                                                                                           :op2 "Theodore"
                                                                                           :op3 "Roosevelt"
                                                                                           :op4 "Kennedy"))
                                                                :op2 (c18-16 / person
                                                                             :name (c18-2 / name
                                                                                          :op1 "Reagan"))))
                                  :quant (c18-12 / numerous))
                     :ARG1 (c18-23 / doctrine
                                   :name (c18-5 / name
                                                :op1 "Monroe"))
                     :ARG2 (c18-31 / justify-01
                                   :ARG0 c18-7
                                   :ARG1 (c18-8 / policy-01
                                                :ARG0 c18-7
                                                :ARG2 (c18-26 / foreign)))))

# ::snt Like Ron White once said Mr Dietz you just cannot fix stupid So good luck with your philosophy and stay in your lane Ill stay in mine
# ::tokens ["Like", "Ron", "White", "once", "said", "Mr", "Dietz", "you", "just", "can", "not", "fix", "stupid", "So", "good", "luck", "with", "your", "philosophy", "and", "stay", "in", "your", "lane", "Ill", "stay", "in", "mine"]
# ::lemmas ["like", "Ron", "White", "once", "say", "Mr", "Dietz", "you", "just", "can", "not", "fix", "stupid", "so", "good", "luck", "with", "your", "philosophy", "and", "stay", "in", "your", "lane", "Ill", "stay", "in", "mine"]
(c19-10 / multi-sentence
        :snt1 (c19-1 / resemble-01
                     :ARG1 (c19-18 / say-01
                                   :ARG0 (c19-2 / person
                                                :name (c19-7 / name
                                                             :op1 "Ron"
                                                             :op2 "White"))
                                   :ARG1 (c19-4 / possible-01
                                                :ARG1 (c19-17 / fix-02
                                                              :ARG0 (c19-14 / person
                                                                            :name (c19-5 / name
                                                                                         :op1 "Mr"
                                                                                         :op2 "Dietz"))
                                                              :ARG1 (c19-8 / stupid))
                                                :mod (c19-20 / just)
                                                :polarity -)
                                   :time (c19-0 / once))
                     :snt2 (c19-16 / and
                                   :op1 (c19-11 / luck
                                                :ARG1-of (c19-19 / good-02)
                                                :topic (c19-12 / philosophy
                                                               :poss c19-14))
                                   :op2 (c19-15 / stay-01
                                                :ARG1 (c19-21 / you)
                                                :ARG3 (c19-9 / lane
                                                             :poss c19-21))
                                   :op3 (c19-13 / stay-01
                                                :ARG1 (c19-3 / i)
                                                :ARG3 (c19-6 / lane
                                                             :poss c19-3)))))

# ::snt Defending a President who every day acts like an 8yearold lies every single day and rules like an ignorant unprincipled thug is pathetic Ill stand with the press against Trump any day and Im confident when the dust settles I will be on the right side if history
# ::tokens ["Defending", "a", "President", "who", "every", "day", "acts", "like", "an", "8yearold", "lies", "every", "single", "day", "and", "rules", "like", "an", "ignorant", "unprincipled", "thug", "is", "pathetic", "Ill", "stand", "with", "the", "press", "against", "Trump", "any", "day", "and", "I", "m", "confident", "when", "the", "dust", "settles", "I", "will", "be", "on", "the", "right", "side", "if", "history"]
# ::lemmas ["defend", "a", "President", "who", "every", "day", "act", "like", "an", "8yearold", "lie", "every", "single", "day", "and", "rule", "like", "an", "ignorant", "unprincipled", "thug", "be", "pathetic", "Ill", "stand", "with", "the", "press", "against", "Trump", "any", "day", "and", "i", "be", "confident", "when", "the", "dust", "settle", "i", "will", "be", "on", "the", "right", "side", "if", "history"]
(c20-28 / and
        :op1 (c20-1 / pathetic
                    :domain (c20-26 / defend-01
                                    :ARG1 (c20-7 / person
                                                 :ARG0-of (c20-12 / have-org-role-91
                                                                  :ARG2 (c20-25 / president))
                                                 :ARG0-of (c20-15 / act-01
                                                                  :ARG1-of (c20-0 / resemble-01
                                                                                  :ARG2 (c20-19 / lie-08
                                                                                                :ARG0 (c20-21 / person
                                                                                                              :age (c20-16 / temporal-quantity
                                                                                                                           :unit (c20-32 / year)
                                                                                                                           :quant 8)))
                                                                                  :frequency (c20-11 / rate-entity-91
                                                                                                     :ARG3 c20-16
                                                                                                     :unit (c20-29 / day)
                                                                                                     :ARG1-of (c20-30 / single-02)
                                                                                                     :quant 1))))
                                    :ARG0-of (c20-18 / rule-01
                                                     :ARG1-of (c20-20 / resemble-01
                                                                      :ARG2 (c20-4 / thug
                                                                                   :ARG0-of (c20-14 / principled-02
                                                                                                    :polarity -)
                                                                                   :ARG1-of (c20-3 / ignorant-02))))))
        :op2 (c20-23 / and
                     :op1 (c20-17 / stand-11
                                  :ARG0 (c20-13 / i)
                                  :ARG2 (c20-8 / press)
                                  :prep-against (c20-5 / person
                                                       :name (c20-31 / name
                                                                     :op1 "Trump"))
                                  :time (c20-2 / day
                                               :mod (c20-6 / any)))
                     :op2 (c20-9 / confident-01
                                 :ARG1 c20-13
                                 :ARG2 (c20-27 / side
                                               :ARG1-of (c20-24 / right-03)
                                               :condition (c20-22 / settle-03
                                                                  :ARG1 (c20-10 / dust))))))

# ::snt Where he said it was absolutely the wrong place to say it but he wasn’t lying when he said it obviously Acosta acted like a 12 year old entitled kid today  if you try to defend his actions that’s truly pathetic on your part Acosta is a fame whore wake up  smell the coffee
# ::tokens ["Where", "he", "said", "it", "was", "absolutely", "the", "wrong", "place", "to", "say", "it", "but", "he", "was", "n\u2019t", "lying", "when", "he", "said", "it", "obviously", "Acosta", "acted", "like", "a", "12", "year", "old", "entitled", "kid", "today", " ", "if", "you", "try", "to", "defend", "his", "actions", "that", "\u2019s", "truly", "pathetic", "on", "your", "part", "Acosta", "is", "a", "fame", "whore", "wake", "up", " ", "smell", "the", "coffee"]
# ::lemmas ["where", "he", "say", "it", "be", "absolutely", "the", "wrong", "place", "to", "say", "it", "but", "he", "be", "not", "lie", "when", "he", "say", "it", "obviously", "Acosta", "act", "like", "a", "12", "year", "old", "entitle", "kid", "today", " ", "if", "you", "try", "to", "defend", "his", "action", "that", "\u2019", "truly", "pathetic", "on", "your", "part", "Acosta", "be", "a", "fame", "whore", "wake", "up", " ", "smell", "the", "coffee"]
(c21-16 / multi-sentence
        :snt1 (c21-8 / contrast-01
                     :ARG1 (c21-26 / say-01
                                   :ARG0 (c21-10 / he)
                                   :ARG1 (c21-1 / place
                                                :ARG1-of (c21-3 / wrong-03
                                                                :ARG2 (c21-14 / say-01
                                                                              :ARG1 (c21-4 / it))
                                                                :degree (c21-25 / absolute))))
                     :ARG2 (c21-17 / lie-08
                                   :ARG0 c21-10
                                   :time (c21-24 / say-01
                                                 :ARG0 c21-10
                                                 :ARG1 (c21-12 / act-01
                                                               :ARG0 (c21-6 / person
                                                                            :name (c21-28 / name
                                                                                          :op1 "Acosta"))
                                                               :ARG1 (c21-15 / kid
                                                                             :ARG1-of (c21-2 / entitle-01)
                                                                             :age (c21-13 / temporal-quantity
                                                                                          :unit (c21-29 / year)
                                                                                          :quant 12))
                                                               :time (c21-5 / today)
                                                               :ARG1-of (c21-0 / obvious-01)))
                                   :polarity -))
        :snt2 (c21-21 / pathetic
                      :degree (c21-9 / truly)
                      :domain (c21-22 / try-01
                                      :ARG0 (c21-7 / you)
                                      :ARG1 (c21-23 / defend-01
                                                    :ARG0 c21-7
                                                    :ARG1 (c21-19 / act-01
                                                                  :ARG0 c21-6)))
                      :condition c21-21
                      :domain c21-22
                      :ARG0 c21-7
                      :ARG1 c21-23
                      :ARG0 c21-7
                      :ARG1 c21-19)
        :snt3 (c21-11 / wake-up-02
                      :ARG1 (c21-20 / you)
                      :mode imperative)
        :snt4 (c21-18 / smell-01
                      :ARG0 c21-20
                      :ARG1 (c21-27 / coffee)
                      :mode imperative))

# ::snt Ohh ok so that makes what jagoff jimmy did 100 acceptable Two wrongs never make a right Remember when the transvestite said When they go low we go high yeah that lasted a nano second Come on billy remove the blinders
# ::tokens ["Ohh", "ok", "so", "that", "makes", "what", "jagoff", "jimmy", "did", "100", "acceptable", "Two", "wrongs", "never", "make", "a", "right", "Remember", "when", "the", "transvestite", "said", "When", "they", "go", "low", "we", "go", "high", "yeah", "that", "lasted", "a", "nano", "second", "Come", "on", "billy", "remove", "the", "blinders"]
# ::lemmas ["Ohh", "ok", "so", "that", "make", "what", "jagoff", "jimmy", "do", "100", "acceptable", "Two", "wrong", "never", "make", "a", "right", "remember", "when", "the", "transvestite", "say", "when", "they", "go", "low", "we", "go", "high", "yeah", "that", "last", "a", "nano", "second", "come", "on", "billy", "remove", "the", "blinder"]
(c22-22 / multi-sentence
        :snt1 (c22-0 / okay-01
                     :mod (c22-26 / oh
                                  :mode expressive)
                     :ARG0-of (c22-11 / cause-01
                                      :ARG1 (c22-2 / make-02
                                                   :ARG0 (c22-19 / that)
                                                   :ARG1 (c22-30 / accept-01
                                                                 :ARG1 (c22-8 / thing
                                                                              :ARG1-of (c22-28 / do-02
                                                                                               :ARG0 (c22-4 / person
                                                                                                            :name (c22-16 / name
                                                                                                                          :op1 "Jagoff"
                                                                                                                          :op2 "Jimmy")))
                                                                              :ARG1-of (c22-9 / possible-01)
                                                                              :quant 100)))))
        :snt2 (c22-7 / make-02
                     :ARG0 (c22-6 / wrong-02
                                  :quant 2)
                     :ARG1 (c22-1 / right-02)
                     :time (c22-5 / ever)
                     :polarity -)
        :snt3 (c22-13 / remember-01
                      :ARG1 (c22-31 / say-01
                                    :ARG0 (c22-14 / transvestite)
                                    :ARG1 (c22-33 / go-01
                                                  :ARG1 (c22-17 / we)
                                                  :ARG4 (c22-15 / high-02)
                                                  :time (c22-18 / go-01
                                                                :ARG1 c22-17
                                                                :ARG4 (c22-23 / low-04))
                                                  :mod (c22-34 / yeah)
                                                  :duration (c22-27 / temporal-quantity
                                                                    :unit (c22-20 / second)
                                                                    :mod (c22-12 / nano)
                                                                    :quant 1))
                                    :time (c22-29 / say-01
                                                  :ARG0 (c22-25 / person
                                                                :name (c22-3 / name
                                                                             :op1 "Bill"))
                                                  :ARG1 (c22-21 / remove-01
                                                                :ARG0 c22-25
                                                                :ARG1 (c22-24 / blinder)))))
        :snt4 (c22-32 / come-on-25
                      :ARG1 (c22-10 / you)
                      :mode imperative))

# ::snt It is streamed in the WWDC app on iOS
# ::tokens ["It", "is", "streamed", "in", "the", "WWDC", "app", "on", "iOS"]
# ::lemmas ["it", "be", "stream", "in", "the", "WWDC", "app", "on", "iOS"]
(c23-3 / stream-03
       :ARG1 (c23-5 / it)
       :medium (c23-2 / app
                      :name (c23-4 / name
                                   :op1 "WWDC"))
       :medium (c23-0 / product
                      :name (c23-1 / name
                                   :op1 "iOS")))

# ::snt I believe so
# ::tokens ["I", "believe", "so"]
# ::lemmas ["i", "believe", "so"]
(c24-1 / believe-01
       :ARG0 (c24-0 / i)
       :ARG1 (c24-2 / so))

# ::snt Is the Apple sotu streamed live somewhere
# ::tokens ["Is", "the", "Apple", "sotu", "streamed", "live", "somewhere"]
# ::lemmas ["be", "the", "Apple", "sotu", "stream", "live", "somewhere"]
(c25-4 / stream-01
       :ARG1 (c25-2 / sotu
                    :poss (c25-0 / company
                                 :name (c25-6 / name
                                              :op1 "Apple")))
       :polarity (c25-3 / amr-unknown)
       :manner (c25-5 / live)
       :location (c25-1 / somewhere))

# ::snt Drink stirring
# ::tokens ["Drink", "stirring"]
# ::lemmas ["drink", "stirring"]
(c26-1 / stir-01
       :ARG0 (c26-2 / you)
       :ARG1 (c26-0 / drink)
       :mode imperative)

# ::snt Yawn
# ::tokens ["Yawn"]
# ::lemmas ["Yawn"]
(c27-0 / yawn-01)

# ::snt Imagine thinking Germany is oppressed by America lmao you fucking pricks
# ::tokens ["Imagine", "thinking", "Germany", "is", "oppressed", "by", "America", "lmao", "you", "fucking", "pricks"]
# ::lemmas ["imagine", "think", "Germany", "be", "oppress", "by", "America", "lmao", "you", "fuck", "prick"]
(c28-11 / imagine-01
        :ARG0 (c28-12 / you
                      :mod (c28-2 / pricks
                                  :ARG0-of (c28-7 / fuck-01)))
        :ARG1 (c28-5 / think-01
                     :ARG0 c28-12
                     :ARG1 (c28-0 / oppress-01
                                  :ARG0 (c28-3 / country
                                               :name (c28-10 / name
                                                             :op1 "America"))
                                  :ARG1 (c28-8 / country
                                               :name (c28-4 / name
                                                            :op1 "Germany"))))
        :ARG2-of (c28-9 / laugh-01
                        :ARG0 (c28-1 / i)
                        :manner (c28-6 / loud)
                        :mode expressive)
        :mode imperative)

# ::snt Again You excel at the dead horses of the right And I call BS based on own your description
# ::tokens ["Again", "You", "excel", "at", "the", "dead", "horses", "of", "the", "right", "And", "I", "call", "BS", "based", "on", "own", "your", "description"]
# ::lemmas ["again", "you", "excel", "at", "the", "dead", "horse", "of", "the", "right", "and", "i", "call", "BS", "base", "on", "own", "your", "description"]
(c29-6 / and
       :op1 (c29-3 / excel-01
                   :ARG0 (c29-11 / you)
                   :ARG1 (c29-8 / horse
                                :ARG1-of (c29-2 / die-01)
                                :ARG1-of (c29-0 / right-08))
                   :mod (c29-5 / again))
       :op2 (c29-4 / call-01
                   :ARG0 (c29-9 / i)
                   :ARG1 (c29-10 / bullshit-01)
                   :ARG2 (c29-1 / base-02
                                :ARG1 c29-10
                                :ARG2 (c29-7 / describe-01
                                             :ARG0 c29-11))))

# ::snt Did I hit a nerve
# ::tokens ["Did", "I", "hit", "a", "nerve"]
# ::lemmas ["do", "i", "hit", "a", "nerve"]
(c30-3 / hit-01
       :polarity (c30-0 / amr-unknown)
       :ARG0 (c30-2 / i)
       :ARG1 (c30-1 / nerve))

# ::snt I am really enjoying this compilation Music and liner notes are A What a great package
# ::tokens ["I", "am", "really", "enjoying", "this", "compilation", "Music", "and", "liner", "notes", "are", "A", "What", "a", "great", "package"]
# ::lemmas ["i", "be", "really", "enjoy", "this", "compilation", "music", "and", "liner", "note", "be", "a", "what", "a", "great", "package"]
(c31-1 / enjoy-01
       :ARG0 (c31-11 / i)
       :ARG1 (c31-5 / and
                    :op1 (c31-7 / music
                                :ARG1-of (c31-2 / compile-01)
                                :mod (c31-4 / this))
                    :op2 (c31-10 / note
                                 :mod (c31-8 / liner)
                                 :domain (c31-3 / package
                                                :mod (c31-9 / great
                                                            :degree (c31-6 / so)))))
       :ARG1-of (c31-0 / real-04))

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c32-1 / thank-01
       :ARG0 (c32-0 / i)
       :ARG1 (c32-2 / you))

# ::snt Thats mine
# ::tokens ["That", "s", "mine"]
# ::lemmas ["that", "s", "mine"]
(c33-1 / that
       :poss (c33-0 / i))

# ::snt Counting all the votes does not equal stealing votes
# ::tokens ["Counting", "all", "the", "votes", "does", "not", "equal", "stealing", "votes"]
# ::lemmas ["count", "all", "the", "vote", "do", "not", "equal", "stealing", "vote"]
(c34-0 / equal-01
       :ARG1 (c34-1 / count-01
                    :ARG1 (c34-2 / vote-01
                                 :mod (c34-3 / all)))
       :ARG2 (c34-4 / steal-01
                    :ARG1 c34-2)
       :polarity -)

# ::snt I was lost when Senator Gardner started his soliloquy None of what he said made sense it sounded like Fox News talking points but maybe there’s something I missed Hopefully it will be explained coming up
# ::tokens ["I", "was", "lost", "when", "Senator", "Gardner", "started", "his", "soliloquy", "None", "of", "what", "he", "said", "made", "sense", "it", "sounded", "like", "Fox", "News", "talking", "points", "but", "maybe", "there", "\u2019s", "something", "I", "missed", "Hopefully", "it", "will", "be", "explained", "coming", "up"]
# ::lemmas ["i", "be", "lose", "when", "Senator", "Gardner", "start", "his", "soliloquy", "None", "of", "what", "he", "say", "make", "sense", "it", "sound", "like", "Fox", "News", "talking", "point", "but", "maybe", "there", "\u2019", "something", "i", "miss", "hopefully", "it", "will", "be", "explain", "come", "up"]
(c35-17 / multi-sentence
        :snt1 (c35-16 / lose-02
                      :ARG1 (c35-3 / i)
                      :time (c35-24 / start-01
                                    :ARG0 (c35-1 / person
                                                 :name (c35-26 / name
                                                               :op1 "Gardner")
                                                 :ARG0-of (c35-10 / have-org-role-91
                                                                  :ARG2 (c35-15 / senator)))
                                    :ARG1 (c35-22 / soliloquy
                                                  :poss c35-1)))
        :snt2 (c35-6 / contrast-01
                     :ARG1 (c35-20 / sense-02
                                   :ARG1 (c35-14 / thing
                                                 :ARG1-of (c35-12 / include-91
                                                                  :ARG2 (c35-4 / thing
                                                                               :ARG1-of (c35-9 / say-01
                                                                                               :ARG0 c35-1)))))
                     :ARG2 (c35-23 / sound-01
                                   :ARG1 (c35-11 / it)
                                   :ARG2 (c35-8 / have-talking-point-07
                                                :ARG0 (c35-19 / broadcast-program
                                                              :name (c35-7 / name
                                                                           :op1 "Fox"
                                                                           :op2 "News")))
                                   :ARG1-of (c35-5 / possible-01)))
        :snt3 (c35-13 / hope-01
                      :ARG1 (c35-2 / explain-01
                                   :ARG1 (c35-18 / something
                                                 :ARG1-of (c35-0 / miss-02
                                                                 :ARG0 (c35-21 / i)))
                                   :ARG1-of (c35-25 / come-up-13))))

# ::snt Are Republicans seriously contesting voter fraud Collusion yes Fraud no
# ::tokens ["Are", "Republicans", "seriously", "contesting", "voter", "fraud", "Collusion", "yes", "Fraud", "no"]
# ::lemmas ["be", "Republicans", "seriously", "contest", "voter", "fraud", "Collusion", "yes", "fraud", "no"]
(c36-7 / and
       :op1 (c36-3 / contest-01
                   :ARG0 (c36-4 / person
                                :ARG0-of (c36-10 / have-org-role-91
                                                 :ARG1 (c36-1 / political-party
                                                              :name (c36-11 / name
                                                                            :op1 "Republican"
                                                                            :op2 "Party"))))
                   :ARG1 (c36-2 / defraud-01
                                :ARG0 (c36-0 / person
                                             :ARG0-of (c36-6 / vote-01)))
                   :ARG2-of (c36-9 / serious-01))
       :op2 (c36-8 / defraud-01
                   :polarity -)
       :polarity (c36-5 / amr-unknown))

# ::snt gop quit whinning count the vote
# ::tokens ["gop", "quit", "whinning", "count", "the", "vote"]
# ::lemmas ["gop", "quit", "whinne", "count", "the", "vote"]
(c37-3 / and
       :op1 (c37-4 / quit-01
                   :ARG0 (c37-5 / you)
                   :ARG1 (c37-1 / whine-01
                                :ARG0 c37-5)
                   :mode imperative)
       :op2 (c37-0 / count-01
                   :ARG0 c37-5
                   :ARG1 (c37-2 / vote-01)
                   :mode imperative))

# ::snt Great discussion thank you
# ::tokens ["Great", "discussion", "thank", "you"]
# ::lemmas ["great", "discussion", "thank", "you"]
(c38-0 / discuss-01
       :mod (c38-1 / great)
       :ARG2-of (c38-2 / thank-01
                       :ARG1 (c38-3 / you)))

# ::snt werent the people hes complaining about appointed BY Republicans I know the Broward election supervisor was appointed by a republican
# ::tokens ["were", "nt", "the", "people", "he", "s", "complaining", "about", "appointed", "BY", "Republicans", "I", "know", "the", "Broward", "election", "supervisor", "was", "appointed", "by", "a", "republican"]
# ::lemmas ["be", "not", "the", "people", "he", "s", "complain", "about", "appoint", "by", "Republicans", "i", "know", "the", "Broward", "election", "supervisor", "be", "appoint", "by", "a", "republican"]
(c39-11 / multi-sentence
        :snt1 (c39-3 / erent
                     :domain (c39-8 / appoint-01
                                    :ARG0 (c39-4 / political-party
                                                 :name (c39-15 / name
                                                               :op1 "Republican"))
                                    :ARG1 (c39-1 / person
                                                 :ARG0-of (c39-5 / complain-01
                                                                 :ARG1 c39-8))))
        :snt2 (c39-10 / know-01
                      :ARG0 (c39-16 / i)
                      :ARG1 (c39-6 / appoint-01
                                   :ARG0 (c39-0 / political-party
                                                :name (c39-7 / name
                                                             :op1 "Republican"))
                                   :ARG1 (c39-13 / person
                                                 :ARG0-of (c39-12 / supervise-01
                                                                  :ARG1 (c39-9 / elect-01)
                                                                  :location (c39-14 / city
                                                                                    :name (c39-2 / name
                                                                                                 :op1 "Broward")))))))

# ::snt Slippery that one First they do a conspiratorial snow job on the ballot issue and then he comes on the show and does a well prepared snow job to cover up the conspiratorial snow job Pure meta we want every vote counted by using court maneuvers to block certain votes
# ::tokens ["Slippery", "that", "one", "First", "they", "do", "a", "conspiratorial", "snow", "job", "on", "the", "ballot", "issue", "and", "then", "he", "comes", "on", "the", "show", "and", "does", "a", "well", "prepared", "snow", "job", "to", "cover", "up", "the", "conspiratorial", "snow", "job", "Pure", "meta", "we", "want", "every", "vote", "counted", "by", "using", "court", "maneuvers", "to", "block", "certain", "votes"]
# ::lemmas ["slippery", "that", "one", "First", "they", "do", "a", "conspiratorial", "snow", "job", "on", "the", "ballot", "issue", "and", "then", "he", "come", "on", "the", "show", "and", "do", "a", "well", "prepare", "snow", "job", "to", "cover", "up", "the", "conspiratorial", "snow", "job", "pure", "meta", "we", "want", "every", "vote", "count", "by", "use", "court", "maneuver", "to", "block", "certain", "vote"]
(c40-22 / multi-sentence
        :snt1 (c40-33 / slippery
                      :domain (c40-0 / one
                                     :mod (c40-20 / that)))
        :snt2 (c40-30 / and
                      :op1 (c40-26 / do-02
                                   :ARG0 (c40-9 / they)
                                   :ARG1 (c40-35 / job
                                                 :mod (c40-21 / snow)
                                                 :mod (c40-12 / conspiracy))
                                   :time (c40-32 / first)
                                   :topic (c40-8 / issue-02
                                                 :ARG0 (c40-23 / ballot)))
                      :op2 (c40-19 / and
                                   :op1 (c40-34 / come-01
                                                :ARG1 (c40-15 / he)
                                                :ARG4 (c40-28 / show))
                                   :op2 (c40-31 / do-02
                                                :ARG0 c40-15
                                                :ARG1 (c40-16 / job
                                                              :mod (c40-24 / snow)
                                                              :ARG1-of (c40-3 / prepare-02
                                                                              :ARG0 c40-15
                                                                              :ARG1-of (c40-6 / well-09)))
                                                :purpose (c40-1 / cover-up-04
                                                                :ARG0 c40-15
                                                                :ARG1 c40-16))))
        :snt3 (c40-17 / want-01
                      :ARG0 (c40-27 / we)
                      :ARG1 (c40-14 / count-01
                                    :ARG1 (c40-29 / vote-01
                                                  :mod (c40-4 / every))
                                    :manner (c40-5 / use-01
                                                   :ARG0 c40-27
                                                   :ARG1 (c40-2 / maneuver-01
                                                                :ARG0 (c40-13 / court))
                                                   :ARG2 (c40-25 / block-01
                                                                 :ARG0 c40-27
                                                                 :ARG1 (c40-7 / vote-01
                                                                              :mod (c40-18 / certain)))))
                      :ARG1-of (c40-11 / pure-02)
                      :mod (c40-10 / meta)))

# ::snt They won’t steel anything Just more egg face
# ::tokens ["They", "wo", "n\u2019t", "steel", "anything", "Just", "more", "egg", "face"]
# ::lemmas ["they", "will", "not", "steel", "anything", "just", "more", "egg", "face"]
(c41-4 / steel-01
       :ARG0 (c41-1 / they)
       :ARG1 (c41-2 / anything)
       :ARG2 (c41-3 / face
                    :mod (c41-0 / egg)
                    :quant (c41-5 / more)
                    :mod (c41-6 / just))
       :polarity -)

# ::snt Cory Gardner has delusions of grandeur thinking his sick support of trump will take him far in the GOP The only place hes going is out the door in 2020
# ::tokens ["Cory", "Gardner", "has", "delusions", "of", "grandeur", "thinking", "his", "sick", "support", "of", "trump", "will", "take", "him", "far", "in", "the", "GOP", "The", "only", "place", "he", "s", "going", "is", "out", "the", "door", "in", "2020"]
# ::lemmas ["Cory", "Gardner", "have", "delusion", "of", "grandeur", "think", "his", "sick", "support", "of", "trump", "will", "take", "him", "far", "in", "the", "GOP", "the", "only", "place", "he", "s", "go", "be", "out", "the", "door", "in", "2020"]
(c42-12 / multi-sentence
        :snt1 (c42-15 / delude-01
                      :ARG1 (c42-2 / person
                                   :name (c42-8 / name
                                                :op1 "Cory"
                                                :op2 "Gardner"))
                      :ARG2 (c42-19 / grandeur)
                      :ARG1-of (c42-5 / cause-01
                                      :ARG0 (c42-10 / think-01
                                                    :ARG0 c42-2
                                                    :ARG1 (c42-3 / take-01
                                                                 :ARG0 (c42-18 / support-01
                                                                               :ARG0 c42-2
                                                                               :ARG1 (c42-4 / person
                                                                                            :name (c42-6 / name
                                                                                                         :op1 " trump"))
                                                                               :ARG1-of (c42-11 / sick-02))
                                                                 :ARG1 c42-2
                                                                 :ARG3 (c42-17 / far)
                                                                 :location (c42-13 / political-party
                                                                                   :name (c42-1 / name
                                                                                                :op1 "GOP"))))))
        :snt2 (c42-9 / go-02
                     :ARG0 (c42-7 / he)
                     :ARG4 (c42-0 / out
                                  :op1 (c42-16 / door))
                     :time (c42-20 / date-entity
                                   :year 2020)
                     :mod (c42-14 / only)))

# ::snt Did he ever offer proof of “cooking the books”
# ::tokens ["Did", "he", "ever", "offer", "proof", "of", "\u201c", "cooking", "the", "books", "\u201d"]
# ::lemmas ["do", "he", "ever", "offer", "proof", "of", "\"", "cook", "the", "book", "\""]
(c43-0 / offer-01
       :polarity (c43-4 / amr-unknown)
       :ARG0 (c43-5 / he)
       :ARG1 (c43-1 / prove-01
                    :ARG1 (c43-2 / cook-01
                                 :ARG1 (c43-6 / book)))
       :time (c43-3 / ever))

# ::snt bs
# ::tokens ["bs"]
# ::lemmas ["bs"]
(c44-0 / person
       :name (c44-1 / name
                    :op1 "bs"))

# ::snt NOBODY IS “STEALING” ANYTHING ALL VOTES BELONG TO THE PUBLIC What happened to those HYPOCRITICAL LYING SOB’s who said ALL votes MUST be counted Now they see DEM VOTES CATCHING UP  they get amnesia
# ::tokens ["NOBODY", "IS", "\u201c", "STEALING", "\u201d", "ANYTHING", "ALL", "VOTES", "BELONG", "TO", "THE", "PUBLIC", "What", "happened", "to", "those", "HYPOCRITICAL", "LYING", "SOB", "\u2019s", "who", "said", "ALL", "votes", "MUST", "be", "counted", "Now", "they", "see", "DEM", "VOTES", "CATCHING", "UP", " ", "they", "get", "amnesia"]
# ::lemmas ["NOBODY", "be", "\"", "STEALING", "\"", "anything", "all", "vote", "belong", "to", "the", "public", "what", "happen", "to", "those", "hypocritical", "LYING", "SOB", "\u2019s", "who", "say", "all", "vote", "must", "be", "count", "now", "they", "see", "DEM", "vote", "catch", "up", " ", "they", "get", "amnesia"]
(c45-17 / multi-sentence
        :snt1 (c45-26 / steal-01
                      :ARG0 (c45-28 / nobody)
                      :ARG1 (c45-25 / anything
                                    :mod (c45-23 / vote
                                                 :mod (c45-14 / all)))
                      :ARG1-of (c45-20 / believe-01
                                       :ARG0 (c45-3 / public)))
        :snt2 (c45-4 / event
                     :topic (c45-16 / son-of-a-bitch
                                    :ARG0-of (c45-18 / lie-08)
                                    :mod (c45-13 / hysteria)
                                    :mod (c45-15 / that)
                                    :ARG0-of (c45-24 / say-01
                                                     :ARG1 (c45-0 / obligate-01
                                                                  :ARG2 (c45-10 / count-01
                                                                                :ARG1 (c45-5 / vote
                                                                                             :mod (c45-21 / all))))))
                     :snt3 (c45-8 / and
                                  :op1 (c45-19 / see-01
                                               :ARG0 (c45-7 / they)
                                               :ARG1 (c45-27 / catch-up-04
                                                             :ARG1 (c45-9 / person
                                                                          :ARG0-of (c45-12 / have-org-role-91
                                                                                           :ARG1 (c45-22 / political-party
                                                                                                         :name (c45-11 / name
                                                                                                                       :op1 "Democrat"
                                                                                                                       :op2 "Party"))))))
                                  :op2 (c45-6 / get-02
                                              :ARG0 c45-7
                                              :ARG1 (c45-1 / amnesia))
                                  :time (c45-2 / now))))

# ::snt So the ignorant SenCoryGardner believes that following existing law is fraud
# ::tokens ["So", "the", "ignorant", "SenCoryGardner", "believes", "that", "following", "existing", "law", "is", "fraud"]
# ::lemmas ["so", "the", "ignorant", "SenCoryGardner", "believe", "that", "follow", "exist", "law", "be", "fraud"]
(c46-7 / infer-01
       :ARG1 (c46-8 / believe-01
                    :ARG0 (c46-2 / person
                                 :name (c46-6 / name
                                              :op1 "SenCoryGardner")
                                 :ARG1-of (c46-0 / ignorant-02))
                    :ARG1 (c46-1 / defraud-01
                                 :ARG0 (c46-4 / follow-02
                                              :ARG1 (c46-5 / law
                                                           :ARG1-of (c46-3 / exist-01))))))

# ::snt Yes definitely he even mentioned Yuma AZ in his dissembling
# ::tokens ["Yes", "definitely", "he", "even", "mentioned", "Yuma", "AZ", "in", "his", "dissembling"]
# ::lemmas ["yes", "definitely", "he", "even", "mention", "Yuma", "AZ", "in", "his", "dissembling"]
(c47-5 / mention-01
       :ARG0 (c47-4 / he)
       :ARG1 (c47-1 / county
                    :name (c47-6 / name
                                 :op1 "Yuma"
                                 :op2 "AZ"))
       :mod (c47-0 / definite)
       :time (c47-3 / dish-01
                    :ARG0 c47-4)
       :mod (c47-2 / even))

# ::snt Thanks for clarifying  Im sure you can appreciate the question given they were speaking of Yuma AZ It was kind of distracting as I was watching it
# ::tokens ["Thanks", "for", "clarifying", " ", "I", "m", "sure", "you", "can", "appreciate", "the", "question", "given", "they", "were", "speaking", "of", "Yuma", "AZ", "It", "was", "kind", "of", "distracting", "as", "I", "was", "watching", "it"]
# ::lemmas ["thank", "for", "clarify", " ", "i", "be", "sure", "you", "can", "appreciate", "the", "question", "give", "they", "be", "speak", "of", "Yuma", "AZ", "it", "be", "kind", "of", "distract", "as", "i", "be", "watch", "it"]
(c48-13 / multi-sentence
        :snt1 (c48-10 / thank-01
                      :ARG0 (c48-4 / i)
                      :ARG1 (c48-20 / you)
                      :ARG2 (c48-7 / clarify-10
                                   :ARG0 c48-20))
        :snt2 (c48-17 / sure-02
                      :ARG0 (c48-9 / i)
                      :ARG1 (c48-1 / possible-01
                                   :ARG1 (c48-16 / appreciate-02
                                                 :ARG0 (c48-6 / you)
                                                 :ARG1 (c48-3 / question-01)
                                                 :ARG1-of (c48-18 / cause-01
                                                                  :ARG0 (c48-11 / speak-01
                                                                                :ARG0 (c48-5 / they)
                                                                                :ARG1 (c48-0 / country
                                                                                             :name (c48-19 / name
                                                                                                           :op1 "Yuma"
                                                                                                           :op2 "AZ")))))))
        :snt3 (c48-15 / distract-01
                      :ARG0 (c48-2 / watch-01
                                   :ARG0 (c48-8 / i)
                                   :ARG1 (c48-14 / it))
                      :degree (c48-12 / kind-of)))

# ::snt Its correct Gardner is from Yuma CO And his family ran a tractor dealership
# ::tokens ["Its", "correct", "Gardner", "is", "from", "Yuma", "CO", "And", "his", "family", "ran", "a", "tractor", "dealership"]
# ::lemmas ["its", "correct", "Gardner", "be", "from", "Yuma", "CO", "and", "his", "family", "run", "a", "tractor", "dealership"]
(c49-7 / and
       :op1 (c49-14 / be-from-91
                    :ARG1 (c49-3 / person
                                 :name (c49-13 / name
                                               :op1 "Gardner"))
                    :ARG2 (c49-4 / county
                                 :name (c49-5 / name
                                              :op1 "Yuma")
                                 :location (c49-9 / state
                                                  :name (c49-1 / name
                                                               :op1 "Colorado"))))
       :op2 (c49-0 / run-01
                   :ARG0 (c49-8 / family
                                :ARG1-of (c49-10 / have-org-role-91
                                                 :ARG0 c49-3
                                                 :ARG2 (c49-11 / member)))
                   :ARG1 (c49-2 / dealership
                                :mod (c49-6 / tractor)))
       :ARG1-of (c49-12 / correct-02))

# ::snt jaketapper Was there an error on Cory Gardners location There is a Yuma CO but highly unlikely he was there given the segment was about the returns in AZ Pretty blatant not to be caught
# ::tokens ["jaketapper", "Was", "there", "an", "error", "on", "Cory", "Gardners", "location", "There", "is", "a", "Yuma", "CO", "but", "highly", "unlikely", "he", "was", "there", "given", "the", "segment", "was", "about", "the", "returns", "in", "AZ", "Pretty", "blatant", "not", "to", "be", "caught"]
# ::lemmas ["jaketapper", "be", "there", "an", "error", "on", "Cory", "Gardners", "location", "there", "be", "a", "Yuma", "CO", "but", "highly", "unlikely", "he", "be", "there", "give", "the", "segment", "be", "about", "the", "return", "in", "AZ", "Pretty", "blatant", "not", "to", "be", "catch"]
(c50-14 / multi-sentence
        :snt1 (c50-19 / ask-01
                      :ARG0 (c50-5 / i)
                      :ARG1 (c50-3 / err-01
                                   :location (c50-15 / location
                                                     :poss (c50-4 / person
                                                                  :name (c50-22 / name
                                                                                :op1 "Cory"
                                                                                :op2 "Gardners"))))
                      :ARG2 (c50-6 / person
                                   :name (c50-9 / name
                                                :op1 "jaketapper")))
        :snt2 (c50-13 / likely-01
                      :ARG1 (c50-16 / be-located-at-91
                                    :ARG1 (c50-11 / he)
                                    :ARG2 (c50-8 / city
                                                 :name (c50-2 / name
                                                              :op1 "Yuma")))
                      :ARG1-of (c50-10 / high-02)
                      :ARG1-of (c50-20 / cause-01
                                       :ARG0 (c50-21 / segment
                                                     :topic (c50-0 / return-01
                                                                   :location (c50-12 / state
                                                                                     :name (c50-7 / name
                                                                                                  :op1 "Arizona")))
                                                     :mod (c50-18 / blatant
                                                                  :degree (c50-17 / pretty))
                                                     :condition (c50-1 / catch-03
                                                                       :ARG1 c50-11
                                                                       :polarity -)))
                      :polarity -))
