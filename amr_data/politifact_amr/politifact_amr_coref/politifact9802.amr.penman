# ::snt How bout we demilitarize cop shooters
# ::tokens ["How", "bout", "we", "demilitarize", "cop", "shooters"]
# ::lemmas ["how", "bout", "we", "demilitarize", "cop", "shooter"]
(c1-5 / suggest-01
      :ARG1 (c1-0 / demilitarize-01
                  :ARG0 (c1-3 / we)
                  :ARG1 (c1-1 / person
                              :ARG0-of (c1-4 / shoot-02)
                              :mod (c1-2 / cop))))

# ::snt rand paul is an idiot Lets take all guns away from those who protect the senators and the president Then c how they feel
# ::tokens ["rand", "paul", "is", "an", "idiot", "Lets", "take", "all", "guns", "away", "from", "those", "who", "protect", "the", "senators", "and", "the", "president", "Then", "c", "how", "they", "feel"]
# ::lemmas ["rand", "paul", "be", "an", "idiot", "Lets", "take", "all", "gun", "away", "from", "those", "who", "protect", "the", "senator", "and", "the", "president", "then", "c", "how", "they", "feel"]
(c2-18 / idiot
       :domain (c2-4 / person
                     :name (c2-17 / name
                                  :op1 "rand"
                                  :op2 "Paul"))
       :condition (c2-14 / let-01
                         :ARG0 (c2-9 / we)
                         :ARG1 (c2-8 / take-away-05
                                     :ARG0 c2-9
                                     :ARG1 (c2-16 / gun
                                                  :mod (c2-11 / all))
                                     :source (c2-1 / person
                                                   :ARG0-of (c2-0 / protect-01
                                                                  :ARG1 (c2-7 / and
                                                                              :op1 (c2-12 / person
                                                                                          :ARG0-of (c2-15 / have-org-role-91
                                                                                                          :ARG1 (c2-5 / government-organization
                                                                                                                      :name (c2-6 / name
                                                                                                                                  :op1 "Senate"))))
                                                                              :op2 (c2-3 / person
                                                                                         :ARG0-of (c2-10 / have-org-role-91
                                                                                                         :ARG2 (c2-2 / president))))))
                                     :condition (c2-13 / feel-01
                                                       :ARG0 c2-1
                                                       :ARG1 (c2-19 / amr-unknown)))))

# ::snt county sheriffs here have to buy their own rifles if the want them in their squad cars
# ::tokens ["county", "sheriffs", "here", "have", "to", "buy", "their", "own", "rifles", "if", "the", "want", "them", "in", "their", "squad", "cars"]
# ::lemmas ["county", "sheriff", "here", "have", "to", "buy", "their", "own", "rifle", "if", "the", "want", "them", "in", "their", "squad", "car"]
(c3-0 / obligate-01
      :ARG1 (c3-6 / sheriff
                  :mod (c3-3 / county)
                  :location (c3-7 / here))
      :ARG2 (c3-9 / buy-01
                  :ARG0 c3-6
                  :ARG1 (c3-1 / rifle
                              :poss c3-6))
      :condition (c3-4 / want-01
                       :ARG0 c3-6
                       :ARG1 (c3-2 / be-located-at-91
                                   :ARG1 c3-1
                                   :ARG2 (c3-8 / car
                                               :mod (c3-5 / squad)
                                               :poss c3-6))))

# ::snt You saucy minx AnnCoulter taunting me with thoughts of your Kevlar bikini at a time like this TrumpCoulterBootyCall
# ::tokens ["You", "saucy", "minx", "AnnCoulter", "taunting", "me", "with", "thoughts", "of", "your", "Kevlar", "bikini", "at", "a", "time", "like", "this", "TrumpCoulterBootyCall"]
# ::lemmas ["you", "saucy", "minx", "AnnCoulter", "taunt", "me", "with", "thought", "of", "your", "Kevlar", "bikini", "at", "a", "time", "like", "this", "trumpcoulterbootycall"]
(c4-5 / person
      :name (c4-11 / name
                   :op1 "AnnCoulter")
      :mod (c4-10 / minx
                  :mod (c4-9 / saucy))
      :ARG0-of (c4-7 / taunt-01
                     :ARG1 (c4-12 / i)
                     :ARG2 (c4-13 / think-01
                                  :ARG0 c4-12
                                  :ARG1 (c4-0 / bikini
                                              :mod (c4-1 / product
                                                         :name (c4-6 / name
                                                                     :op1 "Kevlar"))
                                              :poss c4-5
                                              :time (c4-8 / time
                                                          :ARG1-of (c4-2 / resemble-01
                                                                         :ARG2 (c4-3 / person
                                                                                     :name (c4-4 / name
                                                                                                 :op1 "TrumpCoulter"
                                                                                                 :op2 "BootyCall")
                                                                                     :mod (c4-14 / this))))))))

# ::snt DEG109 ya and send them out there with water pistols Guy is a complete tool
# ::tokens ["DEG109", "ya", "and", "send", "them", "out", "there", "with", "water", "pistols", "Guy", "is", "a", "complete", "tool"]
# ::lemmas ["deg109", "ya", "and", "send", "them", "out", "there", "with", "water", "pistol", "Guy", "be", "a", "complete", "tool"]
(c5-9 / multi-sentence
      :snt1 (c5-7 / and
                  :op1 (c5-2 / deny-01
                             :ARG0 (c5-11 / you)
                             :ARG2 (c5-1 / you)
                             :mode imperative)
                  :op2 (c5-8 / send-01
                             :ARG0 c5-1
                             :ARG1 c5-1
                             :ARG2 (c5-0 / out-there)
                             :instrument (c5-3 / pistol
                                               :mod (c5-6 / water))
                             :mode imperative))
      :snt2 (c5-5 / tool
                  :ARG1-of (c5-4 / complete-02)
                  :domain (c5-10 / guy)))

# ::snt At least you are honest about wanting a Homeland Securitized Military Policeso we know who you are cynthiamckinney
# ::tokens ["At", "least", "you", "are", "honest", "about", "wanting", "a", "Homeland", "Securitized", "Military", "Policeso", "we", "know", "who", "you", "are", "cynthiamckinney"]
# ::lemmas ["at", "least", "you", "be", "honest", "about", "want", "a", "Homeland", "Securitized", "Military", "Policeso", "we", "know", "who", "you", "be", "cynthiamckinney"]
(c6-7 / honest-01
      :ARG0 (c6-11 / you)
      :ARG1 (c6-4 / want-01
                  :ARG0 c6-11
                  :ARG1 (c6-10 / government-organization
                               :name (c6-8 / name
                                           :op1 "Homeland"
                                           :op2 "Security"
                                           :op3 "Polices")
                               :ARG1-of (c6-6 / sanitize-01)))
      :mod (c6-5 / at-least)
      :ARG1-of (c6-1 / cause-01
                     :ARG0 (c6-9 / know-01
                                 :ARG0 (c6-0 / we)
                                 :ARG1 (c6-2 / person
                                             :name (c6-3 / name
                                                         :op1 " cynthiamckinney")
                                             :domain c6-11))))

# ::snt I dont understand why the media hasnt   Called the Dallas shooting a hate crime
# ::tokens ["I", "do", "nt", "understand", "why", "the", "media", "has", "nt", "  ", "Called", "the", "Dallas", "shooting", "a", "hate", "crime"]
# ::lemmas ["i", "do", "not", "understand", "why", "the", "medium", "have", "not", "  ", "call", "the", "Dallas", "shoot", "a", "hate", "crime"]
(c7-2 / understand-01
      :ARG0 (c7-10 / i)
      :ARG1 (c7-3 / thing
                  :ARG0-of (c7-1 / cause-01
                                 :ARG1 (c7-5 / call-01
                                             :ARG0 (c7-6 / media)
                                             :ARG1 (c7-7 / shoot-02
                                                         :location (c7-0 / city
                                                                         :name (c7-9 / name
                                                                                     :op1 "Dallas")))
                                             :ARG2 (c7-4 / crime-02
                                                         :ARG1 (c7-8 / hate-01))
                                             :polarity -)))
      :polarity -)

# ::snt DebHiers1 let him go out there without body armor on Time to get out the riot gear
# ::tokens ["DebHiers1", "let", "him", "go", "out", "there", "without", "body", "armor", "on", "Time", "to", "get", "out", "the", "riot", "gear"]
# ::lemmas ["DebHiers1", "let", "him", "go", "out", "there", "without", "body", "armor", "on", "Time", "to", "get", "out", "the", "riot", "gear"]
(c8-9 / let-01
      :ARG0 (c8-3 / person
                  :name (c8-8 / name
                              :op1 "DebHiers1"))
      :ARG1 (c8-10 / go-out-17
                   :ARG0 (c8-7 / he)
                   :manner (c8-6 / armor
                                 :mod (c8-11 / body)
                                 :polarity -)
                   :time (c8-5 / time)
                   :purpose (c8-4 / get-05
                                  :ARG1 c8-7
                                  :ARG2 (c8-0 / out)
                                  :instrument (c8-1 / gear
                                                    :purpose (c8-2 / riot-01)))))

# ::snt Good Good I can feel your anger sir Please continue to tear into Speaker Ryan
# ::tokens ["Good", "Good", "I", "can", "feel", "your", "anger", "sir", "Please", "continue", "to", "tear", "into", "Speaker", "Ryan"]
# ::lemmas ["good", "good", "i", "can", "feel", "your", "anger", "sir", "please", "continue", "to", "tear", "into", "Speaker", "Ryan"]
(c9-9 / multi-sentence
      :snt1 (c9-11 / good-02
                   :ARG1 (c9-1 / possible-01
                               :ARG1 (c9-7 / feel-01
                                           :ARG0 (c9-12 / i)
                                           :ARG1 (c9-6 / anger-01
                                                       :ARG1 (c9-13 / you)))))
      :snt2 (c9-8 / say-01
                  :ARG1 (c9-2 / continue-01
                              :ARG0 (c9-5 / sir)
                              :ARG1 (c9-3 / tear-in-04
                                          :ARG0 c9-5
                                          :ARG1 (c9-0 / person
                                                      :name (c9-10 / name
                                                                   :op1 "Ryan")
                                                      :ARG0-of (c9-4 / speak-01)))
                              :mode imperative)
                  :ARG2 c9-5
                  :polite +))

# ::snt No Black lives matter Blue lives do not
# ::tokens ["No", "Black", "lives", "matter", "Blue", "lives", "do", "not"]
# ::lemmas ["no", "black", "live", "matter", "Blue", "life", "do", "not"]
(c10-2 / contrast-01
       :ARG1 (c10-4 / matter-01
                    :ARG1 (c10-5 / life
                                 :ARG1-of (c10-6 / black-05))
                    :polarity -)
       :ARG2 (c10-1 / matter-01
                    :ARG1 (c10-3 / life
                                 :ARG1-of (c10-0 / Blue-03))
                    :polarity -))

# ::snt time some of these people like RandPaul CrookedHillary BarackObama took a turn at standing on the front line
# ::tokens ["time", "some", "of", "these", "people", "like", "RandPaul", "CrookedHillary", "BarackObama", "took", "a", "turn", "at", "standing", "on", "the", "front", "line"]
# ::lemmas ["time", "some", "of", "these", "people", "like", "RandPaul", "CrookedHillary", "BarackObama", "take", "a", "turn", "at", "stand", "on", "the", "front", "line"]
(c11-4 / turn-01
       :ARG0 (c11-2 / person
                    :name (c11-10 / name
                                  :op1 "BarackObama"))
       :ARG1 (c11-8 / stand-01
                    :ARG1 c11-2
                    :ARG2 (c11-9 / line
                                 :mod (c11-7 / front)))
       :time (c11-12 / time
                     :mod (c11-5 / some)
                     :ARG1-of (c11-11 / include-91
                                      :ARG2 (c11-1 / person
                                                   :mod (c11-6 / this)
                                                   :example (c11-0 / person
                                                                   :name (c11-3 / name
                                                                                :op1 "RandPaul"
                                                                                :op2 "CrookedHillary"))))))

# ::snt WHAT A JOKE  let him stand out there with bullets flying at him and say that
# ::tokens ["WHAT", "A", "JOKE", " ", "let", "him", "stand", "out", "there", "with", "bullets", "flying", "at", "him", "and", "say", "that"]
# ::lemmas ["what", "a", "joke", " ", "let", "him", "stand", "out", "there", "with", "bullet", "fly", "at", "him", "and", "say", "that"]
(c12-7 / let-01
       :ARG0 (c12-9 / job)
       :ARG1 (c12-4 / and
                    :op1 (c12-6 / stand-01
                                :ARG1 (c12-8 / he)
                                :ARG2 (c12-0 / out-there)
                                :manner (c12-5 / fly-01
                                               :ARG2 (c12-1 / bullet)
                                               :direction c12-8))
                    :op2 (c12-3 / say-01
                                :ARG0 c12-8
                                :ARG1 (c12-2 / that))))

# ::snt what is wrong with our leaders let them put their lives in the line politcalcowards
# ::tokens ["what", "is", "wrong", "with", "our", "leaders", "let", "them", "put", "their", "lives", "in", "the", "line", "politcalcowards"]
# ::lemmas ["what", "be", "wrong", "with", "our", "leader", "let", "them", "put", "their", "life", "in", "the", "line", "politcalcoward"]
(c13-7 / let-01
       :ARG0 (c13-2 / person
                    :ARG0-of (c13-4 / lead-02
                                    :ARG1 (c13-3 / we)))
       :ARG1 (c13-0 / put-01
                    :ARG0 c13-2
                    :ARG1 (c13-5 / life
                                 :poss c13-2)
                    :ARG2 (c13-8 / line))
       :ARG1-of (c13-1 / wrong-02
                       :ARG2 (c13-6 / amr-unknown)))

# ::snt The Police should have body armor and every other piece of protective gear available to them
# ::tokens ["The", "Police", "should", "have", "body", "armor", "and", "every", "other", "piece", "of", "protective", "gear", "available", "to", "them"]
# ::lemmas ["the", "police", "should", "have", "body", "armor", "and", "every", "other", "piece", "of", "protective", "gear", "available", "to", "them"]
(c14-2 / recommend-01
       :ARG1 (c14-8 / have-03
                    :ARG0 (c14-4 / police)
                    :ARG1 (c14-7 / and
                                 :op1 (c14-6 / armor
                                             :mod (c14-10 / body))
                                 :op2 (c14-3 / piece
                                             :mod (c14-9 / gear
                                                         :ARG0-of (c14-1 / protect-01))
                                             :mod (c14-0 / other)
                                             :mod (c14-5 / every)
                                             :ARG2-of (c14-11 / available-02
                                                              :ARG1 c14-4)))))

# ::snt Ann Coulter you would have loved the british empire
# ::tokens ["Ann", "Coulter", "you", "would", "have", "loved", "the", "british", "empire"]
# ::lemmas ["Ann", "Coulter", "you", "would", "have", "love", "the", "british", "empire"]
(c15-4 / say-01
       :ARG1 (c15-5 / love-01
                    :ARG0 (c15-0 / person
                                 :name (c15-6 / name
                                              :op1 "Ann"
                                              :op2 "Coulter"))
                    :ARG1 (c15-1 / empire
                                 :mod (c15-2 / country
                                             :name (c15-3 / name
                                                          :op1 "Britain"))))
       :ARG2 c15-0)

# ::snt what is he hanging out with Bernie now He said it 6 months ago
# ::tokens ["what", "is", "he", "hanging", "out", "with", "Bernie", "now", "He", "said", "it", "6", "months", "ago"]
# ::lemmas ["what", "be", "he", "hang", "out", "with", "Bernie", "now", "he", "say", "it", "6", "months", "ago"]
(c16-10 / multi-sentence
        :snt1 (c16-9 / hang-out-06
                     :ARG1 (c16-4 / he)
                     :ARG2 (c16-2 / person
                                  :name (c16-11 / name
                                                :op1 "Bernie"))
                     :polarity (c16-7 / amr-unknown)
                     :time (c16-3 / now))
        :snt2 (c16-8 / say-01
                     :ARG0 (c16-5 / he)
                     :ARG1 (c16-12 / it)
                     :time (c16-13 / before
                                   :op1 (c16-0 / now)
                                   :quant (c16-6 / temporal-quantity
                                                 :unit (c16-1 / month)
                                                 :quant 6))))

# ::snt What Rand
# ::tokens ["What", "Rand"]
# ::lemmas ["what", "Rand"]
(c17-0 / person
       :name (c17-1 / name
                    :op1 "Rand"))

# ::snt we need to give police more power
# ::tokens ["we", "need", "to", "give", "police", "more", "power"]
# ::lemmas ["we", "need", "to", "give", "police", "more", "power"]
(c18-4 / need-01
       :ARG0 (c18-2 / we)
       :ARG1 (c18-5 / give-01
                    :ARG0 c18-2
                    :ARG1 (c18-1 / power
                                 :mod (c18-3 / more))
                    :ARG2 (c18-0 / police)))

# ::snt The war our police are in is being missed  Demilitarize yes when we deal with the war
# ::tokens ["The", "war", "our", "police", "are", "in", "is", "being", "missed", " ", "Demilitarize", "yes", "when", "we", "deal", "with", "the", "war"]
# ::lemmas ["the", "war", "our", "police", "be", "in", "be", "be", "miss", " ", "Demilitarize", "yes", "when", "we", "deal", "with", "the", "war"]
(c19-7 / multi-sentence
       :snt1 (c19-1 / miss-01
                    :ARG1 (c19-5 / war
                                 :location-of (c19-3 / police
                                                     :poss (c19-0 / we))))
       :snt2 (c19-2 / democratize-01
                    :ARG0 (c19-4 / we)
                    :time (c19-6 / deal-01
                                 :ARG0 c19-4
                                 :ARG2 c19-5)
                    :mode imperative))

# ::snt Rand is too young to know better Police had to armor up after two thug bank robbers had them outgunned in CA in the 80s
# ::tokens ["Rand", "is", "too", "young", "to", "know", "better", "Police", "had", "to", "armor", "up", "after", "two", "thug", "bank", "robbers", "had", "them", "outgunned", "in", "CA", "in", "the", "80s"]
# ::lemmas ["Rand", "be", "too", "young", "to", "know", "well", "Police", "have", "to", "armor", "up", "after", "two", "thug", "bank", "robber", "have", "them", "outgunne", "in", "CA", "in", "the", "80s"]
(c20-7 / have-degree-91
       :ARG1 (c20-2 / person
                    :name (c20-8 / name
                                 :op1 "Rand"))
       :ARG2 (c20-20 / young)
       :ARG3 (c20-10 / too)
       :ARG6 (c20-11 / know-01
                     :ARG0 c20-2
                     :ARG1-of c20-7
                     :ARG2 (c20-19 / good-02
                                   :ARG1 c20-11)
                     :ARG3 (c20-12 / more))
       :ARG0-of (c20-5 / cause-01
                       :ARG1 (c20-0 / obligate-01
                                    :ARG1 (c20-4 / police)
                                    :ARG2 (c20-17 / armor-up-02
                                                  :ARG1 c20-4)
                                    :time (c20-9 / after
                                                 :op1 (c20-15 / outgun-01
                                                              :ARG1 (c20-14 / person
                                                                            :ARG0-of (c20-1 / rob-01
                                                                                            :ARG1 (c20-13 / bank))
                                                                            :mod (c20-3 / thug)
                                                                            :quant 2)
                                                              :location (c20-18 / state
                                                                                :name (c20-6 / name
                                                                                             :op1 "CA"))
                                                              :time (c20-16 / date-entity
                                                                            :decade 80))))))

# ::snt my small town of about 25000 have a MRAP Why in hell do they need a MRAP Hes not just talking about gear its the though
# ::tokens ["my", "small", "town", "of", "about", "25000", "have", "a", "MRAP", "Why", "in", "hell", "do", "they", "need", "a", "MRAP", "He", "s", "not", "just", "talking", "about", "gear", "its", "the", "though"]
# ::lemmas ["my", "small", "town", "of", "about", "25000", "have", "a", "MRAP", "why", "in", "hell", "do", "they", "need", "a", "MRAP", "he", "s", "not", "just", "talk", "about", "gear", "its", "the", "though"]
(c21-12 / multi-sentence
        :snt1 (c21-11 / have-03
                      :ARG0 (c21-6 / town
                                   :mod (c21-10 / small)
                                   :poss (c21-16 / i)
                                   :consist-of (c21-8 / about
                                                      :op1 25000))
                      :ARG1 (c21-2 / product
                                   :name (c21-15 / name
                                                 :op1 "MRAP")))
        :snt2 (c21-3 / cause-01
                     :ARG0 (c21-5 / amr-unknown)
                     :ARG1 (c21-4 / need-01
                                  :ARG0 (c21-17 / they)
                                  :ARG1 c21-2
                                  :mod (c21-7 / hell)))
        :snt3 (c21-13 / contrast-01
                      :ARG2 (c21-9 / talk-01
                                   :ARG0 (c21-0 / it)
                                   :ARG1 (c21-14 / gear)
                                   :mod (c21-1 / just)
                                   :polarity -)))

# ::snt rands another sore loser he will be another nobody soon enough
# ::tokens ["rands", "another", "sore", "loser", "he", "will", "be", "another", "nobody", "soon", "enough"]
# ::lemmas ["rand", "another", "sore", "loser", "he", "will", "be", "another", "nobody", "soon", "enough"]
(c22-4 / and
       :op1 (c22-9 / beat-03
                   :ARG1 (c22-0 / person
                                :ARG0-of (c22-6 / lose-03)
                                :mod (c22-5 / sore)
                                :mod (c22-2 / another)))
       :op2 (c22-8 / nobody
                   :mod (c22-10 / another)
                   :time (c22-3 / soon
                                :ARG2-of (c22-7 / have-degree-91
                                                :ARG1 c22-8
                                                :ARG3 (c22-1 / enough)))
                   :domain c22-0))

# ::snt When did THISturn into THISgo aheadembrace Authoritarianismwe know you like it
# ::tokens ["When", "did", "THISturn", "into", "THISgo", "aheadembrace", "Authoritarianismwe", "know", "you", "like", "it"]
# ::lemmas ["when", "do", "THISturn", "into", "THISgo", "aheadembrace", "Authoritarianismwe", "know", "you", "like", "it"]
(c23-9 / multi-sentence
       :snt1 (c23-4 / turn-01
                    :ARG1 (c23-12 / thing)
                    :ARG2 (c23-7 / this)
                    :time (c23-6 / amr-unknown))
       :snt2 (c23-11 / go-06
                     :ARG0 (c23-14 / you)
                     :ARG2 (c23-3 / ahead)
                     :mode imperative)
       :snt3 (c23-1 / embrace-01
                    :ARG0 (c23-0 / you)
                    :ARG1 (c23-13 / authoritarianism)
                    :ARG1-of (c23-2 / cause-01
                                    :ARG0 (c23-8 / know-01
                                                 :ARG0 (c23-5 / we)
                                                 :ARG1 (c23-10 / like-01
                                                               :ARG0 c23-0
                                                               :ARG1 c23-13)))
                    :mode imperative))

# ::snt What AN IDIOT is Rand Paul  so glad he didnt make it
# ::tokens ["What", "AN", "IDIOT", "is", "Rand", "Paul", " ", "so", "glad", "he", "did", "nt", "make", "it"]
# ::lemmas ["what", "an", "IDIOT", "be", "Rand", "Paul", " ", "so", "glad", "he", "do", "not", "make", "it"]
(c24-6 / idiot
       :domain (c24-0 / person
                      :name (c24-5 / name
                                   :op1 "Rand"
                                   :op2 "Paul"))
       :degree (c24-2 / so)
       :ARG0-of (c24-1 / cause-01
                       :ARG1 (c24-4 / glad-02
                                    :ARG0 (c24-3 / make-it-14
                                                 :ARG0 c24-0
                                                 :polarity -)
                                    :ARG1 c24-0)))

# ::snt militant police are not a good thing I dont support the thugs resisting arrest but we obviously need more accountability
# ::tokens ["militant", "police", "are", "not", "a", "good", "thing", "I", "do", "nt", "support", "the", "thugs", "resisting", "arrest", "but", "we", "obviously", "need", "more", "accountability"]
# ::lemmas ["militant", "police", "be", "not", "a", "good", "thing", "i", "do", "not", "support", "the", "thugs", "resist", "arrest", "but", "we", "obviously", "need", "more", "accountability"]
(c25-3 / contrast-01
       :ARG1 (c25-12 / good-02
                     :ARG1 (c25-4 / police
                                  :mod (c25-10 / militant))
                     :polarity -)
       :ARG2 (c25-9 / support-01
                    :ARG0 (c25-13 / i)
                    :ARG1 (c25-6 / thug
                                 :ARG0-of (c25-1 / resist-01
                                                 :ARG1 (c25-8 / arrest-01
                                                              :ARG1 c25-6)))
                    :concession-of (c25-0 / obvious-01
                                          :ARG1 (c25-11 / need-01
                                                        :ARG0 (c25-7 / we)
                                                        :ARG1 (c25-5 / accountable-02
                                                                     :ARG0 c25-7
                                                                     :quant (c25-2 / more))))
                    :polarity -))

# ::snt Small rural town of Belfair WA pop 6221 just purchased 5 military grade armored vehicles Thats what Rand is talking about
# ::tokens ["Small", "rural", "town", "of", "Belfair", "WA", "pop", "6221", "just", "purchased", "5", "military", "grade", "armored", "vehicles", "That", "s", "what", "Rand", "is", "talking", "about"]
# ::lemmas ["small", "rural", "town", "of", "Belfair", "WA", "pop", "6221", "just", "purchase", "5", "military", "grade", "armored", "vehicle", "that", "s", "what", "Rand", "be", "talk", "about"]
(c26-14 / multi-sentence
        :snt1 (c26-5 / purchase-01
                     :ARG0 (c26-1 / pop
                                  :mod 6221)
                     :ARG1 (c26-9 / vehicle
                                  :ARG1-of (c26-11 / armor-01)
                                  :mod (c26-16 / grade
                                               :mod (c26-3 / military))
                                  :quant 5)
                     :ARG4 (c26-8 / town
                                  :name (c26-15 / name
                                                :op1 "Belfair")
                                  :mod (c26-2 / rural)
                                  :mod (c26-13 / small)
                                  :location (c26-10 / state
                                                    :name (c26-6 / name
                                                                 :op1 "WA")))
                     :time (c26-17 / just))
        :snt2 (c26-7 / talk-01
                     :ARG0 (c26-0 / person
                                  :name (c26-4 / name
                                               :op1 "Rand"))
                     :ARG1 (c26-12 / that)))

# ::snt AnnCoulter Satan was the first Libertarian who rejected all authority
# ::tokens ["AnnCoulter", "Satan", "was", "the", "first", "Libertarian", "who", "rejected", "all", "authority"]
# ::lemmas ["AnnCoulter", "Satan", "be", "the", "first", "Libertarian", "who", "reject", "all", "authority"]
(c27-5 / libertarian
       :ord (c27-0 / ordinal-entity
                   :value 1)
       :ARG0-of (c27-1 / reject-01
                       :ARG1 (c27-4 / authority
                                    :mod (c27-3 / all)))
       :domain (c27-2 / person
                      :name (c27-6 / name
                                   :op1 "AnnCoulter"
                                   :op2 "Satan")))

# ::snt AnnCoulter How about we remove all Black Lives Matter Terrorist Supporters from USA first RandPaul
# ::tokens ["AnnCoulter", "How", "about", "we", "remove", "all", "Black", "Lives", "Matter", "Terrorist", "Supporters", "from", "USA", "first", "RandPaul"]
# ::lemmas ["AnnCoulter", "how", "about", "we", "remove", "all", "black", "life", "Matter", "Terrorist", "Supporters", "from", "USA", "first", "RandPaul"]
(c28-14 / ask-01
        :ARG0 (c28-7 / person
                     :name (c28-16 / name
                                   :op1 "AnnCoulter"))
        :ARG1 (c28-15 / suggest-01
                      :ARG1 (c28-2 / remove-01
                                   :ARG0 (c28-12 / we)
                                   :ARG1 (c28-3 / person
                                                :ARG0-of (c28-13 / support-01
                                                                 :ARG1 (c28-11 / terrorist
                                                                               :mod (c28-0 / organization
                                                                                           :name (c28-8 / name
                                                                                                        :op1 "Black"
                                                                                                        :op2 "Lives"
                                                                                                        :op3 "Matter"))))
                                                :mod (c28-10 / all))
                                   :ARG2 (c28-9 / country
                                                :name (c28-5 / name
                                                             :op1 "USA"))
                                   :ord (c28-4 / ordinal-entity
                                               :value 1)
                                   :mod (c28-1 / person
                                               :name (c28-6 / name
                                                            :op1 "RandPaul")))))

# ::snt Rand Paul is a loser and an embarrassment to the USA
# ::tokens ["Rand", "Paul", "is", "a", "loser", "and", "an", "embarrassment", "to", "the", "USA"]
# ::lemmas ["Rand", "Paul", "be", "a", "loser", "and", "an", "embarrassment", "to", "the", "USA"]
(c29-5 / and
       :op1 (c29-1 / person
                   :ARG0-of (c29-6 / lose-03)
                   :domain (c29-0 / person
                                  :name (c29-7 / name
                                               :op1 "Rand"
                                               :op2 "Paul")))
       :op2 (c29-2 / embarrass-01
                   :ARG0 c29-0
                   :ARG1 (c29-3 / country
                                :name (c29-4 / name
                                             :op1 "USA"))))

# ::snt I would be safer in a traffic stop if we armor up the cops so they can safely wait to see if a gun comes out
# ::tokens ["I", "would", "be", "safer", "in", "a", "traffic", "stop", "if", "we", "armor", "up", "the", "cops", "so", "they", "can", "safely", "wait", "to", "see", "if", "a", "gun", "comes", "out"]
# ::lemmas ["i", "would", "be", "safe", "in", "a", "traffic", "stop", "if", "we", "armor", "up", "the", "cop", "so", "they", "can", "safely", "wait", "to", "see", "if", "a", "gun", "come", "out"]
(c30-9 / have-degree-91
       :ARG1 (c30-13 / i)
       :ARG2 (c30-8 / safe-01
                    :ARG1 c30-13
                    :location (c30-5 / stop-01
                                     :mod (c30-3 / traffic)))
       :ARG3 (c30-10 / more)
       :condition (c30-6 / armor-01
                         :ARG0 (c30-4 / we)
                         :ARG1 (c30-1 / cop)
                         :purpose (c30-2 / possible-01
                                         :ARG1 (c30-0 / wait-01
                                                      :ARG1 c30-1
                                                      :ARG2 (c30-7 / see-01
                                                                   :ARG0 c30-1
                                                                   :ARG1 (c30-11 / come-out-09
                                                                                 :ARG1 (c30-12 / gun)))
                                                      :ARG0-of (c30-14 / safe-01
                                                                       :ARG1 c30-1)))))

# ::snt he is fucking nutsand Rasnd we are not forgetting you campaigned for McConnell
# ::tokens ["he", "is", "fucking", "nutsand", "Rasnd", "we", "are", "not", "forgetting", "you", "campaigned", "for", "McConnell"]
# ::lemmas ["he", "be", "fuck", "nutsand", "Rasnd", "we", "be", "not", "forget", "you", "campaign", "for", "McConnell"]
(c31-6 / and
       :op1 (c31-9 / nuts
                   :domain (c31-8 / he)
                   :mod (c31-7 / fucking))
       :op2 (c31-0 / forget-01
                   :ARG0 (c31-5 / we)
                   :ARG1 (c31-2 / campaign-01
                                :ARG0 (c31-10 / you)
                                :ARG1 (c31-3 / person
                                             :name (c31-4 / name
                                                          :op1 "McConnell")
                                             :mod-of c31-0))
                   :name (c31-1 / name
                                :op1 "Rasnd")
                   :polarity -))

# ::snt Seems to me we need to remilitarize the police as they are moving targets everyday on the job
# ::tokens ["Seems", "to", "me", "we", "need", "to", "remilitarize", "the", "police", "as", "they", "are", "moving", "targets", "everyday", "on", "the", "job"]
# ::lemmas ["seem", "to", "me", "we", "need", "to", "remilitarize", "the", "police", "as", "they", "be", "move", "target", "everyday", "on", "the", "job"]
(c32-8 / seem-01
       :ARG1 (c32-10 / need-01
                     :ARG0 (c32-6 / we)
                     :ARG1 (c32-0 / remilitarize-01
                                  :ARG0 c32-6
                                  :ARG1 (c32-2 / police))
                     :ARG1-of (c32-3 / cause-01
                                     :ARG0 (c32-9 / move-01
                                                  :ARG0 c32-2
                                                  :ARG1 (c32-5 / target)
                                                  :frequency (c32-7 / rate-entity-91
                                                                    :ARG3 (c32-12 / temporal-quantity
                                                                                  :unit (c32-1 / day)
                                                                                  :quant 1))
                                                  :location (c32-4 / job))))
       :ARG2 (c32-11 / i))

# ::snt couldnt part of the problem be we are hiring cops that have served on the front lines Overzealous PTSD Id  ur thoughts
# ::tokens ["could", "nt", "part", "of", "the", "problem", "be", "we", "are", "hiring", "cops", "that", "have", "served", "on", "the", "front", "lines", "Overzealous", "PTSD", "I", "d", " ", "ur", "thoughts"]
# ::lemmas ["could", "not", "part", "of", "the", "problem", "be", "we", "be", "hire", "cop", "that", "have", "serve", "on", "the", "front", "line", "Overzealous", "PTSD", "i", "d", " ", "ur", "thought"]
(c33-6 / think-01
       :ARG0 (c33-15 / i)
       :ARG1 (c33-2 / possible-01
                    :ARG1 (c33-10 / have-part-91
                                  :ARG1 (c33-1 / problem)
                                  :ARG2 (c33-4 / hire-01
                                               :ARG0 (c33-7 / we)
                                               :ARG1 (c33-3 / cop
                                                            :ARG0-of (c33-9 / serve-01
                                                                            :location (c33-11 / line
                                                                                              :mod (c33-8 / front)))
                                                            :ARG0-of (c33-5 / have-03
                                                                            :ARG1 (c33-12 / medical-condition
                                                                                          :name (c33-14 / name
                                                                                                        :op1 "PTSD")
                                                                                          :mod (c33-0 / overzealous))))))
                    :polarity -)
       :ARG1-of (c33-13 / cause-01
                        :ARG0 c33-15)
       :ARG0-of c33-13)

# ::snt he really said that WTF
# ::tokens ["he", "really", "said", "that", "WTF"]
# ::lemmas ["he", "really", "say", "that", "WTF"]
(c34-3 / say-01
       :ARG0 (c34-4 / he)
       :ARG1 (c34-1 / amr-unknown
                    :mod (c34-2 / fuck
                                :mode expressive))
       :ARG1-of (c34-0 / real-04))

# ::snt This sounds overly simple  is really only 1 component in larger measurebut RandPaul is right AnnCoulter LindaSuhler
# ::tokens ["This", "sounds", "overly", "simple", " ", "is", "really", "only", "1", "component", "in", "larger", "measurebut", "RandPaul", "is", "right", "AnnCoulter", "LindaSuhler"]
# ::lemmas ["this", "sound", "overly", "simple", " ", "be", "really", "only", "1", "component", "in", "large", "measurebut", "RandPaul", "be", "right", "AnnCoulter", "LindaSuhler"]
(c35-13 / multi-sentence
        :snt1 (c35-18 / sound-01
                      :ARG1 (c35-11 / this)
                      :ARG2 (c35-12 / simple-02
                                    :ARG1 c35-11
                                    :ARG1-of (c35-0 / over-03)))
        :snt2 (c35-7 / contrast-01
                     :ARG1 (c35-19 / component
                                   :domain (c35-4 / person
                                                  :name (c35-20 / name
                                                                :op1 "RandPaul"))
                                   :ARG1-of (c35-1 / real-04)
                                   :prep-in (c35-2 / measure-01
                                                   :ARG1-of (c35-10 / have-degree-91
                                                                    :ARG2 (c35-14 / large)
                                                                    :ARG3 (c35-5 / more)))
                                   :mod (c35-16 / only)
                                   :quant 1)
                     :ARG2 (c35-9 / right-06
                                  :ARG1 c35-4))
        :snt3 (c35-17 / say-01
                      :ARG0 (c35-6 / person
                                   :name (c35-8 / name
                                                :op1 "AnnCoulter"
                                                :op2 "LindaSuhler"))
                      :ARG1 c35-9
                      :ARG1 (c35-15 / person
                                    :name (c35-3 / name
                                                 :op1 "RandPaul"))))

# ::snt he needs to suit up in blue and walk the Dallas streets for a month with a 22 pistol and no armordallaspolice
# ::tokens ["he", "needs", "to", "suit", "up", "in", "blue", "and", "walk", "the", "Dallas", "streets", "for", "a", "month", "with", "a", "22", "pistol", "and", "no", "armordallaspolice"]
# ::lemmas ["he", "need", "to", "suit", "up", "in", "blue", "and", "walk", "the", "Dallas", "street", "for", "a", "month", "with", "a", "22", "pistol", "and", "no", "armordallaspolice"]
(c36-11 / need-01
        :ARG0 (c36-9 / he)
        :ARG1 (c36-7 / and
                     :op1 (c36-8 / suit-up-02
                                 :ARG1 c36-9
                                 :ARG2 (c36-12 / blue))
                     :op2 (c36-5 / walk-01
                                 :ARG0 c36-9
                                 :ARG2 (c36-6 / street
                                              :mod (c36-0 / city
                                                          :name (c36-1 / name
                                                                       :op1 "Dallas")))
                                 :duration (c36-4 / temporal-quantity
                                                  :unit (c36-10 / month)
                                                  :quant 1)
                                 :accompanier (c36-3 / and
                                                     :op1 (c36-2 / pistol
                                                                 :quant 22)
                                                     :op2 (c36-13 / armordallaspolice)))))

# ::snt Maybe they should just have paint ball guns
# ::tokens ["Maybe", "they", "should", "just", "have", "paint", "ball", "guns"]
# ::lemmas ["maybe", "they", "should", "just", "have", "paint", "ball", "gun"]
(c37-3 / possible-01
       :ARG1 (c37-0 / recommend-01
                    :ARG1 (c37-5 / have-03
                                 :ARG0 (c37-4 / they)
                                 :ARG1 (c37-6 / gun
                                              :mod (c37-7 / ball
                                                          :ARG1-of (c37-1 / paint-02)))
                                 :mod (c37-2 / just))))

# ::snt hey Randyou go first  Get rid of your security
# ::tokens ["hey", "Randyou", "go", "first", " ", "Get", "rid", "of", "your", "security"]
# ::lemmas ["hey", "Randyou", "go", "first", " ", "get", "rid", "of", "your", "security"]
(c38-5 / say-01
       :ARG1 (c38-4 / and
                    :op1 (c38-7 / go-02
                                :ARG0 (c38-2 / person
                                             :name (c38-6 / name
                                                          :op1 "Rand"))
                                :ord (c38-0 / ordinal-entity
                                            :value 1)
                                :mode imperative)
                    :op2 (c38-1 / rid-01
                                :ARG0 c38-2
                                :ARG1 (c38-3 / security
                                             :poss c38-2)
                                :mode imperative))
       :ARG2 c38-2)

# ::snt because he has never been one
# ::tokens ["because", "he", "has", "never", "been", "one"]
# ::lemmas ["because", "he", "have", "never", "be", "one"]
(c39-0 / cause-01
       :ARG0 (c39-3 / one
                    :domain (c39-2 / he)
                    :time (c39-1 / ever)
                    :polarity -))

# ::snt Rand talking out of his rear end  Whats new realDonaldTrump with Gingrich will right America DumpRyan in 30 days WI 1st
# ::tokens ["Rand", "talking", "out", "of", "his", "rear", "end", " ", "What", "s", "new", "realDonaldTrump", "with", "Gingrich", "will", "right", "America", "DumpRyan", "in", "30", "days", "WI", "1st"]
# ::lemmas ["Rand", "talk", "out", "of", "his", "rear", "end", " ", "what", "s", "new", "realdonaldtrump", "with", "Gingrich", "will", "right", "America", "DumpRyan", "in", "30", "days", "WI", "1st"]
(c40-12 / multi-sentence
        :snt1 (c40-10 / talk-01
                      :ARG0 (c40-3 / person
                                   :name (c40-20 / name
                                                 :op1 "Rand"))
                      :source (c40-1 / rear-end
                                     :poss c40-3))
        :snt2 (c40-9 / right-06
                     :ARG0 (c40-5 / person
                                  :ARG0-of (c40-11 / real-04)
                                  :accompanier (c40-14 / person
                                                       :name (c40-8 / name
                                                                    :op1 "Gingrich")))
                     :ARG1 (c40-7 / country
                                  :name (c40-2 / name
                                               :op1 "America"))
                     :ARG2 (c40-13 / person
                                   :name (c40-6 / name
                                                :op1 "Ryan"))
                     :time (c40-17 / after
                                   :op1 (c40-16 / now)
                                   :quant (c40-4 / temporal-quantity
                                                 :unit (c40-15 / day)
                                                 :quant 30))
                     :location (c40-18 / state
                                       :name (c40-19 / name
                                                     :op1 "WI"))
                     :ord (c40-0 / ordinal-entity
                                 :value 1)))

# ::snt I didnt see any military equip this time until all officers had already been shot Sen Rand Paul For better police equip
# ::tokens ["I", "did", "nt", "see", "any", "military", "equip", "this", "time", "until", "all", "officers", "had", "already", "been", "shot", "Sen", "Rand", "Paul", "For", "better", "police", "equip"]
# ::lemmas ["i", "do", "not", "see", "any", "military", "equip", "this", "time", "until", "all", "officer", "have", "already", "be", "shoot", "Sen", "Rand", "Paul", "for", "well", "police", "equip"]
(c41-17 / multi-sentence
        :snt1 (c41-20 / see-01
                      :ARG0 (c41-5 / i)
                      :ARG1 (c41-2 / equip-01
                                   :ARG2 (c41-1 / military))
                      :time (c41-14 / time
                                    :mod (c41-7 / this))
                      :time (c41-3 / until
                                   :op1 (c41-15 / shoot-02
                                                :ARG1 (c41-0 / officer
                                                             :mod (c41-19 / all))
                                                :time (c41-13 / already)))
                      :polarity -)
        :snt2 (c41-10 / have-purpose-91
                      :ARG1 (c41-16 / equip-01
                                    :ARG2 (c41-4 / police)
                                    :ARG1-of (c41-9 / have-degree-91
                                                    :ARG2 (c41-21 / good-02
                                                                  :ARG1 c41-16)
                                                    :ARG3 (c41-6 / more)))
                      :ARG2 (c41-8 / person
                                   :name (c41-11 / name
                                                 :op1 "Rand"
                                                 :op2 "Paul")
                                   :ARG0-of (c41-12 / have-org-role-91
                                                    :ARG2 (c41-18 / senator)))))

# ::snt RandPaul needs to ride along for a few days Will be begging for more armorbetter protection
# ::tokens ["RandPaul", "needs", "to", "ride", "along", "for", "a", "few", "days", "Will", "be", "begging", "for", "more", "armorbetter", "protection"]
# ::lemmas ["RandPaul", "need", "to", "ride", "along", "for", "a", "few", "days", "will", "be", "beg", "for", "more", "armorbetter", "protection"]
(c42-7 / and
       :op1 (c42-12 / need-01
                    :ARG0 (c42-3 / person
                                 :name (c42-4 / name
                                              :op1 "RandPaul"))
                    :ARG1 (c42-0 / ride-01
                                 :ARG0 c42-3
                                 :mod (c42-5 / along)
                                 :duration (c42-8 / few
                                                  :op1 (c42-6 / temporal-quantity
                                                              :unit (c42-2 / day)
                                                              :quant 1))))
       :op2 (c42-13 / beg-01
                    :ARG0 c42-3
                    :ARG2 (c42-1 / protect-01
                                 :ARG0 c42-3
                                 :ARG1-of (c42-9 / have-degree-91
                                                 :ARG2 (c42-11 / good-02
                                                               :ARG1 c42-1)
                                                 :ARG3 (c42-10 / more)))))

# ::snt Need less PTSD police 90 of cops are ex military Trained killers are writing tickets for broken plastic
# ::tokens ["Need", "less", "PTSD", "police", "90", "of", "cops", "are", "ex", "military", "Trained", "killers", "are", "writing", "tickets", "for", "broken", "plastic"]
# ::lemmas ["need", "less", "ptsd", "police", "90", "of", "cop", "be", "ex", "military", "Trained", "killer", "be", "write", "ticket", "for", "broken", "plastic"]
(c43-12 / multi-sentence
        :snt1 (c43-16 / need-01
                      :ARG0 (c43-4 / police)
                      :ARG1 (c43-13 / less)
                      :ARG1-of (c43-5 / cause-01
                                      :ARG0 (c43-3 / medical-condition
                                                   :name (c43-6 / name
                                                                :op1 "PTSD"))))
        :snt2 (c43-1 / person
                     :ARG0-of (c43-11 / kill-01
                                      :manner (c43-8 / Trained)
                                      :time (c43-7 / ex))
                     :domain (c43-14 / cop)
                     :ARG0-of (c43-15 / have-org-role-91
                                      :ARG1 (c43-17 / military))
                     :ARG0-of (c43-9 / write-01
                                     :ARG1 (c43-10 / ticket
                                                   :purpose (c43-0 / plastic
                                                                   :ARG1-of (c43-2 / break-01))))
                     :quant 90))

# ::snt I love black people  One of my favorite sell out political operatives is black RealBenCarson
# ::tokens ["I", "love", "black", "people", " ", "One", "of", "my", "favorite", "sell", "out", "political", "operatives", "is", "black", "RealBenCarson"]
# ::lemmas ["i", "love", "black", "people", " ", "One", "of", "my", "favorite", "sell", "out", "political", "operative", "be", "black", "realbencarson"]
(c44-11 / multi-sentence
        :snt1 (c44-10 / love-01
                      :ARG0 (c44-14 / i)
                      :ARG1 (c44-5 / person
                                   :ARG1-of (c44-15 / black-05)))
        :snt2 (c44-2 / include-91
                     :ARG1 (c44-3 / person
                                  :name (c44-13 / name
                                                :op1 "RealBenCarson")
                                  :ARG1-of (c44-4 / black-05)
                                  :ARG0-of (c44-12 / have-org-role-91
                                                   :ARG1 (c44-1 / political-party)
                                                   :ARG2 (c44-0 / operative))
                                  :ARG1-of (c44-9 / sell-out-03))
                     :ARG2 (c44-7 / person
                                  :ARG1-of (c44-8 / favor-01
                                                  :ARG0 (c44-6 / i)))))

# ::snt It seems like they need more equipment
# ::tokens ["It", "seems", "like", "they", "need", "more", "equipment"]
# ::lemmas ["it", "seem", "like", "they", "need", "more", "equipment"]
(c45-2 / seem-01
       :ARG1 (c45-4 / need-01
                    :ARG0 (c45-1 / they)
                    :ARG1 (c45-0 / equipment
                                 :mod (c45-3 / more))))

# ::snt Rand your hair plaster has saturated your lobes
# ::tokens ["Rand", "your", "hair", "plaster", "has", "saturated", "your", "lobes"]
# ::lemmas ["rand", "your", "hair", "plaster", "have", "saturate", "your", "lobe"]
(c46-1 / saturate-01
       :ARG0 (c46-0 / plaster
                    :consist-of (c46-2 / hair)
                    :poss (c46-4 / you
                                 :part (c46-3 / lob
                                              :ARG1-of c46-1))))

# ::snt Send him out there
# ::tokens ["Send", "him", "out", "there"]
# ::lemmas ["send", "him", "out", "there"]
(c47-2 / send-03
       :ARG0 (c47-3 / you)
       :ARG1 (c47-1 / he)
       :ARG2 (c47-0 / out-there)
       :mode imperative)

# ::snt Does that mean we have to REmilitarize them every time theyre confronting someone who turns out to be a terrorist
# ::tokens ["Does", "that", "mean", "we", "have", "to", "REmilitarize", "them", "every", "time", "they", "re", "confronting", "someone", "who", "turns", "out", "to", "be", "a", "terrorist"]
# ::lemmas ["do", "that", "mean", "we", "have", "to", "remilitarize", "them", "every", "time", "they", "be", "confront", "someone", "who", "turn", "out", "to", "be", "a", "terrorist"]
(c48-9 / mean-01
       :polarity (c48-6 / amr-unknown)
       :ARG1 (c48-4 / that)
       :ARG2 (c48-0 / obligate-01
                    :ARG1 (c48-5 / we)
                    :ARG2 (c48-1 / recognize-02
                                 :ARG0 c48-5
                                 :ARG1 (c48-10 / they)
                                 :time (c48-2 / confront-01
                                              :ARG0 c48-10
                                              :ARG1 (c48-8 / someone
                                                           :ARG1-of (c48-7 / turn-out-11
                                                                           :ARG2 (c48-11 / terrorist))))
                                 :mod (c48-3 / every))))

# ::snt hey Ann how about not making body armour available to the general public
# ::tokens ["hey", "Ann", "how", "about", "not", "making", "body", "armour", "available", "to", "the", "general", "public"]
# ::lemmas ["hey", "Ann", "how", "about", "not", "make", "body", "armour", "available", "to", "the", "general", "public"]
(c49-5 / say-01
       :ARG1 (c49-3 / suggest-01
                    :ARG1 (c49-6 / make-02
                                 :ARG1 (c49-4 / available-02
                                              :ARG1 (c49-1 / public
                                                           :mod (c49-9 / general))
                                              :ARG2 (c49-2 / armor
                                                           :mod (c49-10 / body)))
                                 :polarity -))
       :ARG2 (c49-0 / person
                    :name (c49-7 / name
                                 :op1 "Ann")
                    :mod (c49-8 / hey
                                :mode expressive)))

# ::snt Perhaps making sure they are all color blind is a start
# ::tokens ["Perhaps", "making", "sure", "they", "are", "all", "color", "blind", "is", "a", "start"]
# ::lemmas ["perhaps", "make", "sure", "they", "be", "all", "color", "blind", "be", "a", "start"]
(c50-0 / possible-01
       :ARG1 (c50-5 / start-01
                    :ARG2 (c50-1 / ensure-01
                                 :ARG1 (c50-6 / blind-02
                                              :ARG1 (c50-3 / they
                                                           :mod (c50-4 / all))
                                              :ARG2 (c50-2 / color)))))
