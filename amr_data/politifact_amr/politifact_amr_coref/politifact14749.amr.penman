# ::snt A leftist that will pay for and work with rhinos in collusion to undermine a Conservative candidate can you say Russian dossier
# ::tokens ["A", "leftist", "that", "will", "pay", "for", "and", "work", "with", "rhinos", "in", "collusion", "to", "undermine", "a", "Conservative", "candidate", "can", "you", "say", "Russian", "dossier"]
# ::lemmas ["a", "leftist", "that", "will", "pay", "for", "and", "work", "with", "rhinos", "in", "collusion", "to", "undermine", "a", "Conservative", "candidate", "can", "you", "say", "Russian", "dossier"]
(c1-5 / possible-01
      :ARG1 (c1-10 / say-01
                   :ARG0 (c1-15 / you)
                   :ARG1 (c1-4 / dossier
                               :mod (c1-6 / country
                                          :name (c1-14 / name
                                                       :op1 "Russia"))
                               :ARG1-of c1-10
                               :ARG0 c1-15))
      :ARG2 (c1-1 / person
                  :ARG1-of (c1-11 / left-19)
                  :ARG0-of (c1-0 / pay-01
                                 :ARG3 (c1-2 / rhino)
                                 :manner (c1-12 / collude-01
                                                :ARG2 (c1-7 / undermine-01
                                                            :ARG0 c1-1
                                                            :ARG1 (c1-3 / candidate
                                                                        :mod (c1-13 / political-party
                                                                                    :name (c1-8 / name
                                                                                                :op1 "Conservative"))))))
                  :ARG0-of (c1-9 / work-01)))

# ::snt I am starting to wonder why every most of these recent accusations there is always SJW who has a shadd past a GOP member who quit and fakenewsmedia to pull gas on fire MAGA  DiamondandSilk YoungDems4Trump  din
# ::tokens ["I", "am", "starting", "to", "wonder", "why", "every", "most", "of", "these", "recent", "accusations", "there", "is", "always", "SJW", "who", "has", "a", "shadd", "past", "a", "GOP", "member", "who", "quit", "and", "fakenewsmedia", "to", "pull", "gas", "on", "fire", "MAGA", " ", "DiamondandSilk", "YoungDems4Trump", " ", "din"]
# ::lemmas ["i", "be", "start", "to", "wonder", "why", "every", "most", "of", "these", "recent", "accusation", "there", "be", "always", "SJW", "who", "have", "a", "shadd", "past", "a", "GOP", "member", "who", "quit", "and", "fakenewsmedia", "to", "pull", "gas", "on", "fire", "MAGA", " ", "DiamondandSilk", "YoungDems4Trump", " ", "din"]
(c2-31 / start-01
       :ARG0 (c2-6 / i)
       :ARG1 (c2-3 / wonder-01
                   :ARG0 c2-6
                   :ARG1 (c2-20 / thing
                                :ARG0-of (c2-13 / cause-01
                                                :ARG1 (c2-29 / accuse-01
                                                             :ARG1 (c2-2 / person
                                                                         :ARG0-of (c2-16 / have-org-role-91
                                                                                         :ARG1 (c2-10 / political-party
                                                                                                      :name (c2-32 / name
                                                                                                                   :op1 "SJW"))
                                                                                         :ARG2 (c2-22 / member)))
                                                             :ARG0-of (c2-15 / have-03
                                                                             :ARG1 (c2-21 / shadd)
                                                                             :time (c2-19 / always)
                                                                             :time (c2-27 / past
                                                                                          :op1 (c2-23 / person
                                                                                                      :ARG0-of (c2-18 / have-org-role-91
                                                                                                                      :ARG1 (c2-17 / political-party
                                                                                                                                   :name (c2-14 / name
                                                                                                                                                :op1 "GOP"))
                                                                                                                      :ARG2 (c2-0 / member)))
                                                                                          :ARG0-of (c2-4 / quit-01))
                                                                             :ARG0-of (c2-30 / fuck-01
                                                                                             :ARG1 (c2-7 / media)
                                                                                             :purpose (c2-11 / pull-on-06
                                                                                                             :ARG0 c2-23
                                                                                                             :ARG1 (c2-5 / gas)
                                                                                                             :ARG2 (c2-8 / political-movement
                                                                                                                         :name (c2-1 / name
                                                                                                                                     :op1 "MAGA")
                                                                                                                         :ARG1-of (c2-24 / mean-01
                                                                                                                                         :ARG2 (c2-25 / and
                                                                                                                                                      :op1 (c2-26 / person
                                                                                                                                                                  :name (c2-12 / name
                                                                                                                                                                               :op1 "DiamondandSilk")
                                                                                                                                                                  :op2 (c2-9 / person
                                                                                                                                                                             :name (c2-28 / name
                                                                                                                                                                                          :op1 "YoungDems4Trump"))))))))))))))

# ::snt What a shocker
# ::tokens ["What", "a", "shocker"]
# ::lemmas ["what", "a", "shocker"]
(c3-1 / thing
      :ARG0-of (c3-0 / shock-01
                     :degree (c3-2 / so)))

# ::snt FakeNews Potus said not totrust MSM another example MooreSenate
# ::tokens ["FakeNews", "Potus", "said", "not", "totrust", "MSM", "another", "example", "MooreSenate"]
# ::lemmas ["FakeNews", "Potus", "say", "not", "totrust", "MSM", "another", "example", "MooreSenate"]
(c4-9 / say-01
      :ARG0 (c4-3 / person
                  :name (c4-10 / name
                               :op1 "Potus")
                  :ARG0-of (c4-8 / fake-News))
      :ARG1 (c4-6 / trust-01
                  :ARG0 c4-3
                  :ARG1 (c4-1 / publication
                              :name (c4-4 / name
                                          :op1 "MSM")
                              :example-of (c4-5 / example
                                                :mod (c4-7 / another)))
                  :polarity -)
      :ARG2 (c4-0 / person
                  :name (c4-2 / name
                              :op1 "MooreSenate")))

# ::snt No kidding That wasnâ€™t expected People stop listening to liberal news Those people are crazy and insane with Trump jealousy
# ::tokens ["No", "kidding", "That", "was", "n\u2019t", "expected", "People", "stop", "listening", "to", "liberal", "news", "Those", "people", "are", "crazy", "and", "insane", "with", "Trump", "jealousy"]
# ::lemmas ["no", "kid", "that", "be", "not", "expect", "people", "stop", "listen", "to", "liberal", "news", "those", "people", "be", "crazy", "and", "insane", "with", "trump", "jealousy"]
(c5-10 / multi-sentence
       :snt1 (c5-9 / kid-01
                   :ARG0 (c5-13 / i)
                   :polarity -)
       :snt2 (c5-2 / expect-01
                   :ARG1 (c5-8 / stop-01
                               :ARG0 (c5-3 / person)
                               :ARG1 (c5-11 / listen-01
                                            :ARG0 c5-3
                                            :ARG1 (c5-12 / news
                                                         :ARG1-of (c5-6 / liberal-02))))
                   :polarity -)
       :snt3 (c5-7 / and
                   :op1 (c5-4 / crazy-03
                              :ARG0 (c5-14 / jealous-02
                                           :ARG0 (c5-0 / person
                                                       :name (c5-5 / name
                                                                   :op1 "Trump"))
                                           :ARG1 c5-3)
                              :ARG1 c5-3)
                   :op2 (c5-1 / insane
                              :domain c5-3)))

# ::snt That was a requirement on the resume  Number 1 discriminator on the job req
# ::tokens ["That", "was", "a", "requirement", "on", "the", "resume", " ", "Number", "1", "discriminator", "on", "the", "job", "req"]
# ::lemmas ["that", "be", "a", "requirement", "on", "the", "resume", " ", "number", "1", "discriminator", "on", "the", "job", "req"]
(c6-1 / require-01
      :ARG1 (c6-4 / that
                  :ARG1-of (c6-7 / mean-01
                                 :ARG2 (c6-8 / thing
                                             :ARG0-of (c6-2 / discriminate-02)
                                             :ARG1-of (c6-6 / require-01
                                                            :ARG2 (c6-3 / job))
                                             :ord (c6-0 / ordinal-entity
                                                        :value 1))))
      :location (c6-5 / resume))

# ::snt Liar paid well to tell the lies
# ::tokens ["Liar", "paid", "well", "to", "tell", "the", "lies"]
# ::lemmas ["liar", "pay", "well", "to", "tell", "the", "lie"]
(c7-1 / pay-01
      :ARG0 (c7-0 / person
                  :ARG0-of (c7-5 / lie-08))
      :ARG1 (c7-3 / well-09)
      :ARG3 (c7-2 / tell-01
                  :ARG0 c7-0
                  :ARG1 (c7-4 / lie-08)))

# ::snt bobsbabie1965 100PercFEDUP liberals have no morals or conscience They are the equivalent to ISIS in America
# ::tokens ["bobsbabie1965", "100PercFEDUP", "liberals", "have", "no", "morals", "or", "conscience", "They", "are", "the", "equivalent", "to", "ISIS", "in", "America"]
# ::lemmas ["bobsbabie1965", "100PercFEDUP", "liberal", "have", "no", "moral", "or", "conscience", "they", "be", "the", "equivalent", "to", "ISIS", "in", "America"]
(c8-14 / multi-sentence
       :snt1 (c8-12 / say-01
                    :ARG0 (c8-18 / i)
                    :ARG1 (c8-13 / have-03
                                 :ARG0 (c8-6 / person
                                             :ARG1-of (c8-15 / liberal-02)
                                             :mod (c8-1 / publication
                                                        :name (c8-17 / name
                                                                     :op1 "Bobsbabie")
                                                        :time (c8-5 / date-entity
                                                                    :year 1965)
                                                        :mod (c8-0 / organization
                                                                   :name (c8-7 / name
                                                                               :op1 "PercFEDUP")))
                                             :ARG1 (c8-2 / or
                                                         :op1 (c8-4 / moral-02)
                                                         :op2 (c8-8 / conscience)))
                                 :polarity -)
                    :snt2 (c8-9 / equal-01
                                :ARG1 (c8-16 / criminal-organization
                                             :name (c8-10 / name
                                                          :op1 "ISIS"))
                                :ARG2 (c8-3 / country
                                            :name (c8-11 / name
                                                         :op1 "America")))))

# ::snt I bet she knows Lisa Bloom or Gloria Allred
# ::tokens ["I", "bet", "she", "knows", "Lisa", "Bloom", "or", "Gloria", "Allred"]
# ::lemmas ["i", "bet", "she", "know", "Lisa", "Bloom", "or", "Gloria", "Allred"]
(c9-8 / bet-01
      :ARG0 (c9-7 / i)
      :ARG2 (c9-5 / know-02
                  :ARG0 (c9-4 / she)
                  :ARG1 (c9-0 / or
                              :op1 (c9-2 / person
                                         :name (c9-6 / name
                                                     :op1 "Lisa"
                                                     :op2 "Bloom"))
                              :op2 (c9-1 / person
                                         :name (c9-3 / name
                                                     :op1 "Gloria"
                                                     :op2 "Allred")))))

# ::snt Fake News Alert
# ::tokens ["Fake", "News", "Alert"]
# ::lemmas ["Fake", "News", "alert"]
(c10-0 / alert-01
       :ARG2 (c10-1 / news
                    :ARG1-of (c10-2 / fake-02)))

# ::snt You are spreading RUSSIAN Propaganda to help get a Child Molester elected to the US Senate
# ::tokens ["You", "are", "spreading", "RUSSIAN", "Propaganda", "to", "help", "get", "a", "Child", "Molester", "elected", "to", "the", "US", "Senate"]
# ::lemmas ["you", "be", "spread", "RUSSIAN", "Propaganda", "to", "help", "get", "a", "Child", "Molester", "elect", "to", "the", "US", "Senate"]
(c11-5 / spread-03
       :ARG0 (c11-11 / you)
       :ARG1 (c11-1 / propaganda
                    :mod (c11-2 / country
                                :name (c11-10 / name
                                              :op1 "RUSSI")))
       :purpose (c11-6 / help-01
                       :ARG0 c11-11
                       :ARG1 (c11-3 / elect-01
                                    :ARG1 (c11-0 / person
                                                 :ARG0-of (c11-7 / molest-01
                                                                 :ARG1 (c11-8 / child)))
                                    :ARG2 (c11-9 / government-organization
                                                 :name (c11-4 / name
                                                              :op1 "Senate")
                                                 :mod c11-2))))

# ::snt She looks very sneaky
# ::tokens ["She", "looks", "very", "sneaky"]
# ::lemmas ["she", "look", "very", "sneaky"]
(c12-2 / look-02
       :ARG0 (c12-1 / she)
       :ARG1 (c12-3 / sneaky-03
                    :ARG0 c12-1
                    :degree (c12-0 / very)))

# ::snt You just had to know this came out of the demorat rot bag whenwacko wapo is the story teller it is always horse manure
# ::tokens ["You", "just", "had", "to", "know", "this", "came", "out", "of", "the", "demorat", "rot", "bag", "whenwacko", "wapo", "is", "the", "story", "teller", "it", "is", "always", "horse", "manure"]
# ::lemmas ["you", "just", "have", "to", "know", "this", "come", "out", "of", "the", "demorat", "rot", "bag", "whenwacko", "wapo", "be", "the", "story", "teller", "it", "be", "always", "horse", "manure"]
(c13-0 / obligate-01
       :ARG1 (c13-18 / you)
       :ARG2 (c13-11 / know-01
                     :ARG0 c13-18
                     :ARG1 (c13-5 / come-03
                                  :ARG1 (c13-9 / this)
                                  :ARG2 (c13-1 / out-06
                                               :ARG1 c13-9
                                               :ARG2 (c13-17 / bag
                                                             :mod (c13-2 / rot)
                                                             :mod (c13-4 / demorat))))
                     :time (c13-6 / person
                                  :ARG0-of (c13-7 / tell-01
                                                  :ARG1 (c13-12 / story))
                                  :domain (c13-3 / person
                                                 :name (c13-16 / name
                                                               :op1 "wacko"
                                                               :op2 "wapo")))
                     :ARG1-of (c13-13 / cause-01
                                      :ARG0 (c13-14 / horse
                                                    :ARG1-of (c13-15 / manure-00)
                                                    :time (c13-10 / always))))
       :mod (c13-8 / just))

# ::snt Of course
# ::tokens ["Of", "course"]
# ::lemmas ["of", "course"]
(c14-0 / of-course)

# ::snt Ideal WaPo employee
# ::tokens ["Ideal", "WaPo", "employee"]
# ::lemmas ["Ideal", "WaPo", "employee"]
(c15-0 / person
       :ARG1-of (c15-1 / employ-01
                       :ARG0 (c15-3 / newspaper
                                    :name (c15-2 / name
                                                 :op1 "Washington"
                                                 :op2 "Post")))
       :mod (c15-4 / idiot))

# ::snt  Dirty Dimsit fits
# ::tokens [" ", "Dirty", "Dimsit", "fits"]
# ::lemmas [" ", "Dirty", "Dimsit", "fit"]
(c16-2 / fit-06
       :ARG1 (c16-3 / thing
                    :name (c16-1 / name
                                 :op1 "Dimsit")
                    :mod (c16-0 / dirty)))

# ::snt Roy Moore looks a lot like the RINOsâ€™ Waterlooand so it begins God bless Roy Moore
# ::tokens ["Roy", "Moore", "looks", "a", "lot", "like", "the", "RINOs", "\u2019", "Waterlooand", "so", "it", "begins", "God", "bless", "Roy", "Moore"]
# ::lemmas ["Roy", "Moore", "look", "a", "lot", "like", "the", "RINOs", "'", "Waterlooand", "so", "it", "begin", "God", "bless", "Roy", "Moore"]
(c17-7 / and
       :op1 (c17-10 / look-02
                    :ARG0 (c17-4 / person
                                 :name (c17-11 / name
                                               :op1 "Roy"
                                               :op2 "Moore"))
                    :ARG1 (c17-6 / waterway
                                 :name (c17-5 / name
                                              :op1 "Waterloo")
                                 :poss (c17-9 / family
                                              :name (c17-2 / name
                                                           :op1 "RINOs")))
                    :degree (c17-8 / lot))
       :op2 (c17-13 / begin-01
                    :ARG1 (c17-12 / it)
                    :ARG2 (c17-0 / bless-01
                                 :ARG0 (c17-1 / person
                                              :name (c17-3 / name
                                                           :op1 "God"))
                                 :ARG1 c17-4)))

# ::snt How is she still a reporter
# ::tokens ["How", "is", "she", "still", "a", "reporter"]
# ::lemmas ["how", "be", "she", "still", "a", "reporter"]
(c18-4 / have-manner-91
       :ARG1 (c18-0 / report-01
                    :ARG0 (c18-3 / she)
                    :mod (c18-1 / still))
       :ARG2 (c18-2 / amr-unknown))

# ::snt Right  ever heard of something called personal responsibility Your party used to value that Spare us the phony victim card OK
# ::tokens ["Right", " ", "ever", "heard", "of", "something", "called", "personal", "responsibility", "Your", "party", "used", "to", "value", "that", "Spare", "us", "the", "phony", "victim", "card", "OK"]
# ::lemmas ["right", " ", "ever", "hear", "of", "something", "call", "personal", "responsibility", "your", "party", "use", "to", "value", "that", "Spare", "us", "the", "phony", "victim", "card", "ok"]
(c19-14 / hear-01
        :ARG0 (c19-16 / you)
        :ARG1 (c19-13 / something
                      :ARG1-of (c19-4 / call-01
                                      :ARG2 (c19-2 / responsible-02
                                                   :ARG1-of (c19-5 / personal-02)))
                      :ARG1-of (c19-8 / value-02
                                      :ARG0 (c19-3 / party
                                                   :poss c19-16)
                                      :time (c19-6 / use-03)
                                      :purpose (c19-9 / Spare-01
                                                      :ARG0 c19-3
                                                      :ARG1 (c19-15 / card
                                                                    :mod (c19-10 / victim)
                                                                    :mod (c19-1 / phony))
                                                      :ARG2 (c19-11 / we)
                                                      :ARG1-of (c19-0 / okay-04))))
        :time (c19-7 / ever)
        :ARG2-of (c19-12 / right-06))

# ::snt This just gets curiouser and curiouser
# ::tokens ["This", "just", "gets", "curiouser", "and", "curiouser"]
# ::lemmas ["this", "just", "get", "curiouser", "and", "curiouser"]
(c20-1 / get-03
       :ARG1 (c20-3 / this)
       :ARG2 (c20-0 / curious-01
                    :ARG1 c20-3)
       :mod (c20-2 / just))

# ::snt OMG She bounced a check Lock her up Lock her up
# ::tokens ["OMG", "She", "bounced", "a", "check", "Lock", "her", "up", "Lock", "her", "up"]
# ::lemmas ["OMG", "she", "bounce", "a", "check", "lock", "her", "up", "Lock", "her", "up"]
(c21-5 / multi-sentence
       :snt1 (c21-0 / oh-my-god
                    :mode expressive)
       :snt2 (c21-7 / bounce-01
                    :ARG0 (c21-4 / she)
                    :ARG1 (c21-1 / check))
       :snt3 (c21-6 / lock-up-03
                    :ARG0 (c21-8 / you)
                    :ARG1 (c21-2 / she)
                    :mode imperative)
       :snt4 (c21-3 / lock-up-03
                    :ARG0 c21-8
                    :ARG1 c21-2
                    :mode imperative))

# ::snt Their mouths are moving you know what that means
# ::tokens ["Their", "mouths", "are", "moving", "you", "know", "what", "that", "means"]
# ::lemmas ["their", "mouth", "be", "move", "you", "know", "what", "that", "mean"]
(c22-3 / move-01
       :ARG1 (c22-0 / mouth
                    :part-of (c22-1 / they))
       :ARG1-of (c22-2 / know-01
                       :ARG0 (c22-6 / you)
                       :ARG1 (c22-5 / thing
                                    :ARG2-of (c22-4 / mean-01
                                                    :ARG1 c22-3))))

# ::snt Lock her up
# ::tokens ["Lock", "her", "up"]
# ::lemmas ["lock", "her", "up"]
(c23-2 / lock-up-03
       :ARG0 (c23-0 / you)
       :ARG1 (c23-1 / she)
       :mode imperative)

# ::snt Surprised Not
# ::tokens ["Surprised", "Not"]
# ::lemmas ["surprised", "not"]
(c24-0 / surprise-01
       :polarity -)

# ::snt I picked up on that too He asked me for my number girls in 79 didnt have telephones
# ::tokens ["I", "picked", "up", "on", "that", "too", "He", "asked", "me", "for", "my", "number", "girls", "in", "79", "did", "nt", "have", "telephones"]
# ::lemmas ["i", "pick", "up", "on", "that", "too", "he", "ask", "me", "for", "my", "number", "girl", "in", "79", "do", "not", "have", "telephone"]
(c25-7 / multi-sentence
       :snt1 (c25-3 / pick-up-11
                    :ARG0 (c25-10 / i)
                    :ARG1 (c25-5 / that)
                    :mod (c25-11 / too))
       :snt2 (c25-6 / ask-02
                    :ARG0 (c25-8 / he)
                    :ARG1 (c25-1 / phone-number-entity
                                 :poss (c25-0 / person
                                              :ARG0-of (c25-4 / have-rel-role-91
                                                              :ARG1 (c25-2 / i)
                                                              :ARG2 (c25-9 / girl)))
                                 :value 79
                                 :polarity -)
                    :ARG2 c25-2))

# ::snt I knew it was y I dont buy any of it
# ::tokens ["I", "knew", "it", "was", "y", "I", "do", "nt", "buy", "any", "of", "it"]
# ::lemmas ["i", "know", "it", "be", "y", "i", "do", "not", "buy", "any", "of", "it"]
(c26-2 / know-01
       :ARG0 (c26-3 / i)
       :ARG1 (c26-4 / buy-01
                    :ARG0 c26-3
                    :ARG1 (c26-1 / any
                                 :part-of (c26-0 / it))
                    :polarity -))

# ::snt No surprise
# ::tokens ["No", "surprise"]
# ::lemmas ["no", "surprise"]
(c27-0 / surprise-01
       :polarity -)

# ::snt Surprise surprise
# ::tokens ["Surprise", "surprise"]
# ::lemmas ["surprise", "surprise"]
(c28-0 / surprise-01
       :mod c28-0)

# ::snt WaPo has been caught lying frequently over the past several years
# ::tokens ["WaPo", "has", "been", "caught", "lying", "frequently", "over", "the", "past", "several", "years"]
# ::lemmas ["WaPo", "have", "be", "catch", "lie", "frequently", "over", "the", "past", "several", "years"]
(c29-0 / catch-02
       :ARG1 (c29-1 / person
                    :name (c29-7 / name
                                 :op1 "WaPo"))
       :ARG2 (c29-6 / lie-08
                    :ARG0 c29-1)
       :ARG1-of (c29-4 / frequent-02)
       :time (c29-8 / before
                    :op1 (c29-2 / now)
                    :duration (c29-5 / several
                                     :op1 (c29-3 / temporal-quantity
                                                 :unit (c29-9 / year)
                                                 :quant 1))))

# ::snt Did she dig into Obamaâ€™s life
# ::tokens ["Did", "she", "dig", "into", "Obama", "\u2019s", "life"]
# ::lemmas ["do", "she", "dig", "into", "Obama", "\u2019s", "life"]
(c30-0 / dig-01
       :ARG0 (c30-3 / she)
       :ARG1 (c30-4 / life
                    :poss (c30-1 / person
                                 :name (c30-5 / name
                                              :op1 "Obama")))
       :polarity (c30-2 / amr-unknown))

# ::snt Stephanie    the real  fake alligator   does it a gain  Anmd the damn  computer wont let me spell   ALLEGATOR      fANG
# ::tokens ["Stephanie", "   ", "the", "real", " ", "fake", "alligator", "  ", "does", "it", "a", "gain", " ", "Anmd", "the", "damn", " ", "computer", "wo", "nt", "let", "me", "spell", "  ", "ALLEGATOR", "     ", "fANG"]
# ::lemmas ["Stephanie", "   ", "the", "real", " ", "fake", "alligator", "  ", "do", "it", "a", "gain", " ", "anmd", "the", "damn", " ", "computer", "will", "not", "let", "me", "spell", "  ", "ALLEGATOR", "     ", "fang"]
(c31-12 / multi-sentence
        :snt1 (c31-11 / say-01
                      :ARG0 (c31-17 / i)
                      :ARG1 (c31-16 / gain-02
                                    :ARG1 (c31-0 / it))
                      :ARG2 (c31-4 / person
                                   :name (c31-13 / name
                                                 :op1 "Stephanie")
                                   :mod (c31-9 / alligator
                                               :ARG1-of (c31-10 / fake-02)
                                               :ARG1-of (c31-1 / real-04))))
        :snt2 (c31-14 / let-01
                      :ARG0 (c31-5 / computer
                                   :mod (c31-3 / damn))
                      :ARG1 (c31-8 / spell-01
                                   :ARG0 (c31-7 / i)
                                   :ARG1 (c31-2 / person
                                                :ARG0-of (c31-15 / have-org-role-91
                                                                 :ARG2 (c31-6 / attorney))))
                      :polarity -))

# ::snt Admits he dated teenage girls 1416 as an adult30not acceptable
# ::tokens ["Admits", "he", "dated", "teenage", "girls", "1416", "as", "an", "adult30not", "acceptable"]
# ::lemmas ["admit", "he", "date", "teenage", "girl", "1416", "as", "an", "adult30not", "acceptable"]
(c32-4 / admit-01
       :ARG0 (c32-5 / he)
       :ARG1 (c32-0 / date-02
                    :ARG0 c32-5
                    :ARG1 (c32-6 / girl
                                 :mod (c32-3 / teenage)
                                 :age (c32-7 / temporal-quantity
                                             :unit (c32-9 / year)
                                             :quant 1416))
                    :prep-as (c32-2 / adult)
                    :ARG1-of (c32-8 / accept-01
                                    :ARG1-of (c32-1 / possible-01)
                                    :polarity -)))

# ::snt Out of his customary behavior hes guiltygame over
# ::tokens ["Out", "of", "his", "customary", "behavior", "he", "s", "guiltygame", "over"]
# ::lemmas ["out", "of", "his", "customary", "behavior", "he", "s", "guiltygame", "over"]
(c33-3 / guilty-01
       :ARG1 (c33-2 / he)
       :ARG1-of (c33-0 / cause-01
                       :ARG0 (c33-4 / behave-01
                                    :ARG0 c33-2
                                    :ARG1-of (c33-1 / customary-02
                                                    :ARG2 c33-2))))

# ::snt Yeahas a 32 year old he dated 16 year oldsSean Hannitys interview should have effectively ENDED Roy Moores Senate run
# ::tokens ["Yeahas", "a", "32", "year", "old", "he", "dated", "16", "year", "oldsSean", "Hannitys", "interview", "should", "have", "effectively", "ENDED", "Roy", "Moores", "Senate", "run"]
# ::lemmas ["Yeahas", "a", "32", "year", "old", "he", "date", "16", "year", "oldssean", "Hannitys", "interview", "should", "have", "effectively", "ENDED", "Roy", "Moores", "Senate", "run"]
(c34-15 / multi-sentence
        :snt1 (c34-8 / cause-01
                     :ARG0 (c34-18 / age-01
                                   :ARG1 (c34-11 / he)
                                   :ARG2 (c34-13 / temporal-quantity
                                                 :unit (c34-20 / year)
                                                 :quant 32))
                     :ARG1 (c34-17 / date-02
                                   :ARG0 c34-11
                                   :ARG1 (c34-2 / person
                                                :age (c34-5 / temporal-quantity
                                                            :unit (c34-7 / year)
                                                            :quant 16))))
        :snt2 (c34-0 / recommend-01
                     :ARG1 (c34-3 / end-01
                                  :ARG1 (c34-4 / interview-01
                                               :ARG0 (c34-6 / person
                                                            :name (c34-12 / name
                                                                          :op1 "Sean"
                                                                          :op2 "Hannity")))
                                  :ARG2 (c34-10 / run-02
                                                :ARG0 (c34-16 / person
                                                              :name (c34-9 / name
                                                                           :op1 "Roy"
                                                                           :op2 "Moores"))
                                                :ARG1 (c34-19 / government-organization
                                                              :name (c34-1 / name
                                                                           :op1 "Senate")))
                                  :ARG1-of (c34-14 / effective-04))))

# ::snt Yeahumwatch the Hannity interview earlier todaydated 1416 year olds in his 30sand multiple witnesses who were willing to speak on the record
# ::tokens ["Yeahumwatch", "the", "Hannity", "interview", "earlier", "todaydated", "1416", "year", "olds", "in", "his", "30sand", "multiple", "witnesses", "who", "were", "willing", "to", "speak", "on", "the", "record"]
# ::lemmas ["Yeahumwatch", "the", "Hannity", "interview", "earlier", "todaydated", "1416", "year", "olds", "in", "his", "30sand", "multiple", "witness", "who", "be", "willing", "to", "speak", "on", "the", "record"]
(c35-8 / watch-01
       :ARG0 (c35-16 / you)
       :ARG1 (c35-14 / interview-01
                     :ARG0 (c35-5 / person
                                  :name (c35-13 / name
                                                :op1 "Hannity"))
                     :ARG1 (c35-1 / person
                                  :age (c35-7 / temporal-quantity
                                              :unit (c35-3 / year)
                                              :quant 1416)
                                  :age (c35-15 / temporal-quantity
                                               :unit c35-3
                                               :quant 30))
                     :ARG0-of (c35-4 / witness-01)
                     :quant (c35-12 / multiple)
                     :ARG0-of (c35-6 / will-02
                                     :ARG1 (c35-11 / speak-01
                                                   :ARG0 c35-1
                                                   :ARG1 (c35-2 / record-01))))
       :time (c35-0 / before)
       :time (c35-10 / today)
       :mod (c35-9 / yeah))

# ::snt Boy Iâ€™m shocked to hear that
# ::tokens ["Boy", "I", "\u2019m", "shocked", "to", "hear", "that"]
# ::lemmas ["boy", "i", "be", "shocked", "to", "hear", "that"]
(c36-1 / shock-01
       :ARG0 (c36-2 / hear-01
                    :ARG1 (c36-0 / that))
       :ARG1 (c36-3 / i)
       :mod (c36-4 / boy
                   :mode expressive))

# ::snt The WaPo reporter also does not have the best track record just based on who she works forRoy Moores accusers therefore should speak for themselves
# ::tokens ["The", "WaPo", "reporter", "also", "does", "not", "have", "the", "best", "track", "record", "just", "based", "on", "who", "she", "works", "forRoy", "Moores", "accusers", "therefore", "should", "speak", "for", "themselves"]
# ::lemmas ["the", "WaPo", "reporter", "also", "do", "not", "have", "the", "good", "track", "record", "just", "base", "on", "who", "she", "work", "forroy", "Moores", "accuser", "therefore", "should", "speak", "for", "themselves"]
(c37-9 / have-03
       :ARG0 (c37-2 / person
                    :ARG0-of (c37-7 / have-org-role-91
                                    :ARG1 (c37-10 / newspaper
                                                  :name (c37-6 / name
                                                               :op1 "WaPo"))
                                    :ARG3 (c37-0 / report-01)))
       :ARG1 (c37-8 / record
                    :mod (c37-13 / track)
                    :ARG1-of (c37-11 / have-degree-91
                                     :ARG2 (c37-21 / good-02
                                                   :ARG1 c37-8)
                                     :ARG3 (c37-15 / most)))
       :mod (c37-19 / also)
       :ARG1-of (c37-16 / base-02
                        :ARG2 (c37-3 / work-01
                                     :ARG0 c37-2
                                     :ARG2 (c37-4 / person
                                                  :ARG0-of (c37-12 / accuse-01
                                                                   :ARG1 (c37-17 / person
                                                                                 :name (c37-1 / name
                                                                                              :op1 "Roy"
                                                                                              :op2 "Moores")))))
                        :mod (c37-22 / just))
       :ARG0-of (c37-5 / cause-01
                       :ARG1 (c37-14 / recommend-01
                                     :ARG1 (c37-20 / speak-01
                                                   :ARG0 c37-2
                                                   :mod (c37-18 / by-oneself))))
       :polarity -)

# ::snt She looks like a lying bitch
# ::tokens ["She", "looks", "like", "a", "lying", "bitch"]
# ::lemmas ["she", "look", "like", "a", "lie", "bitch"]
(c38-3 / look-02
       :ARG0 (c38-2 / she)
       :ARG1 (c38-1 / bitch
                    :ARG0-of (c38-0 / lie-08)))

# ::snt leftReachesNewLow
# ::tokens ["leftReachesNewLow"]
# ::lemmas ["leftreachesnewlow"]
(c39-0 / person
       :name (c39-1 / name
                    :op1 "leftReachesNewLow"))

# ::snt Just another shining example of the Fake It to Make it group diditreallyhappen
# ::tokens ["Just", "another", "shining", "example", "of", "the", "Fake", "It", "to", "Make", "it", "group", "diditreallyhappen"]
# ::lemmas ["just", "another", "shine", "example", "of", "the", "fake", "it", "to", "make", "it", "group", "diditreallyhappen"]
(c40-0 / thing
       :mod (c40-1 / another)
       :mod (c40-8 / just)
       :ARG0-of (c40-3 / shine-01)
       :example-of (c40-2 / fake-02
                          :ARG1 (c40-7 / it)
                          :purpose (c40-4 / make-02
                                          :ARG1 (c40-5 / happy-01
                                                       :ARG1 (c40-6 / group
                                                                    :domain c40-7)))))

# ::snt FOLLOW HER MONEY
# ::tokens ["FOLLOW", "HER", "MONEY"]
# ::lemmas ["FOLLOW", "her", "money"]
(c41-1 / follow-02
       :ARG0 (c41-3 / you)
       :ARG1 (c41-0 / money
                    :poss (c41-2 / she))
       :mode imperative)

# ::snt POS  SHE SHOULD BE BRAINWASHED
# ::tokens ["POS", " ", "SHE", "SHOULD", "BE", "BRAINWASHED"]
# ::lemmas ["POS", " ", "she", "should", "be", "brainwashed"]
(c42-1 / recommend-01
       :ARG1 (c42-0 / brainwash-01
                    :ARG1 (c42-2 / she))
       :ARG1-of (c42-3 / shit-01))

# ::snt What the hell abolish them all make the democrats happy
# ::tokens ["What", "the", "hell", "abolish", "them", "all", "make", "the", "democrats", "happy"]
# ::lemmas ["what", "the", "hell", "abolish", "them", "all", "make", "the", "democrats", "happy"]
(c43-7 / make-02
       :ARG0 (c43-6 / abolish-01
                    :ARG1 (c43-4 / they
                                 :mod (c43-3 / all)))
       :ARG1 (c43-8 / happy-01
                    :ARG1 (c43-1 / person
                                 :ARG0-of (c43-2 / have-org-role-91
                                                 :ARG1 (c43-0 / political-party
                                                              :name (c43-9 / name
                                                                           :op1 "Democrat")))))
       :mod (c43-5 / hell
                   :mode expressive))

# ::snt â†’â†’â†’ httpsselenadreamyblogspotcouk201711ihavebeenslutshamedihavebeenhtml â€¦
# ::tokens ["\u2192\u2192\u2192", "httpsselenadreamyblogspotcouk201711ihavebeenslutshamedihavebeenhtml", "\u2026"]
# ::lemmas ["\u2192\u2192\u2192", "httpsselenadreamyblogspotcouk201711ihavebeenslutshamedihavebeenhtml", "\u2026"]
(c44-0 / and
       :op2 (c44-1 / url-entity
                   :value "https://www.selenadreamyblogspotcouk 201711ihavebeenslutshamedihavebeenhtml"))

# ::snt NOPE  You posted a FakeNews website  Try again LIGHTWEIGHT
# ::tokens ["NOPE", " ", "You", "posted", "a", "FakeNews", "website", " ", "Try", "again", "LIGHTWEIGHT"]
# ::lemmas ["NOPE", " ", "you", "post", "a", "FakeNews", "website", " ", "try", "again", "LIGHTWEIGHT"]
(c45-6 / multi-sentence
       :snt1 (c45-5 / hope-01)
       :snt2 (c45-1 / post-01
                    :ARG0 (c45-9 / you)
                    :ARG1 (c45-3 / website
                                 :mod (c45-0 / publication
                                             :name (c45-8 / name
                                                          :op1 " FakeNews"))))
       :snt3 (c45-2 / try-01
                    :ARG0 c45-9
                    :mode imperative)
       :manner (c45-7 / lighthearted)
       :mod (c45-4 / again))

# ::snt Ahbad check once Rest traffic issues Dont cry wolf It ruins the case
# ::tokens ["Ahbad", "check", "once", "Rest", "traffic", "issues", "Do", "nt", "cry", "wolf", "It", "ruins", "the", "case"]
# ::lemmas ["Ahbad", "check", "once", "rest", "traffic", "issue", "do", "not", "cry", "wolf", "it", "ruin", "the", "case"]
(c46-9 / multi-sentence
       :snt1 (c46-3 / check-01
                    :time (c46-10 / issue-02
                                  :ARG0 (c46-0 / rest-01)
                                  :ARG1 (c46-4 / traffic))
                    :mod (c46-6 / ah
                                :mode expressive))
       :snt2 (c46-8 / cry-01
                    :ARG0 (c46-11 / you)
                    :ARG1 (c46-5 / wolf)
                    :polarity -
                    :mode imperative)
       :snt3 (c46-7 / ruin-01
                    :ARG0 (c46-1 / it)
                    :ARG1 (c46-2 / case-03)))

# ::snt Ill make up something for 500
# ::tokens ["Ill", "make", "up", "something", "for", "500"]
# ::lemmas ["Ill", "make", "up", "something", "for", "500"]
(c47-3 / make-up-10
       :ARG0 (c47-4 / i)
       :ARG1 (c47-2 / something
                    :purpose (c47-0 / monetary-quantity
                                    :unit (c47-1 / dollar)
                                    :quant 500)))

# ::snt grammy620 seanhannity HorseShort StockMonsterUSA
# ::tokens ["grammy620", "seanhannity", "HorseShort", "StockMonsterUSA"]
# ::lemmas ["grammy620", "seanhannity", "HorseShort", "StockMonsterUSA"]
(c48-7 / and
       :op1 (c48-4 / product
                   :name (c48-8 / name
                                :op1 "grammy620"))
       :op2 (c48-1 / product
                   :name (c48-5 / name
                                :op1 "Seanhannity"
                                :op2 "Horse"))
       :op3 (c48-0 / product
                   :name (c48-2 / name
                                :op1 "Short"
                                :op2 "Stock"
                                :op3 "Monster")
                   :mod (c48-6 / country
                               :name (c48-3 / name
                                            :op1 "USA"))))

# ::snt VERY true There is a special place in hell for predators like Roy Moore I hope he gets jailed
# ::tokens ["VERY", "true", "There", "is", "a", "special", "place", "in", "hell", "for", "predators", "like", "Roy", "Moore", "I", "hope", "he", "gets", "jailed"]
# ::lemmas ["very", "true", "there", "be", "a", "special", "place", "in", "hell", "for", "predator", "like", "Roy", "Moore", "i", "hope", "he", "get", "jail"]
(c49-7 / multi-sentence
       :snt1 (c49-5 / true-01
                    :mod (c49-2 / every))
       :snt2 (c49-3 / place
                    :ARG1-of (c49-6 / special-02)
                    :location (c49-8 / hell)
                    :beneficiary (c49-1 / predator
                                        :example (c49-0 / person
                                                        :name (c49-9 / name
                                                                     :op1 "Roy"
                                                                     :op2 "Moore")))
                    :ARG1-of (c49-4 / hope-01
                                    :ARG0 (c49-10 / i)
                                    :ARG1 (c49-11 / jail-01
                                                  :ARG1 c49-0))))

# ::snt Wow using a source that is rated as Far Right Propaganda Not looking too smart there Tania But if being pulled by the nose is your thinghave fun
# ::tokens ["Wow", "using", "a", "source", "that", "is", "rated", "as", "Far", "Right", "Propaganda", "Not", "looking", "too", "smart", "there", "Tania", "But", "if", "being", "pulled", "by", "the", "nose", "is", "your", "thinghave", "fun"]
# ::lemmas ["wow", "use", "a", "source", "that", "be", "rate", "as", "Far", "Right", "Propaganda", "not", "look", "too", "smart", "there", "Tania", "but", "if", "be", "pull", "by", "the", "nose", "be", "your", "thinghave", "fun"]
(c50-8 / contrast-01
       :ARG1 (c50-3 / use-01
                    :ARG1 (c50-18 / source
                                  :ARG1-of (c50-0 / rate-01
                                                  :ARG2 (c50-2 / propaganda
                                                               :ARG1-of (c50-10 / right-08
                                                                                :degree (c50-17 / far)))))
                    :mod (c50-4 / wow
                                :mode expressive))
       :ARG2 (c50-13 / say-01
                     :ARG0 (c50-5 / i)
                     :ARG1 (c50-14 / look-02
                                   :ARG0 (c50-7 / person
                                                :name (c50-19 / name
                                                              :op1 "Tania"))
                                   :ARG1 (c50-16 / smart-06
                                                 :ARG1 c50-7
                                                 :ARG2-of (c50-11 / have-degree-91
                                                                  :ARG1 c50-7
                                                                  :ARG3 (c50-12 / too)))
                                   :location (c50-6 / there)
                                   :polarity -)
                     :ARG2 c50-7)
       :ARG2 (c50-9 / have-condition-91
                    :ARG1 (c50-1 / fun-01
                                 :ARG0 (c50-20 / you)
                                 :ARG1 (c50-15 / pull-01
                                               :ARG2-of c50-1))))
