# ::snt A shame this isnt true
# ::tokens ["A", "shame", "this", "is", "nt", "true"]
# ::lemmas ["a", "shame", "this", "be", "not", "true"]
(c1-2 / shame-02
      :ARG0 (c1-1 / true-01
                  :ARG1 (c1-0 / this)
                  :polarity -))

# ::snt kateonwheels  my wife  has to start dialysis almost at once
# ::tokens ["kateonwheels", " ", "my", "wife", " ", "has", "to", "start", "dialysis", "almost", "at", "once"]
# ::lemmas ["kateonwheels", " ", "my", "wife", " ", "have", "to", "start", "dialysis", "almost", "at", "once"]
(c2-7 / say-01
      :ARG0 (c2-10 / i)
      :ARG1 (c2-0 / obligate-01
                  :ARG1 (c2-2 / person
                              :ARG0-of (c2-8 / have-rel-role-91
                                             :ARG1 c2-10
                                             :ARG2 (c2-4 / wife)))
                  :ARG2 (c2-5 / start-01
                              :ARG0 c2-2
                              :ARG1 (c2-1 / dialysis)
                              :time (c2-6 / at-once-02
                                          :mod (c2-3 / almost))))
      :ARG2 c2-2
      :name (c2-9 / name
                  :op1 "kateonwheels"))

# ::snt Hows Gary btw
# ::tokens ["How", "s", "Gary", "btw"]
# ::lemmas ["how", "s", "Gary", "btw"]
(c3-2 / say-01
      :ARG1 (c3-1 / way)
      :ARG2 (c3-0 / person
                  :name (c3-3 / name
                              :op1 "Gary"))
      :mod (c3-4 / by-the-way))

# ::snt despite her birthdisabilities no indication things were this bad until 2 days ago cc kateonwheels
# ::tokens ["despite", "her", "birthdisabilities", "no", "indication", "things", "were", "this", "bad", "until", "2", "days", "ago", "cc", "kateonwheels"]
# ::lemmas ["despite", "her", "birthdisabilitie", "no", "indication", "thing", "be", "this", "bad", "until", "2", "days", "ago", "cc", "kateonwheels"]
(c4-11 / say-01
       :ARG0 (c4-13 / i)
       :ARG1 (c4-0 / indicate-01
                   :ARG1 (c4-14 / bad-07
                                :ARG1 (c4-7 / thing)
                                :degree (c4-3 / this))
                   :time (c4-4 / until
                               :op1 (c4-1 / before
                                          :op1 (c4-12 / now)
                                          :quant (c4-10 / temporal-quantity
                                                        :unit (c4-2 / day)
                                                        :quant 2)))
                   :concession (c4-9 / disability
                                     :poss (c4-8 / she))
                   :polarity -)
       :ARG2 (c4-5 / person
                   :name (c4-6 / name
                               :op1 "cc"
                               :op2 "kateonwheels")))

# ::snt Of course you can John
# ::tokens ["Of", "course", "you", "can", "John"]
# ::lemmas ["of", "course", "you", "can", "John"]
(c5-4 / say-01
      :ARG0 (c5-6 / i)
      :ARG1 (c5-2 / possible-01
                  :ARG1 (c5-3 / event
                              :mod (c5-1 / person
                                         :name (c5-5 / name
                                                     :op1 "John")))
                  :mod (c5-0 / of-course))
      :ARG2 c5-1)

# ::snt Hi Janis  Long time May I give you some personal news
# ::tokens ["Hi", "Janis", " ", "Long", "time", "May", "I", "give", "you", "some", "personal", "news"]
# ::lemmas ["hi", "Janis", " ", "long", "time", "may", "i", "give", "you", "some", "personal", "news"]
(c6-8 / multi-sentence
      :snt1 (c6-6 / say-01
                  :ARG1 (c6-7 / hi)
                  :ARG2 (c6-1 / person
                              :name (c6-11 / name
                                           :op1 "Janis")))
      :snt2 (c6-4 / wish-01
                  :ARG1 (c6-9 / give-01
                              :ARG0 (c6-12 / i)
                              :ARG1 (c6-2 / news
                                          :ARG1-of (c6-0 / personal-02)
                                          :quant (c6-5 / some))
                              :ARG2 c6-1)
                  :time (c6-3 / time
                              :ARG1-of (c6-10 / long-03))))

# ::snt Hi John I think its a spoof
# ::tokens ["Hi", "John", "I", "think", "its", "a", "spoof"]
# ::lemmas ["hi", "John", "i", "think", "its", "a", "spoof"]
(c7-5 / say-01
      :ARG0 (c7-8 / i)
      :ARG1 (c7-4 / and
                  :op1 (c7-6 / hi)
                  :op2 (c7-2 / think-01
                             :ARG0 c7-8
                             :ARG1 (c7-3 / spoof
                                         :domain (c7-0 / it))))
      :ARG2 (c7-1 / person
                  :name (c7-7 / name
                              :op1 "John")))

# ::snt How dumb would you have to be to believe this
# ::tokens ["How", "dumb", "would", "you", "have", "to", "be", "to", "believe", "this"]
# ::lemmas ["how", "dumb", "would", "you", "have", "to", "be", "to", "believe", "this"]
(c8-3 / infer-01
      :ARG1 (c8-0 / dumb
                  :degree (c8-2 / amr-unknown)
                  :domain (c8-5 / you)
                  :condition (c8-4 / believe-01
                                   :ARG0 c8-5
                                   :ARG1 (c8-1 / this))))

# ::snt Bwahahaha this is such bullshit its THAT funny
# ::tokens ["Bwahahaha", "this", "is", "such", "bullshit", "its", "THAT", "funny"]
# ::lemmas ["Bwahahaha", "this", "be", "such", "bullshit", "its", "that", "funny"]
(c9-2 / and
      :op1 (c9-6 / bullshit-01
                 :ARG1 (c9-1 / this)
                 :degree (c9-4 / such))
      :op2 (c9-3 / funny-02
                 :ARG1 c9-1
                 :degree (c9-0 / that))
      :mod (c9-5 / haha
                 :mode expressive))

# ::snt ya not sure if its faked
# ::tokens ["ya", "not", "sure", "if", "its", "faked"]
# ::lemmas ["ya", "not", "sure", "if", "its", "fake"]
(c10-2 / sure-02
       :ARG0 (c10-3 / you)
       :ARG1 (c10-1 / fake-02
                    :ARG1 (c10-0 / it))
       :polarity -)

# ::snt I saw this yesterday but have not found anything else on it Its not too far fetched to believe its something theyd do
# ::tokens ["I", "saw", "this", "yesterday", "but", "have", "not", "found", "anything", "else", "on", "it", "Its", "not", "too", "far", "fetched", "to", "believe", "its", "something", "they", "d", "do"]
# ::lemmas ["i", "see", "this", "yesterday", "but", "have", "not", "find", "anything", "else", "on", "it", "its", "not", "too", "far", "fetch", "to", "believe", "its", "something", "they", "d", "do"]
(c11-11 / multi-sentence
        :snt1 (c11-4 / contrast-01
                     :ARG1 (c11-10 / see-01
                                   :ARG0 (c11-14 / i)
                                   :ARG1 (c11-6 / this)
                                   :time (c11-16 / yesterday))
                     :ARG2 (c11-9 / find-01
                                  :ARG0 c11-14
                                  :ARG1 (c11-7 / anything
                                               :mod (c11-5 / else)
                                               :location c11-6)
                                  :polarity -))
        :snt2 (c11-2 / fetched-02
                     :ARG1 (c11-1 / it)
                     :ARG2-of (c11-12 / have-degree-91
                                      :ARG1 c11-1
                                      :ARG3 (c11-15 / too
                                                    :mod (c11-13 / far))
                                      :ARG6 (c11-0 / believe-01
                                                   :ARG0 c11-14
                                                   :ARG1 (c11-3 / do-02
                                                                :ARG0 (c11-8 / they)
                                                                :ARG1 c11-1))
                                      :polarity -)))

# ::snt httpwwwsnopescomliberalcelebritiesassassinationplot …
# ::tokens ["httpwwwsnopescomliberalcelebritiesassassinationplot", "\u2026"]
# ::lemmas ["httpwwwsnopescomliberalcelebritiesassassinationplot", "\u2026"]
(c12-0 / plot
       :topic (c12-3 / assassinate-01
                     :ARG1 (c12-2 / celebrity
                                  :ARG1-of (c12-4 / liberal-02)))
       :medium (c12-1 / url-entity
                      :value "snopescomliberalcelebritiesassassinationplot"))

# ::snt Told you liberals are fascist
# ::tokens ["Told", "you", "liberals", "are", "fascist"]
# ::lemmas ["tell", "you", "liberal", "be", "fascist"]
(c13-2 / say-01
       :ARG1 (c13-0 / political-movement
                    :name (c13-4 / name
                                 :op1 "Fascism")
                    :domain (c13-5 / you
                                   :ARG1-of (c13-3 / liberal-02))
                    :ARG1-of (c13-1 / tell-01))
       :ARG2 c13-5)

# ::snt Hey Egg httpwwwsnopescomliberalcelebritiesassassinationplot …
# ::tokens ["Hey", "Egg", "httpwwwsnopescomliberalcelebritiesassassinationplot", "\u2026"]
# ::lemmas ["hey", "Egg", "httpwwwsnopescomliberalcelebritiesassassinationplot", "\u2026"]
(c14-2 / say-01
       :ARG1 (c14-3 / hey)
       :ARG2 (c14-0 / person
                    :name (c14-4 / name
                                 :op1 "Egg")
                    :mod (c14-1 / url-entity
                                :value "httpwwwsnopescomliberalcelebritiesassassinationplot")))
