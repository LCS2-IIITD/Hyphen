# ::snt We the people know too
# ::tokens ["We", "the", "people", "know", "too"]
# ::lemmas ["we", "the", "people", "know", "too"]
(c1-2 / know-01
      :ARG0 (c1-3 / we
                  :mod (c1-0 / person))
      :mod (c1-1 / too))

# ::snt Brazile is worthless but hey what about Hillarys book  You know Hillarys Pocket Guide on How to Murder and Get Away with it
# ::tokens ["Brazile", "is", "worthless", "but", "hey", "what", "about", "Hillarys", "book", " ", "You", "know", "Hillarys", "Pocket", "Guide", "on", "How", "to", "Murder", "and", "Get", "Away", "with", "it"]
# ::lemmas ["Brazile", "be", "worthless", "but", "hey", "what", "about", "Hillarys", "book", " ", "you", "know", "Hillarys", "Pocket", "Guide", "on", "how", "to", "murder", "and", "get", "away", "with", "it"]
(c2-1 / contrast-01
      :ARG1 (c2-3 / worthless
                  :domain (c2-7 / brazile))
      :ARG2 (c2-4 / know-01
                  :ARG0 (c2-8 / you)
                  :ARG1 (c2-0 / book
                              :name (c2-6 / name
                                          :op1 "Pocket"
                                          :op2 "Guide"
                                          :op3 "on"
                                          :op4 "How"
                                          :op5 "To"
                                          :op6 "Murder"
                                          :op7 "and"
                                          :op8 "Get"
                                          :op9 "away"
                                          :op10 "with"
                                          :op11 "It")
                              :poss (c2-2 / person
                                          :name c2-6
                                          :op1 "Hillary")))
      :mod (c2-5 / hey))

# ::snt I was just wondering we I havent seen her around lately hmmm
# ::tokens ["I", "was", "just", "wondering", "we", "I", "have", "nt", "seen", "her", "around", "lately", "hmmm"]
# ::lemmas ["i", "be", "just", "wonder", "we", "i", "have", "not", "see", "her", "around", "lately", "hmmm"]
(c3-0 / wonder-01
      :ARG0 (c3-6 / i)
      :ARG1 (c3-3 / see-01
                  :ARG0 c3-6
                  :ARG1 (c3-1 / she)
                  :location (c3-2 / around)
                  :time (c3-4 / lately)
                  :polarity -)
      :mod (c3-7 / just)
      :mod (c3-5 / hmm
                 :mode expressive))

# ::snt I dont think shes out of the woods
# ::tokens ["I", "do", "nt", "think", "she", "s", "out", "of", "the", "woods"]
# ::lemmas ["i", "do", "not", "think", "she", "s", "out", "of", "the", "wood"]
(c4-1 / think-01
      :ARG0 (c4-4 / i)
      :ARG1 (c4-0 / out-06
                  :ARG1 (c4-3 / she)
                  :ARG2 (c4-2 / woods))
      :polarity -)

# ::snt She was haunted by burying a child
# ::tokens ["She", "was", "haunted", "by", "burying", "a", "child"]
# ::lemmas ["she", "be", "haunt", "by", "bury", "a", "child"]
(c5-3 / haunt-01
      :ARG0 (c5-1 / bury-01
                  :ARG0 (c5-2 / she)
                  :ARG1 (c5-0 / child))
      :ARG1 c5-2)

# ::snt Funny no ones sees or hears from her since shortly after her book and mouthing off on tvguess shes in deep hiding
# ::tokens ["Funny", "no", "ones", "sees", "or", "hears", "from", "her", "since", "shortly", "after", "her", "book", "and", "mouthing", "off", "on", "tvguess", "she", "s", "in", "deep", "hiding"]
# ::lemmas ["funny", "no", "one", "see", "or", "hear", "from", "her", "since", "shortly", "after", "her", "book", "and", "mouth", "off", "on", "tvguess", "she", "s", "in", "deep", "hiding"]
(c6-8 / funny-02
      :ARG1 (c6-0 / or
                  :op1 (c6-9 / see-01
                             :ARG0 (c6-13 / no-one)
                             :ARG1 (c6-6 / she))
                  :op2 (c6-10 / hear-01
                              :ARG0 c6-13
                              :ARG2 c6-6)
                  :time (c6-5 / since
                              :op1 (c6-7 / after
                                         :op1 (c6-14 / book
                                                     :poss c6-6)
                                         :ARG1-of (c6-1 / short-07)))
                  :op2 (c6-11 / mouthing-off-03
                              :ARG0 c6-13
                              :medium (c6-4 / television)
                              :ARG0-of (c6-12 / guess-01
                                              :ARG1 (c6-3 / hide-01
                                                          :ARG0 c6-6
                                                          :ARG1-of (c6-2 / deep-02))))))

# ::snt She better keep looking over her shoulder as well
# ::tokens ["She", "better", "keep", "looking", "over", "her", "shoulder", "as", "well"]
# ::lemmas ["she", "better", "keep", "look", "over", "her", "shoulder", "as", "well"]
(c7-1 / recommend-01
      :ARG1 (c7-5 / keep-02
                  :ARG0 (c7-4 / she
                              :part (c7-2 / shoulder))
                  :ARG1 (c7-6 / look-01
                              :ARG0 c7-4
                              :ARG1 c7-2
                              :direction (c7-0 / over)
                              :mod (c7-3 / as-well))))

# ::snt WHY did she scared  Seth Rich was murdered by DNC
# ::tokens ["WHY", "did", "she", "scared", " ", "Seth", "Rich", "was", "murdered", "by", "DNC"]
# ::lemmas ["why", "do", "she", "scare", " ", "Seth", "Rich", "be", "murder", "by", "DNC"]
(c8-6 / scare-01
      :ARG0 (c8-7 / murder-01
                  :ARG0 (c8-0 / organization
                              :name (c8-8 / name
                                          :op1 "DNC"))
                  :ARG1 (c8-1 / person
                              :name (c8-2 / name
                                          :op1 "Seth"
                                          :op2 "Rich")))
      :ARG1 (c8-4 / she)
      :ARG1-of (c8-3 / cause-01
                     :ARG0 (c8-5 / amr-unknown)))

# ::snt Who the hell is she to get updates
# ::tokens ["Who", "the", "hell", "is", "she", "to", "get", "updates"]
# ::lemmas ["who", "the", "hell", "be", "she", "to", "get", "update"]
(c9-4 / get-01
      :ARG0 (c9-2 / she)
      :ARG1 (c9-0 / update-02)
      :mod (c9-1 / amr-unknown
                 :mod (c9-3 / hell
                            :mode expressive)))

# ::snt  Podesta Jennifer Mook Clinton  Seth  realDonaldTrump POTUS
# ::tokens [" ", "Podesta", "Jennifer", "Mook", "Clinton", " ", "Seth", " ", "realDonaldTrump", "POTUS"]
# ::lemmas [" ", "Podesta", "Jennifer", "Mook", "Clinton", " ", "Seth", " ", "realdonaldtrump", "potu"]
(c10-7 / and
       :op1 (c10-4 / person
                   :name (c10-10 / name
                                 :op1 "Jenna"
                                 :op2 "Mook"
                                 :op3 "Clinton"))
       :op2 (c10-1 / person
                   :name (c10-5 / name
                                :op1 "Seth"))
       :op3 (c10-0 / person
                   :ARG0-of (c10-8 / have-org-role-91
                                   :ARG1 (c10-6 / country
                                                :name (c10-3 / name
                                                             :op1 "United"
                                                             :op2 "States"))
                                   :ARG2 (c10-9 / president))
                   :ARG1-of (c10-2 / real-04)))

# ::snt I dont think Donna is married but i hope she doesnt live alone She should rent a couple rooms to some big strong security guards
# ::tokens ["I", "do", "nt", "think", "Donna", "is", "married", "but", "i", "hope", "she", "does", "nt", "live", "alone", "She", "should", "rent", "a", "couple", "rooms", "to", "some", "big", "strong", "security", "guards"]
# ::lemmas ["i", "do", "not", "think", "Donna", "be", "married", "but", "i", "hope", "she", "do", "not", "live", "alone", "she", "should", "rent", "a", "couple", "room", "to", "some", "big", "strong", "security", "guard"]
(c11-13 / multi-sentence
        :snt1 (c11-5 / contrast-01
                     :ARG1 (c11-10 / think-01
                                   :ARG0 (c11-3 / i)
                                   :ARG1 (c11-1 / marry-01
                                                :ARG1 (c11-2 / person
                                                             :name (c11-8 / name
                                                                          :op1 "Donna")))
                                   :polarity -)
                     :ARG2 (c11-7 / hope-01
                                  :ARG0 (c11-9 / i)
                                  :ARG1 (c11-14 / live-01
                                                :ARG0 c11-2
                                                :manner (c11-17 / alone)
                                                :polarity -)))
        :snt2 (c11-0 / recommend-01
                     :ARG1 (c11-6 / rent-01
                                  :ARG0 (c11-4 / person
                                               :ARG0-of (c11-20 / guard-01
                                                                :ARG1 (c11-18 / security))
                                               :mod (c11-15 / big)
                                               :ARG1-of (c11-11 / strong-02)
                                               :mod (c11-16 / some))
                                  :ARG1 (c11-12 / room
                                                :quant (c11-19 / couple))
                                  :ARG2 c11-4)))

# ::snt Do any dare
# ::tokens ["Do", "any", "dare"]
# ::lemmas ["do", "any", "dare"]
(c12-0 / dare-01
       :ARG0 (c12-2 / you)
       :mod (c12-1 / any)
       :mode imperative)

# ::snt Look take a dive in the DW find the AM there you will find answers Until you are brave enough to do so you will continue to spin your wheels I applaud and support your efforts but you need to go where they hang Find the AM have some Bitcoin and you find the hitters
# ::tokens ["Look", "take", "a", "dive", "in", "the", "DW", "find", "the", "AM", "there", "you", "will", "find", "answers", "Until", "you", "are", "brave", "enough", "to", "do", "so", "you", "will", "continue", "to", "spin", "your", "wheels", "I", "applaud", "and", "support", "your", "efforts", "but", "you", "need", "to", "go", "where", "they", "hang", "Find", "the", "AM", "have", "some", "Bitcoin", "and", "you", "find", "the", "hitters"]
# ::lemmas ["look", "take", "a", "dive", "in", "the", "DW", "find", "the", "am", "there", "you", "will", "find", "answer", "until", "you", "be", "brave", "enough", "to", "do", "so", "you", "will", "continue", "to", "spin", "your", "wheel", "i", "applaud", "and", "support", "your", "effort", "but", "you", "need", "to", "go", "where", "they", "hang", "find", "the", "am", "have", "some", "Bitcoin", "and", "you", "find", "the", "hitter"]
(c13-26 / multi-sentence
        :snt1 (c13-25 / look-01
                      :ARG0 (c13-40 / you)
                      :ARG1 (c13-32 / dive-01
                                    :ARG0 c13-40
                                    :ARG1 (c13-21 / thing
                                                  :name (c13-39 / name
                                                                :op1 "DW")))
                      :mode imperative)
        :snt2 (c13-36 / find-01
                      :ARG0 (c13-12 / you)
                      :ARG1 (c13-9 / thing
                                   :ARG2-of (c13-34 / answer-01))
                      :condition (c13-1 / find-01
                                        :ARG0 c13-12
                                        :ARG1 c13-9
                                        :location (c13-16 / there))
                      :time (c13-4 / until
                                   :op1 (c13-27 / brave-02
                                                :ARG0 c13-12
                                                :ARG2 (c13-35 / do-02
                                                              :ARG0 c13-12
                                                              :ARG1 c13-9)
                                                :ARG2-of (c13-17 / have-degree-91
                                                                 :ARG1 c13-12
                                                                 :ARG3 (c13-3 / enough)
                                                                 :ARG6 (c13-13 / continue-01
                                                                               :ARG0 c13-12
                                                                               :ARG1 (c13-37 / spin-01
                                                                                             :ARG0 c13-12
                                                                                             :ARG1 (c13-6 / wheel
                                                                                                          :poss c13-12)))))))
        :snt3 (c13-38 / contrast-01
                      :ARG1 (c13-20 / and
                                    :op1 (c13-28 / applaud-01
                                                 :ARG0 (c13-8 / i)
                                                 :ARG1 (c13-23 / effort-01
                                                               :ARG0 c13-12))
                                    :op2 (c13-22 / support-01
                                                 :ARG0 c13-8
                                                 :ARG1 c13-23))
                      :ARG2 (c13-14 / need-01
                                    :ARG0 (c13-29 / you)
                                    :ARG1 (c13-7 / go-02
                                                 :ARG0 c13-29
                                                 :ARG4 (c13-31 / thing
                                                               :location-of (c13-15 / hang-01
                                                                                    :ARG1 (c13-30 / they))))))
        :snt4 (c13-10 / and
                      :op1 (c13-19 / have-03
                                   :ARG0 (c13-0 / amr-unknown)
                                   :ARG1 (c13-2 / monetary-quantity
                                                :quant (c13-33 / some)
                                                :unit (c13-5 / pound)))
                      :op2 (c13-24 / find-01
                                   :ARG0 c13-29
                                   :ARG1 (c13-11 / person
                                                 :ARG0-of (c13-18 / hit-01)))))

# ::snt Ah Jesus  Cmon
# ::tokens ["Ah", "Jesus", " ", "Cmon"]
# ::lemmas ["ah", "Jesus", " ", "Cmon"]
(c14-1 / person
       :name (c14-2 / name
                    :op1 "Jesus")
       :mod (c14-0 / ah
                   :mode expressive)
       :ARG1-of (c14-3 / name-01
                       :ARG2 c14-2
                       :op1 "Cmon"))

# ::snt My unpopular conspiracy theory is that Seth Rich was murdered by the Russians which is why Assange of Wikileaks put out that false notion that he was a DNC leaker
# ::tokens ["My", "unpopular", "conspiracy", "theory", "is", "that", "Seth", "Rich", "was", "murdered", "by", "the", "Russians", "which", "is", "why", "Assange", "of", "Wikileaks", "put", "out", "that", "false", "notion", "that", "he", "was", "a", "DNC", "leaker"]
# ::lemmas ["my", "unpopular", "conspiracy", "theory", "be", "that", "Seth", "Rich", "be", "murder", "by", "the", "Russians", "which", "be", "why", "Assange", "of", "Wikileaks", "put", "out", "that", "false", "notion", "that", "he", "be", "a", "dnc", "leaker"]
(c15-13 / theory
        :topic (c15-9 / conspire-01)
        :ARG1-of (c15-3 / popular-02
                        :polarity -)
        :poss (c15-5 / i)
        :domain (c15-14 / murder-01
                        :ARG0 (c15-6 / person
                                     :mod (c15-20 / country
                                                  :name (c15-22 / name
                                                                :op1 "Russia")))
                        :ARG1 (c15-17 / person
                                      :name (c15-10 / name
                                                    :op1 "Seth"
                                                    :op2 "Rich")))
        :ARG0-of (c15-1 / cause-01
                        :ARG1 (c15-16 / put-out-10
                                      :ARG0 (c15-12 / person
                                                    :name (c15-2 / name
                                                                 :op1 "Assange")
                                                    :ARG0-of (c15-11 / have-org-role-91
                                                                     :ARG1 (c15-7 / publication
                                                                                  :name (c15-8 / name
                                                                                               :op1 "WikiLeaks"))))
                                      :ARG1 (c15-18 / notion
                                                    :mod (c15-19 / false)
                                                    :topic (c15-4 / person
                                                                  :ARG0-of (c15-15 / leak-01
                                                                                   :ARG1 (c15-0 / organization
                                                                                                :name (c15-21 / name
                                                                                                              :op1 "DNC")))
                                                                  :domain c15-17)))))

# ::snt I think only donnabrazile knows that answer for sure
# ::tokens ["I", "think", "only", "donnabrazile", "knows", "that", "answer", "for", "sure"]
# ::lemmas ["i", "think", "only", "donnabrazile", "know", "that", "answer", "for", "sure"]
(c16-3 / think-01
       :ARG0 (c16-7 / i)
       :ARG1 (c16-5 / know-01
                    :ARG0 (c16-2 / person
                                 :mod (c16-0 / only)
                                 :ARG1-of (c16-1 / request-confirmation-91))
                    :ARG1 (c16-4 / answer
                                 :mod (c16-8 / that))
                    :ARG1-of (c16-6 / sure-02)))

# ::snt Can they leave that poor family alone
# ::tokens ["Can", "they", "leave", "that", "poor", "family", "alone"]
# ::lemmas ["can", "they", "leave", "that", "poor", "family", "alone"]
(c17-1 / possible-01
       :ARG1 (c17-6 / leave-14
                    :ARG0 (c17-3 / they)
                    :ARG1 (c17-5 / family
                                 :mod (c17-0 / poor)
                                 :mod (c17-7 / that)
                                 :mod (c17-4 / alone)))
       :polarity (c17-2 / amr-unknown))

# ::snt Now I understand why smh became popular
# ::tokens ["Now", "I", "understand", "why", "smh", "became", "popular"]
# ::lemmas ["now", "i", "understand", "why", "smh", "become", "popular"]
(c18-2 / understand-01
       :ARG0 (c18-7 / i)
       :ARG1 (c18-5 / thing
                    :ARG0-of (c18-1 / cause-01
                                    :ARG1 (c18-8 / become-01
                                                 :ARG1 (c18-0 / broadcast-program
                                                              :name (c18-6 / name
                                                                           :op1 "SMH"))
                                                 :ARG2 (c18-3 / popular-02
                                                              :ARG1 c18-0))))
       :time (c18-4 / now))
