# ::snt That would be the Lizzy Borden family Can you imagine A Kennedy A murder and a body of water with a bridge and this is the visual for the Democrats Not Smart
# ::tokens ["That", "would", "be", "the", "Lizzy", "Borden", "family", "Can", "you", "imagine", "A", "Kennedy", "A", "murder", "and", "a", "body", "of", "water", "with", "a", "bridge", "and", "this", "is", "the", "visual", "for", "the", "Democrats", "Not", "Smart"]
# ::lemmas ["that", "would", "be", "the", "Lizzy", "Borden", "family", "can", "you", "imagine", "A", "Kennedy", "a", "murder", "and", "a", "body", "of", "water", "with", "a", "bridge", "and", "this", "be", "the", "visual", "for", "the", "Democrats", "Not", "Smart"]
(c1-11 / multi-sentence
       :snt1 (c1-18 / family
                    :name (c1-20 / name
                                 :op1 "Lizzy"
                                 :op2 "Borden")
                    :domain (c1-10 / that))
       :snt2 (c1-17 / and
                    :op1 (c1-2 / possible-01
                               :ARG1 (c1-4 / imagine-01
                                           :ARG0 (c1-21 / you)
                                           :ARG1 (c1-9 / and
                                                       :op1 (c1-0 / murder-01
                                                                  :ARG0 (c1-6 / person
                                                                              :name (c1-7 / name
                                                                                          :op1 "Kennedy")))
                                                       :op2 (c1-13 / body
                                                                   :consist-of (c1-3 / water))
                                                       :op3 (c1-15 / bridge))))
                    :op2 (c1-16 / visual
                                :domain (c1-5 / this)
                                :beneficiary (c1-14 / person
                                                    :ARG0-of (c1-8 / have-org-role-91
                                                                   :ARG1 (c1-12 / political-party
                                                                                :name (c1-1 / name
                                                                                            :op1 "Democrat")))
                                                    :ARG1-of (c1-19 / smart-06
                                                                    :polarity -)))))

# ::snt Being democrat means lie lie lie
# ::tokens ["Being", "democrat", "means", "lie", "lie", "lie"]
# ::lemmas ["be", "democrat", "mean", "lie", "lie", "lie"]
(c2-3 / mean-01
      :ARG1 (c2-0 / democrat
                  :domain (c2-1 / person))
      :ARG2 (c2-4 / lie-08
                  :ARG1-of (c2-2 / lie-08)))

# ::snt Well drool me a river
# ::tokens ["Well", "drool", "me", "a", "river"]
# ::lemmas ["well", "drool", "me", "a", "river"]
(c3-0 / drool-01
      :ARG0 (c3-2 / you)
      :ARG1 (c3-1 / river)
      :mod (c3-3 / well)
      :mode imperative)

# ::snt I wish someone would burp him properly after a feed
# ::tokens ["I", "wish", "someone", "would", "burp", "him", "properly", "after", "a", "feed"]
# ::lemmas ["i", "wish", "someone", "would", "burp", "him", "properly", "after", "a", "feed"]
(c4-1 / wish-01
      :ARG0 (c4-6 / i)
      :ARG1 (c4-7 / burp-01
                  :ARG0 (c4-4 / someone)
                  :ARG1 (c4-5 / he)
                  :manner (c4-0 / proper)
                  :time (c4-2 / after
                              :op1 (c4-3 / feed-01
                                         :ARG2 c4-5))))

# ::snt Derp
# ::tokens ["Derp"]
# ::lemmas ["derp"]
(c5-0 / derp)

# ::snt Im French and Portuguese from Fall River Mass We didnt found the place we were immigrants
# ::tokens ["I", "m", "French", "and", "Portuguese", "from", "Fall", "River", "Mass", "We", "did", "nt", "found", "the", "place", "we", "were", "immigrants"]
# ::lemmas ["i", "be", "French", "and", "Portuguese", "from", "Fall", "River", "Mass", "we", "do", "not", "find", "the", "place", "we", "be", "immigrant"]
(c6-12 / multi-sentence
       :snt1 (c6-9 / and
                   :op1 (c6-5 / person
                              :mod (c6-6 / country
                                         :name (c6-15 / name
                                                      :op1 "France")))
                   :op2 (c6-1 / person
                              :mod (c6-11 / country
                                          :name (c6-7 / name
                                                      :op1 "Portugal")))
                   :source (c6-2 / city
                                 :name (c6-3 / name
                                             :op1 "Fall"
                                             :op2 "River")
                                 :location (c6-13 / state
                                                  :name (c6-4 / name
                                                              :op1 "Massachussetts"))))
       :snt2 (c6-10 / find-01
                    :ARG0 (c6-8 / we)
                    :ARG1 (c6-0 / place
                                :location-of (c6-14 / person
                                                    :ARG0-of (c6-16 / immigrate-01)
                                                    :domain c6-8))
                    :polarity -))

# ::snt This Drooler is not interested in the Truth
# ::tokens ["This", "Drooler", "is", "not", "interested", "in", "the", "Truth"]
# ::lemmas ["this", "Drooler", "be", "not", "interested", "in", "the", "truth"]
(c7-3 / interest-01
      :ARG1 (c7-0 / person
                  :name (c7-2 / name
                              :op1 "Droboler")
                  :mod (c7-1 / this))
      :ARG2 (c7-4 / truth)
      :polarity -)

# ::snt NO MORE GOD DAM KENNEDYS BUSHS CLINTONS OR OBAMAS  WE HAVE HAD ENOUGH
# ::tokens ["NO", "MORE", "GOD", "DAM", "KENNEDYS", "BUSHS", "CLINTONS", "OR", "OBAMAS", " ", "WE", "HAVE", "HAD", "ENOUGH"]
# ::lemmas ["no", "more", "GOD", "DAM", "KENNEDYS", "bush", "clinton", "or", "OBAMAS", " ", "we", "have", "have", "enough"]
(c8-10 / multi-sentence
       :snt1 (c8-0 / or
                   :op1 (c8-5 / person
                              :name (c8-11 / name
                                           :op1 "God")
                              :mod (c8-4 / damn
                                         :mode expressive))
                   :op2 (c8-2 / person
                              :name (c8-6 / name
                                          :op1 "Clinton"))
                   :op3 (c8-1 / person
                              :name (c8-3 / name
                                          :op1 "Obama"))
                   :mod (c8-7 / more
                              :polarity -))
       :snt2 (c8-8 / come-through-20
                   :ARG0 (c8-9 / we)))

# ::snt Fact Every legislation giving equal rights in America was republican sponsored
# ::tokens ["Fact", "Every", "legislation", "giving", "equal", "rights", "in", "America", "was", "republican", "sponsored"]
# ::lemmas ["fact", "every", "legislation", "give", "equal", "right", "in", "America", "be", "republican", "sponsor"]
(c9-6 / fact
      :topic (c9-7 / sponsor-01
                   :ARG0 (c9-1 / political-party
                               :name (c9-10 / name
                                            :op1 "Republican"))
                   :ARG1 (c9-8 / legislate-01
                               :ARG0-of (c9-9 / give-01
                                              :ARG1 (c9-0 / right-05
                                                          :ARG1-of (c9-2 / equal-01))
                                              :location (c9-3 / country
                                                              :name (c9-4 / name
                                                                          :op1 "America")))
                               :mod (c9-5 / every))))

# ::snt Immigrants in the past respected so much our country and worked hard to achieve the Americans deem  Migrants have no respect for this country and instead to work they are sucking the gov benefits joekennedy we dont buy your BS
# ::tokens ["Immigrants", "in", "the", "past", "respected", "so", "much", "our", "country", "and", "worked", "hard", "to", "achieve", "the", "Americans", "deem", " ", "Migrants", "have", "no", "respect", "for", "this", "country", "and", "instead", "to", "work", "they", "are", "sucking", "the", "gov", "benefits", "joekennedy", "we", "do", "nt", "buy", "your", "BS"]
# ::lemmas ["immigrant", "in", "the", "past", "respect", "so", "much", "our", "country", "and", "work", "hard", "to", "achieve", "the", "Americans", "deem", " ", "Migrants", "have", "no", "respect", "for", "this", "country", "and", "instead", "to", "work", "they", "be", "suck", "the", "gov", "benefit", "joekennedy", "we", "do", "not", "buy", "your", "bs"]
(c10-31 / say-01
        :ARG0 (c10-5 / i)
        :ARG1 (c10-30 / and
                      :op1 (c10-0 / respect-01
                                  :ARG0 (c10-2 / person
                                               :ARG0-of (c10-15 / immigrate-01))
                                  :ARG1 (c10-8 / country
                                               :poss (c10-3 / we))
                                  :time (c10-6 / past)
                                  :ARG1-of (c10-13 / have-quant-91
                                                   :ARG2 (c10-21 / much)
                                                   :ARG3 (c10-20 / so)))
                      :op2 (c10-16 / work-01
                                   :ARG0 c10-2
                                   :ARG1 (c10-18 / achieve-01
                                                 :ARG0 c10-2)
                                   :ARG1-of (c10-10 / hard-02))
                      :ARG1-of (c10-32 / cause-01
                                       :ARG0 (c10-27 / deem-01
                                                     :ARG0 (c10-25 / person
                                                                   :mod (c10-1 / country
                                                                               :name (c10-33 / name
                                                                                             :op1 "America")))
                                                     :ARG1 (c10-24 / and
                                                                   :op1 (c10-11 / respect-01
                                                                                :ARG0 c10-25
                                                                                :ARG1 (c10-12 / country
                                                                                              :mod (c10-19 / this))
                                                                                :polarity -)
                                                                   :op2 (c10-29 / suck-01
                                                                                :ARG0 c10-25
                                                                                :ARG1 (c10-23 / benefit-01
                                                                                              :ARG1 (c10-4 / government-organization
                                                                                                           :ARG0-of (c10-17 / govern-01)))
                                                                                :purpose (c10-28 / work-01
                                                                                                 :ARG0 c10-25)
                                                                                :ARG1-of (c10-14 / instead-of-91
                                                                                                 :ARG2 (c10-26 / buy-05
                                                                                                               :ARG0 c10-3
                                                                                                               :ARG1 (c10-7 / bullshit-01
                                                                                                                            :ARG0 (c10-34 / you))
                                                                                                               :polarity -)))))))
        :ARG2 (c10-22 / person
                      :name (c10-9 / name
                                   :op1 "Joe"
                                   :op2 "Hannedy")))

# ::snt Yeah Colonists were not immigrants and they built that town in 1600 long before the USA even existed
# ::tokens ["Yeah", "Colonists", "were", "not", "immigrants", "and", "they", "built", "that", "town", "in", "1600", "long", "before", "the", "USA", "even", "existed"]
# ::lemmas ["yeah", "Colonists", "be", "not", "immigrant", "and", "they", "build", "that", "town", "in", "1600", "long", "before", "the", "USA", "even", "exist"]
(c11-7 / and
       :op1 (c11-2 / person
                   :ARG0-of (c11-12 / immigrate-01)
                   :domain (c11-3 / colonist)
                   :polarity -)
       :op2 (c11-13 / build-01
                    :ARG0 c11-3
                    :ARG1 (c11-6 / town
                                 :mod (c11-4 / that))
                    :time (c11-1 / date-entity
                                 :year 1600)
                    :time (c11-0 / before
                                 :op1 (c11-5 / exist-01
                                             :ARG1 (c11-9 / country
                                                          :name (c11-11 / name
                                                                        :op1 "USA"))
                                             :mod (c11-8 / even))
                                 :ARG1-of (c11-10 / long-03)))
       :mod (c11-14 / yeah))

# ::snt English immigrants Or at least the descendants of English immigrants that came here legally ie there were no laws against the way they came
# ::tokens ["English", "immigrants", "Or", "at", "least", "the", "descendants", "of", "English", "immigrants", "that", "came", "here", "legally", "ie", "there", "were", "no", "laws", "against", "the", "way", "they", "came"]
# ::lemmas ["English", "immigrant", "or", "at", "least", "the", "descendant", "of", "English", "immigrant", "that", "come", "here", "legally", "ie", "there", "be", "no", "law", "against", "the", "way", "they", "come"]
(c12-0 / or
       :op1 (c12-6 / person
                   :ARG0-of (c12-16 / immigrate-01
                                    :ARG1 (c12-7 / country
                                                 :name (c12-15 / name
                                                               :op1 "England"))))
       :op2 (c12-2 / person
                   :ARG0-of (c12-5 / descend-01
                                   :ARG1 (c12-1 / person
                                                :ARG0-of (c12-3 / immigrate-01
                                                                :ARG1 c12-7)))
                   :ARG1-of (c12-11 / come-01
                                    :ARG4 (c12-12 / here)
                                    :manner (c12-13 / law)
                                    :ARG1-of (c12-14 / mean-01
                                                     :ARG2 (c12-9 / law
                                                                  :prep-against (c12-8 / way
                                                                                       :manner-of (c12-4 / come-01
                                                                                                         :ARG1 c12-2))
                                                                  :polarity -)))
                   :mod (c12-10 / at-least)))

# ::snt I am glad you are to admit it Have a good day
# ::tokens ["I", "am", "glad", "you", "are", "to", "admit", "it", "Have", "a", "good", "day"]
# ::lemmas ["i", "be", "glad", "you", "be", "to", "admit", "it", "have", "a", "good", "day"]
(c13-5 / multi-sentence
       :snt1 (c13-7 / glad-02
                    :ARG0 (c13-4 / admit-01
                                 :ARG0 (c13-9 / you)
                                 :ARG1 (c13-8 / it))
                    :ARG1 (c13-0 / i))
       :snt2 (c13-6 / have-03
                    :ARG0 (c13-1 / you)
                    :ARG1 (c13-2 / day
                                 :ARG1-of (c13-3 / good-02))))

# ::snt Everyone makes mistakes now and then
# ::tokens ["Everyone", "makes", "mistakes", "now", "and", "then"]
# ::lemmas ["everyone", "make", "mistake", "now", "and", "then"]
(c14-2 / mistake-02
       :ARG0 (c14-0 / everyone)
       :frequency (c14-1 / now-and-then))

# ::snt Democrats can say and make there statements and lies and the liberal bias mainstream media will get onboard
# ::tokens ["Democrats", "can", "say", "and", "make", "there", "statements", "and", "lies", "and", "the", "liberal", "bias", "mainstream", "media", "will", "get", "onboard"]
# ::lemmas ["Democrats", "can", "say", "and", "make", "there", "statement", "and", "lie", "and", "the", "liberal", "bias", "mainstream", "medium", "will", "get", "onboard"]
(c15-9 / and
       :op1 (c15-5 / possible-01
                   :ARG1 (c15-6 / and
                                :op1 (c15-11 / say-01
                                             :ARG0 (c15-1 / person
                                                          :ARG0-of (c15-12 / have-org-role-91
                                                                           :ARG1 (c15-0 / political-party
                                                                                        :name (c15-15 / name
                                                                                                      :op1 "Democratic"
                                                                                                      :op2 "Party"))))
                                             :ARG1 (c15-17 / and
                                                           :op1 (c15-7 / thing
                                                                       :ARG1-of (c15-8 / state-01
                                                                                       :ARG0 c15-1))
                                                           :op2 (c15-16 / thing
                                                                        :ARG1-of (c15-13 / lie-08
                                                                                         :ARG0 c15-1))))
                                :op2 (c15-2 / board-01
                                            :ARG0 (c15-14 / media
                                                          :ARG1-of (c15-4 / mainstream-02)
                                                          :ARG1-of (c15-3 / bias-01
                                                                          :ARG2 (c15-10 / liberal-02)))))))

# ::snt You sure that’s chap stick  might have been sucking something else
# ::tokens ["You", "sure", "that", "\u2019s", "chap", "stick", " ", "might", "have", "been", "sucking", "something", "else"]
# ::lemmas ["you", "sure", "that", "\u2019", "chap", "stick", " ", "may", "have", "be", "suck", "something", "else"]
(c16-6 / sure-02
       :ARG0 (c16-8 / you)
       :ARG1 (c16-0 / possible-01
                    :ARG1 (c16-5 / suck-01
                                 :ARG0 (c16-4 / stick
                                              :mod (c16-1 / chap)
                                              :poss (c16-3 / that))
                                 :ARG1 (c16-7 / something
                                              :mod (c16-2 / else)))))
