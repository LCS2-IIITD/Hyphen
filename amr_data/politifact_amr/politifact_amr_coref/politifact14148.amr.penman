# ::snt If truethis would be the Greatest Tweet Everlol
# ::tokens ["If", "truethis", "would", "be", "the", "Greatest", "Tweet", "Everlol"]
# ::lemmas ["if", "truethis", "would", "be", "the", "Greatest", "Tweet", "Everlol"]
(c1-5 / have-condition-91
      :ARG2 (c1-2 / have-degree-91
                  :ARG1 (c1-3 / thing
                              :ARG1-of (c1-10 / tweet-01
                                              :ARG0 (c1-0 / person
                                                          :name (c1-9 / name
                                                                      :op1 "Trueethis"))))
                  :ARG2 (c1-7 / great)
                  :ARG3 (c1-6 / most)
                  :ARG5 (c1-1 / ever))
      :ARG2-of (c1-8 / laugh-01
                     :manner (c1-4 / loud)
                     :mode expressive))

# ::snt DanielPryorr where the fuck do I sign up
# ::tokens ["DanielPryorr", "where", "the", "fuck", "do", "I", "sign", "up"]
# ::lemmas ["DanielPryorr", "where", "the", "fuck", "do", "i", "sign", "up"]
(c2-2 / ask-01
      :ARG0 (c2-6 / i)
      :ARG1 (c2-4 / sign-up-03
                  :ARG0 c2-6
                  :ARG3 (c2-1 / amr-unknown)
                  :mod (c2-3 / fuck
                             :mode expressive))
      :ARG2 (c2-0 / person
                  :name (c2-5 / name
                              :op1 "DanielPryorr")))

# ::snt httpreflectionofmindorgnasawillpay18000usdstaybedsmokeweed70straightdays …
# ::tokens ["httpreflectionofmindorgnasawillpay18000usdstaybedsmokeweed70straightdays", "\u2026"]
# ::lemmas ["httpreflectionofmindorgnasawillpay18000usdstaybedsmokeweed70straightdays", "\u2026"]
(c3-2 / say-01
      :ARG0 (c3-4 / i)
      :ARG1 (c3-0 / event
                  :name (c3-3 / name
                              :op1 "Huffpreflectionofmindorgnasawillpay18000usdstaybedsmokeweed70"))
      :ARG2 (c3-1 / person
                  :name c3-3
                  :op1 "Rwanda"))

# ::snt gdzie mogę złożyć cv
# ::tokens ["gdzie", "mog\u0119", "z\u0142o\u017cy\u0107", "cv"]
# ::lemmas ["gdzie", "mog\u0119", "z\u0142o\u017cy\u0107", "cv"]
(c4-2 / złożyć
      :ARG0-of (c4-3 / have-org-role-91
                     :ARG1 (c4-1 / television))
      :mod (c4-0 / gdzie
                 :mode expressive))

# ::snt  LOL
# ::tokens [" ", "LOL"]
# ::lemmas [" ", "LOL"]
(c5-2 / laugh-01
      :ARG0 (c5-1 / i)
      :manner (c5-0 / loud)
      :mode expressive)

# ::snt 18000  360  6 480 000 The questions now is  how do I get to  NASA bases
# ::tokens ["18000", " ", "360", " ", "6", "480", "000", "The", "questions", "now", "is", " ", "how", "do", "I", "get", "to", " ", "NASA", "bases"]
# ::lemmas ["18000", " ", "360", " ", "6", "480", "000", "the", "question", "now", "be", " ", "how", "do", "i", "get", "to", " ", "NASA", "basis"]
(c6-2 / question-01
      :ARG1 (c6-5 / get-05
                  :ARG1 (c6-6 / i)
                  :ARG2 (c6-7 / base
                              :poss (c6-0 / research-institute
                                          :name (c6-4 / name
                                                      :op1 "NASA")))
                  :manner (c6-3 / amr-unknown))
      :time (c6-1 / now))

# ::snt L1LDebbie
# ::tokens ["L1LDebbie"]
# ::lemmas ["L1LDebbie"]
(c7-0 / person
      :name (c7-1 / name
                  :op1 "L1LDebbie"))

# ::snt JuvMcBurst DudiRosenthal  מה שנעשה עם הכסף אחכ עניין שלנו
# ::tokens ["JuvMcBurst", "DudiRosenthal", " ", "\u05de\u05d4", "\u05e9\u05e0\u05e2\u05e9\u05d4", "\u05e2\u05dd", "\u05d4\u05db\u05e1\u05e3", "\u05d0\u05d7\u05db", "\u05e2\u05e0\u05d9\u05d9\u05df", "\u05e9\u05dc\u05e0\u05d5"]
# ::lemmas ["JuvMcBurst", "DudiRosenthal", " ", "\u05de\u05d4", "\u05e9\u05e0\u05e2\u05e9\u05d4", "\u05e2\u05dd", "\u05d4\u05db\u05e1\u05e3", "\u05d0\u05d7\u05db", "\u05e2\u05e0\u05d9\u05d9\u05df", "\u05e9\u05dc\u05e0\u05d5"]
(c8-0 / person
      :name (c8-1 / name
                  :op1 "JuvMcBurst"
                  :op2 "DudiRosenthal"))

# ::snt AbuKedem DudiRosenthal פחחח כאילו אם מישהו רנדומלי ברחוב יבוא ויתן לי 18 אלף דולר אני לא פשוט אסתובב ואקנה עם זה חצי טון וויד
# ::tokens ["AbuKedem", "DudiRosenthal", "\u05e4\u05d7\u05d7\u05d7", "\u05db\u05d0\u05d9\u05dc\u05d5", "\u05d0\u05dd", "\u05de\u05d9\u05e9\u05d4\u05d5", "\u05e8\u05e0\u05d3\u05d5\u05de\u05dc\u05d9", "\u05d1\u05e8\u05d7\u05d5\u05d1", "\u05d9\u05d1\u05d5\u05d0", "\u05d5\u05d9\u05ea\u05df", "\u05dc\u05d9", "18", "\u05d0\u05dc\u05e3", "\u05d3\u05d5\u05dc\u05e8", "\u05d0\u05e0\u05d9", "\u05dc\u05d0", "\u05e4\u05e9\u05d5\u05d8", "\u05d0\u05e1\u05ea\u05d5\u05d1\u05d1", "\u05d5\u05d0\u05e7\u05e0\u05d4", "\u05e2\u05dd", "\u05d6\u05d4", "\u05d7\u05e6\u05d9", "\u05d8\u05d5\u05df", "\u05d5\u05d5\u05d9\u05d3"]
# ::lemmas ["AbuKedem", "DudiRosenthal", "\u05e4\u05d7\u05d7\u05d7", "\u05db\u05d0\u05d9\u05dc\u05d5", "\u05d0\u05dd", "\u05de\u05d9\u05e9\u05d4\u05d5", "\u05e8\u05e0\u05d3\u05d5\u05de\u05dc\u05d9", "\u05d1\u05e8\u05d7\u05d5\u05d1", "\u05d9\u05d1\u05d5\u05d0", "\u05d5\u05d9\u05ea\u05df", "\u05dc\u05d9", "18", "\u05d0\u05dc\u05e3", "\u05d3\u05d5\u05dc\u05e8", "\u05d0\u05e0\u05d9", "\u05dc\u05d0", "\u05e4\u05e9\u05d5\u05d8", "\u05d0\u05e1\u05ea\u05d5\u05d1\u05d1", "\u05d5\u05d0\u05e7\u05e0\u05d4", "\u05e2\u05dd", "\u05d6\u05d4", "\u05d7\u05e6\u05d9", "\u05d8\u05d5\u05df", "\u05d5\u05d5\u05d9\u05d3"]
(c9-0 / person
      :name (c9-1 / name
                  :op1 "AbuKedem"
                  :op2 "DudiRosenthal"))

# ::snt DudiRosenthal תודיע להם שיבטלו את המודעה לקחתי
# ::tokens ["DudiRosenthal", "\u05ea\u05d5\u05d3\u05d9\u05e2", "\u05dc\u05d4\u05dd", "\u05e9\u05d9\u05d1\u05d8\u05dc\u05d5", "\u05d0\u05ea", "\u05d4\u05de\u05d5\u05d3\u05e2\u05d4", "\u05dc\u05e7\u05d7\u05ea\u05d9"]
# ::lemmas ["dudirosenthal", "\u05ea\u05d5\u05d3\u05d9\u05e2", "\u05dc\u05d4\u05dd", "\u05e9\u05d9\u05d1\u05d8\u05dc\u05d5", "\u05d0\u05ea", "\u05d4\u05de\u05d5\u05d3\u05e2\u05d4", "\u05dc\u05e7\u05d7\u05ea\u05d9"]
(c10-0 / person
       :name (c10-1 / name
                    :op1 "DudiRosenthal")
       :ARG0-of (c10-2 / say-01
                       :ARG1 (c10-3 / string-entity
                                    :value "הדיע")))

# ::snt see yall in 70 days
# ::tokens ["see", "y", "all", "in", "70", "days"]
# ::lemmas ["see", "y", "all", "in", "70", "days"]
(c11-4 / see-01
       :ARG0 (c11-6 / you)
       :ARG1 (c11-3 / all)
       :time (c11-1 / after
                    :op1 (c11-5 / now)
                    :quant (c11-2 / temporal-quantity
                                  :unit (c11-0 / day)
                                  :quant 70))
       :mode imperative)

# ::snt Jules laughing Oh man Im going thats all there is to it Im fucking going  Vincent Yeah baby youd dig it the most
# ::tokens ["Jules", "laughing", "Oh", "man", "I", "m", "going", "that", "s", "all", "there", "is", "to", "it", "I", "m", "fucking", "going", " ", "Vincent", "Yeah", "baby", "you", "d", "dig", "it", "the", "most"]
# ::lemmas ["jule", "laugh", "oh", "man", "i", "be", "go", "that", "s", "all", "there", "be", "to", "it", "i", "be", "fucking", "go", " ", "Vincent", "Yeah", "baby", "you", "d", "dig", "it", "the", "most"]
(c12-14 / multi-sentence
        :snt1 (c12-13 / laugh-01
                      :ARG0 (c12-2 / person
                                   :name (c12-8 / name
                                                :op1 "Jules")))
        :snt2 (c12-21 / go-02
                      :ARG0 (c12-3 / i)
                      :mod (c12-0 / oh-man
                                  :mode expressive)
                      :ARG1-of (c12-5 / cause-01
                                      :ARG0 (c12-15 / be-located-at-91
                                                    :ARG1 (c12-10 / it)
                                                    :ARG2 (c12-12 / there))))
        :snt3 (c12-11 / go-02
                      :ARG0 (c12-9 / i)
                      :mod (c12-19 / fucking))
        :snt4 (c12-20 / say-01
                      :ARG0 (c12-16 / i)
                      :ARG1 (c12-18 / dig-01
                                    :ARG0 (c12-22 / you)
                                    :ARG1 (c12-17 / it)
                                    :ARG1-of (c12-7 / have-quant-91
                                                    :ARG3 (c12-1 / most)))
                      :ARG2 (c12-4 / person
                                   :name (c12-6 / name
                                                :op1 "Vincent"))))

# ::snt lightwork
# ::tokens ["lightwork"]
# ::lemmas ["lightwork"]
(c13-1 / work-12
       :ARG1 (c13-0 / light))

# ::snt Houstoned we have a problem
# ::tokens ["Houstoned", "we", "have", "a", "problem"]
# ::lemmas ["houstoned", "we", "have", "a", "problem"]
(c14-3 / have-03
       :ARG0 (c14-2 / we)
       :ARG1 (c14-0 / problem)
       :mod (c14-1 / city
                   :name (c14-4 / name
                                :op1 "Houston")))

# ::snt will they also pay for the physical therapy ill need to get my muscles strength back
# ::tokens ["will", "they", "also", "pay", "for", "the", "physical", "therapy", "ill", "need", "to", "get", "my", "muscles", "strength", "back"]
# ::lemmas ["will", "they", "also", "pay", "for", "the", "physical", "therapy", "ill", "need", "to", "get", "my", "muscle", "strength", "back"]
(c15-1 / pay-01
       :polarity (c15-4 / amr-unknown)
       :ARG0 (c15-3 / they)
       :ARG3 (c15-9 / therapy
                    :mod (c15-0 / physical)
                    :ARG1-of (c15-7 / need-01
                                    :ARG0 (c15-8 / i
                                                 :part (c15-5 / muscle))
                                    :purpose (c15-6 / get-back-09
                                                    :ARG0 c15-5
                                                    :ARG1 c15-5)))
       :mod (c15-2 / also))

# ::snt There goes the 18k if you have to buy your own weed
# ::tokens ["There", "goes", "the", "18k", "if", "you", "have", "to", "buy", "your", "own", "weed"]
# ::lemmas ["there", "go", "the", "18k", "if", "you", "have", "to", "buy", "your", "own", "weed"]
(c16-4 / go-01
       :ARG1 (c16-3 / monetary-quantity
                    :unit (c16-1 / pound)
                    :quant 18000)
       :condition (c16-0 / obligate-01
                         :ARG1 (c16-6 / you)
                         :ARG2 (c16-5 / buy-01
                                      :ARG0 c16-6
                                      :ARG1 (c16-2 / weed
                                                   :poss c16-6))))

# ::snt I thought there was a catch
# ::tokens ["I", "thought", "there", "was", "a", "catch"]
# ::lemmas ["i", "think", "there", "be", "a", "catch"]
(c17-2 / think-01
       :ARG0 (c17-1 / i)
       :ARG1 (c17-0 / catch-03))

# ::snt There is no mention of smoking weed
# ::tokens ["There", "is", "no", "mention", "of", "smoking", "weed"]
# ::lemmas ["there", "be", "no", "mention", "of", "smoking", "weed"]
(c18-1 / mention-01
       :ARG1 (c18-0 / smoke-02
                    :ARG1 (c18-2 / weed))
       :polarity -)

# ::snt INTHENOWRT NASA  Sorry I dont smoke
# ::tokens ["INTHENOWRT", "NASA", " ", "Sorry", "I", "do", "nt", "smoke"]
# ::lemmas ["INTHENOWRT", "NASA", " ", "sorry", "i", "do", "not", "smoke"]
(c19-4 / say-01
       :ARG0 (c19-0 / research-institute
                    :name (c19-5 / name
                                 :op1 "NASA"))
       :ARG1 (c19-3 / sorry-01
                    :ARG1 (c19-6 / i)
                    :ARG2 (c19-2 / smoke-02
                                 :ARG0 c19-6
                                 :polarity -))
       :time (c19-1 / then))

# ::snt INTHENOWRT NASA hmm I need this job D
# ::tokens ["INTHENOWRT", "NASA", "hmm", "I", "need", "this", "job", "D"]
# ::lemmas ["INTHENOWRT", "NASA", "hmm", "i", "need", "this", "job", "d"]
(c20-5 / say-01
       :ARG0 (c20-8 / i)
       :ARG1 (c20-7 / need-01
                    :ARG0 c20-8
                    :ARG1 (c20-9 / job
                                 :mod (c20-3 / this))
                    :mod (c20-6 / hmm
                                :mode expressive)
                    :time (c20-4 / after
                                 :op1 (c20-2 / now)))
       :ARG2 (c20-0 / research-institute
                    :name (c20-1 / name
                                 :op1 "NASA")))

# ::snt INTHENOWRT NASA dont kill yourself
# ::tokens ["INTHENOWRT", "NASA", "do", "nt", "kill", "yourself"]
# ::lemmas ["INTHENOWRT", "NASA", "do", "not", "kill", "yourself"]
(c21-3 / kill-01
       :ARG0 (c21-0 / research-institute
                    :name (c21-4 / name
                                 :op1 "NASA"))
       :ARG1 (c21-5 / you)
       :time (c21-2 / after
                    :op1 (c21-1 / now))
       :polarity -)

# ::snt djtr3s facts lol
# ::tokens ["djtr3s", "facts", "lol"]
# ::lemmas ["djtr3s", "fact", "lol"]
(c22-2 / fact
       :poss (c22-0 / person
                    :name (c22-4 / name
                                 :op1 "djtr3"))
       :ARG2-of (c22-3 / laugh-01
                       :manner (c22-1 / loud)
                       :mode expressive))

# ::snt luegates gotta sacrifice for the crib man
# ::tokens ["luegates", "got", "ta", "sacrifice", "for", "the", "crib", "man"]
# ::lemmas ["luegate", "get", "to", "sacrifice", "for", "the", "crib", "man"]
(c23-0 / obligate-01
       :ARG2 (c23-3 / sacrifice-01
                    :ARG0 (c23-1 / person
                                 :name (c23-5 / name
                                              :op1 "Luegates"))
                    :ARG2 (c23-4 / man
                                 :mod (c23-2 / crib))))

# ::snt djtr3s where do I sign up I need a down payment for a house lol
# ::tokens ["djtr3s", "where", "do", "I", "sign", "up", "I", "need", "a", "down", "payment", "for", "a", "house", "lol"]
# ::lemmas ["djtr3s", "where", "do", "i", "sign", "up", "i", "need", "a", "down", "payment", "for", "a", "house", "lol"]
(c24-4 / ask-01
       :ARG0 (c24-10 / i)
       :ARG1 (c24-6 / sign-up-03
                    :ARG0 c24-10
                    :ARG3 (c24-3 / amr-unknown))
       :ARG2 (c24-1 / person
                    :name (c24-9 / name
                                 :op1 "djtr3s"))
       :topic (c24-2 / need-01
                     :ARG0 c24-10
                     :ARG1 (c24-0 / downpay-01
                                  :ARG1 (c24-7 / house))
                     :ARG2-of (c24-8 / laugh-01
                                     :ARG0 c24-10
                                     :manner (c24-5 / loud)
                                     :mode expressive)))

# ::snt ChopSumBong Hey the only time I wanna be the test subject
# ::tokens ["ChopSumBong", "Hey", "the", "only", "time", "I", "wanna", "be", "the", "test", "subject"]
# ::lemmas ["chopsumbong", "hey", "the", "only", "time", "i", "wanna", "be", "the", "test", "subject"]
(c25-5 / say-01
       :ARG0 (c25-7 / i)
       :ARG1 (c25-3 / want-01
                    :ARG0 c25-7
                    :ARG1 (c25-4 / subject
                                 :ARG2-of (c25-2 / test-01)
                                 :domain c25-7)
                    :mod (c25-0 / only))
       :ARG2 (c25-1 / person
                    :name (c25-6 / name
                                 :op1 "ChopSumBong")))

# ::snt Well David at least I know how to use your and youre and to follow scientific evidence rather than bigotry and reefer madness
# ::tokens ["Well", "David", "at", "least", "I", "know", "how", "to", "use", "your", "and", "you", "re", "and", "to", "follow", "scientific", "evidence", "rather", "than", "bigotry", "and", "reefer", "madness"]
# ::lemmas ["well", "David", "at", "least", "i", "know", "how", "to", "use", "your", "and", "you", "be", "and", "to", "follow", "scientific", "evidence", "rather", "than", "bigotry", "and", "reefer", "madness"]
(c26-18 / say-01
        :ARG0 (c26-6 / i)
        :ARG1 (c26-12 / know-03
                      :ARG0 c26-6
                      :ARG1 (c26-16 / and
                                    :op1 (c26-3 / use-01
                                                :ARG0 c26-6
                                                :ARG1 (c26-10 / and
                                                              :op1 (c26-15 / and
                                                                           :op1 (c26-20 / you)
                                                                           :op2 (c26-1 / re))))
                                    :op2 (c26-17 / follow-02
                                                 :ARG0 c26-6
                                                 :ARG1 (c26-2 / evidence-01
                                                              :mod (c26-11 / science)))
                                    :ARG1-of (c26-9 / instead-of-91
                                                    :ARG2 (c26-7 / and
                                                                 :op1 (c26-14 / bigotry)
                                                                 :op2 (c26-13 / madness
                                                                              :mod (c26-8 / reefer)))))
                      :mod (c26-0 / at-least))
        :ARG2 (c26-4 / person
                     :name (c26-19 / name
                                   :op1 "David"))
        :mod (c26-5 / well
                    :mode expressive))

# ::snt your a moron if you dont know that smoking cannabis causes mentalhealth problems or a troll mentalillness
# ::tokens ["your", "a", "moron", "if", "you", "do", "nt", "know", "that", "smoking", "cannabis", "causes", "mentalhealth", "problems", "or", "a", "troll", "mentalillness"]
# ::lemmas ["your", "a", "moron", "if", "you", "do", "not", "know", "that", "smoking", "cannabis", "cause", "mentalhealth", "problem", "or", "a", "troll", "mentalillness"]
(c27-7 / moron
       :domain (c27-12 / you)
       :condition (c27-6 / know-01
                         :ARG0 c27-12
                         :ARG1 (c27-0 / or
                                      :op1 (c27-3 / cause-01
                                                  :ARG0 (c27-8 / smoke-02
                                                               :ARG1 (c27-9 / cannabis))
                                                  :ARG1 (c27-4 / problem
                                                               :topic (c27-10 / health
                                                                              :mod (c27-2 / mental))))
                                      :op2 (c27-1 / cause-01
                                                  :ARG0 c27-8
                                                  :ARG1 (c27-11 / mentalillness
                                                                :mod (c27-5 / troll))))
                         :polarity -))

# ::snt David youre about 20 years behind the science and evidence and just making a fool of yourself
# ::tokens ["David", "you", "re", "about", "20", "years", "behind", "the", "science", "and", "evidence", "and", "just", "making", "a", "fool", "of", "yourself"]
# ::lemmas ["David", "you", "be", "about", "20", "years", "behind", "the", "science", "and", "evidence", "and", "just", "make", "a", "fool", "of", "yourself"]
(c28-6 / and
       :op1 (c28-11 / be-located-at-91
                    :ARG1 (c28-2 / person
                                 :name (c28-10 / name
                                               :op1 "David"))
                    :ARG2 (c28-0 / behind
                                 :op1 (c28-4 / and
                                             :op1 (c28-8 / science)
                                             :op2 (c28-3 / evidence-01))
                                 :duration (c28-12 / about
                                                   :op1 (c28-5 / temporal-quantity
                                                               :unit (c28-13 / year)
                                                               :quant 20))))
       :op2 (c28-9 / make-02
                   :ARG0 c28-2
                   :ARG1 (c28-7 / fool-01
                                :ARG1 c28-2)
                   :mod (c28-1 / just)))

# ::snt smoking cannabis causes mentalheath problems from depression to far worse marijuana drugs bringbackhanging
# ::tokens ["smoking", "cannabis", "causes", "mentalheath", "problems", "from", "depression", "to", "far", "worse", "marijuana", "drugs", "bringbackhanging"]
# ::lemmas ["smoking", "cannabis", "cause", "mentalheath", "problem", "from", "depression", "to", "far", "bad", "marijuana", "drug", "bringbackhange"]
(c29-5 / cause-01
       :ARG0 (c29-10 / smoke-02
                     :ARG1 (c29-12 / cannabis))
       :ARG1 (c29-6 / problem
                    :topic (c29-11 / healthy
                                   :domain (c29-13 / mind))
                    :ARG1-of (c29-0 / range-01
                                    :ARG3 (c29-4 / depress-01)
                                    :ARG4 (c29-8 / drug
                                                 :mod (c29-3 / marijuana
                                                             :ARG1-of (c29-7 / have-degree-91
                                                                             :ARG2 (c29-15 / bad-07
                                                                                           :ARG1 c29-8)
                                                                             :ARG3 (c29-14 / more
                                                                                           :quant (c29-9 / far))))))
                    :ARG0-of c29-5
                    :ARG1 (c29-1 / bring-01
                                 :ARG1 (c29-2 / back))))

# ::snt FesmireFesmire I dont know man 18000 could get me out of a couple of jams
# ::tokens ["FesmireFesmire", "I", "do", "nt", "know", "man", "18000", "could", "get", "me", "out", "of", "a", "couple", "of", "jams"]
# ::lemmas ["FesmireFesmire", "i", "do", "not", "know", "man", "18000", "could", "get", "me", "out", "of", "a", "couple", "of", "jam"]
(c30-5 / say-01
       :ARG0 (c30-9 / i)
       :ARG1 (c30-2 / possible-01
                    :ARG1 (c30-8 / get-05
                                 :ARG0 (c30-1 / person
                                              :name (c30-7 / name
                                                           :op1 "man"
                                                           :op2 18000)
                                              :ARG1-of (c30-6 / know-01
                                                              :ARG0 c30-9
                                                              :polarity -))
                                 :ARG1 c30-9
                                 :ARG2 (c30-0 / out-06
                                              :ARG1 c30-9
                                              :ARG2 (c30-10 / jam-01
                                                            :quant (c30-3 / couple)))))
       :ARG2 c30-1
       :name (c30-4 / name
                    :op1 "Fesmire"))

# ::snt sheeellbyxo Im signing straight up
# ::tokens ["sheeellbyxo", "I", "m", "signing", "straight", "up"]
# ::lemmas ["sheeellbyxo", "i", "be", "sign", "straight", "up"]
(c31-1 / sign-up-03
       :ARG0 (c31-0 / i)
       :ARG1-of (c31-3 / straight-04)
       :mod (c31-2 / sheeellbyxo))

# ::snt 1deqgozlegellem xəyalımdaki işi yerdə axtarırdım göydə tapdım
# ::tokens ["1deqgozlegellem", "x\u0259yal\u0131mdaki", "i\u015fi", "yerd\u0259", "axtar\u0131rd\u0131m", "g\u00f6yd\u0259", "tapd\u0131m"]
# ::lemmas ["1deqgozlegellem", "x\u0259yal\u0131mdaki", "i\u015fi", "yerd\u0259", "axtar\u0131rd\u0131m", "g\u00f6yd\u0259", "tapd\u0131m"]
(c32-6 / string-entity
       :domain (c32-5 / and
                      :op1 (c32-3 / person
                                  :name (c32-7 / name
                                               :op1 "Xəyalımdaki"))
                      :op2 (c32-1 / person
                                  :name (c32-4 / name
                                               :op1 "Yerdə axtarırdım"))
                      :op3 (c32-0 / person
                                  :name (c32-2 / name
                                               :op1 "Köydə tapdım")))
       :value "1deqgozlegellem")

# ::snt I am so thereif I can find my car keys
# ::tokens ["I", "am", "so", "thereif", "I", "can", "find", "my", "car", "keys"]
# ::lemmas ["i", "be", "so", "thereif", "i", "can", "find", "my", "car", "key"]
(c33-0 / cause-01
       :ARG0 (c33-7 / be-located-at-91
                    :ARG1 (c33-6 / i)
                    :ARG2 (c33-2 / there))
       :ARG1 (c33-1 / possible-01
                    :ARG1 (c33-3 / find-01
                                 :ARG0 c33-6
                                 :ARG1 (c33-4 / key
                                              :mod (c33-5 / car
                                                          :poss c33-6)))))

# ::snt Life work lol
# ::tokens ["Life", "work", "lol"]
# ::lemmas ["life", "work", "lol"]
(c34-3 / work-01
       :ARG1 (c34-1 / life)
       :ARG2-of (c34-0 / laugh-01
                       :manner (c34-2 / loud)
                       :mode expressive))

# ::snt For reals Light work
# ::tokens ["For", "reals", "Light", "work"]
# ::lemmas ["for", "real", "Light", "work"]
(c35-1 / have-purpose-91
       :ARG2 (c35-2 / work-01
                    :manner (c35-0 / light)))

# ::snt Where do I sign
# ::tokens ["Where", "do", "I", "sign"]
# ::lemmas ["where", "do", "i", "sign"]
(c36-2 / sign-01
       :ARG0 (c36-1 / i)
       :location (c36-0 / amr-unknown))

# ::snt leighbowyer30 WellyeahApplying
# ::tokens ["leighbowyer30", "WellyeahApplying"]
# ::lemmas ["leighbowyer30", "WellyeahApplying"]
(c37-2 / reply-01
       :ARG0 (c37-0 / person
                    :name (c37-1 / name
                                 :op1 "leighbowyer30"))
       :mod (c37-3 / yeah
                   :mode expressive))

# ::snt buddychristuk2 holy crap REALLY
# ::tokens ["buddychristuk2", "holy", "crap", "REALLY"]
# ::lemmas ["buddychristuk2", "holy", "crap", "really"]
(c38-1 / crap
       :mod (c38-3 / holy)
       :ARG1-of (c38-0 / real-04)
       :domain (c38-2 / person
                      :name (c38-4 / name
                                   :op1 "buddychristuk2"))
       :mode expressive)

# ::snt Sleep with one eye open     Thank you  John
# ::tokens ["Sleep", "with", "one", "eye", "open", "    ", "Thank", "you", " ", "John"]
# ::lemmas ["sleep", "with", "one", "eye", "open", "    ", "thank", "you", " ", "John"]
(c39-3 / say-01
       :ARG0 (c39-5 / i
                    :part (c39-0 / eye
                                 :quant 1))
       :ARG1 (c39-2 / thank-01
                    :ARG0 c39-5
                    :ARG1 (c39-1 / person
                                 :name (c39-4 / name
                                              :op1 "John")
                                 :ARG2-of c39-3)))

# ::snt Presumably for deeper space travel such as needed for a man mission to Mars However the cosmic radiation would nuke your body in 6 months
# ::tokens ["Presumably", "for", "deeper", "space", "travel", "such", "as", "needed", "for", "a", "man", "mission", "to", "Mars", "However", "the", "cosmic", "radiation", "would", "nuke", "your", "body", "in", "6", "months"]
# ::lemmas ["presumably", "for", "deep", "space", "travel", "such", "as", "need", "for", "a", "man", "mission", "to", "Mars", "however", "the", "cosmic", "radiation", "would", "nuke", "your", "body", "in", "6", "months"]
(c40-8 / contrast-01
       :ARG1 (c40-3 / presume-01
                    :ARG1 (c40-11 / have-purpose-91
                                  :ARG2 (c40-12 / travel-01
                                                :ARG4 (c40-18 / space)
                                                :ARG1-of (c40-10 / have-degree-91
                                                                 :ARG2 (c40-16 / deep-02
                                                                               :ARG1 c40-12)
                                                                 :ARG3 (c40-13 / more))
                                                :example (c40-20 / need-01
                                                                 :ARG1 (c40-1 / mission-01
                                                                              :ARG0 (c40-5 / man)
                                                                              :ARG1 (c40-6 / planet
                                                                                           :name (c40-9 / name
                                                                                                        :op1 "Mars")))))))
       :ARG2 (c40-2 / nuke-01
                    :ARG0 (c40-0 / radiate-01
                                 :mod (c40-19 / cosmic))
                    :ARG1 (c40-15 / body
                                  :poss (c40-21 / you))
                    :time (c40-17 / after
                                  :op1 (c40-7 / now)
                                  :quant (c40-4 / temporal-quantity
                                                :unit (c40-14 / month)
                                                :quant 6))))

# ::snt Robbyfkkncee and get bedsores and shit
# ::tokens ["Robbyfkkncee", "and", "get", "bedsores", "and", "shit"]
# ::lemmas ["robbyfkkncee", "and", "get", "bedsore", "and", "shit"]
(c41-2 / and
       :op1 (c41-0 / person
                   :name (c41-4 / name
                                :op1 "Robbyfkkncee"))
       :op2 (c41-1 / and
                   :op1 (c41-5 / bedore)
                   :op2 (c41-3 / shit)))

# ::snt djpiebob Workday thanks for reminding  Ill actually request couple of days soon
# ::tokens ["djpiebob", "Workday", "thanks", "for", "reminding", " ", "Ill", "actually", "request", "couple", "of", "days", "soon"]
# ::lemmas ["djpiebob", "Workday", "thank", "for", "remind", " ", "Ill", "actually", "request", "couple", "of", "days", "soon"]
(c42-9 / multi-sentence
       :snt1 (c42-5 / thank-01
                    :ARG0 (c42-11 / i)
                    :ARG1 (c42-3 / person
                                 :name (c42-10 / name
                                               :op1 "djpiebob"
                                               :op2 "Workday"))
                    :ARG2 (c42-0 / remind-01
                                 :ARG0 c42-3
                                 :ARG1 c42-11))
       :snt2 (c42-7 / request-01
                    :ARG0 (c42-1 / i)
                    :ARG1 (c42-4 / couple
                                 :op1 (c42-12 / temporal-quantity
                                              :unit (c42-2 / day)
                                              :quant 1))
                    :ARG1-of (c42-6 / actual-02)
                    :time (c42-8 / soon)))

# ::snt djpiebob  Why not visit SigaSiga Sands Beach Cottages in Fiji Awesome
# ::tokens ["djpiebob", " ", "Why", "not", "visit", "SigaSiga", "Sands", "Beach", "Cottages", "in", "Fiji", "Awesome"]
# ::lemmas ["djpiebob", " ", "why", "not", "visit", "SigaSiga", "Sands", "Beach", "Cottages", "in", "Fiji", "Awesome"]
(c43-8 / say-01
       :ARG1 (c43-2 / cause-01
                    :ARG0 (c43-7 / amr-unknown)
                    :ARG1 (c43-6 / visit-01
                                 :ARG1 (c43-9 / cabin
                                              :name (c43-10 / name
                                                            :op1 "SigaSiga"
                                                            :op2 "Sands"
                                                            :op3 "Beach"
                                                            :op4 "Cottages")
                                              :location (c43-0 / country
                                                               :name (c43-3 / name
                                                                            :op1 "Fijia"))
                                              :ARG1-of (c43-5 / awe-01))
                                 :polarity -))
       :ARG2 (c43-4 / person
                    :name (c43-1 / name
                                 :op1 "djpiebob")))

# ::snt iwhite is this your way of telling me you need a vacation Workday keeps yelling me about your PTO balance you know
# ::tokens ["iwhite", "is", "this", "your", "way", "of", "telling", "me", "you", "need", "a", "vacation", "Workday", "keeps", "yelling", "me", "about", "your", "PTO", "balance", "you", "know"]
# ::lemmas ["iwhite", "be", "this", "your", "way", "of", "tell", "me", "you", "need", "a", "vacation", "Workday", "keep", "yell", "me", "about", "your", "PTO", "balance", "you", "know"]
(c44-9 / say-01
       :ARG0 (c44-14 / i)
       :ARG1 (c44-10 / have-manner-91
                     :ARG1 (c44-5 / tell-01
                                  :ARG0 (c44-16 / you)
                                  :ARG1 (c44-13 / need-01
                                                :ARG0 c44-16
                                                :ARG1 (c44-6 / vacation-01
                                                             :ARG0 c44-16))
                                  :ARG2 c44-14
                                  :ARG1-of (c44-1 / cause-01
                                                  :ARG0 (c44-11 / keep-02
                                                                :ARG0 (c44-7 / workday)
                                                                :ARG1 (c44-0 / yell-01
                                                                             :ARG0 c44-16
                                                                             :ARG1 (c44-15 / balance-01
                                                                                           :ARG0 c44-16
                                                                                           :ARG1 (c44-12 / monetary-quantity
                                                                                                         :purpose (c44-2 / tax-01)))
                                                                             :ARG2 c44-14))))
                     :ARG2 (c44-8 / this))
       :ARG2 (c44-3 / person
                    :name (c44-4 / name
                                 :op1 "iwhite")))

# ::snt djpiebob oh thats sad
# ::tokens ["djpiebob", "oh", "that", "s", "sad"]
# ::lemmas ["djpiebob", "oh", "that", "s", "sad"]
(c45-3 / say-01
       :ARG1 (c45-2 / sad-02
                    :ARG0 (c45-1 / that))
       :ARG2 (c45-0 / person
                    :name (c45-4 / name
                                 :op1 "djpiebob")))

# ::snt iwhite sadly this is a hoax NASA did do a 70 day 18K bedrest study in 2014no marijuana on the menu though httpswwwvicecomreadnasapatient8179100 …
# ::tokens ["iwhite", "sadly", "this", "is", "a", "hoax", "NASA", "did", "do", "a", "70", "day", "18", "K", "bedrest", "study", "in", "2014no", "marijuana", "on", "the", "menu", "though", "httpswwwvicecomreadnasapatient8179100", "\u2026"]
# ::lemmas ["iwhite", "sadly", "this", "be", "a", "hoax", "NASA", "do", "do", "a", "70", "day", "18", "K", "bedrest", "study", "in", "2014no", "marijuana", "on", "the", "menu", "though", "httpswwwvicecomreadnasapatient8179100", "\u2026"]
(c46-8 / say-01
       :ARG0 (c46-12 / i)
       :ARG1 (c46-9 / hoax-01
                    :ARG2 (c46-4 / this))
       :ARG2 (c46-2 / do-02
                    :ARG0 (c46-0 / research-institute
                                 :name (c46-11 / name
                                               :op1 "NASA"))
                    :ARG1 (c46-6 / study-01
                                 :ARG1 (c46-13 / bedrest)
                                 :duration (c46-3 / temporal-quantity
                                                  :unit (c46-7 / day)
                                                  :quant 70))
                    :time (c46-14 / date-entity
                                  :year 2014)
                    :concession (c46-10 / marijuana
                                        :location (c46-1 / menu)
                                        :polarity -))
       :ARG0-of (c46-5 / sad-02))

# ::snt I could totally use the sleep Im so far behind on sleep
# ::tokens ["I", "could", "totally", "use", "the", "sleep", "I", "m", "so", "far", "behind", "on", "sleep"]
# ::lemmas ["i", "could", "totally", "use", "the", "sleep", "i", "be", "so", "far", "behind", "on", "sleep"]
(c47-1 / possible-01
       :ARG1 (c47-2 / use-01
                    :ARG0 (c47-9 / i)
                    :ARG1 (c47-8 / sleep-01
                                 :ARG0 c47-9)
                    :degree (c47-4 / total))
       :ARG1-of (c47-3 / cause-01
                       :ARG0 (c47-10 / be-located-at-91
                                     :ARG1 c47-9
                                     :ARG2 (c47-0 / behind
                                                  :time (c47-6 / sleep-01)
                                                  :degree (c47-7 / far
                                                                 :degree (c47-5 / so))))))

# ::snt SignMeUp
# ::tokens ["SignMeUp"]
# ::lemmas ["SignMeUp"]
(c48-0 / sign-up-03
       :ARG0 (c48-1 / you
                    :ARG1-of c48-0)
       :mode imperative)

# ::snt Word
# ::tokens ["Word"]
# ::lemmas ["word"]
(c49-0 / word)

# ::snt ashleyzarlin scheanamarie Unfortunately this article is false
# ::tokens ["ashleyzarlin", "scheanamarie", "Unfortunately", "this", "article", "is", "false"]
# ::lemmas ["ashleyzarlin", "scheanamarie", "unfortunately", "this", "article", "be", "false"]
(c50-5 / say-01
       :ARG1 (c50-4 / false
                    :domain (c50-3 / article
                                   :mod (c50-2 / this))
                    :ARG2-of (c50-0 / fortunate-01
                                    :polarity -))
       :ARG2 (c50-1 / person
                    :name (c50-6 / name
                                 :op1 "ashley"
                                 :op2 "Zarlin"
                                 :op3 "Scheanamarie")))
