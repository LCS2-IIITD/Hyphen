# ::snt PeterSchiff maybe he wants you to be his running mate Schiff2016
# ::tokens ["PeterSchiff", "maybe", "he", "wants", "you", "to", "be", "his", "running", "mate", "Schiff2016"]
# ::lemmas ["PeterSchiff", "maybe", "he", "want", "you", "to", "be", "his", "running", "mate", "schiff2016"]
(c1-5 / say-01
      :ARG0 (c1-8 / i)
      :ARG1 (c1-2 / possible-01
                  :ARG1 (c1-4 / want-01
                              :ARG0 (c1-6 / he)
                              :ARG1 (c1-3 / have-rel-role-91
                                          :ARG0 (c1-0 / person
                                                      :name (c1-7 / name
                                                                  :op1 "Schiff"))
                                          :ARG1 (c1-9 / you)
                                          :ARG2 (c1-1 / running-mate))))
      :ARG2 c1-0)

# ::snt PeterSchiff what quote
# ::tokens ["PeterSchiff", "what", "quote"]
# ::lemmas ["PeterSchiff", "what", "quote"]
(c2-0 / quote-01
      :ARG2 (c2-1 / person
                  :name (c2-2 / name
                              :op1 "PeterSchiff"))
      :mod (c2-3 / amr-unknown))

# ::snt PeterSchiff Not a coincidence He seems to be aware of Fedinduced bubbles and I expect hell continue to make it a talking point
# ::tokens ["PeterSchiff", "Not", "a", "coincidence", "He", "seems", "to", "be", "aware", "of", "Fedinduced", "bubbles", "and", "I", "expect", "hell", "continue", "to", "make", "it", "a", "talking", "point"]
# ::lemmas ["PeterSchiff", "not", "a", "coincidence", "he", "seem", "to", "be", "aware", "of", "fedinduce", "bubble", "and", "i", "expect", "hell", "continue", "to", "make", "it", "a", "talking", "point"]
(c3-11 / multi-sentence
       :snt1 (c3-3 / coincidence
                   :domain (c3-4 / person
                                 :name (c3-15 / name
                                              :op1 "PeterSchiff"))
                   :polarity -)
       :snt2 (c3-9 / and
                   :op1 (c3-10 / seem-01
                               :ARG1 (c3-0 / realize-01
                                           :ARG0 (c3-12 / he)
                                           :ARG1 (c3-17 / bubble
                                                        :ARG1-of (c3-16 / induce-01
                                                                        :ARG0 (c3-13 / government-organization
                                                                                     :name (c3-5 / name
                                                                                                 :op1 "Fed"))))))
                   :op2 (c3-6 / expect-01
                              :ARG0 (c3-1 / i)
                              :ARG1 (c3-14 / continue-01
                                           :ARG0 (c3-7 / hell)
                                           :ARG1 (c3-2 / make-01
                                                       :ARG0 c3-7
                                                       :ARG1 (c3-8 / have-talking-point-07
                                                                   :ARG0 c3-7
                                                                   :ARG1 c3-17))))))

# ::snt PeterSchiff you should send him an invoice for PR and consulting fees
# ::tokens ["PeterSchiff", "you", "should", "send", "him", "an", "invoice", "for", "PR", "and", "consulting", "fees"]
# ::lemmas ["PeterSchiff", "you", "should", "send", "him", "an", "invoice", "for", "PR", "and", "consulting", "fee"]
(c4-8 / say-01
      :ARG1 (c4-0 / recommend-01
                  :ARG1 (c4-4 / send-01
                              :ARG0 (c4-2 / person
                                          :name (c4-9 / name
                                                      :op1 "PeterSchiff"))
                              :ARG1 (c4-10 / invoice
                                           :prep-for (c4-5 / and
                                                           :op1 (c4-7 / fee
                                                                      :purpose (c4-6 / represent-01))
                                                           :op2 (c4-1 / fee
                                                                      :purpose (c4-3 / consult-01))))
                              :ARG2 c4-2)
                  :ARG2 c4-2)
      :ARG2 c4-2)

# ::snt PeterSchiff The Supreme Court one If so its truly excellent that he is reading you Start pumping out some good Austrian tweets
# ::tokens ["PeterSchiff", "The", "Supreme", "Court", "one", "If", "so", "its", "truly", "excellent", "that", "he", "is", "reading", "you", "Start", "pumping", "out", "some", "good", "Austrian", "tweets"]
# ::lemmas ["PeterSchiff", "The", "Supreme", "Court", "one", "if", "so", "its", "truly", "excellent", "that", "he", "be", "read", "you", "start", "pump", "out", "some", "good", "Austrian", "tweet"]
(c5-14 / multi-sentence
       :snt1 (c5-4 / person
                   :name (c5-15 / name
                                :op1 "PeterSchiff")
                   :mod (c5-0 / one)
                   :mod (c5-17 / government-organization
                               :name (c5-5 / name
                                           :op1 "Supreme"
                                           :op2 "Court")))
       :snt2 (c5-11 / and
                    :op1 (c5-6 / excellent-02
                               :ARG1 (c5-1 / read-01
                                           :ARG0 (c5-16 / he))
                               :degree (c5-8 / truly))
                    :op2 (c5-13 / start-01
                                :ARG0 (c5-19 / you)
                                :ARG1 (c5-2 / pump-out-03
                                            :ARG0 c5-19
                                            :ARG1 (c5-18 / tweet-01
                                                         :ARG0 (c5-7 / country
                                                                     :name (c5-3 / name
                                                                                 :op1 "Austria"))
                                                         :quant (c5-10 / some)
                                                         :ARG1-of (c5-9 / good-02))))
                    :condition (c5-12 / so)))

# ::snt PeterSchiff And you take pride in that
# ::tokens ["PeterSchiff", "And", "you", "take", "pride", "in", "that"]
# ::lemmas ["PeterSchiff", "and", "you", "take", "pride", "in", "that"]
(c6-3 / and
      :op2 (c6-1 / pride-01
                 :ARG0 (c6-0 / person
                             :name (c6-4 / name
                                         :op1 "PeterSchiff"))
                 :ARG1 (c6-2 / that)))

# ::snt PeterSchiff Just means he like you are two smart people
# ::tokens ["PeterSchiff", "Just", "means", "he", "like", "you", "are", "two", "smart", "people"]
# ::lemmas ["PeterSchiff", "just", "mean", "he", "like", "you", "be", "two", "smart", "people"]
(c7-4 / mean-01
      :ARG1 (c7-2 / person
                  :name (c7-6 / name
                              :op1 "PeterSchiff"))
      :ARG2 (c7-0 / person
                  :ARG1-of (c7-3 / smart-06)
                  :domain (c7-5 / he)
                  :ARG1-of (c7-1 / resemble-01
                                 :ARG2 (c7-8 / you))
                  :quant 2)
      :mod (c7-7 / just))

# ::snt PeterSchiff  He knows who knows in  matters
# ::tokens ["PeterSchiff", " ", "He", "knows", "who", "knows", "in", " ", "matters"]
# ::lemmas ["PeterSchiff", " ", "he", "know", "who", "know", "in", " ", "matter"]
(c8-1 / person
      :name (c8-5 / name
                  :op1 "PeterSchiff")
      :ARG0-of (c8-3 / know-01
                     :ARG1 (c8-0 / person
                                 :ARG0-of (c8-2 / know-01
                                                :topic (c8-4 / matter)))))

# ::snt PeterSchiff I told my sonmajor Trump nerd the very same thing I think hes getting talking points that resonatetrend on stage smart
# ::tokens ["PeterSchiff", "I", "told", "my", "sonmajor", "Trump", "nerd", "the", "very", "same", "thing", "I", "think", "he", "s", "getting", "talking", "points", "that", "resonatetrend", "on", "stage", "smart"]
# ::lemmas ["PeterSchiff", "i", "tell", "my", "sonmajor", "Trump", "nerd", "the", "very", "same", "thing", "i", "think", "he", "s", "get", "talk", "point", "that", "resonatetrend", "on", "stage", "smart"]
(c9-12 / say-01
       :ARG0 (c9-16 / i)
       :ARG1 (c9-6 / tell-01
                   :ARG0 c9-16
                   :ARG1 (c9-17 / thing
                                :ARG1-of (c9-8 / same-01
                                               :degree (c9-7 / very))
                                :ARG1-of (c9-10 / think-01
                                                :ARG0 c9-16
                                                :ARG2 (c9-15 / get-01
                                                             :ARG0 (c9-14 / nerd
                                                                          :mod (c9-4 / person
                                                                                     :name (c9-5 / name
                                                                                                 :op1 "Trump"))
                                                                          :mod (c9-9 / son-of-a-bitch))
                                                             :ARG1 (c9-13 / have-talking-point-07
                                                                          :ARG0 c9-14
                                                                          :ARG1-of (c9-0 / resonate-01
                                                                                         :location (c9-2 / stage)
                                                                                         :ARG1-of (c9-11 / smart-06))))))
                   :ARG2 c9-14)
       :ARG2 (c9-1 / person
                   :name (c9-3 / name
                               :op1 "PeterSchiff")))

# ::snt PeterSchiff Hardly
# ::tokens ["PeterSchiff", "Hardly"]
# ::lemmas ["PeterSchiff", "hardly"]
(c10-0 / person
       :name (c10-1 / name
                    :op1 "PeterSchiff")
       :manner (c10-2 / hard-02))

# ::snt PeterSchiff Peter for VP
# ::tokens ["PeterSchiff", "Peter", "for", "VP"]
# ::lemmas ["PeterSchiff", "Peter", "for", "VP"]
(c11-1 / person
       :name (c11-4 / name
                    :op1 "PeterSchiff"
                    :op2 "Peter")
       :ARG0-of (c11-3 / have-org-role-91
                       :ARG2 (c11-0 / president
                                    :mod (c11-2 / vice))))

# ::snt PeterSchiff prob not a coincidence
# ::tokens ["PeterSchiff", "prob", "not", "a", "coincidence"]
# ::lemmas ["PeterSchiff", "prob", "not", "a", "coincidence"]
(c12-0 / possible-01
       :ARG1 (c12-2 / coincidence
                    :domain (c12-3 / person
                                   :name (c12-1 / name
                                                :op1 "PeterSchiff")))
       :polarity -)

# ::snt PeterSchiff yes I did notice that and he very probably read your tweet
# ::tokens ["PeterSchiff", "yes", "I", "did", "notice", "that", "and", "he", "very", "probably", "read", "your", "tweet"]
# ::lemmas ["PeterSchiff", "yes", "i", "do", "notice", "that", "and", "he", "very", "probably", "read", "your", "tweet"]
(c13-7 / say-01
       :ARG0 (c13-10 / i)
       :ARG1 (c13-6 / and
                    :op1 (c13-9 / notice-01
                                :ARG0 c13-10
                                :ARG1 (c13-4 / that))
                    :op2 (c13-2 / probable
                                :domain (c13-0 / read-01
                                               :ARG0 (c13-8 / he)
                                               :ARG1 (c13-11 / tweet-02
                                                             :ARG0 (c13-1 / person
                                                                          :name (c13-3 / name
                                                                                       :op1 "PeterSchiff"))))
                                :degree (c13-5 / very)))
       :ARG2 c13-1)

# ::snt PeterSchiff  he could definitely do worse than listening to you
# ::tokens ["PeterSchiff", " ", "he", "could", "definitely", "do", "worse", "than", "listening", "to", "you"]
# ::lemmas ["PeterSchiff", " ", "he", "could", "definitely", "do", "bad", "than", "listen", "to", "you"]
(c14-4 / say-01
       :ARG0 (c14-9 / i)
       :ARG1 (c14-2 / possible-01
                    :ARG1 (c14-1 / do-02
                                 :ARG0 (c14-0 / person
                                              :name (c14-8 / name
                                                           :op1 "PeterSchiff"))
                                 :ARG1 (c14-5 / have-degree-91
                                              :ARG1 c14-0
                                              :ARG2 (c14-10 / bad-07
                                                            :ARG1 c14-0)
                                              :ARG3 (c14-6 / more)
                                              :ARG4 (c14-7 / listen-01
                                                           :ARG0 c14-0
                                                           :ARG1 (c14-11 / you)))
                                 :mod (c14-3 / definite)))
       :ARG2 c14-0)

# ::snt PeterSchiff People in the Know Know UR A Good MAN MR Schiff SIR and the Bushes are NOT  httpswwwyoutubecomwatchvbVyBAhIjer8 …
# ::tokens ["PeterSchiff", "People", "in", "the", "Know", "Know", "UR", "A", "Good", "MAN", "MR", "Schiff", "SIR", "and", "the", "Bushes", "are", "NOT", " ", "httpswwwyoutubecomwatchvbVyBAhIjer8", "\u2026"]
# ::lemmas ["PeterSchiff", "people", "in", "the", "Know", "Know", "UR", "a", "good", "MAN", "MR", "Schiff", "SIR", "and", "the", "bush", "be", "not", " ", "httpswwwyoutubecomwatchvbVyBAhIjer8", "\u2026"]
(c15-9 / multi-sentence
       :snt1 (c15-8 / know-01
                    :ARG0 (c15-4 / person
                                 :name (c15-11 / name
                                               :op1 "PeterSchiff"))
                    :ARG1 (c15-2 / man
                                 :ARG1-of (c15-10 / good-02)
                                 :domain (c15-7 / and
                                                :op1 (c15-1 / person
                                                            :name (c15-5 / name
                                                                         :op1 "Mr"
                                                                         :op2 "Schiff"
                                                                         :op3 "SIR"))
                                                :op2 (c15-0 / person
                                                            :name (c15-3 / name
                                                                         :op1 "Bush")))))
       :snt2 (c15-6 / url-entity
                    :value "wwwyoutubecomwatchvbVyBAhIjer8"))

# ::snt PeterSchiff  Peter  take it as the compliment I have no doubt it was meant as
# ::tokens ["PeterSchiff", " ", "Peter", " ", "take", "it", "as", "the", "compliment", "I", "have", "no", "doubt", "it", "was", "meant", "as"]
# ::lemmas ["PeterSchiff", " ", "Peter", " ", "take", "it", "as", "the", "compliment", "i", "have", "no", "doubt", "it", "be", "mean", "as"]
(c16-5 / say-01
       :ARG1 (c16-4 / take-04
                    :ARG0 (c16-2 / person
                                 :name (c16-6 / name
                                              :op1 "PeterSchiff"))
                    :ARG1 (c16-7 / it)
                    :ARG2 (c16-3 / compliment-01)
                    :ARG1-of (c16-1 / doubt-01
                                    :ARG0 (c16-0 / i)
                                    :ARG1 c16-1
                                    :ARG0 c16-0
                                    :polarity -
                                    :polarity -))
       :ARG2 c16-2)

# ::snt PeterSchiff good morning Mr Presidential economic  commonsense advisor
# ::tokens ["PeterSchiff", "good", "morning", "Mr", "Presidential", "economic", " ", "commonsense", "advisor"]
# ::lemmas ["PeterSchiff", "good", "morning", "Mr", "presidential", "economic", " ", "commonsense", "advisor"]
(c17-6 / say-01
       :ARG1 (c17-7 / morning
                    :ARG1-of (c17-9 / good-02))
       :ARG2 (c17-1 / person
                    :name (c17-8 / name
                                 :op1 "PeterSchiff")
                    :ARG0-of (c17-5 / advise-01
                                    :ARG2 (c17-4 / and
                                                 :op1 (c17-0 / president)
                                                 :op2 (c17-2 / economy))
                                    :mod (c17-3 / commonsense))))

# ::snt PeterSchiff   sbsun Business TheBricsPost SCMPInt EconomicTimes PressTV BenSwann theblaze RTcom RealAlexJones DRUDGE
# ::tokens ["PeterSchiff", "  ", "sbsun", "Business", "TheBricsPost", "SCMPInt", "EconomicTimes", "PressTV", "BenSwann", "theblaze", "RTcom", "RealAlexJones", "DRUDGE"]
# ::lemmas ["PeterSchiff", "  ", "sbsun", "business", "TheBricsPost", "SCMPInt", "EconomicTimes", "PressTV", "BenSwann", "theblaze", "RTcom", "realalexjones", "DRUDGE"]
(c18-8 / and
       :op1 (c18-12 / business
                    :poss (c18-5 / person
                                 :name (c18-11 / name
                                               :op1 "PeterSchiff")))
       :op2 (c18-6 / newspaper
                   :name (c18-3 / name
                                :op1 "The"
                                :op2 "BricsPost"))
       :op3 (c18-4 / newspaper
                   :name (c18-7 / name
                                :op1 "Economic"
                                :op2 "Times"
                                :op3 "PressTV"))
       :op4 (c18-1 / person
                   :name (c18-9 / name
                                :op1 "BenSwann")
                   :ARG0-of (c18-2 / blaze-02
                                   :ARG1 (c18-0 / publication
                                                :name (c18-10 / name
                                                              :op1 "RealAlexJones"
                                                              :op2 "DRUDGE")))))

# ::snt PeterSchiff   realDonaldTrump  justinamash  RandPaul  RonPaul
# ::tokens ["PeterSchiff", "  ", "realDonaldTrump", " ", "justinamash", " ", "RandPaul", " ", "RonPaul"]
# ::lemmas ["PeterSchiff", "  ", "realdonaldtrump", " ", "justinamash", " ", "RandPaul", " ", "RonPaul"]
(c19-8 / and
       :op1 (c19-4 / person
                   :name (c19-10 / name
                                 :op1 "PeterSchiff"))
       :op2 (c19-1 / person
                   :name (c19-5 / name
                                :op1 "RealDonaldTrump"))
       :op3 (c19-0 / person
                   :name (c19-2 / name
                                :op1 "Justinamash"))
       :op4 (c19-9 / person
                   :name (c19-3 / name
                                :op1 "RandPaul"))
       :op5 (c19-6 / person
                   :name (c19-7 / name
                                :op1 "RonPaul")))

# ::snt PeterSchiff I think it was actually recorded last night  you two are just sharing a wavelength
# ::tokens ["PeterSchiff", "I", "think", "it", "was", "actually", "recorded", "last", "night", " ", "you", "two", "are", "just", "sharing", "a", "wavelength"]
# ::lemmas ["PeterSchiff", "i", "think", "it", "be", "actually", "record", "last", "night", " ", "you", "two", "be", "just", "share", "a", "wavelength"]
(c20-11 / say-01
        :ARG0 (c20-13 / i)
        :ARG1 (c20-7 / think-01
                     :ARG0 c20-13
                     :ARG1 (c20-1 / record-01
                                  :ARG1 (c20-0 / it)
                                  :time (c20-3 / date-entity
                                               :dayperiod (c20-12 / night)
                                               :mod (c20-15 / yesterday))
                                  :ARG1-of (c20-10 / actual-02))
                     :ARG1-of (c20-4 / cause-01
                                     :ARG0 (c20-9 / share-01
                                                  :ARG0 (c20-2 / you
                                                               :quant 2)
                                                  :ARG1 (c20-8 / wavelength)
                                                  :mod (c20-14 / just))))
        :ARG2 (c20-5 / person
                     :name (c20-6 / name
                                  :op1 "PeterSchiff")))

# ::snt huitecouture I love realDonaldTrump Hes our only hope toMakeAmericaGreatAgain Its ok to quote another great American PeterSchiff
# ::tokens ["huitecouture", "I", "love", "realDonaldTrump", "He", "s", "our", "only", "hope", "toMakeAmericaGreatAgain", "Its", "ok", "to", "quote", "another", "great", "American", "PeterSchiff"]
# ::lemmas ["huitecouture", "i", "love", "realdonaldtrump", "he", "s", "our", "only", "hope", "tomakeamericagreatagain", "its", "ok", "to", "quote", "another", "great", "American", "PeterSchiff"]
(c21-12 / multi-sentence
        :snt1 (c21-5 / contrast-01
                     :ARG2 (c21-13 / love-01
                                   :ARG0 (c21-17 / i)
                                   :ARG1 (c21-6 / person
                                                :name (c21-16 / name
                                                              :op1 "RealDonaldTrump"))))
        :snt2 (c21-14 / hope-01
                      :ARG0 (c21-8 / we)
                      :ARG1 (c21-3 / make-AmericaGreatAgain)
                      :mod (c21-0 / only))
        :snt3 (c21-1 / okay-04
                     :ARG1 (c21-9 / quote-01
                                  :ARG2 (c21-2 / person
                                               :name (c21-7 / name
                                                            :op1 "PeterSchiff")
                                               :mod (c21-11 / great)
                                               :mod (c21-15 / country
                                                            :name (c21-4 / name
                                                                         :op1 "America"))
                                               :mod (c21-10 / another)))))

# ::snt DavidSalustro PeterSchiff yeah verbatim hours before the tweet was sent DUH
# ::tokens ["DavidSalustro", "PeterSchiff", "yeah", "verbatim", "hours", "before", "the", "tweet", "was", "sent", "DUH"]
# ::lemmas ["DavidSalustro", "PeterSchiff", "yeah", "verbatim", "hours", "before", "the", "tweet", "be", "send", "DUH"]
(c22-7 / say-01
       :ARG0 (c22-11 / i)
       :ARG1 (c22-6 / and
                    :op1 (c22-4 / verbatim)
                    :op2 (c22-12 / be-temporally-at-91
                                 :ARG2 (c22-0 / before
                                              :op1 (c22-5 / send-01
                                                          :ARG1 (c22-3 / tweet-01))
                                              :quant (c22-8 / multiple
                                                            :op1 (c22-1 / temporal-quantity
                                                                        :unit (c22-9 / hour)
                                                                        :quant 1)))))
       :ARG2 (c22-2 / person
                    :name (c22-10 / name
                                  :op1 "DavidSalustro"
                                  :op2 "PeterSchiff")))

# ::snt PeterSchiff saw that He did Verbatim MakeAmericaGreatAgain
# ::tokens ["PeterSchiff", "saw", "that", "He", "did", "Verbatim", "MakeAmericaGreatAgain"]
# ::lemmas ["PeterSchiff", "see", "that", "he", "do", "Verbatim", "makeamericagreatagain"]
(c23-5 / see-01
       :ARG0 (c23-1 / person
                    :name (c23-7 / name
                                 :op1 "PeterSchiff"))
       :ARG1 (c23-0 / do-02
                    :ARG0 (c23-6 / he)
                    :ARG1 (c23-2 / event
                                 :name (c23-3 / name
                                              :op1 "MakeAmericaGreatAgain")
                                 :mod (c23-4 / verbatim))))

# ::snt JayLagan PeterSchiff why would he be upset if someone was reading his work Peter cant choose who understands economics
# ::tokens ["JayLagan", "PeterSchiff", "why", "would", "he", "be", "upset", "if", "someone", "was", "reading", "his", "work", "Peter", "ca", "nt", "choose", "who", "understands", "economics"]
# ::lemmas ["JayLagan", "PeterSchiff", "why", "would", "he", "be", "upset", "if", "someone", "be", "read", "his", "work", "Peter", "can", "not", "choose", "who", "understand", "economic"]
(c24-10 / ask-01
        :ARG0 (c24-14 / i)
        :ARG1 (c24-5 / upset-01
                     :ARG1 (c24-4 / person
                                  :name (c24-13 / name
                                                :op1 "JayLagan"
                                                :op2 "PeterSchiff"))
                     :ARG1-of (c24-6 / cause-01
                                     :ARG0 (c24-7 / amr-unknown))
                     :condition (c24-1 / read-01
                                       :ARG0 (c24-11 / someone)
                                       :ARG1 (c24-9 / work-01
                                                    :ARG0 c24-4))
                     :ARG1-of (c24-12 / cause-01
                                      :ARG0 (c24-2 / possible-01
                                                   :ARG1 (c24-3 / choose-01
                                                                :ARG0 c24-4
                                                                :ARG1 (c24-0 / person
                                                                             :ARG0-of (c24-15 / understand-01
                                                                                              :ARG1 (c24-8 / economics))))
                                                   :polarity -)))
        :ARG2 c24-4)

# ::snt PeterSchiff If youre actually proud of that Im unfollowing you
# ::tokens ["PeterSchiff", "If", "you", "re", "actually", "proud", "of", "that", "I", "m", "unfollowing", "you"]
# ::lemmas ["PeterSchiff", "if", "you", "be", "actually", "proud", "of", "that", "i", "be", "unfollowe", "you"]
(c25-5 / say-01
       :ARG0 (c25-7 / i)
       :ARG1 (c25-4 / follow-02
                    :ARG0 c25-7
                    :ARG1 (c25-1 / person
                                 :name (c25-6 / name
                                              :op1 "PeterSchiff"))
                    :condition (c25-0 / pride-01
                                      :ARG0 c25-1
                                      :ARG1 (c25-2 / that)
                                      :ARG1-of (c25-3 / actual-02))
                    :polarity -)
       :ARG2 c25-1)

# ::snt Cornhole sits on the Select Committee on Intelligence Thats an oxymoron to begin with saying Cornhole  intelligence in the same sentence and the USA is doomed
# ::tokens ["Cornhole", "sits", "on", "the", "Select", "Committee", "on", "Intelligence", "That", "s", "an", "oxymoron", "to", "begin", "with", "saying", "Cornhole", " ", "intelligence", "in", "the", "same", "sentence", "and", "the", "USA", "is", "doomed"]
# ::lemmas ["Cornhole", "sit", "on", "the", "Select", "Committee", "on", "Intelligence", "that", "s", "an", "oxymoron", "to", "begin", "with", "say", "Cornhole", " ", "intelligence", "in", "the", "same", "sentence", "and", "the", "USA", "be", "doom"]
(c26-11 / multi-sentence
        :snt1 (c26-10 / sit-01
                      :ARG1 (c26-4 / person
                                   :name (c26-12 / name
                                                 :op1 "Cornhole"))
                      :ARG2 (c26-13 / government-organization
                                    :name (c26-5 / name
                                                 :op1 "Select"
                                                 :op2 "Committee"
                                                 :op3 "on"
                                                 :op4 "Intelligence")))
        :snt2 (c26-0 / oxymoron
                     :domain (c26-8 / say-01
                                    :ARG1 (c26-9 / and
                                                 :op1 (c26-14 / intelligent-01
                                                              :ARG1 c26-4)
                                                 :op2 (c26-3 / doom-01
                                                             :ARG1 (c26-6 / country
                                                                          :name (c26-2 / name
                                                                                       :op1 "USA")))
                                                 :manner (c26-7 / sentence
                                                                :ARG1-of (c26-15 / same-01))))
                     :ARG1-of (c26-1 / begin-01)))

# ::snt JohnMarecek Hes just another league commish that is held together by strings from the owners Puppet
# ::tokens ["JohnMarecek", "He", "s", "just", "another", "league", "commish", "that", "is", "held", "together", "by", "strings", "from", "the", "owners", "Puppet"]
# ::lemmas ["JohnMarecek", "he", "s", "just", "another", "league", "commish", "that", "be", "hold", "together", "by", "string", "from", "the", "owner", "Puppet"]
(c27-7 / say-01
       :ARG0 (c27-11 / i)
       :ARG1 (c27-3 / person
                    :mod (c27-12 / just)
                    :mod (c27-6 / another)
                    :mod (c27-8 / league)
                    :ARG1-of (c27-9 / hold-01
                                    :ARG0 (c27-5 / string
                                                 :source (c27-2 / person
                                                                :ARG0-of (c27-0 / own-01)))
                                    :mod (c27-4 / together))
                    :domain (c27-1 / person
                                   :name (c27-10 / name
                                                 :op1 "JohnMarecek")
                                   :ARG2-of c27-7)))

# ::snt Ok so now we know it’s definitely someone on his staff
# ::tokens ["Ok", "so", "now", "we", "know", "it", "\u2019s", "definitely", "someone", "on", "his", "staff"]
# ::lemmas ["ok", "so", "now", "we", "know", "it", "\u2019", "definitely", "someone", "on", "his", "staff"]
(c28-2 / cause-01
       :ARG1 (c28-6 / know-01
                    :ARG0 (c28-3 / we)
                    :ARG1 (c28-5 / someone
                                 :location (c28-4 / staff
                                                  :poss (c28-7 / he))
                                 :mod (c28-1 / definite))
                    :time (c28-8 / now))
       :ARG1-of (c28-0 / okay-04))

# ::snt YouTube Vote Bernie Sanders for president of the United States of America or the Middle Class could be sorry you didnt
# ::tokens ["YouTube", "Vote", "Bernie", "Sanders", "for", "president", "of", "the", "United", "States", "of", "America", "or", "the", "Middle", "Class", "could", "be", "sorry", "you", "did", "nt"]
# ::lemmas ["YouTube", "Vote", "Bernie", "Sanders", "for", "president", "of", "the", "United", "States", "of", "America", "or", "the", "Middle", "Class", "could", "be", "sorry", "you", "do", "not"]
(c29-5 / possible-01
       :ARG1 (c29-11 / sorry-01
                     :ARG1 (c29-16 / you)
                     :ARG2 (c29-8 / vote-01
                                  :ARG0 c29-16
                                  :ARG1 (c29-2 / person
                                               :name (c29-15 / name
                                                             :op1 "Bernie"
                                                             :op2 "Sanders"))
                                  :ARG2 (c29-1 / president
                                               :ARG2-of (c29-12 / have-org-role-91
                                                                :ARG0 c29-2
                                                                :ARG1 (c29-0 / or
                                                                             :op1 (c29-6 / country
                                                                                         :name (c29-7 / name
                                                                                                      :op1 "United"
                                                                                                      :op2 "States"
                                                                                                      :op3 "of"
                                                                                                      :op4 "America"))
                                                                             :op2 (c29-13 / class
                                                                                          :mod (c29-14 / middle))))))
                     :ARG1-of (c29-3 / cause-01
                                     :ARG0 (c29-9 / vote-01
                                                  :ARG0 c29-16
                                                  :ARG1 c29-2
                                                  :medium (c29-10 / publication
                                                                  :name (c29-4 / name
                                                                               :op1 "YouTube"))))))

# ::snt fake news CBS  so called media daily insults the best of AMERICAwe the proud deplorablesTRUMP PRESIDENT
# ::tokens ["fake", "news", "CBS", " ", "so", "called", "media", "daily", "insults", "the", "best", "of", "AMERICAwe", "the", "proud", "deplorablesTRUMP", "PRESIDENT"]
# ::lemmas ["fake", "news", "CBS", " ", "so", "call", "medium", "daily", "insult", "the", "good", "of", "AMERICAwe", "the", "proud", "deplorablestrump", "PRESIDENT"]
(c30-14 / multi-sentence
        :snt1 (c30-12 / news
                      :ARG1-of (c30-19 / fake-02)
                      :source (c30-15 / broadcast-program
                                      :name (c30-9 / name
                                                   :op1 "CBS")))
        :snt2 (c30-4 / insult-01
                     :ARG0 (c30-1 / media
                                  :mod (c30-20 / so-called))
                     :frequency (c30-0 / rate-entity-91
                                       :ARG3 (c30-13 / temporal-quantity
                                                     :unit (c30-17 / day)
                                                     :quant 1))
                     :ARG1-of (c30-21 / good-02
                                      :ARG2-of (c30-11 / have-degree-91
                                                       :ARG1 c30-4
                                                       :ARG3 (c30-5 / most)))
                     :beneficiary (c30-8 / country
                                         :name (c30-2 / name
                                                      :op1 "America"))
                     :mod (c30-3 / person
                                 :name (c30-7 / name
                                              :op1 "Trump")
                                 :ARG0-of (c30-10 / have-org-role-91
                                                  :ARG2 (c30-6 / president))
                                 :ARG0-of (c30-16 / pride-01)
                                 :ARG1-of (c30-18 / deplore-01))))

# ::snt Yeeeeeeeessssssssss
# ::tokens ["Yeeeeeeeessssssssss"]
# ::lemmas ["yeeeeeeeessssssssss"]
(c31-0 / yep
       :mode expressive)

# ::snt literally love youprobably the greatest person on social media
# ::tokens ["literally", "love", "youprobably", "the", "greatest", "person", "on", "social", "media"]
# ::lemmas ["literally", "love", "youprobably", "the", "great", "person", "on", "social", "medium"]
(c32-5 / love-01
       :ARG0 (c32-9 / i)
       :ARG1 (c32-10 / you)
       :degree (c32-3 / literal)
       :mod (c32-2 / probable
                   :domain (c32-6 / have-degree-91
                                  :ARG1 c32-10
                                  :ARG2 (c32-8 / great)
                                  :ARG3 (c32-7 / most)
                                  :ARG5 (c32-0 / person
                                               :medium (c32-1 / media
                                                              :mod (c32-4 / social))))))

# ::snt She has an interesting resume Wish her well Havent really been impressed by any Sunday news host since the late great Tim Russert
# ::tokens ["She", "has", "an", "interesting", "resume", "Wish", "her", "well", "Have", "nt", "really", "been", "impressed", "by", "any", "Sunday", "news", "host", "since", "the", "late", "great", "Tim", "Russert"]
# ::lemmas ["she", "have", "an", "interesting", "resume", "wish", "her", "well", "have", "not", "really", "be", "impressed", "by", "any", "Sunday", "news", "host", "since", "the", "late", "great", "Tim", "Russert"]
(c33-14 / multi-sentence
        :snt1 (c33-9 / have-03
                     :ARG0 (c33-21 / she)
                     :ARG1 (c33-0 / resume
                                  :ARG2-of (c33-4 / interest-01)))
        :snt2 (c33-3 / wish-01
                     :ARG1 (c33-12 / well-09
                                   :ARG1 (c33-13 / she
                                                 :ARG2-of c33-3)))
        :snt3 (c33-11 / impress-01
                      :ARG0 (c33-2 / person
                                   :ARG0-of (c33-7 / host-01
                                                   :ARG1 (c33-10 / news)
                                                   :time (c33-18 / date-entity
                                                                 :weekday (c33-19 / sunday)))
                                   :mod (c33-20 / any)
                                   :time (c33-16 / since
                                                 :op1 (c33-5 / person
                                                             :name (c33-6 / name
                                                                          :op1 "Tim"
                                                                          :op2 "Russert")
                                                             :mod (c33-22 / great)
                                                             :time (c33-15 / late))))
                      :ARG1 (c33-17 / person
                                    :name (c33-1 / name
                                                 :op1 "Havent"))
                      :ARG1-of (c33-8 / real-04)))

# ::snt Maybe she will be the next Tim Russert or maybe not
# ::tokens ["Maybe", "she", "will", "be", "the", "next", "Tim", "Russert", "or", "maybe", "not"]
# ::lemmas ["maybe", "she", "will", "be", "the", "next", "Tim", "Russert", "or", "maybe", "not"]
(c34-0 / or
       :op1 (c34-3 / possible-01
                   :ARG1 (c34-2 / person
                                :name (c34-6 / name
                                             :op1 "Tim"
                                             :op2 "Russert")
                                :mod (c34-4 / next)
                                :domain (c34-5 / she)))
       :op2 (c34-1 / possible-01
                   :ARG1 c34-2
                   :polarity -))

# ::snt Great article Joe Im looking forward to watching her show I used to watch This Week and Fox News Sunday They both have drifted
# ::tokens ["Great", "article", "Joe", "I", "m", "looking", "forward", "to", "watching", "her", "show", "I", "used", "to", "watch", "This", "Week", "and", "Fox", "News", "Sunday", "They", "both", "have", "drifted"]
# ::lemmas ["great", "article", "Joe", "i", "be", "look", "forward", "to", "watch", "her", "show", "i", "use", "to", "watch", "This", "Week", "and", "Fox", "News", "Sunday", "they", "both", "have", "drift"]
(c35-14 / multi-sentence
        :snt1 (c35-12 / article
                      :mod (c35-17 / great)
                      :topic (c35-5 / person
                                    :name (c35-15 / name
                                                  :op1 "Joe")))
        :snt2 (c35-16 / look-forward-03
                      :ARG0 (c35-18 / i)
                      :ARG1 (c35-10 / watch-01
                                    :ARG0 c35-18
                                    :ARG1 (c35-13 / show
                                                  :poss (c35-11 / she))))
        :snt3 (c35-4 / drift-01
                     :ARG1 (c35-8 / and
                                  :op1 (c35-19 / broadcast-program
                                               :name (c35-6 / name
                                                            :op1 "This"
                                                            :op2 "Week"))
                                  :op2 (c35-0 / broadcast-program
                                              :name (c35-3 / name
                                                           :op1 "Fox"
                                                           :op2 "News")))
                     :time (c35-7 / use-03)
                     :snt4-of c35-14)
        :ARG1 (c35-1 / both
                     :op1 (c35-2 / it)
                     :op2 (c35-9 / they)))

# ::snt She works for a convicted peddler of fake news CBS
# ::tokens ["She", "works", "for", "a", "convicted", "peddler", "of", "fake", "news", "CBS"]
# ::lemmas ["she", "work", "for", "a", "convict", "peddler", "of", "fake", "news", "CBS"]
(c36-5 / work-01
       :ARG0 (c36-7 / she)
       :ARG2 (c36-2 / publication
                    :name (c36-8 / name
                                 :op1 "CBS"))
       :ARG3 (c36-1 / person
                    :ARG1-of (c36-3 / convict-01
                                    :ARG2 (c36-0 / peddle-01
                                                 :ARG0 c36-1
                                                 :ARG1 (c36-4 / news
                                                              :ARG1-of (c36-6 / fake-02))))))

# ::snt She represents FAKE NEWS CBS
# ::tokens ["She", "represents", "FAKE", "NEWS", "CBS"]
# ::lemmas ["she", "represent", "FAKE", "NEWS", "CBS"]
(c37-0 / represent-01
       :ARG0 (c37-3 / she)
       :ARG1 (c37-5 / broadcast-program
                    :name (c37-4 / name
                                 :op1 "CBS"))
       :ARG2 (c37-1 / news
                    :ARG1-of (c37-2 / fake-02)))

# ::snt Unfortunately they dont know what is fake news
# ::tokens ["Unfortunately", "they", "do", "nt", "know", "what", "is", "fake", "news"]
# ::lemmas ["unfortunately", "they", "do", "not", "know", "what", "be", "fake", "news"]
(c38-3 / know-01
       :ARG0 (c38-1 / they)
       :ARG1 (c38-5 / thing
                    :domain (c38-4 / news
                                   :ARG1-of (c38-2 / fake-02)))
       :ARG2-of (c38-0 / fortunate-01
                       :polarity -)
       :polarity -)

# ::snt politico Capitalism has a compassion problem Rampant fraudulent greed hurts dare I say kills many people
# ::tokens ["politico", "Capitalism", "has", "a", "compassion", "problem", "Rampant", "fraudulent", "greed", "hurts", "dare", "I", "say", "kills", "many", "people"]
# ::lemmas ["politico", "Capitalism", "have", "a", "compassion", "problem", "rampant", "fraudulent", "greed", "hurt", "dare", "i", "say", "kill", "many", "people"]
(c39-10 / multi-sentence
        :snt1 (c39-9 / have-03
                     :ARG0 (c39-4 / capitalism
                                  :mod (c39-5 / politics))
                     :ARG1 (c39-1 / problem
                                  :topic (c39-8 / compassion)))
        :snt2 (c39-6 / hurt-01
                     :ARG1 (c39-13 / greed
                                   :mod (c39-7 / fraudulent)
                                   :ARG0-of (c39-11 / kill-01
                                                    :ARG1 (c39-0 / person
                                                                 :quant (c39-2 / many))
                                                    :ARG1-of (c39-3 / dare-01
                                                                    :ARG2 (c39-12 / say-01
                                                                                  :ARG0 (c39-14 / i)))))))

# ::snt RT politico CBS runs unscheduled Romney interview bumping Sandra Day OConnor to next week on Face the Nation httppoliticoLWSQb5
# ::tokens ["RT", "politico", "CBS", "runs", "unscheduled", "Romney", "interview", "bumping", "Sandra", "Day", "OConnor", "to", "next", "week", "on", "Face", "the", "Nation", "httppoliticoLWSQb5"]
# ::lemmas ["RT", "politico", "CBS", "run", "unschedule", "Romney", "interview", "bump", "Sandra", "Day", "OConnor", "to", "next", "week", "on", "Face", "the", "nation", "httppoliticoLWSQb5"]
(c40-1 / run-09
       :ARG0 (c40-14 / broadcast-program
                     :name (c40-12 / name
                                   :op1 "CBS")
                     :mod (c40-6 / politics))
       :ARG1 (c40-13 / interview-01
                     :ARG0 (c40-2 / person
                                  :name (c40-7 / name
                                               :op1 "Romney"))
                     :ARG1 (c40-0 / person
                                  :name (c40-4 / name
                                               :op1 "Sandra"
                                               :op2 "Day"
                                               :op3 "OConnor"))
                     :ARG1-of (c40-11 / schedule-01
                                      :polarity -)
                     :ARG0-of (c40-3 / bump-02
                                     :ARG1 c40-0
                                     :ARG2 (c40-9 / week
                                                  :mod (c40-5 / next))
                                     :location (c40-8 / broadcast-program
                                                      :name (c40-10 / name
                                                                    :op1 "Face"
                                                                    :op2 "the"
                                                                    :op3 "Nation")))))

# ::snt Sometimes  SpeakerRyan You rebel you
# ::tokens ["Sometimes", " ", "SpeakerRyan", "You", "rebel", "you"]
# ::lemmas ["sometimes", " ", "SpeakerRyan", "you", "rebel", "you"]
(c41-1 / person
       :name (c41-5 / name
                    :op1 "Ryan")
       :ARG0-of (c41-4 / have-org-role-91
                       :ARG2 (c41-3 / speaker))
       :ARG0-of (c41-0 / rebel-01
                       :ARG1 c41-1)
       :time (c41-2 / sometimes))

# ::snt Support your campaign to end white nationalism keep the fire burning
# ::tokens ["Support", "your", "campaign", "to", "end", "white", "nationalism", "keep", "the", "fire", "burning"]
# ::lemmas ["support", "your", "campaign", "to", "end", "white", "nationalism", "keep", "the", "fire", "burn"]
(c42-5 / support-01
       :ARG0 (c42-9 / you)
       :ARG1 (c42-0 / campaign-01
                    :ARG0 c42-9
                    :ARG1 (c42-1 / end-01
                                 :ARG0 c42-9
                                 :ARG1 (c42-7 / nationalism
                                              :mod (c42-2 / person
                                                          :ARG1-of (c42-3 / white-02))))
                    :ARG0-of (c42-6 / keep-02
                                    :ARG1 (c42-8 / burn-01
                                                 :ARG1 (c42-4 / fire))))
       :mode imperative)

# ::snt sometimes Trumps BirthrightCitizenship Constitution 14thAmendment attempt to  divert media off his incitement of Domestic Terrorism is Exposed  Stop  Racism Support Jews  allies response to Pittsburgh Shooting  WeAreHere EndWhiteNationalism NYC  Join Us tweet
# ::tokens ["sometimes", "Trumps", "BirthrightCitizenship", "Constitution", "14thAmendment", "attempt", "to", " ", "divert", "media", "off", "his", "incitement", "of", "Domestic", "Terrorism", "is", "Exposed", " ", "Stop", " ", "Racism", "Support", "Jews", " ", "allies", "response", "to", "Pittsburgh", "Shooting", " ", "WeAreHere", "EndWhiteNationalism", "NYC", " ", "Join", "Us", "tweet"]
# ::lemmas ["sometimes", "Trumps", "BirthrightCitizenship", "Constitution", "14thamendment", "attempt", "to", " ", "divert", "medium", "off", "his", "incitement", "of", "Domestic", "Terrorism", "be", "expose", " ", "stop", " ", "Racism", "Support", "Jews", " ", "ally", "response", "to", "Pittsburgh", "Shooting", " ", "WeAreHere", "endwhitenationalism", "NYC", " ", "join", "Us", "tweet"]
(c43-16 / multi-sentence
        :snt1 (c43-3 / express-01
                     :ARG0 (c43-22 / attempt-01
                                   :ARG0 (c43-17 / law
                                                 :name (c43-25 / name
                                                               :op1 "14th"
                                                               :op2 "Amendment"))
                                   :ARG1 (c43-20 / divert-01
                                                 :ARG0 c43-17
                                                 :ARG1 (c43-1 / media)
                                                 :ARG2 (c43-5 / incite-01
                                                              :ARG0 (c43-11 / he)
                                                              :ARG1 (c43-13 / terrorism
                                                                            :mod (c43-23 / domestic))))
                                   :frequency (c43-24 / sometimes)))
        :snt2 (c43-14 / stop-01
                      :ARG0 (c43-27 / you)
                      :mode imperative)
        :snt3 (c43-21 / support-01
                      :ARG0 (c43-7 / you)
                      :ARG1 (c43-15 / ethnic-group
                                    :name (c43-10 / name
                                                  :op1 "Jew"))
                      :mode imperative)
        :snt4 (c43-0 / respond-01
                     :ARG0 (c43-4 / person
                                  :ARG1-of (c43-12 / ally-01))
                     :ARG1 (c43-18 / shoot-02
                                   :location (c43-9 / city
                                                    :name (c43-2 / name
                                                                 :op1 "Pittsburgh"))))
        :snt5 (c43-26 / join-01
                      :ARG0 c43-7
                      :ARG1 (c43-6 / tweet-02
                                   :ARG0 (c43-19 / you))
                      :location c43-9
                      :name (c43-8 / name
                                   :op1 "New"
                                   :op2 "York")
                      :mode imperative))

# ::snt UneditedPol Sorry guys John Kerry hasnt had a scoop since Viet Nam and be blew that Kabuki dance to hell
# ::tokens ["UneditedPol", "Sorry", "guys", "John", "Kerry", "has", "nt", "had", "a", "scoop", "since", "Viet", "Nam", "and", "be", "blew", "that", "Kabuki", "dance", "to", "hell"]
# ::lemmas ["UneditedPol", "sorry", "guy", "John", "Kerry", "have", "not", "have", "a", "scoop", "since", "Viet", "Nam", "and", "be", "blow", "that", "Kabuki", "dance", "to", "hell"]
(c44-11 / say-01
        :ARG1 (c44-9 / sorry-01
                     :ARG1 (c44-15 / i)
                     :ARG2 (c44-10 / and
                                   :op1 (c44-12 / have-03
                                                :ARG0 (c44-4 / person
                                                             :name (c44-14 / name
                                                                           :op1 "John"
                                                                           :op2 "Kerry"))
                                                :ARG1 (c44-8 / scoop)
                                                :time (c44-16 / since
                                                              :op1 (c44-5 / country
                                                                          :name (c44-6 / name
                                                                                       :op1 "Vietnam")))
                                                :polarity -)
                                   :op2 (c44-0 / blow-03
                                               :ARG0 c44-4
                                               :ARG1 (c44-3 / dance-01
                                                            :ARG0 c44-4
                                                            :ARG1 (c44-13 / kabuki))
                                               :destination (c44-7 / hell))))
        :ARG2 (c44-1 / person
                     :name (c44-2 / name
                                  :op1 "UneditedPol")))

# ::snt TrackingTrump cjspars  2 great interviews today
# ::tokens ["TrackingTrump", "cjspars", " ", "2", "great", "interviews", "today"]
# ::lemmas ["TrackingTrump", "cjspar", " ", "2", "great", "interview", "today"]
(c45-3 / track-01
       :ARG1 (c45-4 / and
                    :op1 (c45-1 / publication
                                :name (c45-6 / name
                                             :op1 "CNN")
                                :poss (c45-0 / person
                                             :name (c45-2 / name
                                                          :op1 "Trump")))
                    :op2 (c45-7 / interview-01
                                :mod (c45-5 / great)
                                :time (c45-8 / today)
                                :quant 2)))

# ::snt TrackingTrump SpecialKMB1969  Trump make America great again
# ::tokens ["TrackingTrump", "SpecialKMB1969", " ", "Trump", "make", "America", "great", "again"]
# ::lemmas ["TrackingTrump", "SpecialKMB1969", " ", "Trump", "make", "America", "great", "again"]
(c46-7 / make-02
       :ARG0 (c46-2 / person
                    :name (c46-8 / name
                                 :op1 "Trump"))
       :ARG1 (c46-9 / great
                    :domain (c46-3 / country
                                   :name (c46-4 / name
                                                :op1 "America"))
                    :mod (c46-5 / again))
       :ARG1-of (c46-6 / say-01
                       :ARG0 (c46-0 / publication
                                    :name (c46-1 / name
                                                 :op1 "Tracking"
                                                 :op2 "Trump"
                                                 :op3 "SpecialKMB1969"))))

# ::snt Its just a very very bureaucratic system  Yes It is called the federal government Its large too
# ::tokens ["Its", "just", "a", "very", "very", "bureaucratic", "system", " ", "Yes", "It", "is", "called", "the", "federal", "government", "Its", "large", "too"]
# ::lemmas ["its", "just", "a", "very", "very", "bureaucratic", "system", " ", "yes", "it", "be", "call", "the", "federal", "government", "its", "large", "too"]
(c47-8 / multi-sentence
       :snt1 (c47-7 / system
                    :mod (c47-0 / bureaucracy
                                :degree (c47-5 / very
                                               :degree c47-5)))
       :mod (c47-13 / just)
       :domain (c47-12 / it)
       :snt2 (c47-2 / call-01
                    :ARG1 (c47-1 / it)
                    :ARG2 (c47-11 / government-organization
                                  :ARG0-of (c47-3 / govern-01)
                                  :mod (c47-6 / federal))
                    :mod (c47-14 / yes))
       :snt3 (c47-9 / large
                    :domain (c47-10 / it)
                    :mod (c47-4 / too)))

# ::snt Well I did finish it And now I want to cry and break something and go live in a sea of bourbon Fucking hell
# ::tokens ["Well", "I", "did", "finish", "it", "And", "now", "I", "want", "to", "cry", "and", "break", "something", "and", "go", "live", "in", "a", "sea", "of", "bourbon", "Fucking", "hell"]
# ::lemmas ["well", "i", "do", "finish", "it", "and", "now", "i", "want", "to", "cry", "and", "break", "something", "and", "go", "live", "in", "a", "sea", "of", "bourbon", "Fucking", "hell"]
(c48-8 / and
       :op1 (c48-9 / finish-01
                   :ARG0 (c48-14 / i)
                   :ARG1 (c48-0 / it)
                   :mod (c48-6 / well))
       :op2 (c48-2 / want-01
                   :ARG0 c48-14
                   :ARG1 (c48-5 / and
                                :op1 (c48-4 / cry-02
                                            :ARG0 c48-14)
                                :op2 (c48-15 / break-01
                                             :ARG0 c48-14
                                             :ARG1 (c48-10 / something))
                                :op3 (c48-13 / go-05
                                             :ARG0 c48-14
                                             :ARG1 (c48-11 / live-01
                                                           :ARG0 c48-14
                                                           :location (c48-7 / sea
                                                                            :consist-of (c48-1 / bourbon)
                                                                            :mod (c48-12 / hell
                                                                                         :mod (c48-3 / fucking
                                                                                                     :mode expressive))))))
                   :time (c48-16 / now)))

# ::snt Because we grossly underestimated the ignorance fear and hatred weve permitted to exist in our nation
# ::tokens ["Because", "we", "grossly", "underestimated", "the", "ignorance", "fear", "and", "hatred", "we", "ve", "permitted", "to", "exist", "in", "our", "nation"]
# ::lemmas ["because", "we", "grossly", "underestimate", "the", "ignorance", "fear", "and", "hatred", "we", "have", "permit", "to", "exist", "in", "our", "nation"]
(c49-0 / cause-01
       :ARG0 (c49-1 / underestimate-01
                    :ARG0 (c49-4 / we)
                    :ARG1 (c49-5 / and
                                 :op1 (c49-6 / fear-01)
                                 :op2 (c49-7 / hate-01)
                                 :ARG1-of (c49-2 / exist-01
                                                 :ARG1-of (c49-3 / permit-01
                                                                 :ARG0 c49-4)
                                                 :location (c49-9 / nation
                                                                  :poss c49-4)))
                    :degree (c49-8 / gross)))

# ::snt I cant I cant finish reading this HOW IS THIS GUY THE PRESIDENT
# ::tokens ["I", "ca", "nt", "I", "ca", "nt", "finish", "reading", "this", "HOW", "IS", "THIS", "GUY", "THE", "PRESIDENT"]
# ::lemmas ["i", "can", "not", "i", "can", "not", "finish", "read", "this", "HOW", "be", "this", "GUY", "the", "PRESIDENT"]
(c50-2 / possible-01
       :ARG1 (c50-4 / finish-01
                    :ARG0 (c50-8 / i)
                    :ARG1 (c50-0 / read-01
                                 :ARG0 c50-8
                                 :ARG1 (c50-3 / this
                                              :ARG1-of (c50-5 / mean-01
                                                              :ARG2 (c50-7 / guy
                                                                           :mod (c50-9 / this)
                                                                           :ARG0-of (c50-6 / have-org-role-91
                                                                                           :ARG2 (c50-1 / president)))))))
       :polarity -)
