# ::snt “RuffusMD Confirmed  Justice Ruth Bader Ginsburg is RESIGNING From The Post of Associate Justice  SCOTUS httpusapolitics24hrscomindexphp20161223confirmedjusticeruthbaderginsburgresigningpostassociatejusticesupremecourt …”
# ::tokens ["\u201c", "RuffusMD", "Confirmed", " ", "Justice", "Ruth", "Bader", "Ginsburg", "is", "RESIGNING", "From", "The", "Post", "of", "Associate", "Justice", " ", "SCOTUS", "httpusapolitics24hrscomindexphp20161223confirmedjusticeruthbaderginsburgresigningpostassociatejusticesupremecourt", "\u2026", "\u201d"]
# ::lemmas ["\"", "RuffusMD", "Confirmed", " ", "Justice", "Ruth", "Bader", "Ginsburg", "be", "resign", "from", "The", "Post", "of", "Associate", "Justice", " ", "SCOTUS", "httpusapolitics24hrscomindexphp20161223confirmedjusticeruthbaderginsburgresigningpostassociatejusticesupremecourt", "\u2026", "\""]
(c1-5 / publication-91
      :ARG1 (c1-6 / confirm-01
                  :ARG0 (c1-1 / person
                              :name (c1-13 / name
                                           :op1 "RuffusMD"))
                  :ARG1 (c1-2 / retire-01
                              :ARG0 (c1-0 / person
                                          :name (c1-7 / name
                                                      :op1 "Ruth"
                                                      :op2 "Bader"
                                                      :op3 "Ginsburg")
                                          :ARG0-of (c1-11 / have-org-role-91
                                                          :ARG1 (c1-12 / government-organization
                                                                       :name (c1-3 / name
                                                                                   :op1 "SCOTUS"))
                                                          :ARG2 (c1-14 / justice
                                                                       :ARG1-of (c1-10 / associate-01))))
                              :source (c1-4 / newspaper
                                            :name (c1-9 / name
                                                        :op1 "The"
                                                        :op2 "Post"
                                                        :op3 "of"
                                                        :op4 "Ruth"
                                                        :op5 "Ginsburg"))))
      :ARG4 (c1-8 / url-entity
                  :value "httpusapolitics24hrscomindexphp20161223confirmedjusticeruthbaderginsburgresigningpostassociatejusticesupremecourt"))

# ::snt I would say 99 of the news is fake I have come to believe that the world is fake
# ::tokens ["I", "would", "say", "99", "of", "the", "news", "is", "fake", "I", "have", "come", "to", "believe", "that", "the", "world", "is", "fake"]
# ::lemmas ["i", "would", "say", "99", "of", "the", "news", "be", "fake", "i", "have", "come", "to", "believe", "that", "the", "world", "be", "fake"]
(c2-3 / and
      :op1 (c2-5 / say-01
                 :ARG0 (c2-7 / i)
                 :ARG1 (c2-4 / fake-02
                             :ARG1 (c2-6 / news
                                         :quant 99)))
      :op2 (c2-1 / come-04
                 :ARG1 c2-7
                 :ARG2 (c2-8 / believe-01
                             :ARG0 c2-7
                             :ARG1 (c2-0 / fake-02
                                         :ARG1 (c2-2 / world)))))

# ::snt William casey cia director  said before congress when we get to the place where everything the usa citizen believes
# ::tokens ["William", "casey", "cia", "director", " ", "said", "before", "congress", "when", "we", "get", "to", "the", "place", "where", "everything", "the", "usa", "citizen", "believes"]
# ::lemmas ["William", "casey", "cia", "director", " ", "say", "before", "congress", "when", "we", "get", "to", "the", "place", "where", "everything", "the", "usa", "citizen", "believe"]
(c3-10 / say-01
       :ARG0 (c3-3 / person
                   :name (c3-14 / name
                                :op1 "William"
                                :op2 "Casey"
                                :op3 "CIA")
                   :ARG0-of (c3-11 / have-org-role-91
                                   :ARG2 (c3-2 / director)))
       :ARG1 (c3-7 / time
                   :time-of (c3-13 / get-05
                                   :ARG1 (c3-8 / we)
                                   :ARG2 (c3-0 / place
                                               :location-of (c3-15 / believe-01
                                                                   :ARG0 (c3-4 / citizen
                                                                               :mod (c3-12 / country
                                                                                           :name (c3-5 / name
                                                                                                       :op1 "United"
                                                                                                       :op2 "States")))
                                                                   :ARG1 (c3-6 / everything)))))
       :ARG2 (c3-9 / government-organization
                   :name (c3-1 / name
                               :op1 "Congress")))

# ::snt where every usa citizen believes is a lie then we have been successful  It is all part of satan deceiving the whole world
# ::tokens ["where", "every", "usa", "citizen", "believes", "is", "a", "lie", "then", "we", "have", "been", "successful", " ", "It", "is", "all", "part", "of", "satan", "deceiving", "the", "whole", "world"]
# ::lemmas ["where", "every", "usa", "citizen", "believe", "be", "a", "lie", "then", "we", "have", "be", "successful", " ", "it", "be", "all", "part", "of", "satan", "deceive", "the", "whole", "world"]
(c4-11 / multi-sentence
       :snt1 (c4-10 / succeed-01
                    :ARG0 (c4-8 / we)
                    :time (c4-7 / then)
                    :location (c4-17 / believe-01
                                     :ARG0 (c4-3 / citizen
                                                 :mod (c4-12 / country
                                                             :name (c4-15 / name
                                                                          :op1 "USA"))
                                                 :mod (c4-4 / every))
                                     :ARG1 (c4-13 / lie-08)))
       :snt2 (c4-14 / have-part-91
                    :ARG1 (c4-2 / deceive-01
                                :ARG0 (c4-0 / religious-group
                                            :name (c4-5 / name
                                                        :op1 "Satan"))
                                :ARG1 (c4-1 / world
                                            :mod (c4-6 / whole)))
                    :ARG2 (c4-16 / it
                                 :mod (c4-9 / all))))

# ::snt Might be fake news dude
# ::tokens ["Might", "be", "fake", "news", "dude"]
# ::lemmas ["may", "be", "fake", "news", "dude"]
(c5-3 / say-01
      :ARG0 (c5-5 / i)
      :ARG1 (c5-1 / possible-01
                  :ARG1 (c5-2 / fake-02
                              :ARG1 (c5-4 / news)))
      :ARG2 (c5-0 / dude))

# ::snt Her statement only serves 2 VALIDATE th stupidity of lawyers in charge of our govt RBGtypical BOLSHEVIKwealth is always stolen
# ::tokens ["Her", "statement", "only", "serves", "2", "VALIDATE", "th", "stupidity", "of", "lawyers", "in", "charge", "of", "our", "govt", "RBGtypical", "BOLSHEVIKwealth", "is", "always", "stolen"]
# ::lemmas ["her", "statement", "only", "serve", "2", "validate", "th", "stupidity", "of", "lawyer", "in", "charge", "of", "our", "govt", "RBGtypical", "BOLSHEVIKwealth", "be", "always", "steal"]
(c6-9 / serve-01
      :ARG0 (c6-7 / state-01
                  :ARG0 (c6-6 / she))
      :ARG1 (c6-12 / steal-01
                   :ARG1 (c6-5 / wealth
                               :ARG1-of (c6-8 / value-02)
                               :poss (c6-10 / lawyer
                                            :ARG1-of (c6-2 / charge-08
                                                           :ARG2 (c6-11 / government-organization
                                                                        :ARG0-of (c6-3 / govern-01)
                                                                        :poss (c6-1 / we))
                                                           :mod (c6-4 / typical)))
                               :quant 2))
      :mod (c6-0 / only))

# ::snt You might want to check outside of your echochamber once in a while
# ::tokens ["You", "might", "want", "to", "check", "outside", "of", "your", "echochamber", "once", "in", "a", "while"]
# ::lemmas ["you", "may", "want", "to", "check", "outside", "of", "your", "echochamber", "once", "in", "a", "while"]
(c7-3 / possible-01
      :ARG1 (c7-6 / want-01
                  :ARG0 (c7-7 / you)
                  :ARG1 (c7-4 / check-01
                              :ARG0 c7-7
                              :location (c7-0 / outside
                                              :op1 (c7-5 / echochamber
                                                         :poss c7-7))
                              :frequency (c7-1 / rate-entity-91
                                               :ARG2 (c7-2 / while)
                                               :ARG1 1))))

# ::snt httpUSApolitics24hrscom Totally FAKE news site Per the article the court is on summer recess Really Come on  jimdwrench
# ::tokens ["httpUSApolitics24hrscom", "Totally", "FAKE", "news", "site", "Per", "the", "article", "the", "court", "is", "on", "summer", "recess", "Really", "Come", "on", " ", "jimdwrench"]
# ::lemmas ["httpUSApolitics24hrscom", "totally", "fake", "news", "site", "per", "the", "article", "the", "court", "be", "on", "summer", "recess", "really", "come", "on", " ", "jimdwrench"]
(c8-14 / multi-sentence
       :snt1 (c8-13 / site
                    :mod (c8-16 / news)
                    :ARG1-of (c8-12 / fake-02
                                    :degree (c8-8 / total))
                    :source (c8-5 / publication
                                  :name (c8-6 / name
                                              :op1 "USApolitics24hrscom")))
       :snt2 (c8-7 / come-on-25
                   :ARG1 (c8-0 / person
                               :name (c8-3 / name
                                           :op1 "Jimdwrench"))
                   :ARG1-of (c8-1 / real-04)
                   :ARG1-of (c8-15 / cause-01
                                   :ARG0 (c8-10 / article
                                                :topic (c8-11 / recess-02
                                                              :ARG0 (c8-2 / court)
                                                              :time (c8-4 / date-entity
                                                                          :season (c8-9 / summer)))))
                   :mode imperative))

# ::snt False
# ::tokens ["False"]
# ::lemmas ["false"]
(c9-0 / false)

# ::snt Hip Hip Hooray
# ::tokens ["Hip", "Hip", "Hooray"]
# ::lemmas ["Hip", "Hip", "Hooray"]
(c10-1 / hooray
       :mod (c10-0 / hip)
       :mod c10-1)

# ::snt GREATtell Boris Karloff his babe is going bar hopping
# ::tokens ["GREATtell", "Boris", "Karloff", "his", "babe", "is", "going", "bar", "hopping"]
# ::lemmas ["GREATtell", "Boris", "Karloff", "his", "babe", "be", "go", "bar", "hopping"]
(c11-2 / tell-01
       :ARG0 (c11-7 / you)
       :ARG1 (c11-3 / hop-03
                    :ARG0 (c11-1 / person
                                 :name (c11-5 / name
                                              :op1 "Boris"
                                              :op2 "Karloff")
                                 :mod (c11-6 / babe
                                             :poss c11-1))
                    :ARG1 (c11-0 / bar))
       :ARG2 c11-1
       :manner (c11-4 / great)
       :mode imperative)

# ::snt That would be fantastic
# ::tokens ["That", "would", "be", "fantastic"]
# ::lemmas ["that", "would", "be", "fantastic"]
(c12-0 / fantastic-02
       :ARG1 (c12-1 / that))

# ::snt Outstanding
# ::tokens ["Outstanding"]
# ::lemmas ["outstanding"]
(c13-0 / outstanding)

# ::snt BFD Shut up and go away  Why do people think the presidency is a about one man
# ::tokens ["BFD", "Shut", "up", "and", "go", "away", " ", "Why", "do", "people", "think", "the", "presidency", "is", "a", "about", "one", "man"]
# ::lemmas ["BFD", "Shut", "up", "and", "go", "away", " ", "why", "do", "people", "think", "the", "presidency", "be", "a", "about", "one", "man"]
(c14-9 / multi-sentence
       :snt1 (c14-7 / and
                    :op1 (c14-8 / shut-up-06
                                :ARG1 (c14-12 / government-organization
                                              :name (c14-10 / name
                                                            :op1 "BFD")))
                    :op2 (c14-3 / go-02
                                :ARG0 c14-12
                                :ARG4 (c14-5 / away)))
       :snt2 (c14-6 / think-01
                    :ARG0 (c14-2 / person)
                    :ARG1 (c14-11 / have-mod-91
                                  :ARG1 (c14-0 / presidency)
                                  :ARG2 (c14-14 / about
                                                :op1 (c14-1 / man
                                                            :quant 1)))
                    :ARG1-of (c14-4 / cause-01
                                    :ARG0 (c14-13 / amr-unknown))))

# ::snt Lisa
# ::tokens ["Lisa"]
# ::lemmas ["Lisa"]
(c15-0 / person
       :name (c15-1 / name
                    :op1 "Lisa"))

# ::snt Justice Ginsbergs retirement carries as much weight as Woopies moving to Canada Believe it when I see it
# ::tokens ["Justice", "Ginsbergs", "retirement", "carries", "as", "much", "weight", "as", "Woopies", "moving", "to", "Canada", "Believe", "it", "when", "I", "see", "it"]
# ::lemmas ["Justice", "Ginsbergs", "retirement", "carry", "as", "much", "weight", "as", "woopie", "move", "to", "Canada", "believe", "it", "when", "i", "see", "it"]
(c16-15 / believe-01
        :ARG0 (c16-16 / you)
        :ARG1 (c16-3 / carry-01
                     :ARG0 (c16-0 / retire-01
                                  :ARG0 (c16-4 / person
                                               :name (c16-13 / name
                                                             :op1 "Ginsberg")
                                               :ARG0-of (c16-10 / have-org-role-91
                                                                :ARG2 (c16-2 / justice))))
                     :ARG1 (c16-8 / weight
                                  :ARG1-of (c16-5 / have-quant-91
                                                  :ARG3 (c16-6 / equal)
                                                  :ARG4 (c16-11 / move-01
                                                                :ARG0 (c16-1 / woopie)
                                                                :ARG2 (c16-9 / country
                                                                             :name (c16-7 / name
                                                                                          :op1 "Canada"))))))
        :time (c16-12 / see-01
                      :ARG0 (c16-14 / i)
                      :ARG1 c16-3)
        :mode imperative)

# ::snt Good Now lets set age limit of mandatory retirement at 75
# ::tokens ["Good", "Now", "lets", "set", "age", "limit", "of", "mandatory", "retirement", "at", "75"]
# ::lemmas ["good", "now", "let", "set", "age", "limit", "of", "mandatory", "retirement", "at", "75"]
(c17-4 / set-02
       :ARG0 (c17-2 / we)
       :ARG1 (c17-5 / limit-01
                    :ARG1 (c17-3 / age-01
                                 :ARG2 (c17-0 / retire-01
                                              :mod (c17-6 / mandatory)))
                    :ARG2 (c17-1 / temporal-quantity
                                 :unit (c17-9 / year)
                                 :quant 75))
       :ARG2 (c17-8 / now
                    :ARG1-of (c17-7 / good-02))
       :mode imperative)

# ::snt thank the man above
# ::tokens ["thank", "the", "man", "above"]
# ::lemmas ["thank", "the", "man", "above"]
(c18-1 / thank-01
       :ARG1 (c18-2 / man
                    :location (c18-0 / above)))

# ::snt Thank you Jesus
# ::tokens ["Thank", "you", "Jesus"]
# ::lemmas ["thank", "you", "Jesus"]
(c19-2 / say-01
       :ARG0 (c19-4 / i)
       :ARG1 (c19-1 / thank-01
                    :ARG0 c19-4
                    :ARG1 (c19-0 / person
                                 :name (c19-3 / name
                                              :op1 "Jesus")
                                 :ARG2-of c19-2)))

# ::snt JoyfulAmbitions WOW We will have awesome justices who will be filled for that position
# ::tokens ["JoyfulAmbitions", "WOW", "We", "will", "have", "awesome", "justices", "who", "will", "be", "filled", "for", "that", "position"]
# ::lemmas ["JoyfulAmbitions", "WOW", "we", "will", "have", "awesome", "justice", "who", "will", "be", "fill", "for", "that", "position"]
(c20-8 / hope-01
       :ARG1 (c20-3 / have-03
                    :ARG0 (c20-5 / we)
                    :ARG1 (c20-1 / person
                                 :ARG0-of (c20-2 / have-org-role-91
                                                 :ARG2 (c20-9 / justice))
                                 :ARG0-of (c20-6 / awe-01)
                                 :ARG1-of (c20-7 / fill-01
                                                 :ARG2 (c20-0 / position
                                                              :mod (c20-4 / that))))))

# ::snt Your T and responses made me laugh  heart sing Tks
# ::tokens ["Your", "T", "and", "responses", "made", "me", "laugh", " ", "heart", "sing", "Tks"]
# ::lemmas ["your", "t", "and", "response", "make", "me", "laugh", " ", "heart", "sing", "tks"]
(c21-5 / make-02
       :ARG0 (c21-3 / and
                    :op1 (c21-1 / thing
                                :mod (c21-4 / string-entity
                                            :value "T")
                                :poss (c21-10 / you))
                    :op2 (c21-9 / thing
                                :ARG2-of (c21-0 / respond-01
                                                :ARG0 c21-10)))
       :ARG1 (c21-6 / laugh-01
                    :ARG0 (c21-8 / i
                                 :part (c21-7 / heart))
                    :ARG2-of (c21-2 / sing-01
                                    :ARG1 c21-7)))

# ::snt WOO HOO
# ::tokens ["WOO", "HOO"]
# ::lemmas ["WOO", "HOO"]
(c22-0 / woo
       :mode expressive)

# ::snt about damn time I was wondering if she still had a pulse before now Now PresidentTrump can take over We got this
# ::tokens ["about", "damn", "time", "I", "was", "wondering", "if", "she", "still", "had", "a", "pulse", "before", "now", "Now", "PresidentTrump", "can", "take", "over", "We", "got", "this"]
# ::lemmas ["about", "damn", "time", "i", "be", "wonder", "if", "she", "still", "have", "a", "pulse", "before", "now", "now", "PresidentTrump", "can", "take", "over", "we", "get", "this"]
(c23-12 / multi-sentence
        :snt1 (c23-1 / wonder-01
                     :ARG0 (c23-2 / i)
                     :ARG1 (c23-10 / truth-value
                                   :polarity-of (c23-0 / pulse-01
                                                       :ARG1 (c23-18 / she)
                                                       :mod (c23-11 / still)
                                                       :time (c23-14 / before
                                                                     :op1 (c23-8 / now))))
                     :time (c23-17 / about
                                   :op1 (c23-3 / time
                                               :mod (c23-16 / damn))))
        :snt2 (c23-4 / possible-01
                     :ARG1 (c23-6 / take-over-12
                                  :ARG0 (c23-15 / person
                                                :name (c23-5 / name
                                                             :op1 "Trump")
                                                :ARG0-of (c23-7 / have-org-role-91
                                                                :ARG2 (c23-13 / president))))
                     :snt3 (c23-19 / get-01
                                   :ARG0 (c23-9 / we)
                                   :ARG1 (c23-20 / this))))

# ::snt GOOD
# ::tokens ["GOOD"]
# ::lemmas ["good"]
(c24-0 / good-02)

# ::snt good riddance
# ::tokens ["good", "riddance"]
# ::lemmas ["good", "riddance"]
(c25-1 / riddance
       :ARG1-of (c25-0 / good-02))

# ::snt Are you sure  The very idea that any liberal will actually go through with their blurted out vow to leave YEAH
# ::tokens ["Are", "you", "sure", " ", "The", "very", "idea", "that", "any", "liberal", "will", "actually", "go", "through", "with", "their", "blurted", "out", "vow", "to", "leave", "YEAH"]
# ::lemmas ["be", "you", "sure", " ", "the", "very", "idea", "that", "any", "liberal", "will", "actually", "go", "through", "with", "their", "blurt", "out", "vow", "to", "leave", "YEAH"]
(c26-7 / sure-02
       :ARG0 (c26-14 / you)
       :ARG1 (c26-11 / idea
                     :mod (c26-3 / very)
                     :topic (c26-10 / go-through-20
                                    :ARG0 (c26-0 / person
                                                 :ARG1-of (c26-8 / liberal-02)
                                                 :mod (c26-5 / any))
                                    :ARG1 (c26-4 / vow-01
                                                 :ARG0 c26-0
                                                 :ARG1 (c26-6 / leave-15
                                                              :ARG0 c26-0
                                                              :ARG1 (c26-1 / country
                                                                           :name (c26-9 / name
                                                                                        :op1 "Israel")))
                                                 :ARG1-of (c26-12 / blur-01))
                                    :ARG1-of (c26-2 / actual-02)))
       :polarity (c26-13 / amr-unknown))

# ::snt LeahR77 got to know when to hold them and when to fold them
# ::tokens ["LeahR77", "got", "to", "know", "when", "to", "hold", "them", "and", "when", "to", "fold", "them"]
# ::lemmas ["LeahR77", "get", "to", "know", "when", "to", "hold", "them", "and", "when", "to", "fold", "them"]
(c27-8 / get-03
       :ARG1 (c27-0 / person
                    :name (c27-7 / name
                                 :op1 "LeahR77"))
       :ARG2 (c27-5 / know-01
                    :ARG0 c27-0
                    :ARG1 (c27-2 / and
                                 :op1 (c27-1 / time
                                             :time-of (c27-6 / hold-01
                                                             :ARG0 c27-0
                                                             :ARG1 (c27-9 / they)))
                                 :op2 (c27-3 / time
                                             :time-of (c27-4 / fold-03
                                                             :ARG0 c27-0
                                                             :ARG1 c27-9)))))

# ::snt Bye Felicia
# ::tokens ["Bye", "Felicia"]
# ::lemmas ["Bye", "Felicia"]
(c28-3 / say-01
       :ARG0 (c28-2 / i)
       :ARG2 (c28-0 / person
                    :name (c28-1 / name
                                 :op1 "Felicia")))

# ::snt Running away not going to solve anything
# ::tokens ["Running", "away", "not", "going", "to", "solve", "anything"]
# ::lemmas ["run", "away", "not", "go", "to", "solve", "anything"]
(c29-3 / solve-01
       :ARG0 (c29-0 / run-02
                    :ARG0 (c29-4 / you)
                    :direction (c29-2 / away))
       :ARG1 (c29-1 / anything)
       :polarity -)

# ::snt   fake news aleart
# ::tokens ["  ", "fake", "news", "aleart"]
# ::lemmas ["  ", "fake", "news", "aleart"]
(c30-0 / aleart
       :mod (c30-1 / news
                   :ARG1-of (c30-2 / fake-02)))

# ::snt Nataila69276884 This is great news
# ::tokens ["Nataila69276884", "This", "is", "great", "news"]
# ::lemmas ["Nataila69276884", "this", "be", "great", "news"]
(c31-3 / say-01
       :ARG0 (c31-6 / i)
       :ARG1 (c31-4 / news
                    :mod (c31-5 / great)
                    :domain (c31-2 / this))
       :ARG2 (c31-0 / person
                    :name (c31-1 / name
                                 :op1 "Nataila69276884")))

# ::snt Should we lock her up
# ::tokens ["Should", "we", "lock", "her", "up"]
# ::lemmas ["should", "we", "lock", "her", "up"]
(c32-0 / recommend-01
       :ARG1 (c32-2 / lock-up-03
                    :ARG0 (c32-3 / we)
                    :ARG1 (c32-1 / she)))

# ::snt Uh oh Obama may try to replace both judges in the tiny period between senate recess and new session Recess appointment
# ::tokens ["Uh", "oh", "Obama", "may", "try", "to", "replace", "both", "judges", "in", "the", "tiny", "period", "between", "senate", "recess", "and", "new", "session", "Recess", "appointment"]
# ::lemmas ["uh", "oh", "Obama", "may", "try", "to", "replace", "both", "judge", "in", "the", "tiny", "period", "between", "senate", "recess", "and", "new", "session", "Recess", "appointment"]
(c33-2 / possible-01
       :ARG1 (c33-14 / try-01
                     :ARG0 (c33-5 / person
                                  :name (c33-11 / name
                                                :op1 "Obama"))
                     :ARG1 (c33-0 / replace-01
                                  :ARG0 c33-5
                                  :ARG1 (c33-17 / person
                                                :ARG0-of (c33-10 / have-org-role-91
                                                                 :ARG3 (c33-22 / judge-01))
                                                :mod (c33-16 / both)))
                     :time (c33-15 / period
                                   :mod (c33-4 / tiny)
                                   :time-of (c33-18 / between
                                                    :op1 (c33-9 / recess-02
                                                                :ARG0 (c33-21 / government-organization
                                                                              :name (c33-7 / name
                                                                                           :op1 "Senate")))
                                                    :op2 (c33-19 / appoint-01
                                                                 :ARG1 (c33-12 / person
                                                                               :ARG0-of (c33-8 / have-org-role-91
                                                                                               :ARG1 (c33-13 / government-organization
                                                                                                             :name (c33-1 / name
                                                                                                                          :op1 "Senate"))))
                                                                 :mod (c33-20 / session
                                                                              :ARG1-of (c33-6 / new-01))))))
       :mod (c33-3 / uh-oh
                   :mode expressive))

# ::snt  she kept her word how about the rest of you celebrities
# ::tokens [" ", "she", "kept", "her", "word", "how", "about", "the", "rest", "of", "you", "celebrities"]
# ::lemmas [" ", "she", "keep", "her", "word", "how", "about", "the", "rest", "of", "you", "celebrity"]
(c34-4 / keep-01
       :ARG0 (c34-3 / she)
       :ARG1 (c34-2 / word
                    :poss c34-3
                    :topic (c34-1 / celebrity
                                  :domain (c34-0 / rest
                                                 :ARG1-of (c34-5 / include-91
                                                                 :ARG2 (c34-6 / you))))))

# ::snt its about time What is she like a million years old
# ::tokens ["its", "about", "time", "What", "is", "she", "like", "a", "million", "years", "old"]
# ::lemmas ["its", "about", "time", "what", "be", "she", "like", "a", "million", "years", "old"]
(c35-0 / resemble-01
       :ARG1 (c35-4 / she)
       :ARG2 (c35-2 / temporal-quantity
                    :unit (c35-5 / year)
                    :quant 1000000)
       :polarity (c35-3 / amr-unknown)
       :time (c35-1 / about-time))

# ::snt Scotland or Canada   Will she leave the USA  too  Hope so  Thats what she said
# ::tokens ["Scotland", "or", "Canada", "  ", "Will", "she", "leave", "the", "USA", " ", "too", " ", "Hope", "so", " ", "That", "s", "what", "she", "said"]
# ::lemmas ["Scotland", "or", "Canada", "  ", "will", "she", "leave", "the", "USA", " ", "too", " ", "Hope", "so", " ", "that", "s", "what", "she", "say"]
(c36-9 / multi-sentence
       :snt1 (c36-0 / or
                    :op1 (c36-3 / country
                                :name (c36-13 / name
                                              :op1 "Scotland"))
                    :op2 (c36-8 / country
                                :name (c36-4 / name
                                             :op1 "Canada"))
                    :polarity (c36-6 / amr-unknown))
       :snt2 (c36-10 / hope-01
                     :ARG0 (c36-14 / i)
                     :ARG1 (c36-11 / leave-11
                                   :ARG0 (c36-12 / she)
                                   :ARG1 (c36-1 / country
                                                :name (c36-2 / name
                                                             :op1 "USA"))
                                   :mod (c36-5 / too))
                     :ARG0-of (c36-7 / cause-01
                                     :ARG1 (c36-15 / that))))

# ::snt ConstanceQueen8  FakeNews Click bait site  Makes money on false news by referrals from accts like this
# ::tokens ["ConstanceQueen8", " ", "FakeNews", "Click", "bait", "site", " ", "Makes", "money", "on", "false", "news", "by", "referrals", "from", "accts", "like", "this"]
# ::lemmas ["ConstanceQueen8", " ", "FakeNews", "Click", "bait", "site", " ", "make", "money", "on", "false", "news", "by", "referral", "from", "acct", "like", "this"]
(c37-11 / multi-sentence
        :snt1 (c37-3 / person
                     :name (c37-13 / name
                                   :op1 "ConstanceQueen8"))
        :snt2 (c37-2 / make-05
                     :ARG0 (c37-10 / site
                                   :ARG1-of (c37-4 / click-01)
                                   :mod (c37-14 / bait-01)
                                   :mod (c37-9 / fake))
                     :ARG1 (c37-12 / money)
                     :ARG2 (c37-5 / news
                                  :mod (c37-1 / false))
                     :manner (c37-0 / referrals
                                    :source (c37-7 / acct
                                                   :ARG1-of (c37-8 / resemble-01
                                                                   :ARG2 (c37-6 / this))))))

# ::snt DrMartyFox 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63
# ::tokens ["DrMartyFox", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63"]
# ::lemmas ["DrMartyFox", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63"]
(c38-5 / person
       :name (c38-8 / name
                    :op1 "DrMartyFox")
       :ARG1-of (c38-9 / include-91
                       :ARG2 (c38-6 / and
                                    :op1 63_1
                                    :op2 63_0
                                    :op3 63_1)
                       :ARG1-of (c38-1 / include-91
                                       :ARG2 63_3)
                       :op4 63_2)
       :ARG1-of (c38-7 / include-91
                       :ARG2 63_5)
       :ARG1-of (c38-2 / include-91
                       :ARG2 63_5)
       :ARG1-of (c38-3 / include-91
                       :ARG2 63_6)
       :ARG1-of (c38-0 / include-91
                       :ARG2 63_6)
       :ARG1-of (c38-4 / include-91
                       :ARG2 63_6
                       :ARG3 63_7)
       :mod 63_0
       :mod 63_4
       :mod 63_6
       :mod 63_6
       :mod 63_7
       :mod 63_7
       :mod 63_8
       :ARG1 63_7
       :mod 63_9
       :ARG1 63_7
       :mod 63_8
       :ARG1 63_7
       :mod 63_9
       :ARG1 63_7
       :mod 63_8
       :ARG1 63_7
       :mod 63_9
       :ARG1 63_7
       :mod 63_8
       :ARG1 63_7)

# ::snt SpotShopMedia well there is some really great news
# ::tokens ["SpotShopMedia", "well", "there", "is", "some", "really", "great", "news"]
# ::lemmas ["spotshopmedia", "well", "there", "be", "some", "really", "great", "news"]
(c39-5 / news
       :mod (c39-6 / great
                   :degree (c39-0 / really))
       :mod (c39-4 / some)
       :source (c39-1 / company
                      :name (c39-2 / name
                                   :op1 "SpotShopMedia"))
       :mod (c39-3 / well))

# ::snt Duxgirl27 Im doing a dance
# ::tokens ["Duxgirl27", "I", "m", "doing", "a", "dance"]
# ::lemmas ["duxgirl27", "i", "be", "do", "a", "dance"]
(c40-0 / dance-01
       :ARG0 (c40-4 / i)
       :ARG1-of (c40-2 / say-01
                       :ARG2 (c40-1 / person
                                    :name (c40-3 / name
                                                 :op1 "Duxgirl27"))))

# ::snt So long Skag
# ::tokens ["So", "long", "Skag"]
# ::lemmas ["so", "long", "Skag"]
(c41-2 / say-01
       :ARG1 (c41-3 / long-03
                    :degree (c41-1 / so))
       :ARG2 (c41-0 / person
                    :name (c41-4 / name
                                 :op1 "Skag")))

# ::snt BrokenCountry1  this great news Justice Ginsburg never followed the constitution and rule by her ideology only
# ::tokens ["BrokenCountry1", " ", "this", "great", "news", "Justice", "Ginsburg", "never", "followed", "the", "constitution", "and", "rule", "by", "her", "ideology", "only"]
# ::lemmas ["BrokenCountry1", " ", "this", "great", "news", "Justice", "Ginsburg", "never", "follow", "the", "constitution", "and", "rule", "by", "her", "ideology", "only"]
(c42-10 / say-01
        :ARG0 (c42-12 / news
                      :mod (c42-7 / this)
                      :mod (c42-13 / great))
        :ARG1 (c42-8 / and
                     :op1 (c42-9 / follow-02
                                 :ARG0 (c42-3 / person
                                              :name (c42-4 / name
                                                           :op1 "Ginsburg")
                                              :ARG0-of (c42-11 / have-org-role-91
                                                               :ARG2 (c42-15 / justice)))
                                 :ARG1 (c42-5 / constitution)
                                 :polarity -)
                     :op2 (c42-1 / rule-01
                                 :ARG0 c42-3
                                 :manner (c42-14 / ideology
                                                 :poss c42-3)
                                 :mod (c42-0 / only))
                     :time (c42-6 / ever))
        :ARG2 c42-3
        :name (c42-2 / name
                     :op1 "BrokenCountry1"))

# ::snt Sounds like fake news Wish it were true though
# ::tokens ["Sounds", "like", "fake", "news", "Wish", "it", "were", "true", "though"]
# ::lemmas ["sound", "like", "fake", "news", "wish", "it", "be", "true", "though"]
(c43-4 / sound-01
       :ARG2 (c43-6 / news
                    :ARG1-of (c43-3 / fake-02))
       :ARG1-of (c43-2 / wish-01
                       :ARG0 (c43-7 / i)
                       :ARG1 (c43-1 / true-01
                                    :ARG1 (c43-0 / it))
                       :ARG1-of (c43-5 / have-concession-91)))

# ::snt bowhunterva This is from before the election What does she say NOW
# ::tokens ["bowhunterva", "This", "is", "from", "before", "the", "election", "What", "does", "she", "say", "NOW"]
# ::lemmas ["bowhunterva", "this", "be", "from", "before", "the", "election", "what", "do", "she", "say", "now"]
(c44-7 / say-01
       :ARG0 (c44-5 / she)
       :ARG1 (c44-6 / amr-unknown)
       :time (c44-8 / now)
       :ARG1-of (c44-0 / cause-01
                       :ARG0 (c44-4 / this
                                    :time (c44-9 / before
                                                 :op1 (c44-1 / elect-01))))
       :ARG2 (c44-2 / person
                    :name (c44-3 / name
                                 :op1 "bowhunterva")))

# ::snt bowhunterva all I can say isBYE
# ::tokens ["bowhunterva", "all", "I", "can", "say", "isBYE"]
# ::lemmas ["bowhunterva", "all", "i", "can", "say", "isbye"]
(c45-4 / say-01
       :ARG0 (c45-6 / i)
       :ARG1 (c45-2 / welcome-01)
       :ARG2 (c45-1 / person
                    :name (c45-5 / name
                                 :op1 "bowhunterva"))
       :ARG1-of (c45-0 / possible-01)
       :mod (c45-3 / all))

# ::snt May her departure be hasty and her replacement be as Conservative as JusticeAntoninScalia May God Preserve Conservatism
# ::tokens ["May", "her", "departure", "be", "hasty", "and", "her", "replacement", "be", "as", "Conservative", "as", "JusticeAntoninScalia", "May", "God", "Preserve", "Conservatism"]
# ::lemmas ["may", "her", "departure", "be", "hasty", "and", "her", "replacement", "be", "as", "Conservative", "as", "justiceantoninscalia", "may", "God", "Preserve", "Conservatism"]
(c46-11 / and
        :op1 (c46-5 / possible-01
                    :ARG1 (c46-13 / hasty
                                  :domain (c46-4 / depart-01
                                                 :ARG0 (c46-12 / she))))
        :op2 (c46-1 / possible-01
                    :ARG1 (c46-7 / have-degree-91
                                 :ARG1 (c46-2 / replace-01
                                              :ARG1 c46-12)
                                 :ARG2 (c46-6 / conservative)
                                 :ARG3 (c46-8 / equal)
                                 :ARG4 (c46-0 / person
                                              :name (c46-16 / name
                                                            :op1 "AntoninScalia"))))
        :op3 (c46-15 / permit-01
                     :ARG0 (c46-9 / person
                                  :name (c46-10 / name
                                                :op1 "God"))
                     :ARG1 (c46-3 / preserve-01
                                  :ARG0 c46-9
                                  :ARG1 (c46-14 / conservatism))))

# ::snt Fake news
# ::tokens ["Fake", "news"]
# ::lemmas ["fake", "news"]
(c47-0 / news
       :ARG1-of (c47-1 / fake-02))

# ::snt BLAZEE2 Good riddance
# ::tokens ["BLAZEE2", "Good", "riddance"]
# ::lemmas ["BLAZEE2", "good", "riddance"]
(c48-2 / riddance
       :ARG1-of (c48-1 / good-02)
       :domain (c48-0 / person
                      :name (c48-3 / name
                                   :op1 "Blazee2")))

# ::snt Did she just wake up
# ::tokens ["Did", "she", "just", "wake", "up"]
# ::lemmas ["do", "she", "just", "wake", "up"]
(c49-3 / wake-up-02
       :polarity (c49-0 / amr-unknown)
       :ARG1 (c49-2 / she)
       :mod (c49-1 / just))

# ::snt Well she is a dinosaur
# ::tokens ["Well", "she", "is", "a", "dinosaur"]
# ::lemmas ["well", "she", "be", "a", "dinosaur"]
(c50-0 / dinosaur
       :domain (c50-1 / she)
       :mod (c50-2 / well))
