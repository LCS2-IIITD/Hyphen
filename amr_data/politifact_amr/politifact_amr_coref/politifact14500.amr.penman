# ::snt These Americans shouldnt have to pay for anything
# ::tokens ["These", "Americans", "should", "nt", "have", "to", "pay", "for", "anything"]
# ::lemmas ["these", "Americans", "should", "not", "have", "to", "pay", "for", "anything"]
(c1-1 / recommend-01
      :ARG1 (c1-0 / obligate-01
                  :ARG1 (c1-3 / person
                              :mod (c1-4 / country
                                         :name (c1-7 / name
                                                     :op1 "America"))
                              :mod (c1-5 / this))
                  :ARG2 (c1-2 / pay-01
                              :ARG0 c1-3
                              :ARG3 (c1-6 / anything))
                  :polarity -))

# ::snt its from a satiricalfake news site Not true
# ::tokens ["its", "from", "a", "satiricalfake", "news", "site", "Not", "true"]
# ::lemmas ["its", "from", "a", "satiricalfake", "news", "site", "not", "true"]
(c2-0 / true-01
      :ARG1 (c2-5 / it
                  :source (c2-3 / site
                                :mod (c2-4 / news)
                                :ARG1-of (c2-2 / fake-02)
                                :ARG0-of (c2-1 / satirical-00)))
      :polarity -)

# ::snt I have not seen any other reference to this
# ::tokens ["I", "have", "not", "seen", "any", "other", "reference", "to", "this"]
# ::lemmas ["i", "have", "not", "see", "any", "other", "reference", "to", "this"]
(c3-4 / see-01
      :ARG0 (c3-5 / i)
      :ARG1 (c3-1 / reference-04
                  :ARG1 (c3-2 / this)
                  :mod (c3-0 / other)
                  :mod (c3-3 / any))
      :polarity -)

# ::snt Ask ChelseaClinton to look into it
# ::tokens ["Ask", "ChelseaClinton", "to", "look", "into", "it"]
# ::lemmas ["ask", "ChelseaClinton", "to", "look", "into", "it"]
(c4-1 / ask-02
      :ARG0 (c4-5 / you)
      :ARG1 (c4-2 / look-into-11
                  :ARG0 (c4-0 / person
                              :name (c4-3 / name
                                          :op1 "ChelseaClinton"))
                  :ARG1 (c4-4 / it))
      :ARG2 c4-0
      :mode imperative)

# ::snt This woman truly a mental caseEvery American needs to see what she will do for a buck So corrupt RT RT RT RT RT  this is showing love
# ::tokens ["This", "woman", "truly", "a", "mental", "caseEvery", "American", "needs", "to", "see", "what", "she", "will", "do", "for", "a", "buck", "So", "corrupt", "RT", "RT", "RT", "RT", "RT", " ", "this", "is", "showing", "love"]
# ::lemmas ["this", "woman", "truly", "a", "mental", "caseevery", "American", "need", "to", "see", "what", "she", "will", "do", "for", "a", "buck", "so", "corrupt", "RT", "RT", "RT", "RT", "RT", " ", "this", "be", "show", "love"]
(c5-7 / case-03
      :ARG1 (c5-4 / woman
                  :mod (c5-11 / this))
      :mod (c5-13 / mind)
      :ARG1-of (c5-5 / true-01)
      :ARG1-of (c5-20 / need-01
                      :ARG0 (c5-2 / person
                                  :mod (c5-18 / country
                                              :name (c5-8 / name
                                                          :op1 "America"))
                                  :mod (c5-3 / every))
                      :purpose (c5-19 / see-01
                                      :ARG0 c5-2
                                      :ARG1 (c5-9 / thing
                                                  :ARG1-of (c5-16 / do-02
                                                                  :ARG0 c5-4
                                                                  :ARG3 (c5-15 / buck)))))
      :ARG1-of (c5-0 / cause-01
                     :ARG0 (c5-17 / and
                                  :op1 (c5-10 / corrupt-01
                                              :ARG1 (c5-6 / publication
                                                          :name c5-8
                                                          :op1 "RT")))
                     :op2 (c5-1 / RT-03
                                :ARG0 c5-6)
                     :op3 (c5-12 / show-01
                                 :ARG0 c5-11)
                     :ARG1 (c5-14 / love-01)))

# ::snt If its true its very believable
# ::tokens ["If", "its", "true", "its", "very", "believable"]
# ::lemmas ["if", "its", "true", "its", "very", "believable"]
(c6-3 / have-condition-91
      :ARG1 (c6-0 / possible-01
                  :ARG1 (c6-5 / believe-01
                              :ARG1 (c6-4 / it))
                  :degree (c6-2 / very))
      :ARG2 (c6-1 / true-01
                  :ARG1 c6-4))
