# ::snt Lol
# ::tokens ["Lol"]
# ::lemmas ["Lol"]
(c1-1 / laugh-01
      :manner (c1-0 / loud)
      :mode expressive)

# ::snt Sister Sister    the Clinton girlsso scary
# ::tokens ["Sister", "Sister", "   ", "the", "Clinton", "girlsso", "scary"]
# ::lemmas ["Sister", "Sister", "   ", "the", "Clinton", "girlsso", "scary"]
(c2-3 / say-01
      :ARG0 (c2-7 / i)
      :ARG1 (c2-2 / scary-03
                  :ARG0 (c2-6 / girl
                              :name (c2-5 / name
                                          :op1 "Clinton"))
                  :degree (c2-1 / so))
      :ARG2 (c2-0 / person
                  :ARG0-of (c2-4 / have-rel-role-91
                                 :ARG2 (c2-8 / sister))))

# ::snt Hehehe delusional
# ::tokens ["Hehehe", "delusional"]
# ::lemmas ["hehehe", "delusional"]
(c3-0 / delusional
      :domain (c3-1 / hehe
                    :mode expressive))

# ::snt Really
# ::tokens ["Really"]
# ::lemmas ["really"]
(c4-0 / real-04)

# ::snt No Fake News
# ::tokens ["No", "Fake", "News"]
# ::lemmas ["no", "Fake", "news"]
(c5-0 / news
      :ARG1-of (c5-1 / fake-02)
      :polarity -)

# ::snt Is this real
# ::tokens ["Is", "this", "real"]
# ::lemmas ["be", "this", "real"]
(c6-1 / real-04
      :polarity (c6-0 / amr-unknown)
      :ARG1 (c6-2 / this))

# ::snt Yes and all her cannibal celebrity friends needs to be prosecuted
# ::tokens ["Yes", "and", "all", "her", "cannibal", "celebrity", "friends", "needs", "to", "be", "prosecuted"]
# ::lemmas ["yes", "and", "all", "her", "cannibal", "celebrity", "friend", "need", "to", "be", "prosecute"]
(c7-5 / and
      :op2 (c7-0 / obligate-01
                 :ARG2 (c7-2 / prosecute-01
                             :ARG1 (c7-1 / person
                                         :mod (c7-4 / all)
                                         :ARG0-of (c7-8 / have-rel-role-91
                                                        :ARG1 (c7-7 / she)
                                                        :ARG2 (c7-6 / friend
                                                                    :mod (c7-3 / celebrity))
                                                        :mod (c7-9 / cannibal))))))

# ::snt She needs to be investigated for cannibal club
# ::tokens ["She", "needs", "to", "be", "investigated", "for", "cannibal", "club"]
# ::lemmas ["she", "need", "to", "be", "investigate", "for", "cannibal", "club"]
(c8-3 / need-01
      :ARG0 (c8-1 / she)
      :ARG1 (c8-4 / investigate-01
                  :ARG1 c8-1
                  :ARG2 (c8-0 / club
                              :mod (c8-2 / cannibal))))

# ::snt Somebody is dreamingmaybe some day
# ::tokens ["Somebody", "is", "dreamingmaybe", "some", "day"]
# ::lemmas ["somebody", "be", "dreamingmaybe", "some", "day"]
(c9-0 / dream-01
      :ARG0 (c9-4 / somebody)
      :ARG1-of (c9-1 / possible-01
                     :time (c9-3 / day
                                 :mod (c9-2 / some))))

# ::snt Hope it’s true
# ::tokens ["Hope", "it", "\u2019s", "true"]
# ::lemmas ["hope", "it", "\u2019", "true"]
(c10-3 / hope-01
       :ARG0 (c10-0 / i)
       :ARG1 (c10-2 / true-01
                    :ARG1 (c10-1 / it)))

# ::snt Wow
# ::tokens ["Wow"]
# ::lemmas ["wow"]
(c11-0 / wow
       :mode expressive)

# ::snt Searching
# ::tokens ["Searching"]
# ::lemmas ["search"]
(c12-0 / search-01)

# ::snt Any other sources
# ::tokens ["Any", "other", "sources"]
# ::lemmas ["any", "other", "source"]
(c13-2 / source
       :mod (c13-0 / any)
       :mod (c13-1 / other))

# ::snt More winning
# ::tokens ["More", "winning"]
# ::lemmas ["more", "winning"]
(c14-1 / win-01
       :mod (c14-0 / more))

# ::snt Well it’s not true darn it Lol
# ::tokens ["Well", "it", "\u2019s", "not", "true", "darn", "it", "Lol"]
# ::lemmas ["well", "it", "\u2019", "not", "true", "darn", "it", "lol"]
(c15-1 / true-01
       :ARG1 (c15-4 / it)
       :ARG1-of (c15-0 / darn-01
                       :manner (c15-3 / loud)
                       :mode expressive)
       :mod (c15-2 / well)
       :polarity -)

# ::snt Sad isn’t it
# ::tokens ["Sad", "is", "n\u2019t", "it"]
# ::lemmas ["sad", "be", "not", "it"]
(c16-1 / sad-02
       :ARG1 (c16-0 / it)
       :polarity -)

# ::snt Most news is only opinion so why not believe this story
# ::tokens ["Most", "news", "is", "only", "opinion", "so", "why", "not", "believe", "this", "story"]
# ::lemmas ["most", "news", "be", "only", "opinion", "so", "why", "not", "believe", "this", "story"]
(c17-0 / opine-01
       :ARG0 (c17-8 / news
                    :mod (c17-6 / most))
       :mod (c17-1 / only)
       :ARG0-of (c17-2 / cause-01
                       :ARG1 (c17-9 / believe-01
                                    :ARG1 (c17-5 / story
                                                 :mod (c17-3 / this))
                                    :ARG1-of (c17-7 / cause-01
                                                    :ARG0 (c17-4 / amr-unknown))
                                    :polarity -)))

# ::snt This is a hoax Shameful
# ::tokens ["This", "is", "a", "hoax", "Shameful"]
# ::lemmas ["this", "be", "a", "hoax", "Shameful"]
(c18-1 / shame-02
       :ARG0 (c18-2 / hoax-01
                    :ARG2 (c18-0 / this)))

# ::snt EveryBodyKnewThat TonyTippoff
# ::tokens ["EveryBodyKnewThat", "TonyTippoff"]
# ::lemmas ["everybodyknewthat", "TonyTippoff"]
(c19-3 / say-01
       :ARG0 (c19-5 / i)
       :ARG1 (c19-2 / know-01
                    :ARG0 c19-5
                    :ARG1 (c19-1 / that))
       :ARG2 (c19-0 / person
                    :name (c19-4 / name
                                 :op1 "TonyTippoff")))

# ::snt Sorry to inform you the page link will not load Great piece to be vetted
# ::tokens ["Sorry", "to", "inform", "you", "the", "page", "link", "will", "not", "load", "Great", "piece", "to", "be", "vetted"]
# ::lemmas ["sorry", "to", "inform", "you", "the", "page", "link", "will", "not", "load", "great", "piece", "to", "be", "vet"]
(c20-5 / sorry-01
       :ARG1 (c20-8 / i)
       :ARG2 (c20-0 / inform-01
                    :ARG0 c20-8
                    :ARG1 (c20-9 / you)
                    :ARG2 (c20-6 / load-01
                                 :ARG1 (c20-4 / link
                                              :mod (c20-2 / page))
                                 :ARG3 (c20-1 / piece
                                              :mod (c20-7 / great)
                                              :ARG1-of (c20-3 / vet-01))
                                 :polarity -)))

# ::snt A Clinton in handcuffs Ill believe it when I see it
# ::tokens ["A", "Clinton", "in", "handcuffs", "Ill", "believe", "it", "when", "I", "see", "it"]
# ::lemmas ["a", "Clinton", "in", "handcuff", "Ill", "believe", "it", "when", "i", "see", "it"]
(c21-6 / believe-01
       :ARG0 (c21-5 / i)
       :ARG1 (c21-0 / it)
       :time (c21-2 / see-01
                    :ARG0 c21-5
                    :ARG1 c21-0)
       :condition (c21-3 / handcuff-01
                         :ARG1 (c21-1 / person
                                      :name (c21-4 / name
                                                   :op1 "Clinton"))))

# ::snt My heart just bleeds for those two women
# ::tokens ["My", "heart", "just", "bleeds", "for", "those", "two", "women"]
# ::lemmas ["my", "heart", "just", "bleed", "for", "those", "two", "woman"]
(c22-5 / bleeds-01
       :ARG1 (c22-3 / heart
                    :part-of (c22-4 / i))
       :beneficiary (c22-2 / woman
                           :mod (c22-1 / that)
                           :quant 2)
       :mod (c22-0 / just))

# ::snt The Clintons are completely CORRUPT
# ::tokens ["The", "Clintons", "are", "completely", "CORRUPT"]
# ::lemmas ["the", "Clintons", "be", "completely", "corrupt"]
(c23-0 / crisis
       :domain (c23-1 / person
                      :name (c23-3 / name
                                   :op1 "Clinton"))
       :ARG1-of (c23-2 / complete-02))

# ::snt I’d be careful on this one As biased as the news media is I have to believe something would’ve come out somewhere At least Fox
# ::tokens ["I", "\u2019d", "be", "careful", "on", "this", "one", "As", "biased", "as", "the", "news", "media", "is", "I", "have", "to", "believe", "something", "would", "\u2019ve", "come", "out", "somewhere", "At", "least", "Fox"]
# ::lemmas ["i", "\u2019d", "be", "careful", "on", "this", "one", "as", "bias", "as", "the", "news", "media", "be", "i", "have", "to", "believe", "something", "would", "have", "come", "out", "somewhere", "at", "least", "Fox"]
(c24-7 / have-concession-91
       :ARG1 (c24-0 / obligate-01
                    :ARG1 (c24-11 / i)
                    :ARG2 (c24-12 / believe-01
                                  :ARG0 c24-11
                                  :ARG1 (c24-3 / come-out-09
                                               :ARG1 (c24-6 / something)
                                               :source (c24-5 / somewhere))))
       :ARG2 (c24-8 / care-04
                    :ARG0 c24-11
                    :ARG1 (c24-1 / one
                                 :mod (c24-4 / this)))
       :concession (c24-2 / bias-01
                          :ARG1 (c24-9 / media
                                       :mod (c24-10 / news))))

# ::snt Fake I can not verify this
# ::tokens ["Fake", "I", "can", "not", "verify", "this"]
# ::lemmas ["fake", "i", "can", "not", "verify", "this"]
(c25-3 / and
       :op1 (c25-4 / fake-02
                   :ARG1 (c25-1 / this))
       :op2 (c25-0 / possible-01
                   :ARG1 (c25-2 / verify-01
                                :ARG0 (c25-5 / i)
                                :ARG1 c25-1)
                   :polarity -))

# ::snt Has to be a Bullshit story
# ::tokens ["Has", "to", "be", "a", "Bullshit", "story"]
# ::lemmas ["have", "to", "be", "a", "Bullshit", "story"]
(c26-0 / infer-01
       :ARG1 (c26-2 / story
                    :mod (c26-1 / bullshit)))

# ::snt While entertaining i find nothing anywhere to back it up
# ::tokens ["While", "entertaining", "i", "find", "nothing", "anywhere", "to", "back", "it", "up"]
# ::lemmas ["while", "entertain", "i", "find", "nothing", "anywhere", "to", "back", "it", "up"]
(c27-3 / find-01
       :ARG0 (c27-5 / i)
       :ARG1 (c27-4 / nothing
                    :location (c27-2 / anywhere)
                    :ARG0-of (c27-6 / back-up-04
                                    :ARG1 (c27-0 / it)))
       :time (c27-1 / entertain-01
                    :ARG0 c27-5))

# ::snt Oooh this would be DELICIOUS if true
# ::tokens ["Oooh", "this", "would", "be", "DELICIOUS", "if", "true"]
# ::lemmas ["oooh", "this", "would", "be", "deliciou", "if", "true"]
(c28-0 / DELICIOUS
       :domain (c28-3 / this)
       :condition (c28-2 / true-01
                         :ARG1 c28-3)
       :mod (c28-1 / oh
                   :mode expressive))

# ::snt Yea and the sky is falling
# ::tokens ["Yea", "and", "the", "sky", "is", "falling"]
# ::lemmas ["Yea", "and", "the", "sky", "be", "fall"]
(c29-0 / and
       :op1 (c29-3 / yea)
       :op2 (c29-1 / fall-01
                   :ARG1 (c29-2 / sky)))

# ::snt Hope so
# ::tokens ["Hope", "so"]
# ::lemmas ["Hope", "so"]
(c30-1 / hope-01
       :mod (c30-0 / so))

# ::snt is coolinfo more or less reputable than twentytwowords
# ::tokens ["is", "coolinfo", "more", "or", "less", "reputable", "than", "twentytwowords"]
# ::lemmas ["be", "coolinfo", "more", "or", "less", "reputable", "than", "twentytwoword"]
(c31-0 / repute-01
       :ARG1 (c31-1 / coolinfo)
       :ARG2 (c31-3 / at-least
                    :op1 (c31-4 / monetary-quantity
                                :quant "20twords"))
       :polarity (c31-2 / amr-unknown))

# ::snt says its frrom this site httpofficialnewstodaycom   and that didnt seem to work for me
# ::tokens ["says", "its", "frrom", "this", "site", "httpofficialnewstodaycom", "  ", "and", "that", "did", "nt", "seem", "to", "work", "for", "me"]
# ::lemmas ["say", "its", "frrom", "this", "site", "httpofficialnewstodaycom", "  ", "and", "that", "do", "not", "seem", "to", "work", "for", "me"]
(c32-6 / say-01
       :ARG0 (c32-7 / i)
       :ARG1 (c32-4 / and
                    :op1 (c32-3 / seem-01
                                :ARG1 (c32-2 / work-09
                                             :ARG1 (c32-0 / url-entity
                                                          :value "http://www.officialnewstodaycom")
                                             :domain (c32-5 / site
                                                            :mod (c32-1 / this))
                                             :ARG2 c32-7)
                                :polarity -)
                    :op2 c32-0))

# ::snt Its about time these crooked people go to jail handcuffed no less
# ::tokens ["Its", "about", "time", "these", "crooked", "people", "go", "to", "jail", "handcuffed", "no", "less"]
# ::lemmas ["its", "about", "time", "these", "crooked", "people", "go", "to", "jail", "handcuff", "no", "less"]
(c33-7 / be-temporally-at-91
       :ARG1 (c33-6 / go-02
                    :ARG0 (c33-1 / person
                                 :mod (c33-3 / this)
                                 :ARG1-of (c33-2 / crook-01))
                    :ARG4 (c33-0 / jail)
                    :manner (c33-5 / handcuff-01
                                   :ARG1 c33-1))
       :ARG2 (c33-4 / about))

# ::snt this is FAKE NEWS
# ::tokens ["this", "is", "FAKE", "NEWS"]
# ::lemmas ["this", "be", "FAKE", "news"]
(c34-1 / fake-02
       :ARG1 (c34-0 / news
                    :mod (c34-2 / this)))

# ::snt Oh no What is Web Hubblles daughter going to do now
# ::tokens ["Oh", "no", "What", "is", "Web", "Hubblles", "daughter", "going", "to", "do", "now"]
# ::lemmas ["oh", "no", "what", "be", "web", "Hubblles", "daughter", "go", "to", "do", "now"]
(c35-2 / do-02
       :ARG0 (c35-3 / person
                    :ARG0-of (c35-7 / have-rel-role-91
                                    :ARG1 (c35-1 / person
                                                 :name (c35-8 / name
                                                              :op1 "Web"
                                                              :op2 "Hubblles"))
                                    :ARG2 (c35-5 / daughter)))
       :ARG1 (c35-6 / amr-unknown)
       :time (c35-4 / now)
       :mod (c35-0 / oh-no
                   :mode expressive))

# ::snt I think this article is supposed to be a joke I am not aware of any credible news source that supports this version of events
# ::tokens ["I", "think", "this", "article", "is", "supposed", "to", "be", "a", "joke", "I", "am", "not", "aware", "of", "any", "credible", "news", "source", "that", "supports", "this", "version", "of", "events"]
# ::lemmas ["i", "think", "this", "article", "be", "suppose", "to", "be", "a", "joke", "i", "be", "not", "aware", "of", "any", "credible", "news", "source", "that", "support", "this", "version", "of", "event"]
(c36-12 / multi-sentence
        :snt1 (c36-5 / think-01
                     :ARG0 (c36-14 / i)
                     :ARG1 (c36-11 / suppose-02
                                   :ARG1 (c36-8 / article
                                                :mod (c36-15 / this))
                                   :ARG2 (c36-2 / joke-01
                                                :ARG2 c36-8)))
        :snt2 (c36-0 / realize-01
                     :ARG0 (c36-1 / i)
                     :ARG1 (c36-7 / source
                                  :mod (c36-3 / credible)
                                  :mod (c36-13 / news)
                                  :ARG0-of (c36-6 / support-01
                                                  :ARG1 (c36-9 / version
                                                               :mod (c36-10 / this)
                                                               :topic (c36-4 / event))))
                     :polarity -))

# ::snt Total fake news I wish though
# ::tokens ["Total", "fake", "news", "I", "wish", "though"]
# ::lemmas ["total", "fake", "news", "i", "wish", "though"]
(c37-1 / wish-01
       :ARG0 (c37-5 / i)
       :ARG1 (c37-4 / news
                    :ARG1-of (c37-2 / fake-02)
                    :mod (c37-0 / total))
       :ARG1-of (c37-3 / have-concession-91))

# ::snt that would be great if its true
# ::tokens ["that", "would", "be", "great", "if", "its", "true"]
# ::lemmas ["that", "would", "be", "great", "if", "its", "true"]
(c38-0 / great
       :domain (c38-2 / that)
       :condition (c38-1 / true-01
                         :ARG1 c38-2))

# ::snt Daughter of Hilary Clinton and Webster Hubble
# ::tokens ["Daughter", "of", "Hilary", "Clinton", "and", "Webster", "Hubble"]
# ::lemmas ["daughter", "of", "Hilary", "Clinton", "and", "Webster", "Hubble"]
(c39-4 / have-rel-role-91
       :ARG0 (c39-2 / person
                    :name (c39-5 / name
                                 :op1 "Hilary"
                                 :op2 "Clinton"))
       :ARG1 (c39-0 / person
                    :name (c39-3 / name
                                 :op1 "Webster"
                                 :op2 "Hubble"))
       :ARG2 (c39-1 / daughter))

# ::snt If only
# ::tokens ["If", "only"]
# ::lemmas ["if", "only"]
(c40-0 / condition-01
       :mod (c40-1 / only))

# ::snt Oh stop
# ::tokens ["Oh", "stop"]
# ::lemmas ["oh", "stop"]
(c41-1 / stop-01
       :mod (c41-0 / oh
                   :mode expressive))

# ::snt Is this true
# ::tokens ["Is", "this", "true"]
# ::lemmas ["be", "this", "true"]
(c42-2 / true-01
       :polarity (c42-0 / amr-unknown)
       :ARG1 (c42-1 / this))

# ::snt fake news
# ::tokens ["fake", "news"]
# ::lemmas ["fake", "news"]
(c43-0 / news
       :ARG1-of (c43-1 / fake-02))

# ::snt Holy smokes Batman
# ::tokens ["Holy", "smokes", "Batman"]
# ::lemmas ["Holy", "smoke", "Batman"]
(c44-2 / say-01
       :ARG0 (c44-5 / i)
       :ARG1 (c44-1 / smokes
                    :mod (c44-3 / holy)
                    :mode expressive)
       :ARG2 (c44-0 / person
                    :name (c44-4 / name
                                 :op1 "Batman")))

# ::snt No idea if this is true but would be awesome
# ::tokens ["No", "idea", "if", "this", "is", "true", "but", "would", "be", "awesome"]
# ::lemmas ["no", "idea", "if", "this", "be", "true", "but", "would", "be", "awesome"]
(c45-1 / contrast-01
       :ARG1 (c45-5 / have-03
                    :ARG0 (c45-6 / i)
                    :ARG1 (c45-0 / idea
                                 :topic (c45-2 / truth-value
                                               :polarity-of (c45-7 / true-01
                                                                   :ARG1 (c45-4 / this))))
                    :polarity -)
       :ARG2 (c45-3 / awesome-02
                    :ARG1 c45-4))

# ::snt No idea  I hope so
# ::tokens ["No", "idea", " ", "I", "hope", "so"]
# ::lemmas ["no", "idea", " ", "i", "hope", "so"]
(c46-2 / hope-01
       :ARG0 (c46-0 / i)
       :ARG1 (c46-1 / so))

# ::snt 33keithgreen Is this true
# ::tokens ["33keithgreen", "Is", "this", "true"]
# ::lemmas ["33keithgreen", "be", "this", "true"]
(c47-2 / ask-01
       :ARG0 (c47-4 / i)
       :ARG1 (c47-1 / true-01
                    :ARG1 (c47-5 / this))
       :ARG2 (c47-0 / person
                    :name (c47-3 / name
                                 :op1 "33keithgreen")))

# ::snt Just like her mom
# ::tokens ["Just", "like", "her", "mom"]
# ::lemmas ["just", "like", "her", "mom"]
(c48-0 / resemble-01
       :ARG2 (c48-1 / person
                    :ARG0-of (c48-4 / have-rel-role-91
                                    :ARG1 (c48-2 / she)
                                    :ARG2 (c48-3 / mom)))
       :mod (c48-5 / just))

# ::snt Waiting for Snopes check on thistheyre running behind
# ::tokens ["Waiting", "for", "Snopes", "check", "on", "thistheyre", "running", "behind"]
# ::lemmas ["wait", "for", "Snopes", "check", "on", "thistheyre", "run", "behind"]
(c49-4 / wait-01
       :ARG1 (c49-6 / i)
       :ARG2 (c49-1 / check-01
                    :ARG0 (c49-2 / publication
                                 :name (c49-5 / name
                                              :op1 "Snopes"))
                    :ARG1 (c49-0 / run-02
                                 :ARG0 (c49-3 / they)
                                 :direction (c49-7 / behind))))

# ::snt Hope this is true
# ::tokens ["Hope", "this", "is", "true"]
# ::lemmas ["hope", "this", "be", "true"]
(c50-3 / hope-01
       :ARG0 (c50-0 / i)
       :ARG1 (c50-2 / true-01
                    :ARG1 (c50-1 / this)))
