# ::snt catching all the factoids too
# ::tokens ["catching", "all", "the", "factoids", "too"]
# ::lemmas ["catch", "all", "the", "factoid", "too"]
(c1-1 / catch-03
      :ARG1 (c1-2 / factoid
                  :mod (c1-0 / all))
      :mod (c1-3 / too))

# ::snt  few debates offered balanced or fairly in Primary or now always fixed in some way by exclusion or revealed ahead of time s
# ::tokens [" ", "few", "debates", "offered", "balanced", "or", "fairly", "in", "Primary", "or", "now", "always", "fixed", "in", "some", "way", "by", "exclusion", "or", "revealed", "ahead", "of", "time", "s"]
# ::lemmas [" ", "few", "debate", "offer", "balanced", "or", "fairly", "in", "Primary", "or", "now", "always", "fix", "in", "some", "way", "by", "exclusion", "or", "reveal", "ahead", "of", "time", "s"]
(c2-0 / or
      :op1 (c2-1 / offer-01
                 :ARG1 (c2-4 / debate-01
                             :quant (c2-10 / few)
                             :ARG1-of (c2-15 / balance-01)
                             :ARG1-of (c2-2 / fair-01)
                             :time (c2-5 / primary)))
      :op2 (c2-11 / fix-02
                  :ARG1 c2-4
                  :ARG2 (c2-13 / or
                               :op1 (c2-6 / exclude-01)
                               :op2 (c2-3 / reveal-01
                                          :time (c2-9 / ahead-of
                                                      :op1 (c2-7 / time))))
                  :manner (c2-8 / way
                                :mod (c2-12 / some))
                  :time (c2-14 / now)))

# ::snt if you read the debate transcript this happens   httpsyoutubexEkkdY3d7ct2m54s …
# ::tokens ["if", "you", "read", "the", "debate", "transcript", "this", "happens", "  ", "httpsyoutubexEkkdY3d7ct2m54s", "\u2026"]
# ::lemmas ["if", "you", "read", "the", "debate", "transcript", "this", "happen", "  ", "httpsyoutubexekkdy3d7ct2m54s", "\u2026"]
(c3-5 / have-condition-91
      :ARG1 (c3-2 / event
                  :mod (c3-3 / this))
      :ARG2 (c3-0 / read-01
                  :ARG0 (c3-7 / you)
                  :ARG1 (c3-6 / thing
                              :ARG1-of (c3-4 / transcribe-01
                                             :ARG2 (c3-1 / debate-01)))))

# ::snt And u might wonder What was Hillarys gracious response to the question if shed accept election results Oh she wasnt asked
# ::tokens ["And", "u", "might", "wonder", "What", "was", "Hillarys", "gracious", "response", "to", "the", "question", "if", "shed", "accept", "election", "results", "Oh", "she", "was", "nt", "asked"]
# ::lemmas ["and", "u", "may", "wonder", "what", "be", "Hillarys", "gracious", "response", "to", "the", "question", "if", "shed", "accept", "election", "result", "oh", "she", "be", "not", "ask"]
(c4-11 / multi-sentence
       :snt1 (c4-7 / and
                   :op2 (c4-3 / possible-01
                              :ARG1 (c4-6 / wonder-01
                                          :ARG0 (c4-16 / you)
                                          :ARG1 (c4-1 / respond-01
                                                      :ARG0 (c4-2 / person
                                                                  :name (c4-13 / name
                                                                               :op1 "Hillary"))
                                                      :ARG1 (c4-8 / question-01
                                                                  :ARG1 (c4-5 / accept-01
                                                                              :ARG0 c4-2
                                                                              :ARG1 (c4-9 / result
                                                                                          :mod (c4-4 / elect-01))))
                                                      :ARG2 (c4-15 / amr-unknown)
                                                      :ARG0-of (c4-12 / gracious-02)))))
       :snt2 (c4-14 / ask-01
                    :ARG2 (c4-10 / she)
                    :mod (c4-0 / oh
                               :mode expressive)
                    :polarity -))

# ::snt 유례없는 ‘지저분한 싸움’  ‘인기없는 후보들 간의 상대 비방 치고 받기 토론’ 끝 결국  트럼프가 공개적으로 선거결과 불복을 시사하며 미국 민주주의의 정통성을 부정하는 사태까지 httpmediadaumnetforeignnewsviewnewsid20161020164134703 …
# ::tokens ["\uc720\ub840\uc5c6\ub294", "\u2018", "\uc9c0\uc800\ubd84\ud55c", "\uc2f8\uc6c0", "\u2019", " ", "\u2018", "\uc778\uae30\uc5c6\ub294", "\ud6c4\ubcf4\ub4e4", "\uac04\uc758", "\uc0c1\ub300", "\ube44\ubc29", "\uce58\uace0", "\ubc1b\uae30", "\ud1a0\ub860", "\u2019", "\ub05d", "\uacb0\uad6d", " ", "\ud2b8\ub7fc\ud504\uac00", "\uacf5\uac1c\uc801\uc73c\ub85c", "\uc120\uac70\uacb0\uacfc", "\ubd88\ubcf5\uc744", "\uc2dc\uc0ac\ud558\uba70", "\ubbf8\uad6d", "\ubbfc\uc8fc\uc8fc\uc758\uc758", "\uc815\ud1b5\uc131\uc744", "\ubd80\uc815\ud558\ub294", "\uc0ac\ud0dc\uae4c\uc9c0", "httpmediadaumnetforeignnewsviewnewsid20161020164134703", "\u2026"]
# ::lemmas ["\uc720\ub840\uc5c6\ub294", "\u2018", "\uc9c0\uc800\ubd84\ud55c", "\uc2f8\uc6c0", "\u2019", " ", "'", "\uc778\uae30\uc5c6\ub294", "\ud6c4\ubcf4\ub4e4", "\uac04\uc758", "\uc0c1\ub300", "\ube44\ubc29", "\uce58\uace0", "\ubc1b\uae30", "\ud1a0\ub860", "'", "\ub05d", "\uacb0\uad6d", " ", "\ud2b8\ub7fc\ud504\uac00", "\uacf5\uac1c\uc801\uc73c\ub85c", "\uc120\uac70\uacb0\uacfc", "\ubd88\ubcf5\uc744", "\uc2dc\uc0ac\ud558\uba70", "\ubbf8\uad6d", "\ubbfc\uc8fc\uc8fc\uc758\uc758", "\uc815\ud1b5\uc131\uc744", "\ubd80\uc815\ud558\ub294", "\uc0ac\ud0dc\uae4c\uc9c0", "httpmediadaumnetforeignnewsviewnewsid20161020164134703", "\u2026"]
(c5-2 / and
      :op1 (c5-5 / string-entity
                 :value "유례없")
      :op2 (c5-1 / string-entity
                 :value "지저분한")
      :op3 (c5-0 / string-entity
                 :value "선거결_0")
      :op4 (c5-6 / string-entity
                 :value "선거_1")
      :op5 (c5-4 / string-entity
                 :value "후보")
      :op6 (c5-3 / string-entity
                 :value "후"))

# ::snt inquirerdotnet best follow I ever did
# ::tokens ["inquirerdotnet", "best", "follow", "I", "ever", "did"]
# ::lemmas ["inquirerdotnet", "good", "follow", "i", "ever", "do"]
(c6-4 / follow-02
      :ARG0 (c6-9 / i)
      :medium (c6-1 / product
                    :name (c6-8 / name
                                :op1 "inquirerdotnet"))
      :ARG1-of (c6-5 / have-degree-91
                     :ARG2 (c6-7 / good-02
                                 :ARG1 c6-4)
                     :ARG3 (c6-6 / most)
                     :ARG5 (c6-3 / thing
                                 :ARG1-of (c6-0 / do-02
                                                :ARG0 c6-9
                                                :time (c6-2 / ever)))))

# ::snt inquirerdotnet vvangogh
# ::tokens ["inquirerdotnet", "vvangogh"]
# ::lemmas ["inquirerdotnet", "vvangogh"]
(c7-0 / ask-01
      :ARG0 (c7-3 / i)
      :ARG2 (c7-1 / person
                  :name (c7-2 / name
                              :op1 "VVangogh")))

# ::snt cat got her touch when she was asked to explain the Clinton Foundation she never answered
# ::tokens ["cat", "got", "her", "touch", "when", "she", "was", "asked", "to", "explain", "the", "Clinton", "Foundation", "she", "never", "answered"]
# ::lemmas ["cat", "get", "her", "touch", "when", "she", "be", "ask", "to", "explain", "the", "Clinton", "Foundation", "she", "never", "answer"]
(c8-9 / get-01
      :ARG0 (c8-1 / cat)
      :ARG1 (c8-4 / touch
                  :poss c8-1)
      :time (c8-5 / ask-01
                  :ARG1 (c8-2 / explain-01
                              :ARG0 c8-1
                              :ARG1 (c8-0 / organization
                                          :name (c8-8 / name
                                                      :op1 "Clinton"
                                                      :op2 "Foundation")
                                          :ARG1-of (c8-3 / answer-01
                                                         :ARG0 c8-1
                                                         :time (c8-6 / ever)
                                                         :polarity -)))
                  :ARG2 (c8-7 / she)))

# ::snt This is always hilarious Reading all the words realDonaldTrump throws together to form a thought
# ::tokens ["This", "is", "always", "hilarious", "Reading", "all", "the", "words", "realDonaldTrump", "throws", "together", "to", "form", "a", "thought"]
# ::lemmas ["this", "be", "always", "hilarious", "read", "all", "the", "word", "realdonaldtrump", "throw", "together", "to", "form", "a", "thought"]
(c9-8 / hilarious
      :domain (c9-0 / read-01
                    :ARG1 (c9-4 / word
                                :mod (c9-5 / all)
                                :ARG1-of (c9-3 / throw-01
                                               :ARG0 (c9-1 / person
                                                           :name (c9-9 / name
                                                                       :op1 "RealDonaldTrump"))
                                               :ARG2 (c9-10 / together)
                                               :purpose (c9-7 / form-01
                                                              :ARG0 c9-1
                                                              :ARG1 (c9-6 / think-01
                                                                          :ARG0 c9-1)))))
      :time (c9-2 / always))

# ::snt getknicked lol i was actually awake chickie great to hear from you hope youre well dear friend
# ::tokens ["getknicked", "lol", "i", "was", "actually", "awake", "chickie", "great", "to", "hear", "from", "you", "hope", "you", "re", "well", "dear", "friend"]
# ::lemmas ["getknicked", "lol", "i", "be", "actually", "awake", "chickie", "great", "to", "hear", "from", "you", "hope", "you", "be", "well", "dear", "friend"]
(c10-11 / say-01
        :ARG0 (c10-14 / i)
        :ARG1 (c10-9 / and
                     :op1 (c10-13 / getknicked
                                  :ARG1 c10-14)
                     :op2 (c10-5 / awake-03
                                 :ARG1 c10-14
                                 :ARG1-of (c10-15 / actual-02)))
        :ARG2 (c10-2 / person
                     :mod (c10-3 / chickie)
                     :ARG0-of c10-11
                     :ARG1 (c10-4 / great
                                  :domain (c10-12 / hear-01
                                                  :ARG0 c10-14
                                                  :ARG2 (c10-16 / you))
                                  :ARG1-of (c10-6 / hope-01
                                                  :ARG0 c10-14
                                                  :ARG2 (c10-0 / person
                                                               :ARG0-of (c10-7 / have-rel-role-91
                                                                               :ARG1 c10-16
                                                                               :ARG2 (c10-10 / friend))
                                                               :mod (c10-1 / dear)
                                                               :degree (c10-8 / well))))))

# ::snt wileyccoyote Court are you REALLY awake at the very crack of dawn or is this tweet automation   impressed awed sleepyforyou
# ::tokens ["wileyccoyote", "Court", "are", "you", "REALLY", "awake", "at", "the", "very", "crack", "of", "dawn", "or", "is", "this", "tweet", "automation", "  ", "impressed", "awed", "sleepyforyou"]
# ::lemmas ["wileyccoyote", "Court", "be", "you", "really", "awake", "at", "the", "very", "crack", "of", "dawn", "or", "be", "this", "tweet", "automation", "  ", "impress", "awe", "sleepyforyou"]
(c11-13 / multi-sentence
        :snt1 (c11-11 / ask-01
                      :ARG0 (c11-15 / i)
                      :ARG1 (c11-7 / awake-03
                                   :ARG1 (c11-18 / you)
                                   :degree (c11-0 / really)
                                   :time (c11-4 / crack-02
                                                :ARG1 (c11-3 / dawn)
                                                :mod (c11-9 / very))
                                   :polarity (c11-17 / amr-unknown))
                      :ARG2 (c11-5 / person
                                   :name (c11-14 / name
                                                 :op1 "wileyccoyote"
                                                 :op2 "Court")))
        :snt2 (c11-16 / automate-01
                      :ARG1 (c11-8 / thing
                                   :ARG1-of (c11-6 / tweet-01)
                                   :mod (c11-12 / this))
                      :ARG0-of (c11-1 / impress-01
                                      :ARG1 (c11-2 / person
                                                   :name (c11-10 / name
                                                                 :op1 " sleepyforyou")))))

# ::snt no thanks
# ::tokens ["no", "thanks"]
# ::lemmas ["no", "thank"]
(c12-1 / have-concession-91
       :ARG2 (c12-0 / no))

# ::snt BretBaier  Trump cant think on his feet Misses so many chances He may be the only person in America that could get her elected
# ::tokens ["BretBaier", " ", "Trump", "ca", "nt", "think", "on", "his", "feet", "Misses", "so", "many", "chances", "He", "may", "be", "the", "only", "person", "in", "America", "that", "could", "get", "her", "elected"]
# ::lemmas ["BretBaier", " ", "Trump", "can", "not", "think", "on", "his", "foot", "Misses", "so", "many", "chance", "he", "may", "be", "the", "only", "person", "in", "America", "that", "could", "get", "her", "elect"]
(c13-13 / miss-02
        :ARG0 (c13-5 / person
                     :name (c13-17 / name
                                   :op1 "BretBaier")
                     :ARG0-of (c13-9 / think-01
                                     :manner (c13-11 / foot
                                                     :part-of c13-5)
                                     :polarity -))
        :ARG1 (c13-6 / chance-02
                     :ARG1 (c13-2 / possible-01
                                  :ARG1 (c13-1 / person
                                               :mod (c13-0 / only)
                                               :location (c13-12 / country
                                                                 :name (c13-7 / name
                                                                              :op1 "America"))
                                               :domain (c13-15 / person
                                                               :name (c13-3 / name
                                                                            :op1 "Trump"))
                                               :ARG0-of (c13-14 / get-04
                                                                :ARG1 (c13-8 / elect-01
                                                                             :ARG1 c13-15)
                                                                :ARG1-of (c13-4 / possible-01))))
                     :ARG1-of (c13-16 / have-quant-91
                                      :ARG2 (c13-10 / many)
                                      :ARG3 (c13-18 / so))))

# ::snt BretBaier MegynKelly was one sided I switched Neil Cavuto until Hannity come on Bret shes really bad you guys got to make a change
# ::tokens ["BretBaier", "MegynKelly", "was", "one", "sided", "I", "switched", "Neil", "Cavuto", "until", "Hannity", "come", "on", "Bret", "she", "s", "really", "bad", "you", "guys", "got", "to", "make", "a", "change"]
# ::lemmas ["BretBaier", "MegynKelly", "be", "one", "side", "i", "switch", "Neil", "Cavuto", "until", "Hannity", "come", "on", "Bret", "she", "s", "really", "bad", "you", "guy", "get", "to", "make", "a", "change"]
(c14-12 / multi-sentence
        :snt1 (c14-0 / one-sided
                     :domain (c14-6 / person
                                    :name (c14-15 / name
                                                  :op1 "BretBaier"
                                                  :op2 "MegynKelly")))
        :snt2 (c14-11 / switch-01
                      :ARG0 (c14-16 / i)
                      :ARG1 (c14-1 / person
                                   :name (c14-7 / name
                                                :op1 "Neil"
                                                :op2 "Cavuto"))
                      :time (c14-8 / until
                                   :op1 (c14-9 / come-on-08
                                               :ARG1 (c14-17 / broadcast-program
                                                             :name (c14-4 / name
                                                                          :op1 "Hannity"))
                                               :ARG2 c14-6)))
        :snt3 (c14-2 / bad-07
                     :ARG1 (c14-3 / obligate-01
                                  :ARG1 (c14-18 / you
                                                :mod (c14-14 / guy))
                                  :ARG2 (c14-5 / make-01
                                               :ARG0 c14-18
                                               :ARG1 (c14-13 / change-01
                                                             :ARG0 c14-18)))
                     :degree (c14-10 / really)))

# ::snt No thanks
# ::tokens ["No", "thanks"]
# ::lemmas ["no", "thank"]
(c15-1 / have-concession-91
       :ARG2 (c15-0 / no))

# ::snt BretBaier we are tired of being lied to  I do not trust mainstream media at all LIES
# ::tokens ["BretBaier", "we", "are", "tired", "of", "being", "lied", "to", " ", "I", "do", "not", "trust", "mainstream", "media", "at", "all", "LIES"]
# ::lemmas ["BretBaier", "we", "be", "tired", "of", "be", "lie", "to", " ", "i", "do", "not", "trust", "mainstream", "medium", "at", "all", "lie"]
(c16-9 / multi-sentence
       :snt1 (c16-7 / say-01
                    :ARG0 (c16-12 / i)
                    :ARG1 (c16-3 / tire-01
                                 :ARG0 (c16-8 / lie-08
                                              :ARG2 (c16-4 / we
                                                           :ARG1-of c16-3)))
                    :ARG2 (c16-2 / person
                                 :name (c16-11 / name
                                               :op1 "BretBaier")))
       :snt2 (c16-13 / trust-02
                     :ARG0 (c16-0 / i)
                     :ARG1 (c16-1 / media
                                  :ARG1-of (c16-10 / mainstream-02))
                     :degree (c16-5 / at-all)
                     :ARG1-of (c16-6 / lie-08)
                     :polarity -))

# ::snt Trump versus Clinton on the amt of air time during the debate
# ::tokens ["Trump", "versus", "Clinton", "on", "the", "amt", "of", "air", "time", "during", "the", "debate"]
# ::lemmas ["trump", "versus", "Clinton", "on", "the", "amt", "of", "air", "time", "during", "the", "debate"]
(c17-0 / oppose-01
       :ARG0 (c17-4 / person
                    :name (c17-6 / name
                                 :op1 "Trump"))
       :ARG1 (c17-1 / person
                    :name (c17-5 / name
                                 :op1 "Clinton"))
       :medium (c17-7 / broadcast-program
                      :name (c17-2 / name
                                   :op1 "Air"
                                   :op2 "Time"))
       :time (c17-3 / debate-01))

# ::snt BretBaier scripted as usual
# ::tokens ["BretBaier", "scripted", "as", "usual"]
# ::lemmas ["BretBaier", "script", "as", "usual"]
(c18-3 / script-01
       :ARG1 (c18-1 / person
                    :name (c18-2 / name
                                 :op1 "BretBaier"))
       :mod (c18-0 / as-usual))

# ::snt Let me summarize  Id rather take a nice long dump
# ::tokens ["Let", "me", "summarize", " ", "I", "d", "rather", "take", "a", "nice", "long", "dump"]
# ::lemmas ["let", "me", "summarize", " ", "i", "d", "rather", "take", "a", "nice", "long", "dump"]
(c19-6 / multi-sentence
       :snt1 (c19-5 / let-01
                    :ARG0 (c19-9 / you)
                    :ARG1 (c19-4 / summarize-01
                                 :ARG0 (c19-8 / i))
                    :mode imperative)
       :snt2 (c19-2 / prefer-01
                    :ARG0 (c19-0 / i)
                    :ARG1 (c19-1 / dump-01
                                 :ARG0 c19-0
                                 :ARG1-of (c19-7 / nice-01)
                                 :ARG1-of (c19-3 / long-03))))

# ::snt BretBaier yes why not
# ::tokens ["BretBaier", "yes", "why", "not"]
# ::lemmas ["BretBaier", "yes", "why", "not"]
(c20-3 / say-01
       :ARG1 (c20-0 / cause-01
                    :ARG0 (c20-2 / amr-unknown)
                    :ARG1 (c20-4 / have-polarity-91
                                 :ARG2 -))
       :ARG2 (c20-1 / person
                    :name (c20-5 / name
                                 :op1 "BretBaier")))

# ::snt This transcript has almost as much substance as a Hillary Goldmansachs speech transcript
# ::tokens ["This", "transcript", "has", "almost", "as", "much", "substance", "as", "a", "Hillary", "Goldmansachs", "speech", "transcript"]
# ::lemmas ["this", "transcript", "have", "almost", "as", "much", "substance", "as", "a", "Hillary", "Goldmansachs", "speech", "transcript"]
(c21-8 / have-quant-91
       :ARG1 (c21-7 / substance
                    :domain (c21-2 / transcribe-01
                                   :mod (c21-10 / this)))
       :ARG3 (c21-0 / equal
                    :mod (c21-5 / almost))
       :ARG4 (c21-4 / substance
                    :domain (c21-6 / transcribe-01
                                   :ARG1 (c21-3 / speak-01
                                                :ARG0 (c21-1 / person
                                                             :name (c21-9 / name
                                                                          :op1 "Hillary"
                                                                          :op2 "Goldmansach"))))))

# ::snt BretBaier why Hillary never answered a real question she baited Trump but never answered a question
# ::tokens ["BretBaier", "why", "Hillary", "never", "answered", "a", "real", "question", "she", "baited", "Trump", "but", "never", "answered", "a", "question"]
# ::lemmas ["BretBaier", "why", "Hillary", "never", "answer", "a", "real", "question", "she", "bait", "Trump", "but", "never", "answer", "a", "question"]
(c22-9 / ask-01
       :ARG0 (c22-3 / person
                    :name (c22-13 / name
                                  :op1 "BretBaier"))
       :ARG1 (c22-7 / thing
                    :ARG0-of (c22-4 / cause-01
                                    :ARG1 (c22-12 / contrast-01
                                                  :ARG1 (c22-6 / answer-01
                                                               :ARG0 (c22-0 / person
                                                                            :name (c22-5 / name
                                                                                         :op1 "Hillary"))
                                                               :ARG1 c22-7
                                                               :ARG1-of (c22-10 / question-01)
                                                               :ARG1-of (c22-1 / real-04)
                                                               :polarity -)
                                                  :time (c22-8 / ever))
                                    :ARG2 (c22-14 / answer-01
                                                  :ARG0 c22-0
                                                  :ARG1 c22-7
                                                  :ARG1-of (c22-2 / question-01)
                                                  :polarity -)
                                    :time (c22-11 / ever)))
       :ARG2 c22-0)

# ::snt BretBaier Why would anyone want to subject themselves to that in long form
# ::tokens ["BretBaier", "Why", "would", "anyone", "want", "to", "subject", "themselves", "to", "that", "in", "long", "form"]
# ::lemmas ["BretBaier", "why", "would", "anyone", "want", "to", "subject", "themselves", "to", "that", "in", "long", "form"]
(c23-5 / ask-01
       :ARG0 (c23-10 / i)
       :ARG1 (c23-0 / cause-01
                    :ARG0 (c23-2 / amr-unknown)
                    :ARG1 (c23-4 / want-01
                                 :ARG0 (c23-11 / anyone)
                                 :ARG1 (c23-7 / subject-01
                                              :ARG0 c23-11
                                              :ARG1 c23-11
                                              :ARG2 (c23-3 / that)
                                              :manner (c23-6 / form
                                                             :ARG1-of (c23-8 / long-03)))))
       :ARG2 (c23-1 / person
                    :name (c23-9 / name
                                 :op1 "BretBaier")))

# ::snt was Hilary being coaxed on comments with an earpiece earring
# ::tokens ["was", "Hilary", "being", "coaxed", "on", "comments", "with", "an", "earpiece", "earring"]
# ::lemmas ["be", "Hilary", "be", "coax", "on", "comment", "with", "an", "earpiece", "earre"]
(c24-0 / coax-01
       :ARG1 (c24-1 / person
                    :name (c24-6 / name
                                 :op1 "Hilary"))
       :ARG2 (c24-5 / comment-01)
       :instrument (c24-2 / earring
                          :mod (c24-4 / earpiece))
       :polarity (c24-3 / amr-unknown))

# ::snt BretBaier Hillary got spanked
# ::tokens ["BretBaier", "Hillary", "got", "spanked"]
# ::lemmas ["BretBaier", "Hillary", "get", "spanked"]
(c25-2 / spank-01
       :ARG1 (c25-0 / person
                    :name (c25-1 / name
                                 :op1 "BretBaier"
                                 :op2 "Hillary")))

# ::snt Im good I now get the facts from Wikileaks The media is corrupt as hell
# ::tokens ["I", "m", "good", "I", "now", "get", "the", "facts", "from", "Wikileaks", "The", "media", "is", "corrupt", "as", "hell"]
# ::lemmas ["i", "be", "good", "i", "now", "get", "the", "fact", "from", "Wikileaks", "the", "media", "be", "corrupt", "as", "hell"]
(c26-7 / multi-sentence
       :snt1 (c26-9 / good-02
                    :ARG1 (c26-10 / i))
       :snt2 (c26-2 / get-01
                    :ARG0 c26-10
                    :ARG1 (c26-6 / fact)
                    :ARG2 (c26-1 / publication
                                 :name (c26-8 / name
                                              :op1 "WikiLeaks"))
                    :time (c26-3 / now))
       :snt3 (c26-4 / corrupt-01
                    :ARG1 (c26-0 / media)
                    :degree (c26-5 / as-hell)))

# ::snt BretBaier nah
# ::tokens ["BretBaier", "nah"]
# ::lemmas ["BretBaier", "nah"]
(c27-3 / say-01
       :ARG1 (c27-1 / no)
       :ARG2 (c27-0 / person
                    :name (c27-2 / name
                                 :op1 "BretBaier")))

# ::snt TIME BretBaier UghWhy would you want to do that Blech politics
# ::tokens ["TIME", "BretBaier", "UghWhy", "would", "you", "want", "to", "do", "that", "Blech", "politics"]
# ::lemmas ["TIME", "BretBaier", "UghWhy", "would", "you", "want", "to", "do", "that", "Blech", "politic"]
(c28-7 / ask-01
       :ARG0 (c28-10 / i)
       :ARG1 (c28-2 / cause-01
                    :ARG0 (c28-5 / amr-unknown)
                    :ARG1 (c28-6 / want-01
                                 :ARG0 (c28-3 / person
                                              :name (c28-9 / name
                                                           :op1 "BretBaier"))
                                 :ARG1 (c28-1 / do-02
                                              :ARG0 c28-3
                                              :ARG1 (c28-0 / politics
                                                           :mod (c28-11 / blech
                                                                        :mode expressive)))))
       :ARG2 c28-3
       :time (c28-8 / magazine
                    :name (c28-4 / name
                                 :op1 "Time")))

# ::snt BretBaier NO ONES ABOVE LAW CLINTONCASH
# ::tokens ["BretBaier", "NO", "ONES", "ABOVE", "LAW", "CLINTONCASH"]
# ::lemmas ["BretBaier", "no", "ONES", "above", "law", "clintoncash"]
(c29-4 / ignore-01
       :ARG0 (c29-0 / person
                    :name (c29-3 / name
                                 :op1 "BretBaier"))
       :ARG1 (c29-2 / law
                    :name (c29-1 / name
                                 :op1 "ClintonCASH")))

# ::snt BretBaier I pick that up into the first minute the debate
# ::tokens ["BretBaier", "I", "pick", "that", "up", "into", "the", "first", "minute", "the", "debate"]
# ::lemmas ["BretBaier", "i", "pick", "that", "up", "into", "the", "first", "minute", "the", "debate"]
(c30-6 / say-01
       :ARG0 (c30-9 / i)
       :ARG1 (c30-4 / pick-up-11
                    :ARG0 c30-9
                    :ARG1 (c30-5 / that)
                    :time (c30-1 / into
                                 :op1 (c30-7 / minute
                                             :ord (c30-0 / ordinal-entity
                                                         :value 1)
                                             :part-of (c30-3 / debate-01))))
       :ARG2 (c30-2 / person
                    :name (c30-8 / name
                                 :op1 "BretBaier")))

# ::snt BretBaier can you talk about the TelePrompTer on Hillarys podium
# ::tokens ["BretBaier", "can", "you", "talk", "about", "the", "TelePrompTer", "on", "Hillarys", "podium"]
# ::lemmas ["BretBaier", "can", "you", "talk", "about", "the", "teleprompter", "on", "Hillarys", "podium"]
(c31-3 / possible-01
       :ARG1 (c31-5 / talk-01
                    :ARG0 (c31-1 / person
                                 :name (c31-8 / name
                                              :op1 "BretBaier"))
                    :ARG1 (c31-9 / thing
                                 :name (c31-4 / name
                                              :op1 "TelePrompTer"))
                    :location (c31-0 / podium
                                     :poss (c31-7 / person
                                                  :name (c31-2 / name
                                                               :op1 "Hillary"))))
       :polarity (c31-6 / amr-unknown))

# ::snt BretBaier difficulties cant pass these test to go too college Hillary is talking about undoing the no child left behind act
# ::tokens ["BretBaier", "difficulties", "ca", "nt", "pass", "these", "test", "to", "go", "too", "college", "Hillary", "is", "talking", "about", "undoing", "the", "no", "child", "left", "behind", "act"]
# ::lemmas ["BretBaier", "difficulty", "can", "not", "pass", "these", "test", "to", "go", "too", "college", "Hillary", "be", "talk", "about", "undo", "the", "no", "child", "leave", "behind", "act"]
(c32-11 / multi-sentence
        :snt1 (c32-2 / possible-01
                     :ARG1 (c32-1 / pass-07
                                  :ARG1 (c32-0 / person
                                               :name (c32-15 / name
                                                             :op1 "BretBaier"))
                                  :ARG2 (c32-6 / test
                                               :mod (c32-16 / this))
                                  :purpose (c32-13 / go-01
                                                   :ARG1 c32-0
                                                   :ARG4 (c32-3 / college
                                                                :ARG2-of (c32-12 / have-degree-91
                                                                                 :ARG1 c32-0
                                                                                 :ARG3 (c32-8 / too)))))
                     :polarity -)
        :snt2 (c32-17 / talk-01
                      :ARG0 (c32-9 / person
                                   :name (c32-4 / name
                                                :op1 "Hillary"))
                      :ARG1 (c32-5 / undo-01
                                   :ARG0 c32-9
                                   :ARG1 (c32-7 / act
                                                :topic (c32-10 / child
                                                               :ARG1-of (c32-14 / leave-behind-18)
                                                               :polarity -)))))

# ::snt BretBaier B4UVOTECLINTONCASH
# ::tokens ["BretBaier", "B4UVOTECLINTONCASH"]
# ::lemmas ["BretBaier", "B4UVOTECLINTONCASH"]
(c33-0 / city
       :name (c33-1 / name
                    :op1 "BretBaier")
       :location (c33-2 / state
                        :name c33-1
                        :op1 "North"
                        :op2 "Carolina"))

# ::snt BretBaier Hillary talked about education thats the common core This is the worst test so hard that students with learning
# ::tokens ["BretBaier", "Hillary", "talked", "about", "education", "that", "s", "the", "common", "core", "This", "is", "the", "worst", "test", "so", "hard", "that", "students", "with", "learning"]
# ::lemmas ["BretBaier", "Hillary", "talk", "about", "education", "that", "s", "the", "common", "core", "this", "be", "the", "bad", "test", "so", "hard", "that", "student", "with", "learning"]
(c34-6 / talk-01
       :ARG0 (c34-2 / person
                    :name (c34-13 / name
                                  :op1 "BretBaier"
                                  :op2 "Hillary"))
       :ARG1 (c34-4 / educate-01
                    :mod (c34-3 / core
                                :mod (c34-9 / common)
                                :domain (c34-14 / this)))
       :ARG1-of (c34-0 / cause-01
                       :ARG0 (c34-10 / have-degree-91
                                     :ARG1 (c34-8 / test
                                                  :domain c34-14)
                                     :ARG2 (c34-5 / hard-02
                                                  :ARG1 c34-8)
                                     :ARG3 (c34-11 / so)
                                     :ARG6 (c34-1 / person
                                                  :ARG0-of (c34-7 / study-01)
                                                  :ARG0-of (c34-12 / learn-01)))))

# ::snt was it 22x under oath HRC said she didnt recall But great memory for facts debating Trump Benghazi is worst
# ::tokens ["was", "it", "22x", "under", "oath", "HRC", "said", "she", "did", "nt", "recall", "But", "great", "memory", "for", "facts", "debating", "Trump", "Benghazi", "is", "worst"]
# ::lemmas ["be", "it", "22x", "under", "oath", "HRC", "say", "she", "do", "not", "recall", "but", "great", "memory", "for", "fact", "debate", "Trump", "Benghazi", "be", "bad"]
(c35-5 / contrast-01
       :ARG1 (c35-11 / say-01
                     :ARG0 (c35-6 / person
                                  :name (c35-15 / name
                                                :op1 "HRC"))
                     :ARG1 (c35-1 / recall-02
                                  :ARG0 c35-6
                                  :polarity -)
                     :polarity (c35-9 / amr-unknown)
                     :manner (c35-0 / oath))
       :ARG2 (c35-12 / have-degree-91
                     :ARG1 (c35-13 / memory
                                   :mod (c35-14 / great)
                                   :topic (c35-10 / fact)
                                   :topic (c35-4 / debate-01
                                                 :ARG0 c35-6
                                                 :ARG1 (c35-16 / incident
                                                               :name (c35-7 / name
                                                                            :op1 "Benghazi")
                                                               :poss (c35-2 / person
                                                                            :name (c35-3 / name
                                                                                         :op1 "Trump")))))
                     :ARG2 (c35-17 / bad-07
                                   :ARG1 c35-13)
                     :ARG3 (c35-8 / most)))

# ::snt Listened once was driving Hillary showed her memory is fine Trump defends too much Wallace is a journalist TIME FoxNews
# ::tokens ["Listened", "once", "was", "driving", "Hillary", "showed", "her", "memory", "is", "fine", "Trump", "defends", "too", "much", "Wallace", "is", "a", "journalist", "TIME", "FoxNews"]
# ::lemmas ["listen", "once", "be", "drive", "Hillary", "show", "her", "memory", "be", "fine", "Trump", "defend", "too", "much", "Wallace", "be", "a", "journalist", "TIME", "FoxNews"]
(c36-11 / and
        :op1 (c36-14 / listen-01
                     :ARG0 (c36-4 / person
                                  :name (c36-17 / name
                                                :op1 "Hillary"))
                     :frequency 1)
        :op2 (c36-13 / show-01
                     :ARG0 c36-4
                     :ARG1 (c36-12 / fine-04
                                   :ARG1 (c36-15 / memory
                                                 :poss c36-4)))
        :op3 (c36-3 / defend-01
                    :ARG0 (c36-1 / person
                                 :name (c36-5 / name
                                              :op1 "Trump"))
                    :ARG1-of (c36-16 / have-quant-91
                                     :ARG2 (c36-2 / much)
                                     :ARG3 (c36-8 / too)))
        :op4 (c36-6 / have-org-role-91
                    :ARG0 (c36-0 / person
                                 :name (c36-7 / name
                                              :op1 "Wallace"))
                    :ARG1 (c36-18 / magazine
                                  :name (c36-9 / name
                                               :op1 "Time"))
                    :ARG2 (c36-10 / journalist)))

# ::snt l00
# ::tokens ["l00"]
# ::lemmas ["l00"]
(c37-0 / string-entity
       :value "l00")

# ::snt TheFix hi how is your days
# ::tokens ["TheFix", "hi", "how", "is", "your", "days"]
# ::lemmas ["TheFix", "hi", "how", "be", "your", "days"]
(c38-1 / fix-02
       :ARG0 (c38-3 / you)
       :ARG1 (c38-0 / amr-unknown
                    :domain (c38-2 / day
                                   :poss c38-3))
       :mode imperative)

# ::snt TheFix Both Mitts eyes cutswollen shut nose broken jaw broken 4 teeth gone 9 ribs brokeninternal bleeding  CNN calls tie
# ::tokens ["TheFix", "Both", "Mitts", "eyes", "cutswollen", "shut", "nose", "broken", "jaw", "broken", "4", "teeth", "gone", "9", "ribs", "brokeninternal", "bleeding", " ", "CNN", "calls", "tie"]
# ::lemmas ["TheFix", "both", "Mitts", "eye", "cutswollen", "shut", "nose", "break", "jaw", "break", "4", "tooth", "go", "9", "rib", "brokeninternal", "bleed", " ", "CNN", "call", "tie"]
(c39-15 / fix-02
        :ARG1 (c39-12 / and
                      :op1 (c39-6 / cut-01
                                  :ARG1 (c39-7 / eye
                                               :part-of (c39-8 / person
                                                               :name (c39-17 / name
                                                                             :op1 "Mitt")
                                                               :part (c39-9 / nose)
                                                               :part (c39-19 / jaw)))
                                  :ARG3 (c39-10 / thread))
                      :op2 (c39-0 / break-01
                                  :ARG1 c39-9
                                  :ARG3 c39-10)
                      :op3 (c39-1 / break-01
                                  :ARG1 c39-19
                                  :ARG2 (c39-11 / tooth
                                                :quant 4))
                      :op4 (c39-2 / break-01
                                  :ARG1 (c39-3 / rib
                                               :quant 9)
                                  :ARG2 (c39-13 / bleed-01
                                                :mod (c39-18 / internal)))
                      :ARG1-of (c39-16 / call-01
                                       :ARG0 (c39-4 / publication
                                                    :name (c39-5 / name
                                                                 :op1 "CNN"))
                                       :ARG2 (c39-14 / tie))))

# ::snt Truth is megynkelly DanaPerino oreillyfactor HillaryClinton realDonaldTrump Donald all talk He will be an official disaster
# ::tokens ["Truth", "is", "megynkelly", "DanaPerino", "oreillyfactor", "HillaryClinton", "realDonaldTrump", "Donald", "all", "talk", "He", "will", "be", "an", "official", "disaster"]
# ::lemmas ["truth", "be", "megynkelly", "DanaPerino", "oreillyfactor", "HillaryClinton", "realDonaldTrump", "Donald", "all", "talk", "he", "will", "be", "an", "official", "disaster"]
(c40-11 / multi-sentence
        :snt1 (c40-8 / truth
                     :domain (c40-6 / person
                                    :name (c40-12 / name
                                                  :op1 "Megynkelly"
                                                  :op2 "DanaPerino")
                                    :mod (c40-2 / person
                                                :name (c40-7 / name
                                                             :op1 "HillaryClinton")
                                                :ARG0-of (c40-3 / real-04)
                                                :mod (c40-10 / factor))
                                    :mod (c40-1 / person
                                                :name (c40-4 / name
                                                             :op1 "Donald"
                                                             :op2 "Clinton")
                                                :mode expressive)
                                    :ARG0-of (c40-13 / talk-01
                                                     :mod (c40-9 / all))))
        :snt2 (c40-5 / disaster
                     :mod (c40-0 / official)
                     :domain c40-5))

# ::snt elrufaiThanks mallam Nasir Ahmed
# ::tokens ["elrufaiThanks", "mallam", "Nasir", "Ahmed"]
# ::lemmas ["elrufaithanks", "mallam", "Nasir", "Ahmed"]
(c41-3 / thank-01
       :ARG0 (c41-2 / i)
       :ARG1 (c41-0 / person
                    :name (c41-1 / name
                                 :op1 "Mallam"
                                 :op2 "Nasir"
                                 :op3 "Ahmed")))

# ::snt InquisitionNews httpwwwyoutubecomwatchvTYKAbRKwKAsnsem … O we 400000 views RememberInNovember debates LynnDebate
# ::tokens ["InquisitionNews", "httpwwwyoutubecomwatchvTYKAbRKwKAsnsem", "\u2026", "O", "we", "400000", "views", "RememberInNovember", "debates", "LynnDebate"]
# ::lemmas ["InquisitionNews", "httpwwwyoutubecomwatchvTYKAbRKwKAsnsem", "\u2026", "o", "we", "400000", "view", "RememberInNovember", "debate", "LynnDebate"]
(c42-9 / multi-sentence
       :snt1 (c42-3 / publication
                    :name (c42-10 / name
                                  :op1 "InquisitionNews")
                    :medium (c42-4 / url-entity
                                   :value "wwwyoutubecomwatchvTYKAbRKwKAsnsem"))
       :snt2 (c42-6 / view-02
                    :ARG0 (c42-7 / we)
                    :ARG1-of (c42-0 / remember-01
                                    :time (c42-2 / debate-01
                                                 :time (c42-8 / date-entity
                                                              :month 11)))
                    :quant 400000)
       :snt3 (c42-1 / person
                    :name (c42-5 / name
                                 :op1 "LynnDebate")))

# ::snt I just read the transcript Its painful reading Trumps words he make no sense and he doesnt speak in complete sentences
# ::tokens ["I", "just", "read", "the", "transcript", "Its", "painful", "reading", "Trumps", "words", "he", "make", "no", "sense", "and", "he", "does", "nt", "speak", "in", "complete", "sentences"]
# ::lemmas ["i", "just", "read", "the", "transcript", "its", "painful", "reading", "Trumps", "word", "he", "make", "no", "sense", "and", "he", "do", "not", "speak", "in", "complete", "sentence"]
(c43-11 / multi-sentence
        :snt1 (c43-0 / read-01
                     :ARG0 (c43-13 / i)
                     :ARG1 (c43-5 / thing
                                  :ARG1-of (c43-14 / transcribe-01))
                     :time (c43-2 / just))
        :snt2 (c43-8 / and
                     :op1 (c43-3 / pain-01
                                 :ARG0 (c43-9 / read-01
                                              :ARG1 (c43-6 / word
                                                           :poss (c43-1 / person
                                                                        :name (c43-12 / name
                                                                                      :op1 "Trumps")))))
                     :op2 (c43-10 / speak-01
                                  :ARG0 c43-1
                                  :manner (c43-7 / sentence
                                                 :ARG1-of (c43-4 / complete-02))
                                  :polarity -)))

# ::snt BritsForIsrael Flash  Has been known to bend the truth
# ::tokens ["BritsForIsrael", "Flash", " ", "Has", "been", "known", "to", "bend", "the", "truth"]
# ::lemmas ["BritsForIsrael", "Flash", " ", "have", "be", "know", "to", "bend", "the", "truth"]
(c44-2 / know-01
       :ARG1 (c44-4 / bend-02
                    :ARG0 (c44-0 / person
                                 :name (c44-3 / name
                                              :op1 "BritsForIsrael"
                                              :op2 "Flash"))
                    :ARG1 (c44-1 / truth)))
