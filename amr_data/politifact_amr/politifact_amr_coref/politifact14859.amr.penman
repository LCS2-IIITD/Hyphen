# ::snt This still needs to be confirmedif not some bloggers will be losing high profile advertisers
# ::tokens ["This", "still", "needs", "to", "be", "confirmedif", "not", "some", "bloggers", "will", "be", "losing", "high", "profile", "advertisers"]
# ::lemmas ["this", "still", "need", "to", "be", "confirmedif", "not", "some", "blogger", "will", "be", "lose", "high", "profile", "advertiser"]
(c1-10 / need-01
       :ARG1 (c1-2 / confirm-01
                   :ARG1 (c1-4 / this))
       :mod (c1-7 / still)
       :condition (c1-8 / lose-02
                        :ARG0 (c1-3 / person
                                    :ARG0-of (c1-11 / blog-01)
                                    :quant (c1-5 / some))
                        :ARG1 (c1-1 / person
                                    :ARG0-of (c1-6 / advertise-01)
                                    :mod (c1-0 / profile
                                               :ARG1-of (c1-9 / high-02)))
                        :polarity -))

# ::snt FAKE
# ::tokens ["FAKE"]
# ::lemmas ["FAKE"]
(c2-0 / fail-01)

# ::snt Liberals can not win unless they trash the opponent and then cheat at counting
# ::tokens ["Liberals", "can", "not", "win", "unless", "they", "trash", "the", "opponent", "and", "then", "cheat", "at", "counting"]
# ::lemmas ["liberal", "can", "not", "win", "unless", "they", "trash", "the", "opponent", "and", "then", "cheat", "at", "count"]
(c3-3 / possible-01
      :ARG1 (c3-6 / win-01
                  :ARG0 (c3-2 / person
                              :ARG1-of (c3-9 / liberal-02)))
      :condition (c3-7 / and
                       :op1 (c3-5 / trash-01
                                  :ARG0 c3-2
                                  :ARG1 (c3-1 / person
                                              :ARG0-of (c3-0 / oppose-01)))
                       :op2 (c3-4 / cheat-02
                                  :ARG0 c3-2
                                  :ARG1 (c3-8 / count-01)
                                  :time (c3-10 / then)))
      :polarity -)

# ::snt WE MUST demand 100 accuracy in voter registration ballot counting verification that Only automated  ballot system could provide instead of every polling station making up NEW RULES   BHOMOACORN declared fraudulent after 2008 split into dozens of organized community fraudS
# ::tokens ["WE", "MUST", "demand", "100", "accuracy", "in", "voter", "registration", "ballot", "counting", "verification", "that", "Only", "automated", " ", "ballot", "system", "could", "provide", "instead", "of", "every", "polling", "station", "making", "up", "NEW", "RULES", "  ", "BHOMOACORN", "declared", "fraudulent", "after", "2008", "split", "into", "dozens", "of", "organized", "community", "fraudS"]
# ::lemmas ["we", "must", "demand", "100", "accuracy", "in", "voter", "registration", "ballot", "counting", "verification", "that", "only", "automate", " ", "ballot", "system", "could", "provide", "instead", "of", "every", "polling", "station", "make", "up", "new", "rule", "  ", "BHOMOACORN", "declare", "fraudulent", "after", "2008", "split", "into", "dozens", "of", "organize", "community", "frauds"]
(c4-17 / multi-sentence
       :snt1 (c4-0 / obligate-01
                   :ARG1 (c4-4 / we)
                   :ARG2 (c4-23 / demand-01
                                :ARG0 c4-4
                                :ARG1 (c4-25 / accurate
                                             :topic (c4-24 / verify-01
                                                           :ARG1 (c4-18 / ballot
                                                                        :ARG2-of (c4-1 / register-02
                                                                                       :ARG1 (c4-3 / person
                                                                                                   :ARG0-of (c4-5 / vote-01))))
                                                           :ARG1-of (c4-9 / provide-01
                                                                          :ARG0 (c4-28 / system
                                                                                       :mod (c4-21 / ballot)
                                                                                       :ARG1-of (c4-15 / automate-01)
                                                                                       :mod (c4-22 / only))
                                                                          :ARG1-of (c4-20 / possible-01)
                                                                          :ARG1-of (c4-7 / instead-of-91
                                                                                         :ARG2 (c4-2 / make-up-10
                                                                                                     :ARG0 c4-28
                                                                                                     :ARG1 (c4-13 / rate
                                                                                                                  :ARG1-of (c4-29 / new-01))))))
                                             :quant 100)))
       :snt2 (c4-26 / declare-01
                    :ARG1 (c4-14 / organization
                                 :name (c4-11 / name
                                              :op1 "BHOMOACORN"))
                    :ARG2 (c4-30 / defraud-01
                                 :ARG0 c4-14)
                    :time (c4-19 / after
                                 :op1 (c4-16 / split-01
                                             :ARG1 c4-14
                                             :ARG2 (c4-12 / defraud-01
                                                          :ARG0 (c4-10 / community
                                                                       :quant (c4-8 / multiple
                                                                                    :op1 12))
                                                          :ARG1-of (c4-6 / organize-01))
                                             :time (c4-27 / date-entity
                                                          :year 2008)))))

# ::snt Tweet
# ::tokens ["Tweet"]
# ::lemmas ["Tweet"]
(c5-0 / tweet-01)

# ::snt Except it didnt happen Joke site Do you need that translated into Russian
# ::tokens ["Except", "it", "did", "nt", "happen", "Joke", "site", "Do", "you", "need", "that", "translated", "into", "Russian"]
# ::lemmas ["except", "it", "do", "not", "happen", "joke", "site", "do", "you", "need", "that", "translate", "into", "Russian"]
(c6-6 / multi-sentence
      :snt1 (c6-0 / except-01
                  :ARG1 (c6-9 / it
                              :polarity -))
      :snt2 (c6-5 / site
                  :topic (c6-10 / joke-01))
      :snt3 (c6-8 / need-01
                  :ARG0 (c6-11 / you)
                  :ARG1 (c6-3 / translate-01
                              :ARG1 (c6-1 / that)
                              :ARG3 (c6-7 / language
                                          :name (c6-2 / name
                                                      :op1 "Russian")))
                  :polarity (c6-4 / amr-unknown)))

# ::snt RECALL RECALL RECALL
# ::tokens ["RECALL", "RECALL", "RECALL"]
# ::lemmas ["RECALL", "RECALL", "RECALL"]
(c7-1 / record-01
      :mod (c7-0 / again))

# ::snt Yahoo
# ::tokens ["Yahoo"]
# ::lemmas ["Yahoo"]
(c8-0 / company
      :name (c8-1 / name
                  :op1 "Yahoo"))

# ::snt 3 News agencies reporting
# ::tokens ["3", "News", "agencies", "reporting"]
# ::lemmas ["3", "News", "agency", "report"]
(c9-2 / report-01
      :ARG0 (c9-0 / agency
                  :mod (c9-1 / news)
                  :quant 3))

# ::snt Pics of criminal votes should speak for itself in last article  So it can be verified if necessary
# ::tokens ["Pics", "of", "criminal", "votes", "should", "speak", "for", "itself", "in", "last", "article", " ", "So", "it", "can", "be", "verified", "if", "necessary"]
# ::lemmas ["pic", "of", "criminal", "vote", "should", "speak", "for", "itself", "in", "last", "article", " ", "so", "it", "can", "be", "verify", "if", "necessary"]
(c10-9 / multi-sentence
       :snt1 (c10-0 / recommend-01
                    :ARG1 (c10-7 / speak-01
                                 :ARG0 (c10-8 / logic
                                              :topic (c10-3 / vote-01
                                                            :ARG2 (c10-1 / criminal-03)))
                                 :mod (c10-13 / by-oneself)
                                 :location (c10-5 / article
                                                  :mod (c10-6 / last))))
       :snt2 (c10-10 / cause-01
                     :ARG1 (c10-2 / possible-01
                                  :ARG1 (c10-4 / verify-01
                                               :ARG1 (c10-12 / it)
                                               :condition (c10-11 / need-01
                                                                  :ARG1 c10-4)))))

# ::snt Here is another article link  httpprideofamericacom20171215breakingbusloadofblacksfrom3statesdrovetoalabamatovoteillegally â€¦  IF BIRMINGHAM POLICE ARRESTED THESE POLL WORKERS FOR ALLOWING OVER THREE THOUSAND INVALID VOTES THEN THERE MUST BE AN ARREST RECORD RIGHT
# ::tokens ["Here", "is", "another", "article", "link", " ", "httpprideofamericacom20171215breakingbusloadofblacksfrom3statesdrovetoalabamatovoteillegally", "\u2026", " ", "IF", "BIRMINGHAM", "POLICE", "ARRESTED", "THESE", "POLL", "WORKERS", "FOR", "ALLOWING", "OVER", "THREE", "THOUSAND", "INVALID", "VOTES", "THEN", "THERE", "MUST", "BE", "AN", "ARREST", "RECORD", "RIGHT"]
# ::lemmas ["here", "be", "another", "article", "link", " ", "httpprideofamericacom20171215breakingbusloadofblacksfrom3statesdrovetoalabamatovoteillegally", "\u2026", " ", "if", "BIRMINGHAM", "police", "arrest", "these", "poll", "worker", "for", "allow", "over", "three", "thousand", "invalid", "vote", "then", "there", "must", "be", "an", "ARREST", "record", "right"]
(c11-15 / multi-sentence
        :snt1 (c11-16 / be-located-at-91
                      :ARG1 (c11-14 / link
                                    :mod (c11-21 / another)
                                    :mod (c11-12 / article))
                      :ARG2 (c11-10 / here))
        :snt2 (c11-8 / have-condition-91
                     :ARG1 (c11-0 / obligate-01
                                  :ARG2 (c11-2 / right-05
                                               :mod (c11-17 / again)
                                               :ARG1-of (c11-9 / record-01)))
                     :ARG2 (c11-5 / arrest-01
                                  :ARG0 (c11-3 / police
                                               :mod (c11-7 / city
                                                           :name (c11-23 / name
                                                                         :op1 "Birmingham")))
                                  :ARG1 (c11-6 / person
                                               :ARG0-of (c11-4 / work-01
                                                               :ARG1 (c11-18 / poll))
                                               :mod (c11-13 / this))
                                  :ARG1-of (c11-22 / cause-01
                                                   :ARG0 (c11-1 / allow-01
                                                                :ARG0 c11-3
                                                                :ARG1 (c11-11 / win-01
                                                                              :quant (c11-19 / over
                                                                                             :op1 3)
                                                                              :ARG1-of (c11-20 / VAL-01)))))))

# ::snt Is there a legit source
# ::tokens ["Is", "there", "a", "legit", "source"]
# ::lemmas ["be", "there", "a", "legit", "source"]
(c12-1 / source
       :polarity (c12-0 / amr-unknown)
       :ARG1-of (c12-2 / legitimate-02))

# ::snt BREAKING NEWS POLL WORKERS ARRESTED IN ALLOWING VOTERFRAUD OVER 3000 INVALID VOTES IN BIRMINGHAMLOCK THEM UP
# ::tokens ["BREAKING", "NEWS", "POLL", "WORKERS", "ARRESTED", "IN", "ALLOWING", "VOTERFRAUD", "OVER", "3000", "INVALID", "VOTES", "IN", "BIRMINGHAMLOCK", "THEM", "UP"]
# ::lemmas ["BREAKING", "NEWS", "POLL", "WORKERS", "arrest", "in", "allow", "voterfraud", "over", "3000", "INVALID", "vote", "in", "BIRMINGHAMLOCK", "them", "up"]
(c13-8 / arrest-01
       :ARG1 (c13-2 / person
                    :ARG0-of (c13-6 / work-01
                                    :ARG1 (c13-1 / poll-01))
                    :ARG0-of (c13-11 / break-13
                                     :ARG1 (c13-10 / news)))
       :ARG2 (c13-9 / loot-01
                    :ARG2 c13-2
                    :quant (c13-0 / over
                                  :op1 3000)
                    :ARG1-of (c13-7 / value-01
                                    :polarity -))
       :location (c13-3 / city
                        :name (c13-4 / name
                                     :op1 "Birkham"))
       :mod (c13-5 / all-over))

# ::snt Why is that not a surprise
# ::tokens ["Why", "is", "that", "not", "a", "surprise"]
# ::lemmas ["why", "be", "that", "not", "a", "surprise"]
(c14-3 / surprise-01
       :ARG0 (c14-2 / that)
       :ARG1-of (c14-1 / cause-01
                       :ARG0 (c14-0 / amr-unknown))
       :polarity -)

# ::snt this was started on a site that claims to be satire it on a series of sites on their network thats designed to fool conservatives into believe this crap they make up to make conservatives look bad
# ::tokens ["this", "was", "started", "on", "a", "site", "that", "claims", "to", "be", "satire", "it", "on", "a", "series", "of", "sites", "on", "their", "network", "that", "s", "designed", "to", "fool", "conservatives", "into", "believe", "this", "crap", "they", "make", "up", "to", "make", "conservatives", "look", "bad"]
# ::lemmas ["this", "be", "start", "on", "a", "site", "that", "claim", "to", "be", "satire", "it", "on", "a", "series", "of", "site", "on", "their", "network", "that", "s", "design", "to", "fool", "conservatives", "into", "believe", "this", "crap", "they", "make", "up", "to", "make", "conservatives", "look", "bad"]
(c15-13 / start-01
        :ARG1 (c15-8 / this)
        :ARG2 (c15-10 / site
                      :ARG0-of (c15-5 / claim-01
                                      :ARG1 (c15-9 / satire
                                                   :domain c15-10))
                      :location (c15-18 / site
                                        :quant (c15-12 / series)
                                        :location (c15-17 / network
                                                          :poss c15-10)
                                        :ARG1-of (c15-4 / design-01
                                                        :ARG3 (c15-11 / fool-01
                                                                      :ARG1 (c15-6 / person
                                                                                   :mod (c15-14 / conservative))
                                                                      :ARG2 (c15-0 / believe-01
                                                                                   :ARG0 c15-6
                                                                                   :ARG1 (c15-1 / crap
                                                                                                :mod (c15-7 / this)
                                                                                                :ARG1-of (c15-15 / make-up-10
                                                                                                                 :ARG0 c15-6
                                                                                                                 :purpose (c15-3 / make-02
                                                                                                                                 :ARG0 c15-6
                                                                                                                                 :ARG1 (c15-16 / look-02
                                                                                                                                               :ARG0 c15-6
                                                                                                                                               :ARG1 (c15-2 / bad-07)))))))))))

# ::snt Nothing is ever done when Democrats break the lawwhich is most of the time
# ::tokens ["Nothing", "is", "ever", "done", "when", "Democrats", "break", "the", "lawwhich", "is", "most", "of", "the", "time"]
# ::lemmas ["nothing", "be", "ever", "do", "when", "Democrats", "break", "the", "lawwhich", "be", "most", "of", "the", "time"]
(c16-1 / do-02
       :ARG1 (c16-9 / nothing)
       :time (c16-2 / ever)
       :time (c16-10 / break-18
                     :ARG0 (c16-3 / person
                                  :ARG0-of (c16-6 / have-org-role-91
                                                  :ARG1 (c16-0 / political-party
                                                               :name (c16-4 / name
                                                                            :op1 "Democratic"
                                                                            :op2 "Party"))))
                     :ARG1 (c16-7 / law)
                     :frequency (c16-5 / time
                                       :quant (c16-8 / most))))

# ::snt This needs to be in the National news
# ::tokens ["This", "needs", "to", "be", "in", "the", "National", "news"]
# ::lemmas ["this", "need", "to", "be", "in", "the", "National", "news"]
(c17-3 / need-01
       :ARG1 (c17-4 / be-located-at-91
                    :ARG1 (c17-2 / this)
                    :ARG2 (c17-1 / news
                                 :mod (c17-0 / nation))))

# ::snt How many more must there be
# ::tokens ["How", "many", "more", "must", "there", "be"]
# ::lemmas ["how", "many", "more", "must", "there", "be"]
(c18-0 / obligate-01
       :ARG2 (c18-1 / exist-01
                    :ARG1 (c18-2 / thing
                                 :quant (c18-3 / amr-unknown
                                               :mod (c18-4 / more)))))

# ::snt I believe this is a parody site Went there and read other stories
# ::tokens ["I", "believe", "this", "is", "a", "parody", "site", "Went", "there", "and", "read", "other", "stories"]
# ::lemmas ["i", "believe", "this", "be", "a", "parody", "site", "go", "there", "and", "read", "other", "story"]
(c19-6 / and
       :op1 (c19-10 / believe-01
                    :ARG0 (c19-9 / i)
                    :ARG1 (c19-7 / site
                                 :domain (c19-4 / this)
                                 :ARG1-of (c19-2 / parody-01)))
       :op2 (c19-8 / go-02
                   :ARG0 c19-9
                   :ARG4 (c19-3 / there))
       :op3 (c19-1 / read-01
                   :ARG0 c19-9
                   :ARG1 (c19-5 / story
                                :mod (c19-0 / other))))

# ::snt FakeNews BagLady
# ::tokens ["FakeNews", "BagLady"]
# ::lemmas ["FakeNews", "BagLady"]
(c20-2 / say-01
       :ARG0 (c20-4 / i)
       :ARG1 (c20-1 / fake-News)
       :ARG2 (c20-0 / person
                    :name (c20-3 / name
                                 :op1 "BagLady")))

# ::snt In California up that number they were actively seeking illegals to vote in the last election
# ::tokens ["In", "California", "up", "that", "number", "they", "were", "actively", "seeking", "illegals", "to", "vote", "in", "the", "last", "election"]
# ::lemmas ["in", "California", "up", "that", "number", "they", "be", "actively", "seek", "illegal", "to", "vote", "in", "the", "last", "election"]
(c21-9 / seek-01
       :ARG0 (c21-4 / they)
       :ARG1 (c21-5 / vote-01
                    :ARG0 (c21-0 / person
                                 :ARG1-of (c21-10 / legal-02
                                                  :polarity -))
                    :time (c21-1 / elect-01
                                 :mod (c21-7 / last)))
       :ARG2 c21-0
       :ARG1-of (c21-8 / activity-06
                       :ARG0 c21-4)
       :location (c21-6 / state
                        :name (c21-11 / name
                                      :op1 "California")
                        :ARG1-of (c21-2 / up-02
                                        :ARG3 (c21-3 / number
                                                     :mod (c21-12 / that)))))

# ::snt Im guessing that maybe 10 of the votes nationwide are fake Probably 25 in some areas   Five bucks says of those theyre 95 in one direction
# ::tokens ["I", "m", "guessing", "that", "maybe", "10", "of", "the", "votes", "nationwide", "are", "fake", "Probably", "25", "in", "some", "areas", "  ", "Five", "bucks", "says", "of", "those", "they", "re", "95", "in", "one", "direction"]
# ::lemmas ["i", "be", "guess", "that", "maybe", "10", "of", "the", "vote", "nationwide", "be", "fake", "probably", "25", "in", "some", "area", "  ", "Five", "bucks", "say", "of", "those", "they", "be", "95", "in", "one", "direction"]
(c22-14 / multi-sentence
        :snt1 (c22-17 / guess-01
                      :ARG0 (c22-18 / i)
                      :ARG1 (c22-5 / possible-01
                                   :ARG1 (c22-12 / fake-02
                                                 :ARG1 (c22-7 / vote
                                                              :ARG1-of (c22-1 / include-91
                                                                              :ARG2 (c22-8 / vote
                                                                                           :location (c22-15 / nationwide)))
                                                              :quant 10)))
                      :snt2 (c22-2 / probable
                                   :domain (c22-16 / vote
                                                   :location (c22-9 / area
                                                                    :quant (c22-13 / some))
                                                   :quant 25))
                      :snt3 (c22-10 / say-01
                                    :ARG0 (c22-3 / monetary-quantity
                                                 :unit (c22-4 / dollar)
                                                 :quant 5)
                                    :ARG1 (c22-6 / equal-01
                                                 :ARG1 c22-16
                                                 :ARG2 (c22-19 / vote
                                                               :location (c22-11 / direction
                                                                                 :mod (c22-0 / one))
                                                               :quant 95)))))

# ::snt WellAlabama Democrats  RINOs anyway
# ::tokens ["WellAlabama", "Democrats", " ", "RINOs", "anyway"]
# ::lemmas ["WellAlabama", "Democrats", " ", "rino", "anyway"]
(c23-1 / rant-01
       :ARG0 (c23-2 / person
                    :ARG0-of (c23-5 / have-org-role-91
                                    :ARG1 (c23-0 / political-party
                                                 :name (c23-6 / name
                                                              :op1 "Alabama"
                                                              :op2 "Democrat"))))
       :mod (c23-3 / well)
       :mod (c23-4 / anyway))

# ::snt Stay classy Alabama
# ::tokens ["Stay", "classy", "Alabama"]
# ::lemmas ["stay", "classy", "Alabama"]
(c24-2 / stay-01
       :ARG1 (c24-3 / state
                    :name (c24-1 / name
                                 :op1 "Alabama"))
       :ARG3 (c24-0 / classy-02
                    :ARG1 c24-3))

# ::snt We saw the videos of those college kids who admitted traveling to Alabama from other states just to vote in the election
# ::tokens ["We", "saw", "the", "videos", "of", "those", "college", "kids", "who", "admitted", "traveling", "to", "Alabama", "from", "other", "states", "just", "to", "vote", "in", "the", "election"]
# ::lemmas ["we", "see", "the", "video", "of", "those", "college", "kid", "who", "admit", "travel", "to", "Alabama", "from", "other", "state", "just", "to", "vote", "in", "the", "election"]
(c25-12 / see-01
        :ARG0 (c25-6 / we)
        :ARG1 (c25-5 / video
                     :topic (c25-7 / admit-01
                                   :ARG0 (c25-11 / kid
                                                 :mod (c25-2 / college)
                                                 :mod (c25-4 / that))
                                   :ARG1 (c25-14 / travel-01
                                                 :ARG0 c25-11
                                                 :ARG4 (c25-8 / state
                                                              :name (c25-13 / name
                                                                            :op1 "Alabama"))
                                                 :source (c25-9 / state
                                                                :mod (c25-0 / other))
                                                 :purpose (c25-10 / vote-01
                                                                  :ARG0 c25-11
                                                                  :ARG1 (c25-3 / elect-01)
                                                                  :mod (c25-1 / just))))))

# ::snt And thatâ€™s just one polling station
# ::tokens ["And", "that", "\u2019s", "just", "one", "polling", "station"]
# ::lemmas ["and", "that", "\u2019", "just", "one", "polling", "station"]
(c26-2 / and
       :op2 (c26-3 / station
                   :location-of (c26-0 / poll-01)
                   :mod (c26-4 / just)
                   :domain (c26-1 / that)
                   :quant 1))

# ::snt Unfortunately its the Democrats new normal
# ::tokens ["Unfortunately", "its", "the", "Democrats", "new", "normal"]
# ::lemmas ["unfortunately", "its", "the", "Democrats", "new", "normal"]
(c27-1 / normal
       :ARG1-of (c27-2 / new-01)
       :poss (c27-0 / political-party
                    :name (c27-3 / name
                                 :op1 "Democrat"))
       :polarity -)

# ::snt Unbelievable
# ::tokens ["Unbelievable"]
# ::lemmas ["unbelievable"]
(c28-0 / possible-01
       :ARG1 (c28-1 / believe-01)
       :polarity -)

# ::snt Because Democrats cant win on issues policies or successes  Only on smear tactics and cheating
# ::tokens ["Because", "Democrats", "ca", "nt", "win", "on", "issues", "policies", "or", "successes", " ", "Only", "on", "smear", "tactics", "and", "cheating"]
# ::lemmas ["because", "Democrats", "can", "not", "win", "on", "issue", "policy", "or", "successe", " ", "only", "on", "smear", "tactic", "and", "cheat"]
(c29-4 / cause-01
       :ARG0 (c29-5 / possible-01
                    :ARG1 (c29-8 / win-01
                                 :ARG0 (c29-2 / person
                                              :ARG0-of (c29-12 / have-org-role-91
                                                               :ARG1 (c29-1 / political-party
                                                                            :name (c29-15 / name
                                                                                          :op1 "Democratic"
                                                                                          :op2 "Party"))))
                                 :ARG1-of c29-4
                                 :ARG0 (c29-10 / and
                                               :op1 (c29-0 / or
                                                           :op1 (c29-14 / policy-01
                                                                        :ARG2 (c29-16 / issue-02))
                                                           :op2 (c29-11 / succeed-01))
                                               :op2 (c29-6 / and
                                                           :op1 (c29-7 / tactic
                                                                       :mod (c29-9 / smear-02))
                                                           :op2 (c29-13 / cheat-03)
                                                           :mod (c29-3 / only))))
                    :polarity -))

# ::snt Of course there should be a recount This whole election smells of corruption  flaky allegations against Moore that are already being debunked  Why cant all of these crooked politicians allow America to have honest elections about issues
# ::tokens ["Of", "course", "there", "should", "be", "a", "recount", "This", "whole", "election", "smells", "of", "corruption", " ", "flaky", "allegations", "against", "Moore", "that", "are", "already", "being", "debunked", " ", "Why", "ca", "nt", "all", "of", "these", "crooked", "politicians", "allow", "America", "to", "have", "honest", "elections", "about", "issues"]
# ::lemmas ["of", "course", "there", "should", "be", "a", "recount", "this", "whole", "election", "smell", "of", "corruption", " ", "flaky", "allegation", "against", "Moore", "that", "be", "already", "be", "debunk", " ", "why", "can", "not", "all", "of", "these", "crooked", "politician", "allow", "America", "to", "have", "honest", "election", "about", "issue"]
(c30-18 / multi-sentence
        :snt1 (c30-2 / recommend-01
                     :ARG1 (c30-12 / recount-01)
                     :mod (c30-0 / of-course))
        :snt2 (c30-24 / smell-02
                      :ARG0 (c30-4 / elect-01
                                   :mod (c30-6 / whole))
                      :ARG1 (c30-10 / corrupt-01))
        :snt3 (c30-21 / debunk-01
                      :ARG1 (c30-22 / allege-01
                                    :ARG1 (c30-5 / person
                                                 :name (c30-26 / name
                                                               :op1 "Moore"))
                                    :ARG1-of (c30-23 / flak-01))
                      :time (c30-15 / already))
        :snt4 (c30-25 / cause-01
                      :ARG0 (c30-19 / amr-unknown)
                      :ARG1 (c30-9 / possible-01
                                   :ARG1 (c30-8 / allow-01
                                                :ARG0 (c30-20 / politician
                                                              :mod (c30-1 / all)
                                                              :ARG1-of (c30-3 / crook-01)
                                                              :mod (c30-16 / this))
                                                :ARG1 (c30-17 / elect-01
                                                              :ARG0 (c30-13 / country
                                                                            :name (c30-11 / name
                                                                                          :op1 "America"))
                                                              :ARG1-of (c30-14 / honest-01)
                                                              :topic (c30-7 / issue-02)))
                                   :polarity -)))

# ::snt Nope Never happened Phony story They tricked you again Feel stupid yet
# ::tokens ["Nope", "Never", "happened", "Phony", "story", "They", "tricked", "you", "again", "Feel", "stupid", "yet"]
# ::lemmas ["Nope", "never", "happen", "Phony", "story", "they", "trick", "you", "again", "feel", "stupid", "yet"]
(c31-9 / multi-sentence
       :snt1 (c31-1 / event
                    :time (c31-6 / ever)
                    :polarity -)
       :snt2 (c31-8 / say-01
                    :ARG0 (c31-11 / i)
                    :ARG1 (c31-3 / trick-01
                                 :ARG0 (c31-12 / they)
                                 :ARG1 (c31-13 / you)
                                 :mod (c31-5 / again))
                    :ARG2 (c31-2 / person
                                 :name (c31-10 / name
                                               :op1 "Phony")))
       :snt3 (c31-7 / feel-01
                    :ARG0 c31-13
                    :ARG1 (c31-4 / stupid)
                    :time (c31-0 / yet)))

# ::snt Thanks for that heads up
# ::tokens ["Thanks", "for", "that", "heads", "up"]
# ::lemmas ["thank", "for", "that", "head", "up"]
(c32-2 / thank-01
       :ARG0 (c32-0 / i)
       :ARG1 (c32-3 / you)
       :ARG2 (c32-1 / heads-up))

# ::snt I believe this is fakeI got burned by one of these sites yesterday
# ::tokens ["I", "believe", "this", "is", "fakeI", "got", "burned", "by", "one", "of", "these", "sites", "yesterday"]
# ::lemmas ["i", "believe", "this", "be", "fakeI", "get", "burn", "by", "one", "of", "these", "site", "yesterday"]
(c33-7 / multi-sentence
       :snt1 (c33-9 / believe-01
                    :ARG0 (c33-8 / i)
                    :ARG1 (c33-5 / fake-02
                                 :ARG1 (c33-3 / this)))
       :snt2 (c33-0 / burn-01
                    :ARG0 (c33-6 / site
                                 :ARG1-of (c33-1 / include-91
                                                 :ARG2 (c33-4 / site
                                                              :mod (c33-2 / this)))
                                 :quant 1)
                    :ARG1 c33-8
                    :time (c33-10 / yesterday)))

# ::snt Total BS tweet with fake info
# ::tokens ["Total", "BS", "tweet", "with", "fake", "info"]
# ::lemmas ["total", "BS", "tweet", "with", "fake", "info"]
(c34-1 / tweet-01
       :ARG1-of (c34-5 / bullshit-01)
       :ARG0-of (c34-3 / have-03
                       :ARG1 (c34-4 / information
                                    :ARG1-of (c34-2 / fake-02)))
       :ARG1-of (c34-0 / total-01))

# ::snt More than that
# ::tokens ["More", "than", "that"]
# ::lemmas ["more", "than", "that"]
(c35-1 / more-than
       :op1 (c35-0 / that))

# ::snt Then there are those that wonder why Moore has not conceded yetesp with some 18k military votes coming in   Duh
# ::tokens ["Then", "there", "are", "those", "that", "wonder", "why", "Moore", "has", "not", "conceded", "yetesp", "with", "some", "18k", "military", "votes", "coming", "in", "  ", "Duh"]
# ::lemmas ["then", "there", "be", "those", "that", "wonder", "why", "Moore", "have", "not", "concede", "yetesp", "with", "some", "18k", "military", "vote", "come", "in", "  ", "duh"]
(c36-6 / wonder-01
       :ARG0 (c36-3 / person
                    :mod (c36-5 / that))
       :ARG1 (c36-13 / thing
                     :ARG0-of (c36-4 / cause-01
                                     :ARG1 (c36-9 / concede-01
                                                  :ARG0 (c36-0 / person
                                                               :name (c36-12 / name
                                                                             :op1 "Moore"))
                                                  :time (c36-14 / yet)
                                                  :polarity -))
                     :condition (c36-1 / come-in-07
                                       :ARG1 (c36-7 / vote-01
                                                    :ARG0 (c36-10 / military)
                                                    :quant (c36-11 / some
                                                                   :op1 18000))))
       :mod (c36-2 / duh
                   :mode expressive)
       :time (c36-8 / then))

# ::snt Cool
# ::tokens ["Cool"]
# ::lemmas ["cool"]
(c37-0 / cool-04)

# ::snt Yes
# ::tokens ["Yes"]
# ::lemmas ["yes"]
(c38-0 / yes)

# ::snt A good sign that the Alabama election isnâ€™t over
# ::tokens ["A", "good", "sign", "that", "the", "Alabama", "election", "is", "n\u2019t", "over"]
# ::lemmas ["a", "good", "sign", "that", "the", "Alabama", "election", "be", "not", "over"]
(c39-3 / signal-07
       :ARG1 (c39-0 / over-01
                    :ARG1 (c39-1 / elect-01
                                 :location (c39-2 / state
                                                  :name (c39-5 / name
                                                               :op1 "Alabama")))
                    :polarity -)
       :ARG1-of (c39-4 / good-02))

# ::snt I am checking Fact check like Snopes has been wrong before But I will take down things that end up not being true
# ::tokens ["I", "am", "checking", "Fact", "check", "like", "Snopes", "has", "been", "wrong", "before", "But", "I", "will", "take", "down", "things", "that", "end", "up", "not", "being", "true"]
# ::lemmas ["i", "be", "check", "Fact", "check", "like", "Snopes", "have", "be", "wrong", "before", "but", "i", "will", "take", "down", "thing", "that", "end", "up", "not", "be", "true"]
(c40-1 / contrast-01
       :ARG1 (c40-9 / check-01
                    :ARG0 (c40-11 / i)
                    :ARG1 (c40-8 / fact)
                    :ARG1-of (c40-0 / resemble-01
                                    :ARG2 (c40-6 / wrong-04
                                                 :ARG1 (c40-2 / publication
                                                              :name (c40-10 / name
                                                                            :op1 "Snopes"))
                                                 :time (c40-12 / before))))
       :ARG2 (c40-5 / take-down-22
                    :ARG0 c40-11
                    :ARG1 (c40-3 / thing
                                 :ARG1-of (c40-4 / end-up-03
                                                 :ARG2 (c40-7 / true-01
                                                              :ARG1 c40-3
                                                              :polarity -)))))

# ::snt Well there seen to be conflicting reports as usual Im praying yours is right   httpwwwfactcheckorg201712fakereportvoterfraudalabama â€¦
# ::tokens ["Well", "there", "seen", "to", "be", "conflicting", "reports", "as", "usual", "I", "m", "praying", "yours", "is", "right", "  ", "httpwwwfactcheckorg201712fakereportvoterfraudalabama", "\u2026"]
# ::lemmas ["well", "there", "see", "to", "be", "conflicting", "report", "as", "usual", "i", "be", "pray", "your", "be", "right", "  ", "httpwwwfactcheckorg201712fakereportvoterfraudalabama", "\u2026"]
(c41-8 / multi-sentence
       :snt1 (c41-7 / see-01
                    :ARG1 (c41-1 / conflict-01
                                 :ARG0 (c41-0 / report-01))
                    :mod (c41-4 / as-usual))
       :snt2 (c41-2 / pray-01
                    :ARG0 (c41-9 / i)
                    :ARG1 (c41-6 / right-06
                                 :ARG1 (c41-5 / report-01
                                              :ARG0 (c41-10 / you))))
       :snt3 (c41-3 / url-entity
                    :value "httpwwwfactcheckorg 201712fakereportvoterfraudalabama"))

# ::snt The article has a few tells The main one being that it refers to the Governor of Alabama as a man Kay Ivey is not a man
# ::tokens ["The", "article", "has", "a", "few", "tells", "The", "main", "one", "being", "that", "it", "refers", "to", "the", "Governor", "of", "Alabama", "as", "a", "man", "Kay", "Ivey", "is", "not", "a", "man"]
# ::lemmas ["the", "article", "have", "a", "few", "tell", "the", "main", "one", "be", "that", "it", "refer", "to", "the", "Governor", "of", "Alabama", "as", "a", "man", "Kay", "Ivey", "be", "not", "a", "man"]
(c42-5 / tell-01
       :ARG0 (c42-6 / article)
       :ARG1 (c42-13 / thing
                     :quant (c42-7 / few)
                     :mod (c42-9 / main)
                     :domain (c42-0 / refer-01
                                    :ARG0 c42-6
                                    :ARG1 (c42-3 / person
                                                 :ARG0-of (c42-10 / have-org-role-91
                                                                  :ARG1 (c42-8 / state
                                                                               :name (c42-12 / name
                                                                                             :op1 "Alabama"))
                                                                  :ARG2 (c42-11 / governor)))
                                    :ARG2 (c42-2 / man
                                                 :domain (c42-1 / person
                                                                :name (c42-4 / name
                                                                             :op1 "Kay"
                                                                             :op2 "Ivey"))
                                                 :polarity -))))

# ::snt FakeNews
# ::tokens ["FakeNews"]
# ::lemmas ["FakeNews"]
(c43-0 / fake-News)

# ::snt THATâ€™s overdue
# ::tokens ["THAT", "\u2019s", "overdue"]
# ::lemmas ["that", "\u2019", "overdue"]
(c44-0 / overdue
       :domain (c44-1 / that))

# ::snt There are names of the women arrested
# ::tokens ["There", "are", "names", "of", "the", "women", "arrested"]
# ::lemmas ["there", "be", "name", "of", "the", "woman", "arrest"]
(c45-1 / name
       :poss (c45-2 / woman
                    :ARG1-of (c45-0 / arrest-01)))

# ::snt I totally agree with you Jarry I checked and it is fake news
# ::tokens ["I", "totally", "agree", "with", "you", "Jarry", "I", "checked", "and", "it", "is", "fake", "news"]
# ::lemmas ["i", "totally", "agree", "with", "you", "Jarry", "i", "check", "and", "it", "be", "fake", "news"]
(c46-7 / say-01
       :ARG0 (c46-9 / i)
       :ARG1 (c46-5 / and
                    :op1 (c46-0 / check-01
                                :ARG0 c46-9
                                :ARG1 (c46-8 / news
                                             :ARG1-of (c46-6 / fake-02)))
                    :op2 (c46-3 / agree-01
                                :ARG0 c46-9
                                :ARG2 (c46-1 / person
                                             :name (c46-2 / name
                                                          :op1 "Jarry"))
                                :degree (c46-4 / total)))
       :ARG2 c46-1)

# ::snt I would love for this to be true i tried to confirm it and NOTHING Fake news does not help our cause
# ::tokens ["I", "would", "love", "for", "this", "to", "be", "true", "i", "tried", "to", "confirm", "it", "and", "NOTHING", "Fake", "news", "does", "not", "help", "our", "cause"]
# ::lemmas ["i", "would", "love", "for", "this", "to", "be", "true", "i", "try", "to", "confirm", "it", "and", "NOTHING", "Fake", "news", "do", "not", "help", "our", "cause"]
(c47-10 / multi-sentence
        :snt1 (c47-9 / love-02
                     :ARG0 (c47-13 / i)
                     :ARG1 (c47-3 / true-01
                                  :ARG1 (c47-14 / this)))
        :snt2 (c47-5 / and
                     :op1 (c47-6 / try-01
                                 :ARG0 (c47-0 / i)
                                 :ARG1 (c47-1 / confirm-01
                                              :ARG0 c47-0
                                              :ARG1 c47-3))
                     :op2 (c47-11 / help-01
                                  :ARG0 (c47-12 / news
                                                :ARG1-of (c47-7 / fake-02)
                                                :mod (c47-2 / nothing))
                                  :ARG1 (c47-8 / cause
                                               :poss (c47-4 / we))
                                  :polarity -)))

# ::snt On top of that the only name I can match to a real person is Maureen Brown which is a pretty generic name  Near as I can tell those others only show up in this article
# ::tokens ["On", "top", "of", "that", "the", "only", "name", "I", "can", "match", "to", "a", "real", "person", "is", "Maureen", "Brown", "which", "is", "a", "pretty", "generic", "name", " ", "Near", "as", "I", "can", "tell", "those", "others", "only", "show", "up", "in", "this", "article"]
# ::lemmas ["on", "top", "of", "that", "the", "only", "name", "i", "can", "match", "to", "a", "real", "person", "be", "Maureen", "Brown", "which", "be", "a", "pretty", "generic", "name", " ", "near", "as", "i", "can", "tell", "those", "other", "only", "show", "up", "in", "this", "article"]
(c48-16 / multi-sentence
        :snt1 (c48-20 / and
                      :op1 (c48-15 / that)
                      :op2 (c48-11 / name
                                   :mod (c48-0 / only)
                                   :ARG1-of (c48-2 / match-01
                                                   :ARG0 (c48-5 / i)
                                                   :ARG2 (c48-4 / person
                                                                :ARG1-of (c48-1 / real-04))
                                                   :ARG1-of (c48-7 / possible-01))
                                   :domain (c48-9 / name
                                                  :name (c48-3 / name
                                                               :op1 "Maureen"
                                                               :op2 "Brown")
                                                  :mod (c48-22 / generic
                                                               :degree (c48-18 / pretty)))))
        :snt2 (c48-21 / show-up-02
                      :ARG1 (c48-19 / other
                                    :mod c48-15))
        :mod (c48-12 / only)
        :location (c48-14 / article
                          :mod (c48-6 / this))
        :ARG1-of (c48-8 / near-02
                        :ARG2 (c48-17 / possible-01
                                      :ARG1 (c48-10 / tell-01
                                                    :ARG0 (c48-13 / i)))))

# ::snt Yeah so  I cant find ANY corroboration on this anywhere  Can you  Its not even on any of the main alternative media sites
# ::tokens ["Yeah", "so", " ", "I", "ca", "nt", "find", "ANY", "corroboration", "on", "this", "anywhere", " ", "Can", "you", " ", "Its", "not", "even", "on", "any", "of", "the", "main", "alternative", "media", "sites"]
# ::lemmas ["yeah", "so", " ", "i", "can", "not", "find", "any", "corroboration", "on", "this", "anywhere", " ", "can", "you", " ", "its", "not", "even", "on", "any", "of", "the", "main", "alternative", "medium", "site"]
(c49-14 / multi-sentence
        :snt1 (c49-5 / possible-01
                     :ARG1 (c49-12 / find-01
                                   :ARG0 (c49-16 / i)
                                   :ARG1 (c49-9 / thing
                                                :ARG0-of (c49-6 / corroborate-01
                                                                :ARG1 (c49-17 / this))
                                                :mod (c49-11 / any))
                                   :location (c49-8 / anywhere))
                     :polarity -)
        :snt2 (c49-1 / possible-01
                     :ARG1 (c49-0 / believe-01
                                  :ARG0 (c49-19 / you)
                                  :ARG1 c49-17)
                     :polarity -)
        :snt3 (c49-2 / be-located-at-91
                     :ARG1 (c49-3 / it)
                     :ARG2 (c49-13 / site
                                   :mod (c49-4 / media
                                               :mod (c49-18 / alternative))
                                   :mod (c49-10 / any)
                                   :mod (c49-15 / main))
                     :mod (c49-7 / even)
                     :polarity -))

# ::snt They name names
# ::tokens ["They", "name", "names"]
# ::lemmas ["they", "name", "name"]
(c50-0 / name-01
       :ARG0 (c50-2 / they)
       :ARG1 (c50-1 / thing))
