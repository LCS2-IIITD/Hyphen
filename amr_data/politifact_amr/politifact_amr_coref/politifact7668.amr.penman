# ::snt Great news major
# ::tokens ["Great", "news", "major"]
# ::lemmas ["great", "news", "major"]
(c1-2 / major-02
      :ARG1 (c1-1 / news)
      :mod (c1-0 / great))

# ::snt Im sorry  Why is this tweet worthy
# ::tokens ["I", "m", "sorry", " ", "Why", "is", "this", "tweet", "worthy"]
# ::lemmas ["i", "be", "sorry", " ", "why", "be", "this", "tweet", "worthy"]
(c2-5 / multi-sentence
      :snt1 (c2-4 / sorry-01
                  :ARG1 (c2-6 / i))
      :snt2 (c2-1 / cause-01
                  :ARG0 (c2-3 / amr-unknown)
                  :ARG1 (c2-0 / deserve-01
                              :ARG1 (c2-2 / tweet-01
                                          :mod (c2-7 / this)))))

# ::snt This is a joke right  Cant be serious
# ::tokens ["This", "is", "a", "joke", "right", " ", "Ca", "nt", "be", "serious"]
# ::lemmas ["this", "be", "a", "joke", "right", " ", "can", "not", "be", "serious"]
(c3-3 / multi-sentence
      :snt1 (c3-0 / right-06
                  :ARG2 (c3-4 / joke-01
                              :domain (c3-1 / this)))
      :snt2 (c3-2 / serious-01
                  :ARG1 (c3-5 / you)
                  :polarity -
                  :mode imperative))

# ::snt He needs a sippy cup Ive seen toddlers with better manners than trump
# ::tokens ["He", "needs", "a", "sippy", "cup", "I", "ve", "seen", "toddlers", "with", "better", "manners", "than", "trump"]
# ::lemmas ["he", "need", "a", "sippy", "cup", "i", "have", "see", "toddler", "with", "well", "manner", "than", "trump"]
(c4-8 / and
      :op1 (c4-13 / need-01
                  :ARG0 (c4-10 / he)
                  :ARG1 (c4-1 / cup
                              :mod (c4-9 / sippy)))
      :op2 (c4-7 / see-01
                 :ARG0 (c4-14 / i)
                 :ARG1 (c4-5 / toddler
                             :ARG0-of (c4-3 / have-03
                                            :ARG1 (c4-11 / manner
                                                         :ARG1-of (c4-12 / good-02
                                                                         :ARG2-of (c4-4 / have-degree-91
                                                                                        :ARG1 c4-11
                                                                                        :ARG3 (c4-0 / more)
                                                                                        :ARG4 (c4-2 / person
                                                                                                    :name (c4-6 / name
                                                                                                                :op1 " trump")))))))))

# ::snt He wants to make sure you bastards dont try to poison him
# ::tokens ["He", "wants", "to", "make", "sure", "you", "bastards", "do", "nt", "try", "to", "poison", "him"]
# ::lemmas ["he", "want", "to", "make", "sure", "you", "bastard", "do", "not", "try", "to", "poison", "him"]
(c5-3 / want-01
      :ARG0 (c5-4 / he)
      :ARG1 (c5-0 / ensure-01
                  :ARG0 c5-4
                  :ARG1 (c5-2 / try-01
                              :ARG0 (c5-6 / you
                                          :mod (c5-5 / bastard))
                              :ARG1 (c5-1 / poison-01
                                          :ARG0 c5-6
                                          :ARG1 c5-4)
                              :polarity -)))

# ::snt Ground breaking
# ::tokens ["Ground", "breaking"]
# ::lemmas ["ground", "breaking"]
(c6-0 / break-ground-28)

# ::snt Thats News  CBS is Sad and Never watch
# ::tokens ["That", "s", "News", " ", "CBS", "is", "Sad", "and", "Never", "watch"]
# ::lemmas ["that", "s", "News", " ", "CBS", "be", "sad", "and", "never", "watch"]
(c7-8 / news
      :domain (c7-3 / that)
      :ARG1-of (c7-7 / mean-01
                     :ARG2 (c7-5 / and
                                 :op1 (c7-6 / sad-02
                                            :ARG1 (c7-0 / publication
                                                        :name (c7-1 / name
                                                                    :op1 "CBS")))
                                 :op2 (c7-4 / watch-01
                                            :ARG0 (c7-9 / i)
                                            :time (c7-2 / ever)
                                            :polarity -))))

# ::snt LOLOLOLOL High
# ::tokens ["LOLOLOLOL", "High"]
# ::lemmas ["LOLOLOLOL", "high"]
(c8-3 / laugh-01
      :ARG0 (c8-1 / i)
      :manner (c8-0 / loud)
      :ARG1-of (c8-2 / high-02)
      :mode expressive)

# ::snt Does POTUS have 2 Water Glasses
# ::tokens ["Does", "POTUS", "have", "2", "Water", "Glasses"]
# ::lemmas ["do", "POTUS", "have", "2", "Water", "glass"]
(c9-3 / have-03
      :ARG0 (c9-5 / government-organization
                  :name (c9-4 / name
                              :op1 "United"
                              :op2 "States"
                              :op3 "of"
                              :op4 "America"))
      :ARG1 (c9-0 / glass
                  :mod (c9-1 / water)
                  :quant 2)
      :polarity (c9-2 / amr-unknown))

# ::snt  This is news how
# ::tokens [" ", "This", "is", "news", "how"]
# ::lemmas [" ", "this", "be", "news", "how"]
(c10-1 / news
       :domain (c10-2 / this)
       :manner (c10-0 / amr-unknown))

# ::snt news24365 No thank you listening to a lying dictator scum makes me physically ill
# ::tokens ["news24365", "No", "thank", "you", "listening", "to", "a", "lying", "dictator", "scum", "makes", "me", "physically", "ill"]
# ::lemmas ["news24365", "no", "thank", "you", "listen", "to", "a", "lie", "dictator", "scum", "make", "me", "physically", "ill"]
(c11-7 / say-01
       :ARG1 (c11-4 / thank-01
                    :ARG1 (c11-13 / you)
                    :ARG2 (c11-8 / listen-01
                                 :ARG0 (c11-12 / i)
                                 :ARG1 (c11-5 / scum
                                              :ARG0-of (c11-6 / lie-08)
                                              :ARG0-of (c11-9 / have-org-role-91
                                                              :ARG2 (c11-2 / dictator)))
                                 :ARG0-of (c11-10 / make-02
                                                  :ARG1 (c11-0 / ill-01
                                                               :ARG1 c11-12
                                                               :manner (c11-3 / physical))))
                    :polarity -)
       :ARG2 (c11-1 / person
                    :name (c11-11 / name
                                  :op1 "news24365")))

# ::snt AlexYudelson YES
# ::tokens ["AlexYudelson", "YES"]
# ::lemmas ["AlexYudelson", "yes"]
(c12-0 / person
       :name (c12-1 / name
                    :op1 "AlexYudelson")
       :mod (c12-2 / yes))

# ::snt jeanpaulscott should be all
# ::tokens ["jeanpaulscott", "should", "be", "all"]
# ::lemmas ["jeanpaulscott", "should", "be", "all"]
(c13-3 / recommend-01
       :ARG1 (c13-1 / person
                    :name (c13-2 / name
                                 :op1 "Jeanpaulscott")
                    :mod (c13-0 / all)))

# ::snt AlexYudelson will this be on all major networks Or CNN
# ::tokens ["AlexYudelson", "will", "this", "be", "on", "all", "major", "networks", "Or", "CNN"]
# ::lemmas ["AlexYudelson", "will", "this", "be", "on", "all", "major", "network", "or", "CNN"]
(c14-3 / person
       :name (c14-8 / name
                    :op1 "AlexYudelson")
       :medium (c14-0 / or
                      :op1 (c14-4 / network
                                  :ARG1-of (c14-7 / major-02)
                                  :mod (c14-6 / all))
                      :op2 (c14-1 / publication
                                  :name (c14-2 / name
                                               :op1 "CNN")))
       :domain (c14-5 / this))

# ::snt ABC NoGodDamnYou
# ::tokens ["ABC", "NoGodDamnYou"]
# ::lemmas ["ABC", "NoGodDamnYou"]
(c15-0 / person
       :name (c15-1 / name
                    :name-of c15-0
                    :op1 "ABC")
       :op1 "NoGodDamnYou")

# ::snt ABC ArletteSaenz he took 30min to say im not running5 seconds to tweet it
# ::tokens ["ABC", "ArletteSaenz", "he", "took", "30min", "to", "say", "i", "m", "not", "running5", "seconds", "to", "tweet", "it"]
# ::lemmas ["ABC", "ArletteSaenz", "he", "take", "30min", "to", "say", "i", "be", "not", "running5", "second", "to", "tweet", "it"]
(c16-8 / say-01
       :ARG0 (c16-2 / person
                    :name (c16-11 / name
                                  :op1 "ArletteSaenz")
                    :ARG0-of (c16-9 / have-org-role-91
                                    :ARG1 (c16-0 / publication
                                                 :name (c16-3 / name
                                                              :op1 "ABC"))))
       :ARG1 (c16-4 / take-10
                    :ARG0 c16-2
                    :ARG1 (c16-13 / temporal-quantity
                                  :unit (c16-10 / minute)
                                  :quant 30)
                    :ARG2 (c16-6 / say-01
                                 :ARG0 c16-2
                                 :ARG1 (c16-1 / run-16
                                              :ARG0 c16-2
                                              :ARG1 (c16-7 / temporal-quantity
                                                           :unit (c16-5 / second)
                                                           :quant 5)
                                              :purpose (c16-14 / tweet-02
                                                               :ARG0 c16-2
                                                               :ARG1 (c16-12 / it))
                                              :polarity -))))

# ::snt ABC ArletteSaenz Im sad  happy at the same time Will now just focus on Hillary for President
# ::tokens ["ABC", "ArletteSaenz", "I", "m", "sad", " ", "happy", "at", "the", "same", "time", "Will", "now", "just", "focus", "on", "Hillary", "for", "President"]
# ::lemmas ["ABC", "ArletteSaenz", "i", "be", "sad", " ", "happy", "at", "the", "same", "time", "will", "now", "just", "focus", "on", "Hillary", "for", "President"]
(c17-13 / say-01
        :ARG0 (c17-4 / person
                     :name (c17-16 / name
                                   :op1 "ArletteSaenz")
                     :ARG0-of (c17-14 / have-org-role-91
                                      :ARG1 (c17-1 / publication
                                                   :name (c17-5 / name
                                                                :op1 "ABC"))))
        :ARG1 (c17-11 / and
                      :op1 (c17-10 / sad-02
                                   :ARG1 (c17-17 / i))
                      :op2 (c17-6 / happy-01
                                  :ARG1 c17-17)
                      :time (c17-8 / time
                                   :ARG1-of (c17-9 / same-01)
                                   :time-of (c17-12 / focus-01
                                                    :ARG1 (c17-0 / person
                                                                 :name (c17-2 / name
                                                                              :op1 "Hillary")
                                                                 :ARG0-of (c17-7 / have-org-role-91
                                                                                 :ARG2 (c17-15 / president)))
                                                    :mod (c17-18 / just)
                                                    :time (c17-3 / now))))
        :ARG2 c17-0)

# ::snt ABC ArletteSaenz Nightline he was just Biden time to decide if it is worth it
# ::tokens ["ABC", "ArletteSaenz", "Nightline", "he", "was", "just", "Biden", "time", "to", "decide", "if", "it", "is", "worth", "it"]
# ::lemmas ["ABC", "ArletteSaenz", "Nightline", "he", "be", "just", "Biden", "time", "to", "decide", "if", "it", "be", "worth", "it"]
(c18-9 / ask-01
       :ARG0 (c18-4 / person
                    :name (c18-11 / name
                                  :op1 "ArletteSaenz"
                                  :op2 "Nightline")
                    :ARG0-of (c18-10 / have-org-role-91
                                     :ARG1 (c18-1 / publication
                                                  :name (c18-5 / name
                                                               :op1 "ABC"))))
       :ARG1 (c18-7 / time
                    :mod (c18-13 / just)
                    :purpose (c18-3 / decide-01
                                    :ARG0 (c18-0 / person
                                                 :name (c18-2 / name
                                                              :op1 "Biden"))
                                    :ARG1 (c18-6 / truth-value
                                                 :polarity-of (c18-8 / worth-02
                                                                     :ARG1 (c18-12 / it))))
                    :domain c18-0)
       :ARG2 c18-0)

# ::snt abc arlettesaenz Dear God let him announce he is NOT Cant take anymore  Save your money Biden or donate it to me realdonaldtrump WIN
# ::tokens ["abc", "arlettesaenz", "Dear", "God", "let", "him", "announce", "he", "is", "NOT", "Ca", "nt", "take", "anymore", " ", "Save", "your", "money", "Biden", "or", "donate", "it", "to", "me", "realdonaldtrump", "WIN"]
# ::lemmas ["abc", "arlettesaenz", "Dear", "God", "let", "him", "announce", "he", "be", "not", "can", "not", "take", "anymore", " ", "save", "your", "money", "Biden", "or", "donate", "it", "to", "me", "realdonaldtrump", "WIN"]
(c19-14 / multi-sentence
        :snt1 (c19-20 / say-01
                      :ARG0 (c19-3 / person
                                   :name (c19-21 / name
                                                 :op1 "abc"
                                                 :op2 "Aeros"))
                      :ARG1 (c19-15 / let-01
                                    :ARG0 (c19-6 / person
                                                 :name (c19-8 / name
                                                              :op1 "God"))
                                    :ARG1 (c19-19 / announce-01
                                                  :ARG0 (c19-9 / he)
                                                  :ARG1 (c19-17 / possible-01
                                                                :ARG1 (c19-12 / take-01
                                                                              :ARG0 c19-9
                                                                              :ARG1 (c19-11 / anymore))
                                                                :polarity -))
                                    :mode imperative)
                      :ARG2 c19-6)
        :snt2 (c19-0 / or
                     :op1 (c19-13 / save-01
                                  :ARG0 (c19-22 / you)
                                  :ARG1 (c19-1 / money
                                               :poss c19-22)
                                  :ARG2 (c19-16 / person
                                                :name (c19-2 / name
                                                             :op1 "Biden"))
                                  :mode imperative)
                     :op2 (c19-18 / donate-01
                                  :ARG0 c19-22
                                  :ARG1 c19-1
                                  :ARG2 (c19-5 / i)
                                  :mode imperative))
        :snt3 (c19-4 / win-01
                     :ARG0 (c19-10 / person
                                   :name (c19-7 / name
                                                :op1 "realdonald"
                                                :op2 "Trump"))))

# ::snt ABC NosyNewser ArletteSaenz I would have guessed ABC would know difference between EDT and EST guessimwrong
# ::tokens ["ABC", "NosyNewser", "ArletteSaenz", "I", "would", "have", "guessed", "ABC", "would", "know", "difference", "between", "EDT", "and", "EST", "guessimwrong"]
# ::lemmas ["ABC", "NosyNewser", "ArletteSaenz", "i", "would", "have", "guess", "ABC", "would", "know", "difference", "between", "EDT", "and", "EST", "guessimwrong"]
(c20-9 / say-01
       :ARG0 (c20-14 / i)
       :ARG1 (c20-13 / guess-01
                     :ARG0 c20-14
                     :ARG1 (c20-8 / know-01
                                  :ARG0 (c20-4 / publication
                                               :name (c20-10 / name
                                                             :op1 "ABC"))
                                  :ARG1 (c20-3 / differ-02
                                               :ARG1 (c20-1 / publication
                                                            :name (c20-5 / name
                                                                         :op1 "EDT"))
                                               :ARG2 (c20-0 / publication
                                                            :name (c20-2 / name
                                                                         :op1 "EST")))
                                  :ARG1-of (c20-7 / wrong-04)))
       :ARG2 (c20-11 / person
                     :name (c20-6 / name
                                  :op1 "NosyNewser"
                                  :op2 "ArletteSaenz")
                     :ARG0-of (c20-12 / have-org-role-91
                                      :ARG1 c20-4)))

# ::snt ABC ArletteSaenz If its in the Rose Garden then its not to announce his bid for Presidency
# ::tokens ["ABC", "ArletteSaenz", "If", "its", "in", "the", "Rose", "Garden", "then", "its", "not", "to", "announce", "his", "bid", "for", "Presidency"]
# ::lemmas ["ABC", "ArletteSaenz", "if", "its", "in", "the", "Rose", "Garden", "then", "its", "not", "to", "announce", "his", "bid", "for", "Presidency"]
(c21-8 / announce-01
       :ARG0 (c21-5 / person
                    :name (c21-10 / name
                                  :op1 "ArletteSaenz")
                    :ARG0-of (c21-9 / have-org-role-91
                                    :ARG1 (c21-1 / publication
                                                 :name (c21-6 / name
                                                              :op1 "ABC"))))
       :ARG1 (c21-11 / bid-03
                     :ARG0 c21-5
                     :ARG1 (c21-0 / president
                                  :ARG2-of (c21-7 / have-org-role-91)))
       :condition (c21-2 / be-located-at-91
                         :ARG1 c21-1
                         :ARG2 (c21-3 / building
                                      :name (c21-4 / name
                                                   :op1 "Rose"
                                                   :op2 "Garden")))
       :polarity -)

# ::snt ABC ArletteSaenz
# ::tokens ["ABC", "ArletteSaenz"]
# ::lemmas ["ABC", "ArletteSaenz"]
(c22-4 / byline-91
       :ARG0 (c22-1 / publication
                    :name (c22-3 / name
                                 :op1 "ABC"))
       :ARG1 (c22-0 / person
                    :name (c22-2 / name
                                 :op1 "ArletteSaenz")))

# ::snt  RT ABC JUST IN Vice President Biden to deliver a statement in the Rose Garden at 1210 PM EST  ArletteSaenz
# ::tokens [" ", "RT", "ABC", "JUST", "IN", "Vice", "President", "Biden", "to", "deliver", "a", "statement", "in", "the", "Rose", "Garden", "at", "1210", "PM", "EST", " ", "ArletteSaenz"]
# ::lemmas [" ", "RT", "ABC", "just", "in", "Vice", "President", "Biden", "to", "deliver", "a", "statement", "in", "the", "Rose", "Garden", "at", "1210", "PM", "EST", " ", "ArletteSaenz"]
(c23-8 / ask-01
       :ARG0 (c23-13 / i)
       :ARG1 (c23-3 / deliver-01
                    :ARG0 (c23-4 / person
                                 :name (c23-12 / name
                                               :op1 "Biden")
                                 :ARG0-of (c23-11 / have-org-role-91
                                                  :ARG1 (c23-1 / political-party
                                                               :name (c23-5 / name
                                                                            :op1 "ABC"))
                                                  :ARG2 (c23-0 / president
                                                               :mod (c23-7 / vice))))
                    :ARG1 (c23-10 / state-01)
                    :location (c23-14 / building
                                      :name (c23-2 / name
                                                   :op1 "Rose"
                                                   :op2 "Garden"))
                    :time (c23-9 / date-entity
                                 :time "12:10"
                                 :timezone "EST"))
       :ARG2 c23-4
       :name (c23-6 / name
                    :op1 "ArletteSaenz"))

# ::snt Wait Thats likenow
# ::tokens ["Wait", "That", "s", "likenow"]
# ::lemmas ["wait", "that", "s", "likenow"]
(c24-2 / say-01
       :ARG1 (c24-1 / wait-01
                    :ARG1 (c24-4 / you)
                    :mode imperative)
       :ARG2 (c24-0 / person
                    :name (c24-3 / name
                                 :op1 " likenow")))

# ::snt YES OH PLEASE OH PLEASE OH PLEASE RT ABC JUST IN Vice President Biden to deliver a statement in the Rose Garden at 1210 PM EST
# ::tokens ["YES", "OH", "PLEASE", "OH", "PLEASE", "OH", "PLEASE", "RT", "ABC", "JUST", "IN", "Vice", "President", "Biden", "to", "deliver", "a", "statement", "in", "the", "Rose", "Garden", "at", "1210", "PM", "EST"]
# ::lemmas ["yes", "oh", "please", "oh", "please", "oh", "PLEASE", "RT", "ABC", "just", "in", "Vice", "President", "Biden", "to", "deliver", "a", "statement", "in", "the", "Rose", "Garden", "at", "1210", "PM", "EST"]
(c25-11 / and
        :op1 (c25-18 / yes)
        :op2 (c25-0 / oh)
        :op3 (c25-6 / please)
        :op4 (c25-9 / tell-01
                    :ARG0 (c25-3 / you)
                    :ARG1 (c25-2 / publication
                                 :name (c25-16 / name
                                               :op1 "ABC"))
                    :ARG2 (c25-1 / person
                                 :name (c25-7 / name
                                              :op1 "Biden")
                                 :ARG0-of (c25-14 / have-org-role-91
                                                  :ARG2 (c25-15 / president
                                                                :mod (c25-10 / vice))))
                    :purpose (c25-5 / deliver-01
                                    :ARG0 c25-1
                                    :ARG1 (c25-13 / state-01)
                                    :location (c25-17 / building
                                                      :name (c25-4 / name
                                                                   :op1 "Rose"
                                                                   :op2 "Garden"))
                                    :time (c25-12 / date-entity
                                                  :time "12:10"
                                                  :timezone "EST"))
                    :mod (c25-8 / just)
                    :mode imperative))

# ::snt And while the president of South Korea was speaking Trump had a look on his face like Hurry up I have a Tee Time to get to
# ::tokens ["And", "while", "the", "president", "of", "South", "Korea", "was", "speaking", "Trump", "had", "a", "look", "on", "his", "face", "like", "Hurry", "up", "I", "have", "a", "Tee", "Time", "to", "get", "to"]
# ::lemmas ["and", "while", "the", "president", "of", "South", "Korea", "be", "speak", "Trump", "have", "a", "look", "on", "his", "face", "like", "Hurry", "up", "i", "have", "a", "Tee", "Time", "to", "get", "to"]
(c26-9 / and
       :op2 (c26-12 / look-01
                    :ARG0 (c26-4 / person
                                 :name (c26-16 / name
                                               :op1 "Trump")
                                 :part (c26-10 / face))
                    :ARG1 (c26-1 / person
                                 :name (c26-5 / name
                                              :op1 "Hurry"
                                              :op2 "up"))
                    :location c26-10
                    :ARG1-of (c26-2 / resemble-01
                                    :ARG2 (c26-11 / say-01
                                                  :ARG0 (c26-0 / person
                                                               :ARG0-of (c26-13 / have-org-role-91
                                                                                :ARG1 (c26-6 / country
                                                                                             :name (c26-3 / name
                                                                                                          :op1 "South"
                                                                                                          :op2 "Korea"))
                                                                                :ARG2 (c26-14 / president)))
                                                  :ARG1 (c26-7 / have-03
                                                               :ARG0 (c26-17 / i)
                                                               :ARG1 (c26-8 / time
                                                                            :purpose (c26-15 / get-05
                                                                                             :ARG1 c26-17
                                                                                             :ARG2 (c26-18 / Tee))))))))

# ::snt realDonaldTrump isnt credible so no point in watching Watch what he does not what he says
# ::tokens ["realDonaldTrump", "is", "nt", "credible", "so", "no", "point", "in", "watching", "Watch", "what", "he", "does", "not", "what", "he", "says"]
# ::lemmas ["realDonaldTrump", "be", "not", "credible", "so", "no", "point", "in", "watch", "watch", "what", "he", "do", "not", "what", "he", "say"]
(c27-2 / credible
       :domain (c27-3 / person
                      :name (c27-8 / name
                                   :op1 "Trump"))
       :ARG0-of (c27-6 / cause-01
                       :ARG1 (c27-0 / point-03
                                    :ARG1 (c27-5 / watch-01
                                                 :ARG1 c27-5
                                                 :ARG1 (c27-4 / thing
                                                              :ARG1-of (c27-1 / do-02
                                                                              :ARG0 c27-3
                                                                              :ARG1 (c27-9 / thing
                                                                                           :ARG1-of (c27-7 / say-01
                                                                                                           :ARG0 c27-3))
                                                                              :polarity -)))
                                    :polarity -))
       :polarity -)

# ::snt Reading stay on planned words mode today
# ::tokens ["Reading", "stay", "on", "planned", "words", "mode", "today"]
# ::lemmas ["read", "stay", "on", "plan", "word", "mode", "today"]
(c28-3 / stay-01
       :ARG1 (c28-5 / you)
       :ARG3 (c28-4 / mode
                    :mod (c28-2 / word)
                    :ARG1-of (c28-0 / plan-01))
       :time (c28-1 / today)
       :mode imperative)

# ::snt Van Jones Russia is “Nothing burger”– American Pravda CNN Part 2 httpsyoutubel2G360HrSAs  via YouTube
# ::tokens ["Van", "Jones", "Russia", "is", "\u201c", "Nothing", "burger", "\u201d", "\u2013", "American", "Pravda", "CNN", "Part", "2", "httpsyoutubel2G360HrSAs", " ", "via", "YouTube"]
# ::lemmas ["Van", "Jones", "Russia", "be", "\"", "nothing", "burger", "\"", "\u2013", "American", "Pravda", "CNN", "Part", "2", "httpsyoutubel2g360hrsas", " ", "via", "YouTube"]
(c29-11 / say-01
        :ARG0 (c29-4 / publication
                     :name (c29-15 / name
                                   :op1 "Pravda")
                     :mod (c29-5 / country
                                 :name (c29-6 / name
                                              :op1 "America")))
        :ARG1 (c29-16 / burger
                      :mod (c29-2 / nothing)
                      :domain (c29-12 / country
                                      :name (c29-3 / name
                                                   :op1 "Russia")))
        :medium (c29-1 / publication
                       :name (c29-9 / name
                                    :op1 "YouTube"))
        :ARG1-of (c29-7 / describe-01
                        :ARG0 (c29-0 / publication
                                     :name (c29-13 / name
                                                   :op1 "Van"
                                                   :op2 "Jones")))
        :medium (c29-14 / part
                        :part-of (c29-8 / publication
                                        :name (c29-10 / name
                                                      :op1 "CNN"))
                        :mod 2))

# ::snt One cannot but notice how utterly perplexed the South Korean leader looks  Really you people chose this baffoon
# ::tokens ["One", "can", "not", "but", "notice", "how", "utterly", "perplexed", "the", "South", "Korean", "leader", "looks", " ", "Really", "you", "people", "chose", "this", "baffoon"]
# ::lemmas ["one", "can", "not", "but", "notice", "how", "utterly", "perplex", "the", "South", "Korean", "leader", "look", " ", "really", "you", "people", "choose", "this", "baffoon"]
(c30-12 / multi-sentence
        :snt1 (c30-5 / possible-01
                     :ARG1 (c30-16 / but
                                   :op1 (c30-15 / notice-01
                                                :ARG0 (c30-0 / one)
                                                :ARG1 (c30-9 / thing
                                                             :degree-of (c30-2 / perplex-01
                                                                               :ARG1 (c30-1 / person
                                                                                            :ARG0-of (c30-13 / lead-02
                                                                                                             :ARG1 (c30-6 / country
                                                                                                                          :name (c30-7 / name
                                                                                                                                       :op1 "South"
                                                                                                                                       :op2 "Korea"))))
                                                                               :ARG1-of (c30-8 / utter-02)))))
                     :polarity -)
        :snt2 (c30-11 / choose-01
                      :ARG0 (c30-14 / person
                                    :mod (c30-17 / you))
                      :ARG1 (c30-3 / baffoon
                                   :mod (c30-10 / this))
                      :ARG1-of (c30-4 / real-04)))

# ::snt another country to insult
# ::tokens ["another", "country", "to", "insult"]
# ::lemmas ["another", "country", "to", "insult"]
(c31-2 / insult-01
       :ARG0 (c31-1 / country
                    :mod (c31-0 / another)))

# ::snt Just once Id like to hear gender same translators for our foreign visitors
# ::tokens ["Just", "once", "I", "d", "like", "to", "hear", "gender", "same", "translators", "for", "our", "foreign", "visitors"]
# ::lemmas ["just", "once", "i", "d", "like", "to", "hear", "gender", "same", "translator", "for", "our", "foreign", "visitor"]
(c32-8 / like-02
       :ARG0 (c32-10 / i)
       :ARG1 (c32-7 / hear-01
                    :ARG0 c32-10
                    :ARG1 (c32-1 / person
                                 :ARG0-of (c32-2 / translate-01)
                                 :ARG1-of (c32-6 / same-01
                                                 :ARG2 (c32-9 / gender))
                                 :beneficiary (c32-0 / person
                                                     :ARG0-of (c32-3 / visit-01
                                                                     :ARG1 (c32-4 / we))
                                                     :mod (c32-5 / foreign)
                                                     :ARG2-of c32-7)))
       :mod (c32-11 / just)
       :frequency 1)

# ::snt How hard was it to write that tweet without bias GoodWork
# ::tokens ["How", "hard", "was", "it", "to", "write", "that", "tweet", "without", "bias", "GoodWork"]
# ::lemmas ["how", "hard", "be", "it", "to", "write", "that", "tweet", "without", "bias", "GoodWork"]
(c33-6 / say-01
       :ARG1 (c33-7 / hard-02
                    :ARG1 (c33-3 / write-01
                                 :ARG1 (c33-2 / thing
                                              :ARG1-of (c33-9 / tweet-01)
                                              :mod (c33-5 / that))
                                 :manner (c33-0 / bias-01
                                                :polarity -))
                    :degree (c33-4 / amr-unknown))
       :ARG2 (c33-1 / person
                    :name (c33-8 / name
                                 :op1 "GoodWork")))

# ::snt Got preread  10 wonderfuls 13 really terrifics 51 bads and partridge in pear tree bleeding very badly
# ::tokens ["Got", "preread", " ", "10", "wonderfuls", "13", "really", "terrifics", "51", "bads", "and", "partridge", "in", "pear", "tree", "bleeding", "very", "badly"]
# ::lemmas ["get", "preread", " ", "10", "wonderful", "13", "really", "terrific", "51", "bad", "and", "partridge", "in", "pear", "tree", "bleed", "very", "badly"]
(c34-10 / multi-sentence
        :snt1 (c34-12 / get-01
                      :ARG1 (c34-0 / read-01
                                   :ARG0 (c34-13 / i)))
        :snt2 (c34-8 / and
                     :op1 (c34-6 / wonderful-03
                                 :quant 10)
                     :op2 (c34-5 / terrific
                                 :ARG1-of (c34-9 / real-04)
                                 :quant 51)
                     :op3 (c34-14 / bad-07
                                  :quant 1)
                     :op4 (c34-3 / partridge
                                 :location (c34-4 / tree
                                                  :name (c34-11 / name
                                                                :op1 "Pear"))
                                 :ARG1-of (c34-1 / bleed-01
                                                 :ARG1-of (c34-2 / bad-05
                                                                 :degree (c34-7 / very))))))

# ::snt WH briefing today
# ::tokens ["WH", "briefing", "today"]
# ::lemmas ["wh", "briefing", "today"]
(c35-1 / brief-01
       :ARG2 (c35-0 / government-organization
                    :name (c35-3 / name
                                 :op1 "WH"))
       :time (c35-2 / today))

# ::snt Do you find it weird that Sean Hannity has a fixation with you the way Trump does with smart women creepy nascarwhitey
# ::tokens ["Do", "you", "find", "it", "weird", "that", "Sean", "Hannity", "has", "a", "fixation", "with", "you", "the", "way", "Trump", "does", "with", "smart", "women", "creepy", "nascarwhitey"]
# ::lemmas ["do", "you", "find", "it", "weird", "that", "Sean", "Hannity", "have", "a", "fixation", "with", "you", "the", "way", "Trump", "do", "with", "smart", "woman", "creepy", "nascarwhitey"]
(c36-11 / find-02
        :ARG0 (c36-14 / you)
        :ARG1 (c36-9 / weird
                     :domain (c36-0 / obsess-01
                                    :ARG0 (c36-6 / person
                                                 :name (c36-13 / name
                                                               :op1 "Sean"
                                                               :op2 "Hannity"))
                                    :ARG1 c36-14
                                    :ARG1-of (c36-1 / resemble-01
                                                    :ARG2 (c36-2 / obsess-01
                                                                 :ARG0 (c36-3 / person
                                                                              :name (c36-7 / name
                                                                                           :op1 "Trump"))
                                                                 :ARG1 (c36-4 / woman
                                                                              :ARG1-of (c36-12 / smart-06)
                                                                              :ARG0-of (c36-8 / creepy-04)
                                                                              :mod (c36-5 / nascarwhitey))))))
        :polarity (c36-10 / amr-unknown))

# ::snt Are you actually reporting real facts like a real reporter used to do back in the good old days
# ::tokens ["Are", "you", "actually", "reporting", "real", "facts", "like", "a", "real", "reporter", "used", "to", "do", "back", "in", "the", "good", "old", "days"]
# ::lemmas ["be", "you", "actually", "report", "real", "fact", "like", "a", "real", "reporter", "use", "to", "do", "back", "in", "the", "good", "old", "days"]
(c37-2 / report-01
       :ARG0 (c37-14 / you)
       :ARG1 (c37-10 / fact
                     :ARG1-of (c37-9 / real-04))
       :polarity (c37-7 / amr-unknown)
       :ARG1-of (c37-5 / actual-02)
       :ARG1-of (c37-8 / resemble-01
                       :ARG2 (c37-11 / report-01
                                     :ARG0 (c37-4 / person
                                                  :ARG0-of (c37-0 / report-01)
                                                  :ARG1-of (c37-6 / real-04))
                                     :time (c37-3 / day
                                                  :ARG1-of (c37-12 / good-02)
                                                  :mod (c37-1 / old)
                                                  :time (c37-13 / before)))))

# ::snt Where do they have you seated this time
# ::tokens ["Where", "do", "they", "have", "you", "seated", "this", "time"]
# ::lemmas ["where", "do", "they", "have", "you", "seat", "this", "time"]
(c38-3 / seat-01
       :ARG0 (c38-0 / they)
       :ARG1 (c38-5 / you)
       :location (c38-1 / amr-unknown)
       :time (c38-4 / time
                    :mod (c38-2 / this)))

# ::snt Since you terrify hem so much where have hey got you sitting today
# ::tokens ["Since", "you", "terrify", "hem", "so", "much", "where", "have", "hey", "got", "you", "sitting", "today"]
# ::lemmas ["since", "you", "terrify", "hem", "so", "much", "where", "have", "hey", "get", "you", "sit", "today"]
(c39-6 / get-04
       :ARG0 (c39-8 / you)
       :ARG1 (c39-4 / sit-01
                    :ARG1 c39-8)
       :time (c39-1 / today)
       :location (c39-3 / amr-unknown)
       :ARG1-of (c39-0 / cause-01
                       :ARG0 (c39-7 / terrify-01
                                    :ARG0 c39-8
                                    :ARG1 c39-8
                                    :degree (c39-5 / much
                                                   :degree (c39-2 / so)))))

# ::snt Presser today
# ::tokens ["Presser", "today"]
# ::lemmas ["Presser", "today"]
(c40-0 / presser
       :time (c40-1 / today))

# ::snt Moon is looking at Donnie like he has a third eye
# ::tokens ["Moon", "is", "looking", "at", "Donnie", "like", "he", "has", "a", "third", "eye"]
# ::lemmas ["Moon", "be", "look", "at", "Donnie", "like", "he", "have", "a", "third", "eye"]
(c41-5 / look-01
       :ARG0 (c41-2 / person
                    :name (c41-7 / name
                                 :op1 "Moon"))
       :ARG1 (c41-1 / person
                    :name (c41-3 / name
                                 :op1 "Donnie"))
       :manner (c41-6 / have-03
                      :ARG0 c41-1
                      :ARG1 (c41-4 / eye
                                   :ord (c41-0 / ordinal-entity
                                               :value 3))))

# ::snt These conferences are pure propaganda Why do you cover it He is using you and offering nothing in return except threats and insults
# ::tokens ["These", "conferences", "are", "pure", "propaganda", "Why", "do", "you", "cover", "it", "He", "is", "using", "you", "and", "offering", "nothing", "in", "return", "except", "threats", "and", "insults"]
# ::lemmas ["these", "conference", "be", "pure", "propaganda", "why", "do", "you", "cover", "it", "he", "be", "use", "you", "and", "offer", "nothing", "in", "return", "except", "threat", "and", "insult"]
(c42-15 / multi-sentence
        :snt1 (c42-3 / propaganda
                     :ARG1-of (c42-8 / pure-02)
                     :domain (c42-10 / conference
                                     :mod (c42-14 / this))
                     :ARG1-of (c42-18 / cause-01
                                      :ARG0 (c42-17 / amr-unknown)))
        :snt2 (c42-1 / cover-03
                     :ARG0 (c42-20 / you)
                     :ARG1 (c42-6 / it))
        :snt3 (c42-13 / and
                      :op1 (c42-4 / use-01
                                  :ARG0 (c42-11 / he)
                                  :ARG1 (c42-9 / you))
                      :op2 (c42-0 / offer-01
                                  :ARG0 c42-11
                                  :ARG1 (c42-19 / nothing
                                                :ARG2-of (c42-5 / except-01
                                                                :ARG1 (c42-16 / and
                                                                              :op1 (c42-7 / threaten-01)
                                                                              :op2 (c42-12 / insult-01))))
                                  :ARG3 c42-9
                                  :ARG1-of (c42-2 / return-05))))

# ::snt Brining up Otto again for his own political reasons As horrible  Sad as it was he should not exploiting it
# ::tokens ["Brining", "up", "Otto", "again", "for", "his", "own", "political", "reasons", "As", "horrible", " ", "Sad", "as", "it", "was", "he", "should", "not", "exploiting", "it"]
# ::lemmas ["brine", "up", "Otto", "again", "for", "his", "own", "political", "reason", "as", "horrible", " ", "Sad", "as", "it", "be", "he", "should", "not", "exploit", "it"]
(c43-10 / bring-up-02
        :ARG1 (c43-2 / person
                     :name (c43-8 / name
                                  :op1 "Otto"))
        :mod (c43-5 / again)
        :ARG1-of (c43-3 / cause-01
                        :ARG0 (c43-0 / reason
                                     :mod (c43-1 / politics)
                                     :poss c43-2))
        :ARG1-of (c43-6 / recommend-01
                        :ARG1-of c43-3
                        :ARG0 (c43-4 / exploit-01
                                     :ARG0 c43-2
                                     :ARG1 (c43-9 / it)
                                     :ARG1-of (c43-7 / sad-02
                                                     :ARG1-of c43-3
                                                     :ARG0 c43-9))
                        :polarity -))

# ::snt acosta is sleeping apparently  Do communists sleep  Jim are you a sleeping communist  Please answer
# ::tokens ["acosta", "is", "sleeping", "apparently", " ", "Do", "communists", "sleep", " ", "Jim", "are", "you", "a", "sleeping", "communist", " ", "Please", "answer"]
# ::lemmas ["acosta", "be", "sleep", "apparently", " ", "do", "communist", "sleep", " ", "Jim", "be", "you", "a", "sleeping", "communist", " ", "please", "answer"]
(c44-10 / and
        :op1 (c44-11 / sleep-01
                     :ARG0 (c44-4 / person
                                  :name (c44-13 / name
                                                :op1 "acosta"))
                     :ARG1-of (c44-6 / appear-02))
        :op2 (c44-9 / sleep-01
                    :ARG0 (c44-2 / person
                                 :mod (c44-1 / political-movement
                                             :name (c44-5 / name
                                                          :op1 "communism")))
                    :polarity (c44-15 / amr-unknown))
        :op3 (c44-14 / ask-01
                     :ARG0 (c44-16 / you)
                     :ARG1 (c44-7 / truth-value
                                  :polarity-of (c44-8 / sleep-01
                                                      :ARG0 (c44-12 / person
                                                                    :name (c44-3 / name
                                                                                 :op1 "Jim"))))
                     :mode imperative
                     :polite +)
        :op4 (c44-0 / answer-01
                    :ARG0 c44-16
                    :ARG2 c44-12
                    :mode imperative))

# ::snt Did you knock over the table
# ::tokens ["Did", "you", "knock", "over", "the", "table"]
# ::lemmas ["do", "you", "knock", "over", "the", "table"]
(c45-2 / knock-over-05
       :polarity (c45-0 / amr-unknown)
       :ARG0 (c45-3 / you)
       :ARG1 (c45-1 / table))

# ::snt Seth Rich conspiracy nut you are blocked
# ::tokens ["Seth", "Rich", "conspiracy", "nut", "you", "are", "blocked"]
# ::lemmas ["Seth", "Rich", "conspiracy", "nut", "you", "be", "block"]
(c46-4 / block-01
       :ARG1 (c46-5 / you
                    :mod (c46-3 / nut
                                :mod (c46-0 / conspiracy
                                            :topic (c46-1 / person
                                                          :name (c46-2 / name
                                                                       :op1 "Seth"
                                                                       :op2 "Rich"))))))

# ::snt Can this guy talk about anything but money Jesus
# ::tokens ["Can", "this", "guy", "talk", "about", "anything", "but", "money", "Jesus"]
# ::lemmas ["can", "this", "guy", "talk", "about", "anything", "but", "money", "Jesus"]
(c47-5 / say-01
       :ARG0 (c47-9 / i)
       :ARG1 (c47-1 / possible-01
                    :ARG1 (c47-3 / talk-01
                                 :ARG0 (c47-8 / guy
                                              :mod (c47-10 / this))
                                 :ARG1 (c47-4 / anything
                                              :ARG2-of (c47-2 / except-01
                                                              :ARG1 (c47-6 / money)))))
       :ARG2 (c47-0 / person
                    :name (c47-7 / name
                                 :op1 "Jesus")))

# ::snt Yaythats a good start on getting back to reporting facts
# ::tokens ["Yaythats", "a", "good", "start", "on", "getting", "back", "to", "reporting", "facts"]
# ::lemmas ["yaythat", "a", "good", "start", "on", "get", "back", "to", "reporting", "fact"]
(c48-4 / start-01
       :ARG1 (c48-5 / get-back-10
                    :ARG2 (c48-0 / report-01
                                 :ARG1 (c48-3 / fact)))
       :ARG1-of (c48-1 / good-02)
       :domain (c48-2 / that))

# ::snt Of course not
# ::tokens ["Of", "course", "not"]
# ::lemmas ["of", "course", "not"]
(c49-1 / have-polarity-91
       :mod (c49-0 / of-course)
       :ARG2 -)

# ::snt Is there going to be QAs
# ::tokens ["Is", "there", "going", "to", "be", "QAs"]
# ::lemmas ["be", "there", "go", "to", "be", "QAs"]
(c50-2 / law
       :name (c50-1 / name
                    :op1 "QAs")
       :polarity (c50-0 / amr-unknown))
