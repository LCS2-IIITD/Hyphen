# ::snt I dont care about amounts I care about speed safety performance binance2017 BittrexExchange kucoincom
# ::tokens ["I", "do", "nt", "care", "about", "amounts", "I", "care", "about", "speed", "safety", "performance", "binance2017", "BittrexExchange", "kucoincom"]
# ::lemmas ["i", "do", "not", "care", "about", "amount", "i", "care", "about", "speed", "safety", "performance", "binance2017", "BittrexExchange", "kucoincom"]
(c1-8 / multi-sentence
      :snt1 (c1-3 / care-01
                  :ARG0 (c1-11 / i)
                  :ARG1 (c1-6 / amount)
                  :polarity -)
      :snt2 (c1-7 / care-01
                  :ARG0 (c1-0 / i)
                  :ARG1 (c1-4 / perform-02
                              :ARG1 (c1-9 / safe-01
                                          :ARG1 (c1-5 / speed))))
      :snt3 (c1-1 / company
                  :name (c1-10 / name
                               :op1 "BittrexExchange")
                  :time (c1-2 / date-entity
                              :year 2017)
                  :mod c1-1
                  :name c1-10
                  :op1 "Kucoincom"))

# ::snt The question is what will happen to centralised exchanges like Binance etc When decentralised ones gain momentum
# ::tokens ["The", "question", "is", "what", "will", "happen", "to", "centralised", "exchanges", "like", "Binance", "etc", "When", "decentralised", "ones", "gain", "momentum"]
# ::lemmas ["the", "question", "be", "what", "will", "happen", "to", "centralise", "exchange", "like", "Binance", "etc", "when", "decentralised", "one", "gain", "momentum"]
(c2-3 / question-01
      :ARG1 (c2-1 / event
                  :mod (c2-4 / exchange-01
                             :ARG1-of (c2-2 / centralize-01)
                             :example (c2-5 / and
                                            :op1 (c2-7 / market-sector
                                                       :name (c2-9 / name
                                                                   :op1 "Binance"))
                                            :op2 (c2-10 / et-cetera)))
                  :time (c2-8 / gain-02
                              :ARG0 (c2-11 / exchange-01
                                           :ARG1-of (c2-6 / centralize-01))
                              :ARG1 (c2-0 / momentum))))

# ::snt Best trading platform out there for crypto coinbase only has a few coins
# ::tokens ["Best", "trading", "platform", "out", "there", "for", "crypto", "coinbase", "only", "has", "a", "few", "coins"]
# ::lemmas ["good", "trading", "platform", "out", "there", "for", "crypto", "coinbase", "only", "have", "a", "few", "coin"]
(c3-9 / have-03
      :ARG0 (c3-3 / platform
                  :purpose (c3-6 / trade-01)
                  :location (c3-0 / out-there)
                  :ARG1-of (c3-5 / have-degree-91
                                 :ARG2 (c3-11 / good-02
                                              :ARG1 c3-3
                                              :ARG2 c3-6)
                                 :ARG3 (c3-10 / most))
                  :mod (c3-4 / coin
                             :mod (c3-8 / crypto)))
      :ARG1 (c3-1 / coin
                  :quant (c3-7 / few))
      :mod (c3-2 / only))

# ::snt And yet the Cryptocurrency total market cap is dropping
# ::tokens ["And", "yet", "the", "Cryptocurrency", "total", "market", "cap", "is", "dropping"]
# ::lemmas ["and", "yet", "the", "Cryptocurrency", "total", "market", "cap", "be", "drop"]
(c4-4 / and
      :op2 (c4-1 / drop-01
                 :ARG1 (c4-2 / cap-01
                             :ARG1 (c4-6 / market)
                             :ARG2 (c4-0 / monetary-quantity
                                         :ARG2-of (c4-3 / total-01))
                             :mod (c4-5 / Cryptocurrency))
                 :mod (c4-7 / yet)))

# ::snt and that with this the site hangs can not be performed operations binance btc
# ::tokens ["and", "that", "with", "this", "the", "site", "hangs", "can", "not", "be", "performed", "operations", "binance", "btc"]
# ::lemmas ["and", "that", "with", "this", "the", "site", "hang", "can", "not", "be", "perform", "operation", "binance", "btc"]
(c5-5 / and
      :op2 (c5-2 / cause-01
                 :ARG0 (c5-4 / this)
                 :ARG1 (c5-3 / possible-01
                             :ARG1 (c5-1 / perform-02
                                         :ARG1 (c5-0 / operate-01)
                                         :ARG2 (c5-7 / hanging-07
                                                     :ARG1 (c5-6 / site)))
                             :polarity -))
      :mod (c5-8 / business))

# ::snt Are you inventing this storyor donyou really like them biscuits
# ::tokens ["Are", "you", "inventing", "this", "storyor", "donyou", "really", "like", "them", "biscuits"]
# ::lemmas ["be", "you", "invent", "this", "storyor", "donyou", "really", "like", "them", "biscuit"]
(c6-0 / or
      :op1 (c6-7 / invent-01
                 :ARG0 (c6-9 / you)
                 :ARG1 (c6-5 / story
                             :mod (c6-3 / this))
                 :polarity (c6-4 / amr-unknown))
      :op2 (c6-6 / like-01
                 :polarity (c6-2 / amr-unknown)
                 :ARG0 c6-9
                 :ARG1 (c6-8 / biscuit)
                 :degree (c6-1 / really)))

# ::snt 200 or more every day lol
# ::tokens ["200", "or", "more", "every", "day", "lol"]
# ::lemmas ["200", "or", "more", "every", "day", "lol"]
(c7-0 / rate-entity-91
      :ARG1 (c7-3 / at-least
                  :op1 200)
      :ARG2 (c7-2 / temporal-quantity
                  :unit (c7-1 / day)
                  :quant 1)
      :ARG2-of (c7-5 / laugh-01
                     :ARG0 (c7-6 / i)
                     :manner (c7-4 / loud)
                     :mode expressive))

# ::snt But its not a bubble
# ::tokens ["But", "its", "not", "a", "bubble"]
# ::lemmas ["but", "its", "not", "a", "bubble"]
(c8-0 / contrast-01
      :ARG2 (c8-2 / bubble
                  :domain (c8-1 / it)
                  :polarity -))

# ::snt Forget Binance and use KuCoin mabye Their token KCS has a amazing concept paying you a share of the platforms tradin fees Plus receive free coins from their amazing promotions Seriously you should check it out httpgooglhqhTDZ
# ::tokens ["Forget", "Binance", "and", "use", "KuCoin", "mabye", "Their", "token", "KCS", "has", "a", "amazing", "concept", "paying", "you", "a", "share", "of", "the", "platforms", "tradin", "fees", "Plus", "receive", "free", "coins", "from", "their", "amazing", "promotions", "Seriously", "you", "should", "check", "it", "out", "httpgooglhqhTDZ"]
# ::lemmas ["forget", "binance", "and", "use", "KuCoin", "mabye", "their", "token", "KCS", "have", "a", "amazing", "concept", "pay", "you", "a", "share", "of", "the", "platform", "tradin", "fee", "plus", "receive", "free", "coin", "from", "their", "amazing", "promotion", "seriously", "you", "should", "check", "it", "out", "httpgooglhqhTDZ"]
(c9-23 / multi-sentence
       :snt1 (c9-29 / and
                    :op1 (c9-30 / forget-01
                                :ARG0 (c9-34 / you)
                                :ARG1 (c9-24 / bank-teller
                                             :name (c9-33 / name
                                                          :op1 "Binance"))
                                :mode imperative)
                    :op2 (c9-5 / use-01
                               :ARG0 c9-34
                               :ARG1 (c9-10 / company
                                            :name (c9-11 / name
                                                         :op1 "KuCoin"
                                                         :op2 "Mabye"))
                               :mode imperative))
       :snt2 (c9-16 / have-03
                    :ARG0 (c9-31 / company
                                 :name (c9-3 / name
                                             :op1 "KCS")
                                 :mod (c9-20 / token)
                                 :poss (c9-7 / they))
                    :ARG1 (c9-0 / concept
                                :ARG0-of (c9-19 / amaze-01)
                                :ARG0-of (c9-4 / pay-01
                                               :ARG1 (c9-32 / share
                                                            :ARG1-of (c9-6 / include-91
                                                                           :ARG2 (c9-1 / fee
                                                                                       :mod (c9-13 / tradin))))
                                               :ARG2 (c9-9 / you))
                                :ARG0-of (c9-2 / receive-01
                                               :ARG1 (c9-14 / coin
                                                            :ARG1-of (c9-22 / free-03))
                                               :ARG3 (c9-8 / promote-02
                                                           :ARG0 (c9-28 / they
                                                                        :ARG0-of (c9-25 / amaze-01))
                                                           :mod (c9-27 / plus))))
                    :snt3 (c9-12 / cause-01
                                 :ARG1 (c9-15 / recommend-01
                                              :ARG1 (c9-18 / check-out-05
                                                           :ARG0 (c9-26 / you)
                                                           :ARG1 (c9-17 / url-entity
                                                                        :value "httpgooglhqhTDZ"))
                                              :ARG2 c9-26
                                              :ARG2-of (c9-21 / serious-01)))))

# ::snt Buckle up Dorothythe herd is coming  cryptocurrency  XRP  Bitcoin  TheyRwakingup
# ::tokens ["Buckle", "up", "Dorothythe", "herd", "is", "coming", " ", "cryptocurrency", " ", "XRP", " ", "Bitcoin", " ", "TheyRwakingup"]
# ::lemmas ["buckle", "up", "Dorothythe", "herd", "be", "come", " ", "cryptocurrency", " ", "XRP", " ", "Bitcoin", " ", "TheyRwakingup"]
(c10-8 / say-01
       :ARG0 (c10-12 / i)
       :ARG1 (c10-7 / and
                    :op1 (c10-2 / come-01
                                :ARG1 (c10-9 / herd))
                    :op2 (c10-10 / monetary-quantity
                                 :name (c10-11 / name
                                               :op1 "XRP"))
                    :op3 (c10-0 / monetary-quantity
                                :name (c10-3 / name
                                             :op1 "Bitcoin"))
                    :op4 (c10-6 / wake-up-02
                                :ARG1 (c10-5 / they)))
       :ARG2 (c10-4 / person
                    :name (c10-1 / name
                                 :op1 "Dorothy")))

# ::snt Can httpbiancecom  tell us if you win the coin vote to join exchange how much to they ask in Bitcoinfiat to get listed and of course they also want insider info on coin development
# ::tokens ["Can", "httpbiancecom", " ", "tell", "us", "if", "you", "win", "the", "coin", "vote", "to", "join", "exchange", "how", "much", "to", "they", "ask", "in", "Bitcoinfiat", "to", "get", "listed", "and", "of", "course", "they", "also", "want", "insider", "info", "on", "coin", "development"]
# ::lemmas ["can", "httpbiancecom", " ", "tell", "us", "if", "you", "win", "the", "coin", "vote", "to", "join", "exchange", "how", "much", "to", "they", "ask", "in", "Bitcoinfiat", "to", "get", "list", "and", "of", "course", "they", "also", "want", "insider", "info", "on", "coin", "development"]
(c11-18 / and
        :op1 (c11-2 / possible-01
                    :ARG1 (c11-12 / tell-01
                                  :ARG0 (c11-3 / url-entity
                                               :value "httpbiancecom")
                                  :ARG1 (c11-5 / win-01
                                               :ARG0 (c11-22 / you)
                                               :ARG1 (c11-17 / vote-01
                                                             :ARG1 (c11-21 / join-01
                                                                           :ARG0 c11-22
                                                                           :ARG1 (c11-4 / exchange-01))
                                                             :mod (c11-8 / coin))
                                               :condition c11-5)
                                  :ARG2 (c11-10 / we))
                    :op2 (c11-11 / ask-02
                                 :ARG0 (c11-7 / they)
                                 :ARG1 (c11-13 / monetary-quantity
                                               :ARG0 c11-7
                                               :ARG2 (c11-14 / list-01
                                                             :ARG1 (c11-19 / company
                                                                           :name (c11-20 / name
                                                                                         :op1 "Bitfiat")))
                                               :ARG1-of c11-11))
                    :ARG2 c11-19)
        :op3 (c11-16 / want-01
                     :ARG0 c11-7
                     :ARG1 (c11-6 / information
                                  :mod (c11-9 / insider)
                                  :topic (c11-15 / develop-02
                                                 :ARG1 (c11-1 / coin)))
                     :mod (c11-0 / of-course)))

# ::snt In the meantime you get spammed by ppl offering to sell 3k votes for the binance2017 votings
# ::tokens ["In", "the", "meantime", "you", "get", "spammed", "by", "ppl", "offering", "to", "sell", "3k", "votes", "for", "the", "binance2017", "votings"]
# ::lemmas ["in", "the", "meantime", "you", "get", "spamme", "by", "ppl", "offering", "to", "sell", "3k", "vote", "for", "the", "binance2017", "voting"]
(c12-8 / spammed-01
       :ARG0 (c12-5 / person
                    :ARG0-of (c12-0 / offer-01
                                    :ARG1 (c12-7 / sell-01
                                                 :ARG0 c12-5
                                                 :ARG1 (c12-6 / vote-01
                                                              :ARG1 (c12-1 / referendum
                                                                           :time (c12-4 / date-entity
                                                                                        :year 2017)))
                                                 :ARG3 (c12-9 / monetary-quantity
                                                              :unit (c12-2 / pound)
                                                              :quant 3000))))
       :ARG1 (c12-10 / you)
       :time (c12-3 / meantime))

# ::snt When I see articles like the chorus in my head begins
# ::tokens ["When", "I", "see", "articles", "like", "the", "chorus", "in", "my", "head", "begins"]
# ::lemmas ["when", "i", "see", "article", "like", "the", "chorus", "in", "my", "head", "begin"]
(c13-7 / be-temporally-at-91
       :ARG2 (c13-4 / see-01
                    :ARG0 (c13-6 / i
                                 :part (c13-5 / head))
                    :ARG1 (c13-0 / begin-01
                                 :ARG1 (c13-3 / article
                                              :ARG1-of (c13-1 / resemble-01
                                                              :ARG2 (c13-2 / chorus
                                                                           :location c13-5))))))

# ::snt Source
# ::tokens ["Source"]
# ::lemmas ["source"]
(c14-0 / source)

# ::snt 40AcresBrooklyn   spike you looked kewl in your interview
# ::tokens ["40AcresBrooklyn", "  ", "spike", "you", "looked", "kewl", "in", "your", "interview"]
# ::lemmas ["40AcresBrooklyn", "  ", "spike", "you", "look", "kewl", "in", "your", "interview"]
(c15-2 / say-01
       :ARG0 (c15-6 / i)
       :ARG1 (c15-3 / look-02
                    :ARG0 (c15-1 / person
                                 :name (c15-5 / name
                                              :op1 "Brooklyn"))
                    :ARG1 (c15-4 / kewl)
                    :time (c15-0 / interview-01
                                 :ARG1 c15-1))
       :ARG2 c15-1)

# ::snt 40AcresBrooklyn best movie Ever written Malcolm X
# ::tokens ["40AcresBrooklyn", "best", "movie", "Ever", "written", "Malcolm", "X"]
# ::lemmas ["40AcresBrooklyn", "good", "movie", "ever", "write", "Malcolm", "X"]
(c16-7 / have-degree-91
       :ARG1 (c16-6 / movie
                    :name (c16-9 / name
                                 :op1 "Malcolm"
                                 :op2 "X")
                    :ARG1-of (c16-5 / write-01
                                    :time (c16-2 / ever))
                    :source (c16-3 / city
                                   :name (c16-4 / name
                                                :op1 "Brooklyn")))
       :ARG2 (c16-8 / good-02
                    :ARG1 c16-6)
       :ARG3 (c16-0 / most)
       :ARG5 (c16-10 / broadcast-program
                     :name (c16-1 / name
                                  :op1 "Ever")))

# ::snt 40AcresBrooklyn loved loved the Spike Lee Interview
# ::tokens ["40AcresBrooklyn", "loved", "loved", "the", "Spike", "Lee", "Interview"]
# ::lemmas ["40AcresBrooklyn", "love", "love", "the", "Spike", "Lee", "Interview"]
(c17-3 / love-01
       :ARG0 (c17-1 / person
                    :name (c17-4 / name
                                 :op1 "40AcresBrooklyn"))
       :ARG1 (c17-5 / interview-01
                    :ARG0 (c17-0 / person
                                 :name (c17-2 / name
                                              :op1 "Spike"
                                              :op2 "Lee"))))

# ::snt 40AcresBrooklyn Good chat Agree wmy Morehouse bro putting in hard work  todays young folks project entitlement Pay your dues
# ::tokens ["40AcresBrooklyn", "Good", "chat", "Agree", "wmy", "Morehouse", "bro", "putting", "in", "hard", "work", " ", "todays", "young", "folks", "project", "entitlement", "Pay", "your", "dues"]
# ::lemmas ["40acresbrooklyn", "Good", "chat", "Agree", "wmy", "Morehouse", "bro", "put", "in", "hard", "work", " ", "todays", "young", "folk", "project", "entitlement", "Pay", "your", "due"]
(c18-13 / multi-sentence
        :snt1 (c18-7 / chat-01
                     :ARG0 (c18-0 / person
                                  :name (c18-10 / name
                                                :op1 "Brooklyn")
                                  :age (c18-12 / temporal-quantity
                                               :unit (c18-22 / year)
                                               :quant 40))
                     :ARG1-of (c18-21 / good-02))
        :snt2 (c18-19 / agree-01
                      :ARG0 (c18-3 / i)
                      :ARG1 (c18-5 / put-in-05
                                   :ARG0 (c18-17 / person
                                                 :ARG0-of (c18-9 / have-rel-role-91
                                                                 :ARG1 c18-3
                                                                 :ARG2 (c18-15 / bro)))
                                   :ARG1 (c18-2 / work-01
                                                :ARG1-of (c18-8 / hard-02)))
                      :ARG2 (c18-1 / entitlement
                                   :beneficiary (c18-20 / folk
                                                        :mod (c18-6 / young)
                                                        :time (c18-4 / today))
                                   :mod (c18-14 / project)))
        :snt3 (c18-11 / pay-01
                      :ARG0 (c18-16 / you)
                      :ARG1 (c18-18 / due
                                    :poss c18-16)))

# ::snt 40AcresBrooklyn Congrats Spike Lee
# ::tokens ["40AcresBrooklyn", "Congrats", "Spike", "Lee"]
# ::lemmas ["40AcresBrooklyn", "Congrats", "Spike", "Lee"]
(c19-0 / congratulate-01
       :ARG0 (c19-5 / broadcast-program
                    :name (c19-4 / name
                                 :op1 "Brooklyn"))
       :ARG1 (c19-2 / person
                    :name (c19-1 / name
                                 :op1 "Spike"
                                 :op2 "Lee"))
       :duration (c19-3 / temporal-quantity
                        :unit (c19-6 / year)
                        :quant 40))

# ::snt 40AcresBrooklyn ok I checked the listing for 11 pm tonite it says the topic is about Gore Vidal Whats dat about
# ::tokens ["40AcresBrooklyn", "ok", "I", "checked", "the", "listing", "for", "11", "pm", "tonite", "it", "says", "the", "topic", "is", "about", "Gore", "Vidal", "What", "s", "dat", "about"]
# ::lemmas ["40acresbrooklyn", "ok", "i", "check", "the", "listing", "for", "11", "pm", "tonite", "it", "say", "the", "topic", "be", "about", "Gore", "Vidal", "what", "s", "dat", "about"]
(c20-9 / multi-sentence
       :snt1 (c20-0 / okay-04
                    :ARG1 (c20-2 / city
                                 :name (c20-12 / name
                                               :op1 "Brooklyn")))
       :snt2 (c20-6 / and
                    :op1 (c20-8 / check-01
                                :ARG0 (c20-13 / i)
                                :ARG1 (c20-10 / listing)
                                :time (c20-1 / date-entity
                                             :mod (c20-5 / tonite)
                                             :time "11:00"))
                    :op2 (c20-11 / say-01
                                 :ARG0 c20-10
                                 :ARG1 (c20-14 / topic
                                               :topic (c20-3 / person
                                                             :name (c20-4 / name
                                                                          :op1 "Gore"
                                                                          :op2 "Vidal"))))
                    :op3 (c20-7 / that
                                :topic c20-14)))

# ::snt 40AcresBrooklyn settin my dvr right now cause I may not be home or I may forgetthanks
# ::tokens ["40AcresBrooklyn", "settin", "my", "dvr", "right", "now", "cause", "I", "may", "not", "be", "home", "or", "I", "may", "forgetthanks"]
# ::lemmas ["40AcresBrooklyn", "settin", "my", "dvr", "right", "now", "cause", "i", "may", "not", "be", "home", "or", "i", "may", "forgetthank"]
(c21-4 / cause-01
       :ARG0 (c21-0 / or
                    :op1 (c21-5 / possible-01
                                :ARG1 (c21-13 / be-located-at-91
                                              :ARG1 (c21-12 / i)
                                              :ARG2 (c21-9 / home)
                                              :polarity -))
                    :op2 (c21-2 / possible-01
                                :ARG1 (c21-7 / forget-01
                                             :ARG0 c21-12)))
       :ARG1 (c21-8 / settle-03
                    :ARG0 (c21-10 / city
                                  :name (c21-11 / name
                                                :op1 "Brooklyn"))
                    :ARG4 (c21-1 / publication
                                 :name c21-11
                                 :op1 "DVR")
                    :poss c21-12)
       :time (c21-6 / now
                    :mod (c21-3 / right)))

# ::snt 40AcresBrooklyn Sounds great PBS on West Coast also
# ::tokens ["40AcresBrooklyn", "Sounds", "great", "PBS", "on", "West", "Coast", "also"]
# ::lemmas ["40AcresBrooklyn", "sound", "great", "PBS", "on", "West", "Coast", "also"]
(c22-6 / sound-01
       :ARG1 (c22-9 / broadcast-program
                    :name (c22-8 / name
                                 :op1 "Brooklyn")
                    :ARG2-of c22-6)
       :name (c22-2 / name
                    :op1 "PBS")
       :mod (c22-7 / great)
       :location (c22-1 / country-region
                        :name (c22-0 / name
                                     :op1 "West"
                                     :op2 "Coast"))
       :mod (c22-5 / also)
       :quant (c22-4 / volume-quantity
                     :unit (c22-3 / Acres)
                     :quant 40))

# ::snt 40AcresBrooklyn  Lets do it again  SpikeLee
# ::tokens ["40AcresBrooklyn", " ", "Lets", "do", "it", "again", " ", "SpikeLee"]
# ::lemmas ["40acresbrooklyn", " ", "Lets", "do", "it", "again", " ", "SpikeLee"]
(c23-6 / say-01
       :ARG0 (c23-9 / i)
       :ARG1 (c23-7 / let-01
                    :ARG0 (c23-4 / we)
                    :ARG1 (c23-1 / do-02
                                 :ARG0 c23-4
                                 :ARG1 (c23-0 / it)
                                 :mod (c23-5 / again)))
       :ARG2 (c23-2 / person
                    :name (c23-8 / name
                                 :op1 "SpikeLee"))
       :time (c23-3 / age-01
                    :unit (c23-10 / year)
                    :ARG2 40))

# ::snt shorting all banks
# ::tokens ["shorting", "all", "banks"]
# ::lemmas ["short", "all", "bank"]
(c24-2 / short-06
       :ARG1 (c24-1 / bank
                    :mod (c24-0 / all)))

# ::snt johnjhargrove Found this tweet yesterday on Kellys site
# ::tokens ["johnjhargrove", "Found", "this", "tweet", "yesterday", "on", "Kellys", "site"]
# ::lemmas ["johnjhargrove", "find", "this", "tweet", "yesterday", "on", "Kellys", "site"]
(c25-5 / find-01
       :ARG0 (c25-0 / person
                    :name (c25-7 / name
                                 :op1 "Johnjhargrove"))
       :ARG1 (c25-3 / thing
                    :ARG1-of (c25-8 / tweet-01)
                    :mod (c25-4 / this))
       :time (c25-9 / yesterday)
       :location (c25-6 / site
                        :poss (c25-1 / company
                                     :name (c25-2 / name
                                                  :op1 "Kellys"))))

# ::snt johnjhargrove Thx for4 All John Here a great tweet of 50SOG Scriptwriter blackfishmovie  FiftyShades
# ::tokens ["johnjhargrove", "Thx", "for4", "All", "John", "Here", "a", "great", "tweet", "of", "50SOG", "Scriptwriter", "blackfishmovie", " ", "FiftyShades"]
# ::lemmas ["johnjhargrove", "Thx", "for4", "all", "John", "here", "a", "great", "tweet", "of", "50SOG", "Scriptwriter", "blackfishmovie", " ", "FiftyShades"]
(c26-11 / say-01
        :ARG0 (c26-15 / i)
        :ARG1 (c26-7 / tweet-01
                     :ARG0 (c26-4 / person
                                  :name (c26-14 / name
                                                :op1 "John"
                                                :op2 "Here")
                                  :mod (c26-10 / all))
                     :ARG1 (c26-12 / movie
                                   :name (c26-5 / name
                                                :op1 "Blackfish")
                                   :mod (c26-6 / comedy
                                               :name (c26-2 / name
                                                            :op1 "50SOG"))
                                   :mod (c26-1 / person
                                               :ARG0-of (c26-8 / write-01
                                                               :ARG1 (c26-9 / script-01))))
                     :mod (c26-13 / great))
        :ARG2 (c26-0 / person
                     :name (c26-3 / name
                                  :op1 "John"
                                  :op2 "Here")))

# ::snt johnjhargrove You were great cannot believe the statement Sea World put out the lies they keep telling Anyway Thank you
# ::tokens ["johnjhargrove", "You", "were", "great", "can", "not", "believe", "the", "statement", "Sea", "World", "put", "out", "the", "lies", "they", "keep", "telling", "Anyway", "Thank", "you"]
# ::lemmas ["johnjhargrove", "you", "be", "great", "can", "not", "believe", "the", "statement", "Sea", "World", "put", "out", "the", "lie", "they", "keep", "tell", "anyway", "thank", "you"]
(c27-10 / multi-sentence
        :snt1 (c27-9 / say-01
                     :ARG0 (c27-15 / i)
                     :ARG1 (c27-14 / great
                                   :domain (c27-3 / person
                                                  :name (c27-11 / name
                                                                :op1 "Johnjhargrove")
                                                  :ARG2-of c27-9)))
        :snt2 (c27-2 / possible-01
                     :ARG1 (c27-16 / believe-01
                                   :ARG0 c27-3
                                   :ARG1 (c27-8 / state-01
                                                :ARG0 (c27-0 / organization
                                                             :name (c27-4 / name
                                                                          :op1 "Sea"
                                                                          :op2 "World"))
                                                :ARG1 (c27-12 / lie-08
                                                              :ARG0 c27-0
                                                              :ARG1-of (c27-7 / tell-01
                                                                              :ARG0 c27-0
                                                                              :ARG1-of (c27-13 / keep-02
                                                                                               :ARG0 c27-0)))))
                     :ARG1-of (c27-5 / cause-01
                                     :ARG0 (c27-1 / put-out-10
                                                  :ARG0 c27-0
                                                  :ARG1 c27-12))
                     :polarity -)
        :snt3 (c27-6 / thank-01
                     :ARG0 c27-15
                     :ARG1 (c27-17 / you)))

# ::snt johnjhargrove hope there will be a link so we can see it in the UK Good luck
# ::tokens ["johnjhargrove", "hope", "there", "will", "be", "a", "link", "so", "we", "can", "see", "it", "in", "the", "UK", "Good", "luck"]
# ::lemmas ["johnjhargrove", "hope", "there", "will", "be", "a", "link", "so", "we", "can", "see", "it", "in", "the", "UK", "good", "luck"]
(c28-6 / hope-01
       :ARG0 (c28-1 / person
                    :name (c28-9 / name
                                 :op1 "johnjhargrove"))
       :ARG1 (c28-0 / possible-01
                    :ARG1 (c28-5 / see-01
                                 :ARG0 (c28-4 / we)
                                 :ARG1 (c28-10 / it)
                                 :location (c28-2 / country
                                                  :name (c28-3 / name
                                                               :op1 "UK"))))
       :purpose (c28-7 / luck
                       :ARG1-of (c28-8 / good-02)))

# ::snt johnwoodRTR pimmfox a great host but how he guesses the mystery guest is what blows me away
# ::tokens ["johnwoodRTR", "pimmfox", "a", "great", "host", "but", "how", "he", "guesses", "the", "mystery", "guest", "is", "what", "blows", "me", "away"]
# ::lemmas ["johnwoodRTR", "pimmfox", "a", "great", "host", "but", "how", "he", "guess", "the", "mystery", "guest", "be", "what", "blow", "me", "away"]
(c29-1 / contrast-01
       :ARG1 (c29-2 / person
                    :name (c29-7 / name
                                 :op1 "JohnwoodRTR")
                    :ARG0-of (c29-6 / host-01)
                    :mod (c29-9 / great))
       :ARG2 (c29-11 / blow-01
                     :ARG0 (c29-4 / thing
                                  :manner-of (c29-3 / guess-01
                                                    :ARG0 c29-2
                                                    :ARG1 (c29-0 / guest
                                                                 :mod (c29-8 / mystery))))
                     :ARG1 (c29-10 / i)
                     :manner (c29-5 / away)))

# ::snt We can forgive him for making these comments for the time being since he was in prison for sodomy charges and does not know the whole story of Rohingya and ARSA terrorism
# ::tokens ["We", "can", "forgive", "him", "for", "making", "these", "comments", "for", "the", "time", "being", "since", "he", "was", "in", "prison", "for", "sodomy", "charges", "and", "does", "not", "know", "the", "whole", "story", "of", "Rohingya", "and", "ARSA", "terrorism"]
# ::lemmas ["we", "can", "forgive", "him", "for", "make", "these", "comment", "for", "the", "time", "be", "since", "he", "be", "in", "prison", "for", "sodomy", "charge", "and", "do", "not", "know", "the", "whole", "story", "of", "Rohingya", "and", "arsa", "terrorism"]
(c30-1 / possible-01
       :ARG1 (c30-18 / forgive-01
                     :ARG0 (c30-2 / we)
                     :ARG1 (c30-9 / he)
                     :ARG2 (c30-5 / comment-01
                                  :ARG0 c30-9
                                  :mod (c30-12 / this))
                     :time (c30-17 / after
                                   :op1 (c30-11 / and
                                                :op1 (c30-15 / be-located-at-91
                                                             :ARG1 c30-9
                                                             :ARG2 (c30-4 / prison)
                                                             :ARG1-of (c30-19 / cause-01
                                                                              :ARG0 (c30-0 / charge-05
                                                                                           :ARG1 c30-9
                                                                                           :ARG2 (c30-20 / sodomy))))
                                                :op2 (c30-14 / know-01
                                                             :ARG0 c30-9
                                                             :ARG1 (c30-13 / story
                                                                           :mod (c30-10 / whole)
                                                                           :topic (c30-16 / and
                                                                                          :op1 (c30-3 / terrorism
                                                                                                      :mod (c30-8 / country
                                                                                                                  :name (c30-21 / name
                                                                                                                                :op1 "Rohingya")))
                                                                                          :op2 (c30-7 / terrorism
                                                                                                      :mod c30-8
                                                                                                      :name (c30-6 / name
                                                                                                                   :op1 "ARSA"))))
                                                             :polarity -)))))

# ::snt further down the drain
# ::tokens ["further", "down", "the", "drain"]
# ::lemmas ["further", "down", "the", "drain"]
(c31-1 / further
       :direction (c31-0 / down
                         :op1 (c31-2 / drain)))

# ::snt are you ready to put your money in the safe
# ::tokens ["are", "you", "ready", "to", "put", "your", "money", "in", "the", "safe"]
# ::lemmas ["be", "you", "ready", "to", "put", "your", "money", "in", "the", "safe"]
(c32-0 / ready-01
       :polarity (c32-2 / amr-unknown)
       :ARG1 (c32-5 / you)
       :ARG2 (c32-1 / put-01
                    :ARG0 c32-5
                    :ARG1 (c32-4 / money
                                 :poss c32-5)
                    :ARG2 (c32-3 / safe)))

# ::snt binmejren
# ::tokens ["binmejren"]
# ::lemmas ["binmejren"]
(c33-0 / person
       :name (c33-1 / name
                    :op1 "binmejren"))
