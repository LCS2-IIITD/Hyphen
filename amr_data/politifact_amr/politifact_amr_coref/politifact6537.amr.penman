# ::snt JohnScotus What a waste These criminal RINOs are appeasers because morally theyve joined the other side
# ::tokens ["JohnScotus", "What", "a", "waste", "These", "criminal", "RINOs", "are", "appeasers", "because", "morally", "they", "ve", "joined", "the", "other", "side"]
# ::lemmas ["JohnScotus", "what", "a", "waste", "these", "criminal", "rino", "be", "appeaser", "because", "morally", "they", "have", "join", "the", "other", "side"]
(c1-8 / say-01
      :ARG0 (c1-13 / i)
      :ARG1 (c1-5 / waste-01
                  :ARG1 (c1-2 / cause-01
                              :ARG0 (c1-14 / join-in-05
                                           :ARG0 (c1-3 / person
                                                       :ARG1-of (c1-9 / criminal-03)
                                                       :mod (c1-4 / this)
                                                       :ARG0-of (c1-10 / have-org-role-91
                                                                       :ARG2 (c1-1 / reno)))
                                           :ARG1 (c1-6 / side
                                                       :mod (c1-0 / other))
                                           :ARG1-of (c1-11 / moral-02))
                              :ARG1 (c1-7 / appease-01
                                          :ARG0 c1-3)))
      :ARG2 c1-3
      :name (c1-12 / name
                   :op1 "JohnScotus"))

# ::snt Targeted Victory is run by Zac Moffet frmr Romney digital director Also DDC is a very establishment firm not surprising to see them here
# ::tokens ["Targeted", "Victory", "is", "run", "by", "Zac", "Moffet", "frmr", "Romney", "digital", "director", "Also", "DDC", "is", "a", "very", "establishment", "firm", "not", "surprising", "to", "see", "them", "here"]
# ::lemmas ["target", "Victory", "be", "run", "by", "Zac", "Moffet", "frmr", "Romney", "digital", "director", "also", "DDC", "be", "a", "very", "establishment", "firm", "not", "surprising", "to", "see", "them", "here"]
(c2-12 / multi-sentence
       :snt1 (c2-1 / run-01
                   :ARG0 (c2-3 / person
                               :name (c2-19 / name
                                            :op1 "Zac"
                                            :op2 "Moffet")
                               :ARG0-of (c2-9 / have-org-role-91
                                              :ARG1 (c2-5 / person
                                                          :name (c2-7 / name
                                                                      :op1 "Romney"))
                                              :ARG2 (c2-14 / director
                                                           :mod (c2-16 / digital))
                                              :mod (c2-20 / dear)))
                   :ARG1 (c2-0 / organization
                               :name (c2-2 / name
                                           :op1 "Targeted"
                                           :op2 "Victory")))
       :snt2 (c2-17 / firm
                    :ARG1-of (c2-4 / establish-01
                                   :degree (c2-15 / very))
                    :domain (c2-13 / organization
                                   :name (c2-6 / name
                                               :op1 "DDC"))
                    :ARG0-of (c2-18 / surprise-01
                                    :ARG2 (c2-11 / see-01
                                                 :ARG1 (c2-10 / they)
                                                 :location (c2-8 / here))
                                    :polarity -)))

# ::snt Until we stop them
# ::tokens ["Until", "we", "stop", "them"]
# ::lemmas ["until", "we", "stop", "them"]
(c3-4 / be-temporally-at-91
      :ARG2 (c3-0 / until
                  :op1 (c3-3 / stop-01
                             :ARG0 (c3-2 / we)
                             :ARG1 (c3-1 / they))))

# ::snt Grifters gonna grift
# ::tokens ["Grifters", "gon", "na", "grift"]
# ::lemmas ["grifter", "go", "to", "grift"]
(c4-1 / grift-01
      :ARG0 (c4-0 / person
                  :ARG0-of c4-1))

# ::snt No surprise there CoryBooker never met a dollar he wouldnt take charterschools newark zuckerberg
# ::tokens ["No", "surprise", "there", "CoryBooker", "never", "met", "a", "dollar", "he", "would", "nt", "take", "charterschools", "newark", "zuckerberg"]
# ::lemmas ["no", "surprise", "there", "CoryBooker", "never", "meet", "a", "dollar", "he", "would", "not", "take", "charterschool", "newark", "zuckerberg"]
(c5-7 / surprise-01
      :ARG2 (c5-8 / meet-02
                  :ARG0 (c5-1 / person
                              :name (c5-10 / name
                                           :op1 "CoryBooker"))
                  :ARG1 (c5-0 / dollar)
                  :time (c5-2 / ever)
                  :ARG1-of (c5-3 / cause-01
                                 :ARG0 (c5-5 / take-01
                                             :ARG0 c5-1
                                             :ARG1 (c5-6 / school
                                                         :name (c5-4 / name
                                                                     :op1 "Newark"
                                                                     :op2 "Zuckerberg")
                                                         :mod (c5-9 / charter))
                                             :polarity -))
                  :polarity -)
      :polarity -)

# ::snt True
# ::tokens ["True"]
# ::lemmas ["true"]
(c6-0 / true-01)

# ::snt Well life is about taking some gambles Sometimes they pay off sometimes they donâ€™t   Thanks for the fun fact though My original comment was just a snarky remark Good insight
# ::tokens ["Well", "life", "is", "about", "taking", "some", "gambles", "Sometimes", "they", "pay", "off", "sometimes", "they", "do", "n\u2019t", "  ", "Thanks", "for", "the", "fun", "fact", "though", "My", "original", "comment", "was", "just", "a", "snarky", "remark", "Good", "insight"]
# ::lemmas ["well", "life", "be", "about", "take", "some", "gamble", "sometimes", "they", "pay", "off", "sometimes", "they", "do", "not", "  ", "thank", "for", "the", "fun", "fact", "though", "my", "original", "comment", "be", "just", "a", "snarky", "remark", "good", "insight"]
(c7-12 / multi-sentence
       :snt1 (c7-5 / concern-02
                   :ARG0 (c7-13 / life)
                   :ARG1 (c7-7 / take-01
                               :ARG1 (c7-15 / gamble-01
                                            :quant (c7-11 / some)))
                   :mod (c7-8 / well))
       :snt2 (c7-17 / thank-01
                    :ARG0 (c7-16 / i)
                    :ARG2 (c7-10 / fact
                                 :ARG1-of (c7-2 / fun-01))
                    :concession (c7-1 / remark-01
                                      :ARG0 c7-16
                                      :mod (c7-9 / snarky)
                                      :mod (c7-4 / just)
                                      :domain (c7-14 / comment-01
                                                     :ARG0 c7-16
                                                     :mod (c7-0 / original))))
       :snt3 (c7-3 / insight
                   :ARG1-of (c7-6 / good-02)))

# ::snt MorningBriefing The story that wont be coveredHow Democrats vs Republicans rally after America is attackedPull together vs pull us apart
# ::tokens ["MorningBriefing", "The", "story", "that", "wo", "nt", "be", "coveredHow", "Democrats", "vs", "Republicans", "rally", "after", "America", "is", "attackedPull", "together", "vs", "pull", "us", "apart"]
# ::lemmas ["MorningBriefing", "the", "story", "that", "will", "not", "be", "coveredhow", "Democrats", "vs", "Republicans", "rally", "after", "America", "be", "attackedpull", "together", "vs", "pull", "us", "apart"]
(c8-15 / multi-sentence
       :snt1 (c8-17 / brief-01
                    :ARG2 (c8-22 / story
                                 :ARG1-of (c8-8 / cover-01
                                                :polarity -))
                    :time (c8-20 / date-entity
                                 :dayperiod (c8-2 / morning)))
       :snt2 (c8-0 / rally-01
                   :ARG0 (c8-4 / person
                               :ARG0-of (c8-11 / have-org-role-91
                                               :ARG1 (c8-6 / political-party
                                                           :name (c8-24 / name
                                                                        :op1 "Democrat"))))
                   :ARG1 (c8-19 / person
                                :ARG0-of (c8-10 / have-org-role-91
                                                :ARG1 (c8-16 / political-party
                                                             :name (c8-9 / name
                                                                         :op1 "Republican"))))
                   :time (c8-21 / after
                                :op1 (c8-13 / attack-01
                                            :ARG1 (c8-23 / country
                                                         :name (c8-3 / name
                                                                     :op1 "America")))))
       :snt3 (c8-1 / contrast-01
                   :ARG1 (c8-12 / pull-06
                                :ARG1 (c8-14 / together))
                   :ARG2 (c8-7 / pull-06
                               :ARG1 (c8-5 / we)
                               :ARG2 (c8-18 / apart))))

# ::snt thinkprogress Those same coal miners all unions dont get to choose where their dues go to political donations CHOICE Mourn that 1st
# ::tokens ["thinkprogress", "Those", "same", "coal", "miners", "all", "unions", "do", "nt", "get", "to", "choose", "where", "their", "dues", "go", "to", "political", "donations", "CHOICE", "Mourn", "that", "1st"]
# ::lemmas ["thinkprogress", "those", "same", "coal", "miner", "all", "union", "do", "not", "get", "to", "choose", "where", "their", "due", "go", "to", "political", "donation", "CHOICE", "Mourn", "that", "1st"]
(c9-14 / multi-sentence
       :snt1 (c9-9 / think-01
                   :ARG1 (c9-5 / progress))
       :snt2 (c9-17 / get-22
                    :ARG0 (c9-6 / union
                                :mod (c9-10 / all)
                                :ARG1-of (c9-13 / same-01)
                                :consist-of (c9-2 / person
                                                  :ARG0-of (c9-3 / mine-01
                                                                 :ARG1 (c9-7 / coal))
                                                  :mod (c9-18 / that)))
                    :ARG1 (c9-15 / choose-01
                                 :ARG0 c9-6
                                 :ARG1 (c9-16 / location
                                              :location-of (c9-8 / go-10
                                                                 :ARG1 (c9-4 / due
                                                                             :poss c9-6)
                                                                 :ARG2 (c9-11 / donate-01
                                                                              :mod (c9-1 / politics)))))
                    :polarity -)
       :snt3 (c9-12 / pray-01
                    :ARG0 (c9-19 / you)
                    :ord (c9-0 / ordinal-entity
                               :value 1)
                    :mode imperative))

# ::snt thinkprogress Thats small potatoes compared to Conservative Union Members Forced To Fund Crazy Progressive Agendas Or Face Unemployment
# ::tokens ["thinkprogress", "That", "s", "small", "potatoes", "compared", "to", "Conservative", "Union", "Members", "Forced", "To", "Fund", "Crazy", "Progressive", "Agendas", "Or", "Face", "Unemployment"]
# ::lemmas ["thinkprogress", "that", "s", "small", "potato", "compare", "to", "Conservative", "Union", "Members", "Forced", "To", "Fund", "Crazy", "Progressive", "Agendas", "Or", "Face", "Unemployment"]
(c10-7 / think-progress
       :consist-of (c10-4 / potato
                          :mod (c10-10 / small)
                          :ARG1-of (c10-5 / compare-01
                                          :ARG2 (c10-9 / force-01
                                                       :ARG1 (c10-11 / member
                                                                     :ARG0-of (c10-12 / have-org-role-91
                                                                                      :ARG1 (c10-0 / organization
                                                                                                   :name (c10-15 / name
                                                                                                                 :op1 "Conservative"
                                                                                                                 :op2 "Union"))))
                                                       :ARG2 (c10-1 / or
                                                                    :op1 (c10-2 / fund-01
                                                                                :ARG0 c10-11
                                                                                :ARG1 (c10-8 / agenda
                                                                                             :ARG1-of (c10-13 / Crazy-03)
                                                                                             :mod (c10-3 / progressive-02)))
                                                                    :op2 (c10-14 / face-01
                                                                                 :ARG0 c10-11
                                                                                 :ARG1 (c10-6 / employ-01
                                                                                              :ARG1 c10-11
                                                                                              :polarity -)))))))

# ::snt thinkprogress  Here is a Video of Union members fined for not attending rally  httpwwwyoutubecomwatchvxRsCeKCaBQ4 â€¦
# ::tokens ["thinkprogress", " ", "Here", "is", "a", "Video", "of", "Union", "members", "fined", "for", "not", "attending", "rally", " ", "httpwwwyoutubecomwatchvxRsCeKCaBQ4", "\u2026"]
# ::lemmas ["thinkprogress", " ", "here", "be", "a", "Video", "of", "Union", "member", "fine", "for", "not", "attend", "rally", " ", "httpwwwyoutubecomwatchvxrscekcabq4", "\u2026"]
(c11-9 / multi-sentence
       :snt1 (c11-5 / think-progress)
       :snt2 (c11-11 / be-located-at-91
                     :ARG1 (c11-6 / video
                                  :topic (c11-8 / fine-01
                                                :ARG2 (c11-2 / person
                                                             :ARG0-of (c11-10 / have-org-role-91
                                                                              :ARG1 (c11-3 / union)
                                                                              :ARG2 (c11-1 / member)))
                                                :ARG3 (c11-7 / attend-01
                                                             :ARG0 c11-2
                                                             :ARG1 (c11-0 / rally-01)
                                                             :polarity -)))
                     :ARG2 (c11-4 / here)))

# ::snt I love my Wheaties too but where are all the books that should be on the bookshelves Utah
# ::tokens ["I", "love", "my", "Wheaties", "too", "but", "where", "are", "all", "the", "books", "that", "should", "be", "on", "the", "bookshelves", "Utah"]
# ::lemmas ["i", "love", "my", "wheatie", "too", "but", "where", "be", "all", "the", "book", "that", "should", "be", "on", "the", "bookshelf", "Utah"]
(c12-3 / contrast-01
       :ARG1 (c12-8 / love-01
                    :ARG0 (c12-10 / i)
                    :ARG1 (c12-4 / product
                                 :name (c12-9 / name
                                              :op1 "Wheaties")
                                 :poss c12-10)
                    :mod (c12-6 / too))
       :ARG2 (c12-11 / be-located-at-91
                     :ARG1 (c12-0 / book
                                  :mod (c12-7 / all)
                                  :ARG1-of (c12-1 / recommend-01))
                     :ARG2 (c12-5 / amr-unknown)
                     :location (c12-2 / bookhelves)))

# ::snt why Too much time on your hands
# ::tokens ["why", "Too", "much", "time", "on", "your", "hands"]
# ::lemmas ["why", "too", "much", "time", "on", "your", "hand"]
(c13-1 / cause-01
       :ARG0 (c13-3 / amr-unknown)
       :ARG1 (c13-0 / on-hands-15
                    :ARG1 (c13-2 / time
                                 :ARG1-of (c13-4 / have-quant-91
                                                 :ARG2 (c13-5 / much)
                                                 :ARG3 (c13-6 / too)))
                    :ARG2 (c13-7 / you)))

# ::snt This is everything
# ::tokens ["This", "is", "everything"]
# ::lemmas ["this", "be", "everything"]
(c14-0 / everything
       :domain (c14-1 / this))

# ::snt I donâ€™t understand the purpose of your video is it supposed to be funny I thought the real ad was well done
# ::tokens ["I", "do", "n\u2019t", "understand", "the", "purpose", "of", "your", "video", "is", "it", "supposed", "to", "be", "funny", "I", "thought", "the", "real", "ad", "was", "well", "done"]
# ::lemmas ["i", "do", "not", "understand", "the", "purpose", "of", "your", "video", "be", "it", "suppose", "to", "be", "funny", "i", "think", "the", "real", "ad", "be", "well", "do"]
(c15-11 / multi-sentence
        :snt1 (c15-4 / understand-01
                     :ARG0 (c15-12 / i)
                     :ARG1 (c15-3 / purpose
                                  :poss (c15-6 / video
                                               :poss (c15-13 / you))
                                  :ARG2-of (c15-10 / suppose-02
                                                   :ARG1 (c15-9 / funny-02
                                                                :ARG1 c15-6)))
                     :polarity -)
        :snt2 (c15-5 / think-01
                     :ARG0 (c15-0 / i)
                     :ARG1 (c15-2 / do-02
                                  :ARG1 (c15-8 / advertise-01
                                               :ARG1-of (c15-1 / real-04))
                                  :ARG1-of (c15-7 / well-09))))

# ::snt Absolutely brilliant Like Iâ€™m legitimate jealous I didnâ€™t think of it myself
# ::tokens ["Absolutely", "brilliant", "Like", "I", "\u2019m", "legitimate", "jealous", "I", "did", "n\u2019t", "think", "of", "it", "myself"]
# ::lemmas ["absolutely", "brilliant", "like", "i", "be", "legitimate", "jealous", "i", "do", "not", "think", "of", "it", "myself"]
(c16-0 / brilliant-01
       :degree (c16-5 / absolute)
       :ARG1-of (c16-1 / resemble-01
                       :ARG2 (c16-8 / jealous-02
                                    :ARG0 (c16-7 / i)
                                    :ARG1-of (c16-6 / legitimate-02)))
       :ARG0-of (c16-3 / cause-01
                       :ARG1 (c16-4 / think-01
                                    :ARG0 c16-7
                                    :ARG1 (c16-2 / it)
                                    :polarity -)))

# ::snt I needed this
# ::tokens ["I", "needed", "this"]
# ::lemmas ["i", "need", "this"]
(c17-0 / need-01
       :ARG0 (c17-1 / i)
       :ARG1 (c17-2 / this))

# ::snt Too bad he dislikes Trump I am afraid he will be another McCain
# ::tokens ["Too", "bad", "he", "dislikes", "Trump", "I", "am", "afraid", "he", "will", "be", "another", "McCain"]
# ::lemmas ["too", "bad", "he", "dislike", "Trump", "i", "be", "afraid", "he", "will", "be", "another", "McCain"]
(c18-7 / and
       :op1 (c18-12 / bad-07
                    :ARG1 (c18-1 / dislike-01
                                 :ARG0 (c18-9 / he)
                                 :ARG1 (c18-2 / person
                                              :name (c18-10 / name
                                                            :op1 "Trump")))
                    :ARG2-of (c18-4 / have-degree-91
                                    :ARG1 c18-1
                                    :ARG3 (c18-6 / too)))
       :op2 (c18-8 / fear-01
                   :ARG0 (c18-11 / i)
                   :ARG1 (c18-0 / person
                                :name (c18-3 / name
                                             :op1 "McCain")
                                :mod (c18-5 / another)
                                :domain c18-9)))

# ::snt otiose94 And we didnt hear one Rudd in the 1st video or a negative comment towards anyone I need help here whats the connection Les
# ::tokens ["otiose94", "And", "we", "did", "nt", "hear", "one", "Rudd", "in", "the", "1st", "video", "or", "a", "negative", "comment", "towards", "anyone", "I", "need", "help", "here", "what", "s", "the", "connection", "Les"]
# ::lemmas ["otiose94", "and", "we", "do", "not", "hear", "one", "Rudd", "in", "the", "1st", "video", "or", "a", "negative", "comment", "towards", "anyone", "i", "need", "help", "here", "what", "s", "the", "connection", "Les"]
(c19-13 / multi-sentence
        :snt1 (c19-2 / person
                     :name (c19-20 / name
                                   :op1 "otiose94"))
        :snt2 (c19-18 / and
                      :op2 (c19-10 / hear-01
                                   :ARG0 (c19-3 / we)
                                   :ARG1 (c19-0 / or
                                                :op1 (c19-5 / person
                                                            :name (c19-8 / name
                                                                         :op1 "Rudd"))
                                                :op2 (c19-7 / comment-01
                                                            :ARG0 c19-5
                                                            :ARG3 (c19-12 / anyone)
                                                            :ARG0-of (c19-1 / negative-03)))
                                   :location (c19-16 / video
                                                     :ord (c19-15 / ordinal-entity
                                                                  :value 1))
                                   :polarity -))
        :snt3 (c19-19 / say-01
                      :ARG0 (c19-4 / i)
                      :ARG1 (c19-6 / need-01
                                   :ARG0 c19-4
                                   :ARG1 (c19-9 / help-01
                                                :ARG2 c19-4)
                                   :location (c19-11 / here))
                      :ARG2 (c19-14 / person
                                    :name (c19-17 / name
                                                  :op1 "Les"))))

# ::snt WriteInLutherStrange
# ::tokens ["WriteInLutherStrange"]
# ::lemmas ["writeinlutherstrange"]
(c20-3 / write-01
       :ARG0 (c20-0 / you)
       :ARG2 (c20-1 / person
                    :name (c20-2 / name
                                 :op1 "WriteInLutherStrange")))

# ::snt also from mid2012 Even earned a specific complaint from Norquist
# ::tokens ["also", "from", "mid2012", "Even", "earned", "a", "specific", "complaint", "from", "Norquist"]
# ::lemmas ["also", "from", "mid2012", "Even", "earn", "a", "specific", "complaint", "from", "Norquist"]
(c21-1 / earn-01
       :ARG1 (c21-3 / complain-01
                    :ARG0 (c21-2 / person
                                 :name (c21-8 / name
                                              :op1 "Norquist"))
                    :ARG1-of (c21-6 / specific-02))
       :ARG3 c21-2
       :time (c21-7 / mid
                    :op1 (c21-0 / date-entity
                                :year 2012))
       :mod (c21-5 / even)
       :mod (c21-4 / also))

# ::snt BrennerRadio dont tell dasbootstrap s dad Hell lose it
# ::tokens ["BrennerRadio", "do", "nt", "tell", "dasbootstrap", "s", "dad", "Hell", "lose", "it"]
# ::lemmas ["BrennerRadio", "do", "not", "tell", "dasbootstrap", "s", "dad", "Hell", "lose", "it"]
(c22-6 / tell-01
       :ARG0 (c22-3 / person
                    :name (c22-9 / name
                                 :op1 "BrennerRadio"))
       :ARG1 (c22-7 / lose-02
                    :ARG0 (c22-1 / person
                                 :ARG0-of (c22-8 / have-rel-role-91
                                                 :ARG1 c22-3
                                                 :ARG2 (c22-2 / dad)))
                    :ARG1 (c22-10 / it)
                    :mod (c22-5 / hell))
       :ARG2 (c22-0 / person
                    :name (c22-4 / name
                                 :op1 "Dasbootstrap"))
       :polarity -)

# ::snt cantcu of Sandy money while people on the beach in NJ have been in trailers for a year
# ::tokens ["cantcu", "of", "Sandy", "money", "while", "people", "on", "the", "beach", "in", "NJ", "have", "been", "in", "trailers", "for", "a", "year"]
# ::lemmas ["cantcu", "of", "Sandy", "money", "while", "people", "on", "the", "beach", "in", "NJ", "have", "be", "in", "trailer", "for", "a", "year"]
(c23-11 / be-temporally-at-91
        :ARG1 (c23-3 / cantcu
                     :topic (c23-9 / money
                                   :mod (c23-10 / natural-disaster
                                                :name (c23-4 / name
                                                             :op1 "Sandy"))))
        :ARG2 (c23-0 / be-located-at-91
                     :ARG1 (c23-5 / person
                                  :location (c23-1 / beach
                                                   :location (c23-8 / state
                                                                    :name (c23-2 / name
                                                                                 :op1 "New"
                                                                                 :op2 "Jersey"))))
                     :ARG2 (c23-7 / trailer)
                     :duration (c23-6 / temporal-quantity
                                      :unit (c23-12 / year)
                                      :quant 1)))

# ::snt Ayeote could be Ayotte Peyote Fayette Payette Layette or Anette
# ::tokens ["Ayeote", "could", "be", "Ayotte", "Peyote", "Fayette", "Payette", "Layette", "or", "Anette"]
# ::lemmas ["ayeote", "could", "be", "Ayotte", "Peyote", "Fayette", "Payette", "Layette", "or", "Anette"]
(c24-2 / possible-01
       :ARG1 (c24-1 / person
                    :name (c24-4 / name
                                 :op1 "Ayotte"
                                 :op2 "Peyote"
                                 :op3 "Fayette"
                                 :op4 "Payette"
                                 :op5 "Layette")
                    :domain (c24-0 / person
                                   :name (c24-3 / name
                                                :op1 "Ayeote"))))

# ::snt  which contrasts the white senior citizen Medicare recipient with the racialized ie black threat of Obamacare
# ::tokens [" ", "which", "contrasts", "the", "white", "senior", "citizen", "Medicare", "recipient", "with", "the", "racialized", "ie", "black", "threat", "of", "Obamacare"]
# ::lemmas [" ", "which", "contrast", "the", "white", "senior", "citizen", "Medicare", "recipient", "with", "the", "racialize", "ie", "black", "threat", "of", "Obamacare"]
(c25-2 / contrast-01
       :ARG1 (c25-3 / person
                    :ARG0-of (c25-0 / receive-01
                                    :ARG1 (c25-1 / program
                                                 :name (c25-11 / name
                                                               :op1 "Medicare")))
                    :ARG1-of (c25-6 / white-02)
                    :mod (c25-8 / citizen
                                :mod (c25-9 / senior)))
       :ARG2 (c25-5 / threaten-01
                    :ARG0 (c25-10 / law
                                  :name (c25-4 / name
                                               :op1 "Obamacare"))
                    :ARG1-of (c25-12 / black-05)
                    :ARG1-of (c25-7 / racialize-01)))

# ::snt xfranman rokncrackerjack Witty No its about bridges and gates Cut by unknown folks in FL sunnily enough
# ::tokens ["xfranman", "rokncrackerjack", "Witty", "No", "its", "about", "bridges", "and", "gates", "Cut", "by", "unknown", "folks", "in", "FL", "sunnily", "enough"]
# ::lemmas ["xfranman", "rokncrackerjack", "Witty", "no", "its", "about", "bridge", "and", "gate", "Cut", "by", "unknown", "folk", "in", "FL", "sunnily", "enough"]
(c26-11 / multi-sentence
        :snt1 (c26-10 / say-01
                      :ARG0 (c26-2 / person
                                   :name (c26-15 / name
                                                 :op1 "xfranman"))
                      :ARG1 (c26-3 / concern-02
                                   :ARG0 (c26-16 / it)
                                   :ARG1 (c26-8 / and
                                                :op1 (c26-17 / bridge)
                                                :op2 (c26-13 / gate)))
                      :ARG2 (c26-0 / person
                                   :name (c26-4 / name
                                                :op1 "Witty")))
        :snt2 (c26-12 / cut-01
                      :ARG0 (c26-9 / folk
                                   :ARG1-of (c26-14 / know-01
                                                    :polarity -)
                                   :location (c26-7 / state
                                                    :name (c26-1 / name
                                                                 :op1 "Florida")))
                      :manner (c26-6 / sunny
                                     :ARG2-of (c26-18 / have-degree-91
                                                      :ARG1 c26-12
                                                      :ARG3 (c26-5 / enough)))))

# ::snt He doesnt need to spend any money on his campaign Hes running in an R99 state
# ::tokens ["He", "does", "nt", "need", "to", "spend", "any", "money", "on", "his", "campaign", "He", "s", "running", "in", "an", "R99", "state"]
# ::lemmas ["he", "do", "not", "need", "to", "spend", "any", "money", "on", "his", "campaign", "he", "s", "run", "in", "an", "R99", "state"]
(c27-9 / multi-sentence
       :snt1 (c27-10 / need-01
                     :ARG0 (c27-8 / he)
                     :ARG1 (c27-7 / spend-01
                                  :ARG0 c27-8
                                  :ARG1 (c27-2 / campaign-01
                                               :ARG0 c27-8)
                                  :ARG3 (c27-1 / money
                                               :mod (c27-6 / any)))
                     :polarity -)
       :snt2 (c27-0 / run-02
                    :ARG0 (c27-4 / he)
                    :location (c27-5 / state
                                     :mod (c27-11 / monetary-quantity
                                                  :unit (c27-3 / pound)
                                                  :quant 99))))

# ::snt As far as U know
# ::tokens ["As", "far", "as", "U", "know"]
# ::lemmas ["as", "far", "as", "u", "know"]
(c28-0 / as-far-as
       :op1 (c28-3 / know-01
                   :ARG0 (c28-1 / person
                                :name (c28-2 / name
                                             :op1 "U"))))

# ::snt But does he really have to  He has like a 985 chance of winning this  Utahans love him
# ::tokens ["But", "does", "he", "really", "have", "to", " ", "He", "has", "like", "a", "985", "chance", "of", "winning", "this", " ", "Utahans", "love", "him"]
# ::lemmas ["but", "do", "he", "really", "have", "to", " ", "he", "have", "like", "a", "985", "chance", "of", "win", "this", " ", "Utahans", "love", "him"]
(c29-12 / multi-sentence
        :snt1 (c29-2 / contrast-01
                     :ARG2 (c29-0 / obligate-01
                                  :polarity (c29-8 / amr-unknown)
                                  :ARG1 (c29-11 / he)
                                  :ARG1-of (c29-1 / real-04)))
        :snt2 (c29-10 / chance-02
                      :ARG0 (c29-4 / he)
                      :ARG1 (c29-7 / win-01
                                   :ARG0 c29-4)
                      :ARG2 (c29-6 / thing
                                   :quant 985)
                      :ARG1-of (c29-9 / resemble-01))
        :snt3 (c29-13 / love-01
                      :ARG0 (c29-3 / person
                                   :mod (c29-14 / state
                                                :name (c29-15 / name
                                                              :op1 "Utah")))
                      :ARG1 (c29-5 / he)))

# ::snt Uh he doesnâ€™t even have to campaign Itâ€™s a slam dunk Who would run against him
# ::tokens ["Uh", "he", "does", "n\u2019t", "even", "have", "to", "campaign", "It", "\u2019s", "a", "slam", "dunk", "Who", "would", "run", "against", "him"]
# ::lemmas ["uh", "he", "do", "not", "even", "have", "to", "campaign", "it", "\u2019", "a", "slam", "dunk", "who", "would", "run", "against", "him"]
(c30-10 / multi-sentence
        :snt1 (c30-0 / obligate-01
                     :ARG1 (c30-9 / he)
                     :ARG2 (c30-4 / campaign-01
                                  :ARG0 c30-9)
                     :mod (c30-3 / even)
                     :mod (c30-5 / uh
                                 :mode expressive)
                     :polarity -)
        :snt2 (c30-2 / dunk-02
                     :mod (c30-8 / slam-02))
        :snt3 (c30-7 / amr-unknown
                     :ARG0-of (c30-1 / run-02
                                     :prep-against (c30-6 / he))))

# ::snt You donâ€™t know Utah he already won
# ::tokens ["You", "do", "n\u2019t", "know", "Utah", "he", "already", "won"]
# ::lemmas ["you", "do", "not", "know", "Utah", "he", "already", "win"]
(c31-2 / know-01
       :ARG0 (c31-6 / you)
       :ARG1 (c31-0 / win-01
                    :ARG0 (c31-3 / he)
                    :time (c31-1 / already)
                    :location (c31-4 / state
                                     :name (c31-5 / name
                                                  :op1 "Utah")))
       :polarity -)

# ::snt Please Utah no Romney
# ::tokens ["Please", "Utah", "no", "Romney"]
# ::lemmas ["please", "Utah", "no", "Romney"]
(c32-0 / person
       :name (c32-1 / name
                    :op1 "Romney")
       :location (c32-3 / state
                        :name (c32-2 / name
                                     :op1 "Utah"))
       :polarity -
       :polite +)

# ::snt What does it say about Utah if a Californian who was raised in Michigan was governor of Massachusetts is only one they can find to be their representative in US Senate
# ::tokens ["What", "does", "it", "say", "about", "Utah", "if", "a", "Californian", "who", "was", "raised", "in", "Michigan", "was", "governor", "of", "Massachusetts", "is", "only", "one", "they", "can", "find", "to", "be", "their", "representative", "in", "US", "Senate"]
# ::lemmas ["what", "do", "it", "say", "about", "Utah", "if", "a", "Californian", "who", "be", "raise", "in", "Michigan", "be", "governor", "of", "Massachusetts", "be", "only", "one", "they", "can", "find", "to", "be", "their", "representative", "in", "US", "Senate"]
(c33-21 / say-01
        :ARG0 (c33-4 / it)
        :ARG1 (c33-19 / amr-unknown)
        :ARG3 (c33-15 / state
                      :name (c33-12 / name
                                    :op1 "Utah"))
        :condition (c33-3 / person
                          :mod (c33-17 / state
                                       :name (c33-8 / name
                                                    :op1 "California"))
                          :ARG1-of (c33-1 / raise-03
                                          :location (c33-16 / state
                                                            :name (c33-2 / name
                                                                         :op1 "Michigan")))
                          :ARG0-of (c33-11 / have-org-role-91
                                           :ARG1 (c33-10 / state
                                                         :name (c33-6 / name
                                                                      :op1 "Massachusetts"))
                                           :ARG2 (c33-23 / governor))
                          :mod (c33-0 / only)
                          :ARG1-of (c33-20 / find-01
                                           :ARG0 (c33-14 / they)
                                           :ARG1-of (c33-5 / possible-01))
                          :ARG0-of (c33-9 / represent-01
                                          :ARG1 c33-14
                                          :location (c33-13 / government-organization
                                                            :name (c33-18 / name
                                                                          :op1 "Senate")
                                                            :mod (c33-7 / country
                                                                        :name (c33-22 / name
                                                                                      :op1 "US"))))))

# ::snt Solid campaign advice Youre spot on
# ::tokens ["Solid", "campaign", "advice", "You", "re", "spot", "on"]
# ::lemmas ["solid", "campaign", "advice", "you", "be", "spot", "on"]
(c34-3 / and
       :op1 (c34-1 / advice
                   :mod (c34-0 / campaign-01)
                   :ARG1-of (c34-4 / solid-02))
       :op2 (c34-2 / spot-on
                   :domain (c34-5 / you)))

# ::snt and he should
# ::tokens ["and", "he", "should"]
# ::lemmas ["and", "he", "should"]
(c35-0 / and
       :op2 (c35-1 / recommend-01
                   :ARG2 (c35-2 / he)))

# ::snt Might be his best chance actually
# ::tokens ["Might", "be", "his", "best", "chance", "actually"]
# ::lemmas ["may", "be", "his", "good", "chance", "actually"]
(c36-0 / possible-01
       :ARG1 (c36-1 / chance-02
                    :ARG0 (c36-4 / he)
                    :ARG1-of (c36-2 / have-degree-91
                                    :ARG2 (c36-6 / good-02
                                                 :ARG1 c36-1)
                                    :ARG3 (c36-5 / most)))
       :ARG1-of (c36-3 / actual-02))

# ::snt Romney could hide out and do nothing for the next six months and he will be elected the next senator of Utah in a landslide
# ::tokens ["Romney", "could", "hide", "out", "and", "do", "nothing", "for", "the", "next", "six", "months", "and", "he", "will", "be", "elected", "the", "next", "senator", "of", "Utah", "in", "a", "landslide"]
# ::lemmas ["romney", "could", "hide", "out", "and", "do", "nothing", "for", "the", "next", "six", "months", "and", "he", "will", "be", "elect", "the", "next", "senator", "of", "Utah", "in", "a", "landslide"]
(c37-10 / and
        :op1 (c37-3 / possible-01
                    :ARG1 (c37-6 / and
                                 :op1 (c37-13 / hide-01
                                              :ARG0 (c37-0 / person
                                                           :name (c37-16 / name
                                                                         :op1 "Romney")))
                                 :op2 (c37-2 / do-02
                                             :ARG0 c37-0
                                             :ARG1 (c37-4 / nothing))
                                 :time (c37-17 / after
                                               :op1 (c37-1 / now)
                                               :duration (c37-7 / temporal-quantity
                                                                :unit (c37-14 / month)
                                                                :quant 6))))
        :op2 (c37-5 / elect-01
                    :ARG1 c37-0
                    :ARG2 (c37-12 / senator
                                  :mod (c37-8 / next)
                                  :location (c37-9 / state
                                                   :name (c37-11 / name
                                                                 :op1 "Utah")))
                    :manner (c37-15 / landslide)))

# ::snt ChavezChavis and a shameless liar too
# ::tokens ["ChavezChavis", "and", "a", "shameless", "liar", "too"]
# ::lemmas ["ChavezChavis", "and", "a", "shameless", "liar", "too"]
(c38-3 / and
       :op1 (c38-1 / person
                   :name (c38-6 / name
                                :op1 "ChavezChavis"))
       :op2 (c38-0 / person
                   :ARG0-of (c38-5 / lie-08)
                   :ARG0-of (c38-4 / shame-02
                                   :polarity -)
                   :mod (c38-2 / too)))

# ::snt I was just trying to point out to Brax6Jackson that it isnt only Trump
# ::tokens ["I", "was", "just", "trying", "to", "point", "out", "to", "Brax6Jackson", "that", "it", "is", "nt", "only", "Trump"]
# ::lemmas ["i", "be", "just", "try", "to", "point", "out", "to", "Brax6Jackson", "that", "it", "be", "not", "only", "trump"]
(c39-6 / try-01
       :ARG0 (c39-8 / i)
       :ARG1 (c39-4 / point-out-02
                    :ARG0 c39-8
                    :ARG1 (c39-2 / person
                                 :name (c39-7 / name
                                              :op1 "Trump")
                                 :domain (c39-3 / it)
                                 :mod (c39-0 / only
                                             :polarity -))
                    :ARG2 (c39-1 / person
                                 :name (c39-5 / name
                                              :op1 "Brax6Jackson")))
       :mod (c39-9 / just))

# ::snt TV and radio advertisements are an entirely different set of issues from a song being played at a rally  If the campaigns got in trouble for using copyrighted material it was from the venue not having a license Artists not liking a candidate isnt copyright infringement
# ::tokens ["TV", "and", "radio", "advertisements", "are", "an", "entirely", "different", "set", "of", "issues", "from", "a", "song", "being", "played", "at", "a", "rally", " ", "If", "the", "campaigns", "got", "in", "trouble", "for", "using", "copyrighted", "material", "it", "was", "from", "the", "venue", "not", "having", "a", "license", "Artists", "not", "liking", "a", "candidate", "is", "nt", "copyright", "infringement"]
# ::lemmas ["tv", "and", "radio", "advertisement", "be", "an", "entirely", "different", "set", "of", "issue", "from", "a", "song", "be", "play", "at", "a", "rally", " ", "if", "the", "campaign", "get", "in", "trouble", "for", "use", "copyright", "material", "it", "be", "from", "the", "venue", "not", "have", "a", "license", "Artists", "not", "like", "a", "candidate", "be", "not", "copyright", "infringement"]
(c40-19 / multi-sentence
        :snt1 (c40-23 / differ-02
                      :ARG1 (c40-27 / set
                                    :consist-of (c40-6 / issue-02)
                                    :domain (c40-25 / and
                                                    :op1 (c40-16 / advertise-01
                                                                 :medium (c40-17 / television))
                                                    :op2 (c40-22 / advertise-01
                                                                 :medium (c40-0 / radio))))
                      :ARG2 (c40-18 / song
                                    :ARG1-of (c40-3 / play-11
                                                    :location (c40-11 / rally-01)))
                      :degree (c40-4 / entire))
        :snt2 (c40-13 / have-condition-91
                      :ARG1 (c40-21 / be-from-91
                                    :ARG1 (c40-15 / in-trouble-02
                                                  :ARG1 (c40-8 / campaign-01)
                                                  :ARG2 (c40-5 / use-01
                                                               :ARG0 c40-8
                                                               :ARG1 (c40-2 / material
                                                                            :ARG1-of (c40-28 / copyright-01)))
                                                  :ARG1-of (c40-1 / cause-01
                                                                  :ARG0 (c40-9 / have-03
                                                                               :ARG0 (c40-24 / venue)
                                                                               :ARG1 (c40-20 / license-01
                                                                                             :ARG1 c40-2)
                                                                               :polarity -)))
                                    :ARG2 (c40-26 / dislike-01
                                                  :ARG0 (c40-7 / artist)
                                                  :ARG1 (c40-12 / candidate)))
                      :ARG2 (c40-14 / infringe-01
                                    :ARG1 (c40-10 / copyright-01)
                                    :polarity -)))

# ::snt You ByronYork mean Romney dont bring up Benghazi strategist stuartpstevens has an idea
# ::tokens ["You", "ByronYork", "mean", "Romney", "do", "nt", "bring", "up", "Benghazi", "strategist", "stuartpstevens", "has", "an", "idea"]
# ::lemmas ["you", "ByronYork", "mean", "Romney", "do", "not", "bring", "up", "Benghazi", "strategist", "stuartpstevens", "have", "an", "idea"]
(c41-9 / say-01
       :ARG0 (c41-13 / i)
       :ARG1 (c41-10 / mean-01
                     :ARG0 (c41-5 / person
                                  :name (c41-12 / name
                                                :op1 "ByronYork"))
                     :ARG2 (c41-14 / bring-up-02
                                   :ARG0 (c41-1 / person
                                                :name (c41-6 / name
                                                             :op1 "Romney"))
                                   :ARG1 (c41-11 / have-03
                                                 :ARG0 (c41-0 / person
                                                              :name (c41-3 / name
                                                                           :op1 "Stuart"
                                                                           :op2 "Pstevens")
                                                              :ARG0-of (c41-8 / strategize-01
                                                                              :location (c41-7 / city
                                                                                               :name (c41-4 / name
                                                                                                            :op1 "Benghazi"))))
                                                 :ARG1 (c41-2 / idea))
                                   :polarity -))
       :ARG2 c41-1)

# ::snt ByronYork stuartpstevens And a Romney strategist would know of course with their winning strategy
# ::tokens ["ByronYork", "stuartpstevens", "And", "a", "Romney", "strategist", "would", "know", "of", "course", "with", "their", "winning", "strategy"]
# ::lemmas ["ByronYork", "stuartpsteven", "and", "a", "Romney", "strategist", "would", "know", "of", "course", "with", "their", "win", "strategy"]
(c42-7 / and
       :op1 (c42-11 / byronYork
                    :op1 (c42-3 / person
                                :name (c42-10 / name
                                              :op1 "Stuartpstevens")))
       :op2 (c42-8 / know-01
                   :ARG0 (c42-2 / person
                                :ARG0-of (c42-9 / strategize-01)
                                :mod (c42-1 / person
                                            :name (c42-4 / name
                                                         :op1 "Romney")))
                   :ARG1 (c42-6 / strategy
                                :mod (c42-5 / win-01)
                                :poss c42-2)
                   :mod (c42-0 / of-course)))

# ::snt ByronYork stuartpstevens Lol  Dream on  Now we know why Romney lost  Thank God he did
# ::tokens ["ByronYork", "stuartpstevens", "Lol", " ", "Dream", "on", " ", "Now", "we", "know", "why", "Romney", "lost", " ", "Thank", "God", "he", "did"]
# ::lemmas ["ByronYork", "stuartpsteven", "Lol", " ", "Dream", "on", " ", "now", "we", "know", "why", "Romney", "lose", " ", "thank", "God", "he", "do"]
(c43-12 / multi-sentence
        :snt1 (c43-17 / byronYork
                      :ARG1-of (c43-11 / say-01
                                       :ARG2 (c43-4 / person
                                                    :name (c43-15 / name
                                                                  :op1 "ByronYork"
                                                                  :op2 "Stuartpstevens"))))
        :snt2 (c43-3 / dream-01
                     :ARG0 (c43-18 / you)
                     :mode imperative)
        :snt3 (c43-13 / know-01
                      :ARG0 (c43-9 / we)
                      :ARG1 (c43-8 / thing
                                   :ARG0-of (c43-5 / cause-01
                                                   :ARG1 (c43-14 / lose-03
                                                                 :ARG0 (c43-1 / person
                                                                              :name (c43-6 / name
                                                                                           :op1 "Romney")))))
                      :time (c43-2 / now))
        :snt4 (c43-7 / thank-01
                     :ARG0 (c43-16 / i)
                     :ARG1 (c43-0 / person
                                  :name (c43-10 / name
                                                :op1 "God"))))

# ::snt ByronYork stuartpstevens I dont agree  it fuels their fire
# ::tokens ["ByronYork", "stuartpstevens", "I", "do", "nt", "agree", " ", "it", "fuels", "their", "fire"]
# ::lemmas ["ByronYork", "stuartpsteven", "i", "do", "not", "agree", " ", "it", "fuel", "their", "fire"]
(c44-6 / say-01
       :ARG0 (c44-8 / i)
       :ARG1 (c44-4 / agree-01
                    :ARG0 c44-8
                    :ARG1 (c44-5 / fuel-01
                                 :ARG0 (c44-0 / it)
                                 :ARG1 (c44-1 / fire
                                              :poss (c44-3 / they)))
                    :polarity -)
       :ARG2 (c44-2 / person
                    :name (c44-7 / name
                                 :op1 "ByronYork"
                                 :op2 "Stuartpstevens")))

# ::snt ByronYork stuartpstevens Trump got Tahmoreesi back Obam got Bergdahl back HRC did nothing and other GOPers did nothing  Got it
# ::tokens ["ByronYork", "stuartpstevens", "Trump", "got", "Tahmoreesi", "back", "Obam", "got", "Bergdahl", "back", "HRC", "did", "nothing", "and", "other", "GOPers", "did", "nothing", " ", "Got", "it"]
# ::lemmas ["ByronYork", "stuartpsteven", "Trump", "get", "Tahmoreesi", "back", "Obam", "get", "Bergdahl", "back", "HRC", "do", "nothing", "and", "other", "GOPers", "do", "nothing", " ", "got", "it"]
(c45-22 / say-01
        :ARG0 (c45-2 / person
                     :name (c45-12 / name
                                   :op1 "ByronYork"
                                   :op2 "Stuartpstevens"))
        :ARG1 (c45-20 / and
                      :op1 (c45-25 / get-back-09
                                   :ARG0 (c45-5 / person
                                                :name (c45-9 / name
                                                             :op1 "Trump"))
                                   :ARG1 (c45-16 / person
                                                 :name (c45-1 / name
                                                              :op1 "Tahmoreesi")))
                      :op2 (c45-14 / get-back-09
                                   :ARG0 (c45-15 / person
                                                 :name (c45-8 / name
                                                              :op1 "Obama"))
                                   :ARG1 (c45-13 / person
                                                 :name (c45-19 / name
                                                               :op1 "Bergdahl")))
                      :op3 (c45-18 / do-02
                                   :ARG0 (c45-0 / organization
                                                :name (c45-23 / name
                                                              :op1 "HRC"))
                                   :ARG1 (c45-24 / nothing))
                      :op4 (c45-21 / do-02
                                   :ARG0 (c45-6 / person
                                                :ARG0-of (c45-11 / have-org-role-91
                                                                 :ARG1 (c45-3 / political-party
                                                                              :name (c45-10 / name
                                                                                            :op1 "GOP")))
                                                :mod (c45-17 / other))
                                   :ARG1 c45-24)
                      :op5 (c45-7 / get-back-09
                                  :ARG0 c45-6
                                  :ARG1 (c45-4 / it))))

# ::snt ByronYork stuartpstevens Some Trump supporters dont care theyll vote for him but there are alot of people who still care about honesty
# ::tokens ["ByronYork", "stuartpstevens", "Some", "Trump", "supporters", "do", "nt", "care", "they", "ll", "vote", "for", "him", "but", "there", "are", "alot", "of", "people", "who", "still", "care", "about", "honesty"]
# ::lemmas ["ByronYork", "stuartpsteven", "some", "Trump", "supporter", "do", "not", "care", "they", "will", "vote", "for", "him", "but", "there", "be", "alot", "of", "people", "who", "still", "care", "about", "honesty"]
(c46-9 / say-01
       :ARG0 (c46-3 / person
                    :name (c46-14 / name
                                  :op1 "ByronYork"
                                  :op2 "Stuartpstevens"))
       :ARG1 (c46-4 / contrast-01
                    :ARG1 (c46-10 / care-01
                                  :ARG0 (c46-1 / person
                                               :ARG0-of (c46-7 / support-01
                                                               :ARG1 (c46-0 / person
                                                                            :name (c46-5 / name
                                                                                         :op1 "Trump")))
                                               :quant (c46-6 / some))
                                  :ARG1 (c46-8 / vote-01
                                               :ARG0 c46-1
                                               :ARG1 c46-0)
                                  :polarity -)
                    :ARG2 (c46-2 / care-01
                                 :ARG0 (c46-12 / person
                                               :quant (c46-11 / lot))
                                 :ARG1 (c46-13 / honesty)
                                 :mod (c46-15 / still))))

# ::snt GOPers are so out of touch ByronYork stuartpstevens
# ::tokens ["GOPers", "are", "so", "out", "of", "touch", "ByronYork", "stuartpstevens"]
# ::lemmas ["GOPers", "be", "so", "out", "of", "touch", "ByronYork", "stuartpsteven"]
(c47-6 / say-01
       :ARG0 (c47-10 / i)
       :ARG1 (c47-1 / in-touch-11
                    :ARG1 (c47-3 / person
                                 :ARG0-of (c47-7 / have-org-role-91
                                                 :ARG1 (c47-2 / political-party
                                                              :name (c47-9 / name
                                                                           :op1 "GOP"))
                                                 :ARG2 (c47-8 / member)))
                    :degree (c47-5 / so)
                    :polarity -)
       :ARG2 (c47-0 / person
                    :name (c47-4 / name
                                 :op1 "ByronYork")))

# ::snt ByronYork stuartpstevens Spend your money Stew but why
# ::tokens ["ByronYork", "stuartpstevens", "Spend", "your", "money", "Stew", "but", "why"]
# ::lemmas ["ByronYork", "stuartpsteven", "spend", "your", "money", "Stew", "but", "why"]
(c48-5 / say-01
       :ARG1 (c48-0 / contrast-01
                    :ARG1 (c48-3 / spend-01
                                 :ARG0 (c48-1 / person
                                              :name (c48-7 / name
                                                           :op1 "ByronYork"
                                                           :op2 "Stuartpstevens"))
                                 :ARG3 (c48-2 / stew
                                              :poss (c48-8 / you)))
                    :ARG2 (c48-4 / amr-unknown
                                 :ARG0-of (c48-6 / cause-01)))
       :ARG2 c48-1)

# ::snt ByronYork stuartpstevens dcexaminer Romney Strategist an Oxymoron if theres Ever Been 1 Wheres my OED or Websters tcot Vote Trump
# ::tokens ["ByronYork", "stuartpstevens", "dcexaminer", "Romney", "Strategist", "an", "Oxymoron", "if", "there", "s", "Ever", "Been", "1", "Where", "s", "my", "OED", "or", "Websters", "tcot", "Vote", "Trump"]
# ::lemmas ["ByronYork", "stuartpsteven", "dcexaminer", "Romney", "Strategist", "an", "Oxymoron", "if", "there", "s", "ever", "Been", "1", "where", "s", "my", "OED", "or", "Websters", "tcot", "Vote", "Trump"]
(c49-2 / person
       :name (c49-20 / name
                     :op1 "ByronYork")
       :ARG0-of (c49-10 / have-org-role-91
                        :ARG1 (c49-7 / newspaper
                                     :name (c49-1 / name
                                                  :op1 "MSNBC"))
                        :ARG2 (c49-5 / person
                                     :ARG0-of (c49-17 / strategize-01
                                                      :ARG1 (c49-13 / person
                                                                    :name (c49-6 / name
                                                                                 :op1 "Romney"))))
                        :ARG0 c49-2)
       :ARG1 (c49-15 / newspaper
                     :name (c49-18 / name
                                   :op1 "Romney"))
       :ARG2 (c49-11 / scotch)
       :ARG0-of (c49-0 / opine-01
                       :ARG1 (c49-8 / have-condition-91
                                    :ARG1 (c49-16 / vote-01
                                                  :ARG0 (c49-14 / or
                                                                :op1 c49-5
                                                                :op2 (c49-19 / newspaper
                                                                             :name (c49-9 / name
                                                                                          :op1 "Webster")))
                                                  :ARG1 (c49-12 / person
                                                                :name (c49-4 / name
                                                                             :op1 "Trump")))
                                    :ARG2 (c49-3 / ever))))

# ::snt ByronYork stuartpstevens dcexaminer but here in South Carolina Im still Voting for Trump MakeAmericaGreatAgain
# ::tokens ["ByronYork", "stuartpstevens", "dcexaminer", "but", "here", "in", "South", "Carolina", "I", "m", "still", "Voting", "for", "Trump", "MakeAmericaGreatAgain"]
# ::lemmas ["ByronYork", "stuartpsteven", "dcexaminer", "but", "here", "in", "South", "Carolina", "i", "be", "still", "vote", "for", "trump", "makeamericagreatagain"]
(c50-2 / contrast-01
       :ARG1 (c50-13 / byronYork
                     :ARG0-of (c50-10 / have-org-role-91
                                      :ARG1 (c50-11 / newspaper
                                                    :name (c50-3 / name
                                                                 :op1 "Stuartpstevens"
                                                                 :op2 "Dcexaminer"))))
       :ARG2 (c50-6 / vote-01
                    :ARG0 (c50-12 / i)
                    :ARG1 (c50-4 / person
                                 :name (c50-0 / name
                                              :op1 "Trump"))
                    :mod (c50-9 / still)
                    :location (c50-5 / here
                                     :location (c50-7 / state
                                                      :name (c50-1 / name
                                                                   :op1 "South"
                                                                   :op2 "Carolina")))
                    :mod (c50-8 / again)))
