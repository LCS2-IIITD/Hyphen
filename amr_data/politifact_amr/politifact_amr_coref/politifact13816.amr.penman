# ::snt Remind me why HillaryClintons emails were big deal Something about using private server for business uses or something  LockHimUp
# ::tokens ["Remind", "me", "why", "HillaryClintons", "emails", "were", "big", "deal", "Something", "about", "using", "private", "server", "for", "business", "uses", "or", "something", " ", "LockHimUp"]
# ::lemmas ["remind", "me", "why", "HillaryClintons", "email", "be", "big", "deal", "something", "about", "use", "private", "server", "for", "business", "use", "or", "something", " ", "lockhimup"]
(c1-1 / remind-01
      :ARG0 (c1-20 / you)
      :ARG1 (c1-10 / thing
                   :ARG0-of (c1-7 / cause-01
                                  :ARG1 (c1-16 / deal-03
                                               :ARG1 (c1-2 / email-01
                                                           :ARG0 (c1-3 / person
                                                                       :name (c1-19 / name
                                                                                    :op1 "Hillary"
                                                                                    :op2 "Clinton")))
                                               :mod (c1-13 / big))))
      :ARG2 (c1-5 / i)
      :topic (c1-0 / or
                   :op1 (c1-18 / something
                               :topic (c1-4 / use-01
                                            :ARG1 (c1-11 / server
                                                         :ARG1-of (c1-6 / private-03))
                                            :ARG2 (c1-9 / use-01
                                                        :ARG1 (c1-15 / business))))
                   :op2 (c1-17 / something)
                   :ARG1-of (c1-12 / mean-01
                                   :ARG2 (c1-14 / product
                                                :name (c1-8 / name
                                                            :op1 "LockHimUp"))))
      :mode imperative)

# ::snt that phone is his is still his personal Android though
# ::tokens ["that", "phone", "is", "his", "is", "still", "his", "personal", "Android", "though"]
# ::lemmas ["that", "phone", "be", "his", "be", "still", "his", "personal", "Android", "though"]
(c2-5 / have-concession-91
      :ARG1 (c2-1 / phone
                  :domain (c2-3 / that)
                  :poss (c2-2 / he)
                  :ARG1-of (c2-0 / personal-02
                                 :ARG2 c2-2
                                 :mod (c2-4 / still))
                  :ARG2-of c2-5))

# ::snt By he uses a littlebitty GalaxyS3 to make his hands look almost adultmansized Itll be his downfall TrumpLeaks
# ::tokens ["By", "he", "uses", "a", "littlebitty", "GalaxyS3", "to", "make", "his", "hands", "look", "almost", "adultmansized", "It", "ll", "be", "his", "downfall", "TrumpLeaks"]
# ::lemmas ["by", "he", "use", "a", "littlebitty", "GalaxyS3", "to", "make", "his", "hand", "look", "almost", "adultmansized", "it", "will", "be", "his", "downfall", "TrumpLeaks"]
(c3-14 / multi-sentence
       :snt1 (c3-2 / cause-01
                   :ARG0 (c3-3 / use-01
                               :ARG0 (c3-13 / he)
                               :ARG1 (c3-4 / product
                                           :name (c3-16 / name
                                                        :op1 "GalaxyS3")
                                           :mod (c3-15 / littlebitty))
                               :ARG2 (c3-1 / make-02
                                           :ARG0 c3-13
                                           :ARG1 (c3-9 / look-02
                                                       :ARG0 (c3-5 / hand
                                                                   :part-of (c3-6 / he))
                                                       :ARG1 (c3-10 / adultize-01
                                                                    :ARG1 c3-5
                                                                    :mod (c3-7 / almost))))))
       :snt2 (c3-12 / fall-05
                    :ARG1 (c3-0 / person
                                :name (c3-8 / name
                                            :op1 "Trump"))
                    :ARG2 (c3-11 / leak-01)))

# ::snt Not saying that Galaxy isnt going to get him in trouble just not this particular fake story sadly
# ::tokens ["Not", "saying", "that", "Galaxy", "is", "nt", "going", "to", "get", "him", "in", "trouble", "just", "not", "this", "particular", "fake", "story", "sadly"]
# ::lemmas ["not", "say", "that", "Galaxy", "be", "not", "go", "to", "get", "him", "in", "trouble", "just", "not", "this", "particular", "fake", "story", "sadly"]
(c4-6 / say-01
      :ARG1 (c4-8 / in-trouble-02
                  :ARG0 (c4-1 / person
                              :name (c4-7 / name
                                          :op1 "Galaxy")
                              :ARG1-of c4-8)
                  :polarity -)
      :ARG0-of (c4-4 / sad-02)
      :concession (c4-3 / story
                        :ARG1-of (c4-5 / fake-02)
                        :mod (c4-0 / particular)
                        :mod (c4-2 / this)
                        :polarity -)
      :polarity -)

# ::snt he still uses an unsecured Galaxys3
# ::tokens ["he", "still", "uses", "an", "unsecured", "Galaxys3"]
# ::lemmas ["he", "still", "use", "an", "unsecured", "Galaxys3"]
(c5-1 / use-01
      :ARG0 (c5-4 / he)
      :ARG1 (c5-0 / product
                  :name (c5-5 / name
                              :op1 "Galaxys3")
                  :ARG1-of (c5-3 / secure-02
                                 :polarity -))
      :mod (c5-2 / still))

# ::snt Just FYI according to httpsnopescom  this is a fake story and the Seattle Tribune is a parody news site Too bad
# ::tokens ["Just", "FYI", "according", "to", "httpsnopescom", " ", "this", "is", "a", "fake", "story", "and", "the", "Seattle", "Tribune", "is", "a", "parody", "news", "site", "Too", "bad"]
# ::lemmas ["just", "FYI", "accord", "to", "httpsnopescom", " ", "this", "be", "a", "fake", "story", "and", "the", "Seattle", "Tribune", "be", "a", "parody", "news", "site", "too", "bad"]
(c6-11 / say-01
       :ARG0 (c6-3 / url-entity
                   :value "httpsnopes.com")
       :ARG1 (c6-9 / and
                   :op1 (c6-8 / story
                              :ARG1-of (c6-10 / fake-02)
                              :domain (c6-6 / this))
                   :op2 (c6-7 / site
                              :mod (c6-13 / news)
                              :ARG1-of (c6-2 / parody-01)
                              :domain (c6-4 / newspaper
                                            :name (c6-0 / name
                                                        :op1 "Seattle"
                                                        :op2 "Tribune"))
                              :ARG1-of (c6-12 / have-degree-91
                                              :ARG2 (c6-15 / bad-07
                                                           :ARG1 c6-7)
                                              :ARG3 (c6-5 / too)))
                   :purpose (c6-14 / inform-01
                                   :ARG1 (c6-16 / you)
                                   :mod (c6-1 / just))))

# ::snt people not from Seattle might not recognise that this is a satire site
# ::tokens ["people", "not", "from", "Seattle", "might", "not", "recognise", "that", "this", "is", "a", "satire", "site"]
# ::lemmas ["people", "not", "from", "Seattle", "may", "not", "recognise", "that", "this", "be", "a", "satire", "site"]
(c7-2 / possible-01
      :ARG1 (c7-1 / recognize-02
                  :ARG0 (c7-0 / person
                              :source (c7-3 / city
                                            :name (c7-7 / name
                                                        :op1 "Seattle")))
                  :ARG1 (c7-6 / site
                              :mod (c7-5 / satire)
                              :domain (c7-4 / this))
                  :polarity -))

# ::snt No no Dont Ditch  Carry on Please
# ::tokens ["No", "no", "Do", "nt", "Ditch", " ", "Carry", "on", "Please"]
# ::lemmas ["no", "no", "do", "not", "ditch", " ", "carry", "on", "please"]
(c8-3 / multi-sentence
      :snt1 (c8-2 / have-polarity-91
                  :ARG2 -)
      :snt2 (c8-1 / carry-on-02
                  :ARG0 (c8-0 / you)
                  :mode imperative
                  :polite +))

# ::snt i know that i shouldnt  laugh but this is both ludicrous  hilarious
# ::tokens ["i", "know", "that", "i", "should", "nt", " ", "laugh", "but", "this", "is", "both", "ludicrous", " ", "hilarious"]
# ::lemmas ["i", "know", "that", "i", "should", "not", " ", "laugh", "but", "this", "be", "both", "ludicrous", " ", "hilarious"]
(c9-1 / contrast-01
      :ARG1 (c9-3 / know-01
                  :ARG0 (c9-6 / i)
                  :ARG1 (c9-0 / recommend-01
                              :ARG1 (c9-4 / laugh-01
                                          :ARG0 c9-6)
                              :polarity -))
      :ARG2 (c9-5 / hilarious
                  :domain (c9-2 / this
                                :mod (c9-7 / both))))

# ::snt Seattle Tribune is a fake newspaper satirical just in case you didnt know
# ::tokens ["Seattle", "Tribune", "is", "a", "fake", "newspaper", "satirical", "just", "in", "case", "you", "did", "nt", "know"]
# ::lemmas ["Seattle", "Tribune", "be", "a", "fake", "newspaper", "satirical", "just", "in", "case", "you", "do", "not", "know"]
(c10-2 / fake-02
       :ARG1 (c10-5 / newspaper
                    :name (c10-1 / name
                                 :op1 "Seattle"
                                 :op2 "Tribune"))
       :ARG3 (c10-3 / satire)
       :ARG1-of (c10-0 / case-04
                       :ARG2 (c10-4 / know-01
                                    :ARG0 (c10-7 / you)
                                    :polarity -)
                       :mod (c10-6 / just)))

# ::snt How is it even legal or ethical that a president has a private unsecured device
# ::tokens ["How", "is", "it", "even", "legal", "or", "ethical", "that", "a", "president", "has", "a", "private", "unsecured", "device"]
# ::lemmas ["how", "be", "it", "even", "legal", "or", "ethical", "that", "a", "president", "have", "a", "private", "unsecured", "device"]
(c11-0 / or
       :op1 (c11-11 / legal-02
                    :ARG1 (c11-10 / have-03
                                  :ARG0 (c11-4 / person
                                               :ARG0-of (c11-6 / have-org-role-91
                                                               :ARG2 (c11-2 / president)))
                                  :ARG1 (c11-3 / device
                                               :ARG1-of (c11-9 / secure-02
                                                               :polarity -)
                                               :ARG1-of (c11-1 / private-02))))
       :op2 (c11-5 / ethics
                   :domain c11-10)
       :mod (c11-8 / even)
       :manner (c11-7 / amr-unknown))

# ::snt OMG I thought this was real Too perfect
# ::tokens ["OMG", "I", "thought", "this", "was", "real", "Too", "perfect"]
# ::lemmas ["OMG", "i", "think", "this", "be", "real", "too", "perfect"]
(c12-3 / think-01
       :ARG0 (c12-6 / i)
       :ARG1 (c12-1 / real-04
                    :ARG1 (c12-7 / this))
       :mod (c12-0 / oh-my-god
                   :mode expressive)
       :ARG2-of (c12-5 / have-degree-91
                       :ARG1 c12-7
                       :ARG3 (c12-4 / too)
                       :ARG6 (c12-2 / perfect-02
                                    :ARG1 c12-7)))

# ::snt hasnt
# ::tokens ["has", "nt"]
# ::lemmas ["have", "not"]
(c13-0 / have-polarity-91
       :ARG2 -)

# ::snt I just got over excited Acted to quick
# ::tokens ["I", "just", "got", "over", "excited", "Acted", "to", "quick"]
# ::lemmas ["i", "just", "get", "over", "excited", "Acted", "to", "quick"]
(c14-2 / and
       :op1 (c14-0 / over-02
                   :ARG1 (c14-4 / i)
                   :ARG2 (c14-1 / excite-01
                                :ARG1 c14-4))
       :op2 (c14-3 / quick-02
                   :ARG1 c14-4)
       :mod (c14-5 / just))

# ::snt Damn snoops says false At least it has been proven yet but lets give it a minute Especially since Pence did business on private EM
# ::tokens ["Damn", "snoops", "says", "false", "At", "least", "it", "has", "been", "proven", "yet", "but", "lets", "give", "it", "a", "minute", "Especially", "since", "Pence", "did", "business", "on", "private", "EM"]
# ::lemmas ["damn", "snoop", "say", "false", "at", "least", "it", "have", "be", "prove", "yet", "but", "let", "give", "it", "a", "minute", "especially", "since", "Pence", "do", "business", "on", "private", "em"]
(c15-14 / multi-sentence
        :snt1 (c15-13 / say-01
                      :ARG0 (c15-9 / snooze
                                   :mod (c15-3 / damn))
                      :ARG1 (c15-12 / false))
        :snt2 (c15-4 / prove-01
                     :ARG1 (c15-17 / it)
                     :time (c15-19 / yet)
                     :concession-of (c15-16 / give-01
                                            :ARG0 (c15-8 / we)
                                            :ARG1 (c15-7 / temporal-quantity
                                                         :unit (c15-2 / minute)
                                                         :quant 1)
                                            :ARG2 c15-9
                                            :ARG1-of (c15-5 / cause-01
                                                            :ARG0 (c15-10 / do-02
                                                                          :ARG0 (c15-1 / person
                                                                                       :name (c15-15 / name
                                                                                                     :op1 "Pervez"))
                                                                          :ARG1 (c15-18 / business
                                                                                        :ARG1-of (c15-0 / private-03)
                                                                                        :mod (c15-6 / energy)))
                                                            :mod (c15-11 / especially))
                                            :mode imperative)
                     :polarity -))

# ::snt Was Trump the LEAK
# ::tokens ["Was", "Trump", "the", "LEAK"]
# ::lemmas ["be", "trump", "the", "LEAK"]
(c16-3 / leak-01
       :ARG0 (c16-1 / person
                    :name (c16-2 / name
                                 :op1 "Trump"))
       :polarity (c16-0 / amr-unknown))

# ::snt httpwwwsnopescomtrumpscellphoneleaks …
# ::tokens ["httpwwwsnopescomtrumpscellphoneleaks", "\u2026"]
# ::lemmas ["httpwwwsnopescomtrumpscellphoneleaks", "\u2026"]
(c17-0 / url-entity
       :value "httpwwwsnopescomtrumpscellphoneleaks")

# ::snt This would be hilarious if it were true
# ::tokens ["This", "would", "be", "hilarious", "if", "it", "were", "true"]
# ::lemmas ["this", "would", "be", "hilarious", "if", "it", "be", "true"]
(c18-3 / hilarious
       :domain (c18-2 / this)
       :condition (c18-1 / true-01
                         :ARG1 (c18-0 / it)))

# ::snt I feel like you are not helping the cause by disseminating information that is not verified
# ::tokens ["I", "feel", "like", "you", "are", "not", "helping", "the", "cause", "by", "disseminating", "information", "that", "is", "not", "verified"]
# ::lemmas ["i", "feel", "like", "you", "be", "not", "help", "the", "cause", "by", "disseminate", "information", "that", "be", "not", "verify"]
(c19-4 / feel-02
       :ARG0 (c19-6 / i)
       :ARG1 (c19-5 / help-01
                    :ARG0 (c19-7 / you)
                    :ARG1 (c19-2 / cause)
                    :manner (c19-1 / disseminate-01
                                   :ARG0 c19-7
                                   :ARG1 (c19-0 / information
                                                :ARG1-of (c19-3 / verify-01
                                                                :polarity -)))
                    :polarity -))

# ::snt Even funnier because it’s plausible
# ::tokens ["Even", "funnier", "because", "it", "\u2019s", "plausible"]
# ::lemmas ["even", "funny", "because", "it", "\u2019", "plausible"]
(c20-0 / cause-01
       :ARG0 (c20-1 / plausible
                    :domain (c20-6 / it))
       :ARG1 (c20-4 / have-degree-91
                    :ARG2 (c20-3 / funny-02
                                 :ARG1 c20-6)
                    :ARG3 (c20-5 / more
                                 :mod (c20-2 / even))))

# ::snt Yes but funny enough to be true
# ::tokens ["Yes", "but", "funny", "enough", "to", "be", "true"]
# ::lemmas ["yes", "but", "funny", "enough", "to", "be", "true"]
(c21-0 / contrast-01
       :ARG1 (c21-5 / yes)
       :ARG2 (c21-4 / have-degree-91
                    :ARG2 (c21-3 / funny-02)
                    :ARG3 (c21-1 / enough)
                    :ARG6 (c21-2 / true-01
                                 :ARG1 c21-3)))

# ::snt redhed67 grain of salt Satire site
# ::tokens ["redhed67", "grain", "of", "salt", "Satire", "site"]
# ::lemmas ["redhed67", "grain", "of", "salt", "Satire", "site"]
(c22-2 / site
       :mod (c22-1 / small-molecule
                   :name (c22-3 / name
                                :op1 "redhed67")
                   :mod (c22-4 / grain
                               :mod (c22-0 / salt))))

# ::snt Oh thats funny
# ::tokens ["Oh", "that", "s", "funny"]
# ::lemmas ["oh", "that", "s", "funny"]
(c23-1 / funny
       :domain (c23-2 / that)
       :mod (c23-0 / oh
                   :mode expressive))

# ::snt Disclaimer The Seattle Tribune is a news and entertainment satire web publication  httptheseattletribunecomdisclaimer
# ::tokens ["Disclaimer", "The", "Seattle", "Tribune", "is", "a", "news", "and", "entertainment", "satire", "web", "publication", " ", "httptheseattletribunecomdisclaimer"]
# ::lemmas ["Disclaimer", "The", "Seattle", "Tribune", "be", "a", "news", "and", "entertainment", "satire", "web", "publication", " ", "httptheseattletribunecomdisclaimer"]
(c24-2 / publication
       :domain (c24-8 / newspaper
                      :name (c24-3 / name
                                   :op1 "Seattle"
                                   :op2 "Tribune"))
       :mod (c24-5 / web)
       :mod (c24-7 / satire
                   :topic (c24-6 / and
                                 :op1 (c24-0 / news)
                                 :op2 (c24-4 / entertain-01)))
       :ARG2-of (c24-1 / disclaim-01))

# ::snt fake news site
# ::tokens ["fake", "news", "site"]
# ::lemmas ["fake", "news", "site"]
(c25-2 / site
       :mod (c25-0 / news)
       :ARG1-of (c25-1 / fake-02))

# ::snt Not a real news site
# ::tokens ["Not", "a", "real", "news", "site"]
# ::lemmas ["not", "a", "real", "news", "site"]
(c26-2 / site
       :mod (c26-0 / news)
       :ARG1-of (c26-1 / real-04)
       :polarity -)

# ::snt this might be ACTUAL fake news Click around the Seattle Tribune Theres nothing there Still funny story and not implausible
# ::tokens ["this", "might", "be", "ACTUAL", "fake", "news", "Click", "around", "the", "Seattle", "Tribune", "There", "s", "nothing", "there", "Still", "funny", "story", "and", "not", "implausible"]
# ::lemmas ["this", "may", "be", "actual", "fake", "news", "Click", "around", "the", "Seattle", "Tribune", "there", "s", "nothing", "there", "still", "funny", "story", "and", "not", "implausible"]
(c27-12 / multi-sentence
        :snt1 (c27-3 / possible-01
                     :ARG1 (c27-13 / news
                                   :ARG1-of (c27-10 / fake-02)
                                   :ARG1-of (c27-9 / actual-02)
                                   :domain (c27-7 / this)))
        :snt2 (c27-6 / and
                     :op1 (c27-4 / click-01
                                 :location (c27-16 / around
                                                   :op1 (c27-5 / newspaper
                                                               :name (c27-1 / name
                                                                            :op1 "Seattle"
                                                                            :op2 "Tribune"))))
                     :op2 (c27-2 / nothing
                                 :location (c27-15 / there)))
        :snt3 (c27-8 / and
                     :op1 (c27-11 / story
                                  :ARG1-of (c27-0 / funny-02))
                     :op2 (c27-14 / implicate-01
                                  :ARG1 c27-11
                                  :polarity -)))

# ::snt As he looks in the mirror
# ::tokens ["As", "he", "looks", "in", "the", "mirror"]
# ::lemmas ["as", "he", "look", "in", "the", "mirror"]
(c28-2 / look-01
       :ARG0 (c28-1 / he)
       :ARG1 (c28-0 / mirror))

# ::snt Trump said he would find the traitor
# ::tokens ["Trump", "said", "he", "would", "find", "the", "traitor"]
# ::lemmas ["Trump", "say", "he", "would", "find", "the", "traitor"]
(c29-3 / say-01
       :ARG0 (c29-1 / person
                    :name (c29-4 / name
                                 :op1 "Trump"))
       :ARG1 (c29-2 / find-01
                    :ARG0 c29-1
                    :ARG1 (c29-0 / person
                                 :ARG0-of (c29-5 / betray-01))))

# ::snt philnurenberg the Surprised these leaks from POTUS unsecured Android cell havent been tracked down sooner BREAKING
# ::tokens ["philnurenberg", "the", "Surprised", "these", "leaks", "from", "POTUS", "unsecured", "Android", "cell", "have", "nt", "been", "tracked", "down", "sooner", "BREAKING"]
# ::lemmas ["philnurenberg", "the", "Surprised", "these", "leak", "from", "POTUS", "unsecured", "Android", "cell", "have", "not", "be", "track", "down", "soon", "breaking"]
(c30-9 / say-01
       :ARG1 (c30-8 / surprise-01
                    :ARG0 (c30-6 / track-down-02
                                 :ARG1 (c30-10 / leak-01
                                               :ARG0 (c30-3 / cell
                                                            :mod (c30-4 / phone
                                                                        :name (c30-11 / name
                                                                                      :op1 "Android"))
                                                            :ARG1-of (c30-7 / secure-02
                                                                            :polarity -)
                                                            :poss (c30-0 / person
                                                                         :name (c30-5 / name
                                                                                      :op1 "POTUS")))
                                               :mod (c30-12 / this))
                                 :time (c30-1 / soon)
                                 :polarity -)
                    :ARG1 c30-0
                    :name (c30-2 / name
                                 :op1 "Philnurenberg"))
       :ARG2 c30-0)

# ::snt is that a real publication The ads are pretty racy
# ::tokens ["is", "that", "a", "real", "publication", "The", "ads", "are", "pretty", "racy"]
# ::lemmas ["be", "that", "a", "real", "publication", "the", "ad", "be", "pretty", "racy"]
(c31-6 / multi-sentence
       :snt1 (c31-2 / publication
                    :ARG1-of (c31-0 / real-04)
                    :domain (c31-3 / that))
       :snt2 (c31-5 / racy
                    :domain (c31-4 / advertise-01)
                    :degree (c31-1 / pretty)))

# ::snt AhhhHahahahah BAHHAHAHAHAHA Fire the FOOL already
# ::tokens ["AhhhHahahahah", "BAHHAHAHAHAHA", "Fire", "the", "FOOL", "already"]
# ::lemmas ["AhhhHahahahah", "BAHHAHAHAHAHA", "Fire", "the", "fool", "already"]
(c32-2 / fire-02
       :ARG0 (c32-4 / you)
       :ARG1 (c32-0 / football)
       :time (c32-1 / already)
       :mod (c32-3 / haha
                   :mode expressive)
       :mode imperative)

# ::snt Ironic that Trump is the source of leaks using an unsecured phone Ignorance is bliss
# ::tokens ["Ironic", "that", "Trump", "is", "the", "source", "of", "leaks", "using", "an", "unsecured", "phone", "Ignorance", "is", "bliss"]
# ::lemmas ["ironic", "that", "Trump", "be", "the", "source", "of", "leak", "use", "an", "unsecured", "phone", "Ignorance", "be", "bliss"]
(c33-8 / ignorance
       :mod (c33-9 / bliss)
       :domain (c33-5 / source-02
                      :ARG0 (c33-2 / person
                                   :name (c33-7 / name
                                                :op1 "Trump"))
                      :ARG1 (c33-6 / leak-01)
                      :manner (c33-3 / use-01
                                     :ARG1 (c33-0 / phone
                                                  :ARG1-of (c33-4 / secure-02
                                                                  :polarity -))))
       :mod (c33-1 / irony))

# ::snt The Seattle Tribune is an Entertainment Satire Magazine DO NOT TAKE MUCH STOCK OF THIS STORY
# ::tokens ["The", "Seattle", "Tribune", "is", "an", "Entertainment", "Satire", "Magazine", "DO", "NOT", "TAKE", "MUCH", "STOCK", "OF", "THIS", "STORY"]
# ::lemmas ["The", "Seattle", "Tribune", "be", "an", "Entertainment", "Satire", "Magazine", "do", "not", "take", "much", "stock", "of", "this", "story"]
(c34-2 / take-01
       :ARG0 (c34-6 / newspaper
                    :name (c34-1 / name
                                 :op1 "Seattle"
                                 :op2 "Tribune")
                    :domain (c34-5 / magazine
                                   :name c34-1
                                   :op1 "Entertainment"
                                   :op2 "Satire"
                                   :op3 "Magazine"))
       :ARG1 (c34-4 / stock-01
                    :ARG1 (c34-3 / story
                                 :mod (c34-7 / this))
                    :quant (c34-0 / much))
       :polarity -)

# ::snt All the distractions no one is talking about Obamacare protections being removed  SaveTheACA
# ::tokens ["All", "the", "distractions", "no", "one", "is", "talking", "about", "Obamacare", "protections", "being", "removed", " ", "SaveTheACA"]
# ::lemmas ["all", "the", "distraction", "no", "one", "be", "talk", "about", "Obamacare", "protection", "be", "remove", " ", "savetheaca"]
(c35-6 / talk-01
       :ARG0 (c35-10 / no-one)
       :ARG1 (c35-1 / remove-01
                    :ARG1 (c35-4 / protect-01
                                 :ARG1 (c35-8 / law
                                              :name (c35-5 / name
                                                           :op1 "Obamacare"))))
       :ARG1-of (c35-9 / mean-01
                       :ARG2 (c35-0 / organization
                                    :name (c35-2 / name
                                                 :op1 "SaveTheACA")))
       :ARG0-of (c35-3 / distract-01
                       :mod (c35-7 / all)))

# ::snt Certainly different then toenail fungus  HallieJackson snopes
# ::tokens ["Certainly", "different", "then", "toenail", "fungus", " ", "HallieJackson", "snopes"]
# ::lemmas ["certainly", "different", "then", "toenail", "fungus", " ", "HallieJackson", "snope"]
(c36-0 / differ-02
       :ARG2 (c36-4 / fungus
                    :mod (c36-3 / toenail))
       :mod (c36-1 / certain)
       :ARG1-of (c36-5 / snip-01
                       :ARG0 (c36-2 / person
                                    :name (c36-6 / name
                                                 :op1 "HallieJackson"))))

# ::snt Say what  HallieJackson
# ::tokens ["Say", "what", " ", "HallieJackson"]
# ::lemmas ["say", "what", " ", "HallieJackson"]
(c37-3 / say-01
       :ARG0 (c37-0 / person
                    :name (c37-1 / name
                                 :op1 "HallieJackson"))
       :ARG1 (c37-2 / thing))

# ::snt I wish but fake nuze source The side bar ads for miracle weight loss and toenail fungus are dead giveaways
# ::tokens ["I", "wish", "but", "fake", "nuze", "source", "The", "side", "bar", "ads", "for", "miracle", "weight", "loss", "and", "toenail", "fungus", "are", "dead", "giveaways"]
# ::lemmas ["i", "wish", "but", "fake", "nuze", "source", "the", "side", "bar", "ad", "for", "miracle", "weight", "loss", "and", "toenail", "fungus", "be", "dead", "giveaway"]
(c38-12 / multi-sentence
        :snt1 (c38-8 / wish-01
                     :ARG0 (c38-17 / i)
                     :ARG1 (c38-4 / contrast-01
                                  :ARG2 (c38-10 / fake-02
                                                :ARG1 (c38-5 / product
                                                             :name (c38-16 / name
                                                                           :op1 "Nuze")))))
        :snt2 (c38-14 / giveaway
                      :ARG0-of (c38-11 / cause-01
                                       :ARG1 (c38-3 / die-01
                                                    :ARG1 (c38-9 / advertise-01
                                                                 :ARG1 (c38-6 / and
                                                                              :op1 (c38-13 / lose-01
                                                                                           :ARG1 (c38-1 / weight)
                                                                                           :mod (c38-2 / miracle))
                                                                              :op2 (c38-0 / fungus
                                                                                          :mod (c38-7 / toenail)))
                                                                 :location (c38-18 / bar
                                                                                   :mod (c38-15 / side)))))))

# ::snt A true fake news site
# ::tokens ["A", "true", "fake", "news", "site"]
# ::lemmas ["a", "true", "fake", "news", "site"]
(c39-3 / site
       :mod (c39-0 / news
                   :ARG1-of (c39-1 / fake-02))
       :ARG1-of (c39-2 / true-01))

# ::snt Seattle Tribune is a fake news site Although I have to say that Trump himself being the source of the leaks would be delicious
# ::tokens ["Seattle", "Tribune", "is", "a", "fake", "news", "site", "Although", "I", "have", "to", "say", "that", "Trump", "himself", "being", "the", "source", "of", "the", "leaks", "would", "be", "delicious"]
# ::lemmas ["Seattle", "Tribune", "be", "a", "fake", "news", "site", "although", "i", "have", "to", "say", "that", "Trump", "himself", "be", "the", "source", "of", "the", "leak", "would", "be", "delicious"]
(c40-9 / site
       :mod (c40-11 / news)
       :ARG1-of (c40-8 / fake-02)
       :domain (c40-4 / newspaper
                      :name (c40-1 / name
                                   :op1 "Seattle"
                                   :op2 "Tribune"))
       :concession (c40-0 / obligate-01
                          :ARG2 (c40-7 / say-01
                                       :ARG0 (c40-12 / i)
                                       :ARG1 (c40-2 / delicious
                                                    :domain (c40-6 / source-02
                                                                   :ARG0 (c40-3 / person
                                                                                :name (c40-5 / name
                                                                                             :op1 "Trump"))
                                                                   :ARG1 (c40-10 / leak-01))))))

# ::snt So funny that it wouldnt be a big surprise if true lol
# ::tokens ["So", "funny", "that", "it", "would", "nt", "be", "a", "big", "surprise", "if", "true", "lol"]
# ::lemmas ["so", "funny", "that", "it", "would", "not", "be", "a", "big", "surprise", "if", "true", "lol"]
(c41-5 / have-degree-91
       :ARG1 (c41-4 / surprise-01
                    :mod (c41-8 / big)
                    :condition (c41-0 / true-01)
                    :polarity -)
       :ARG2 (c41-3 / funny-02)
       :ARG3 (c41-1 / so)
       :ARG6 (c41-6 / laugh-01
                    :ARG0 (c41-7 / i)
                    :manner (c41-2 / loud)
                    :mode expressive))

# ::snt Seattle Tribune is getting as good as The Onion  Too funny
# ::tokens ["Seattle", "Tribune", "is", "getting", "as", "good", "as", "The", "Onion", " ", "Too", "funny"]
# ::lemmas ["Seattle", "Tribune", "be", "get", "as", "good", "as", "the", "Onion", " ", "too", "funny"]
(c42-8 / multi-sentence
       :snt1 (c42-11 / get-03
                     :ARG1 (c42-9 / newspaper
                                  :name (c42-4 / name
                                               :op1 "Seattle"
                                               :op2 "Tribune"))
                     :ARG2 (c42-3 / good-02
                                  :ARG1 c42-9
                                  :ARG2-of (c42-10 / have-degree-91
                                                   :ARG1 c42-9
                                                   :ARG3 (c42-2 / equal)
                                                   :ARG4 (c42-0 / newspaper
                                                                :name (c42-1 / name
                                                                             :op1 "The"
                                                                             :op2 "Onion")))))
       :snt2 (c42-5 / have-degree-91
                    :ARG2 (c42-7 / funny-02
                                 :ARG1 c42-9)
                    :ARG3 (c42-6 / too)))

# ::snt I didnt know   It would not surprise me if true
# ::tokens ["I", "did", "nt", "know", "  ", "It", "would", "not", "surprise", "me", "if", "true"]
# ::lemmas ["i", "do", "not", "know", "  ", "it", "would", "not", "surprise", "me", "if", "true"]
(c43-3 / know-01
       :ARG0 (c43-4 / i)
       :ARG1 (c43-2 / surprise-01
                    :ARG0 (c43-1 / true-01
                                 :ARG1 (c43-0 / it))
                    :ARG1 c43-4
                    :polarity -)
       :polarity -)

# ::snt you know that paper is a satire right
# ::tokens ["you", "know", "that", "paper", "is", "a", "satire", "right"]
# ::lemmas ["you", "know", "that", "paper", "be", "a", "satire", "right"]
(c44-0 / right-06
       :ARG2 (c44-3 / know-01
                    :ARG0 (c44-4 / you)
                    :ARG1 (c44-2 / satire
                                 :domain (c44-1 / paper))))

# ::snt HAHaHaHaHaone of TRUMPS other personalities at it again
# ::tokens ["HAHaHaHaHaone", "of", "TRUMPS", "other", "personalities", "at", "it", "again"]
# ::lemmas ["hahahahahaone", "of", "TRUMPS", "other", "personality", "at", "it", "again"]
(c45-2 / throw-01
       :ARG1 (c45-1 / personality
                    :mod (c45-0 / other))
       :ARG2 (c45-5 / it)
       :mod (c45-3 / again)
       :mod (c45-4 / ha
                   :mode expressive))

# ::snt Shhhh We need the leaks to keep coming
# ::tokens ["Shhhh", "We", "need", "the", "leaks", "to", "keep", "coming"]
# ::lemmas ["Shhhh", "we", "need", "the", "leak", "to", "keep", "come"]
(c46-4 / need-01
       :ARG0 (c46-0 / we)
       :ARG1 (c46-3 / keep-02
                    :ARG1 (c46-2 / leak-01))
       :mod (c46-1 / shhhh
                   :mode expressive))

# ::snt I assumed he used a special phone exclusively for Twitter
# ::tokens ["I", "assumed", "he", "used", "a", "special", "phone", "exclusively", "for", "Twitter"]
# ::lemmas ["i", "assume", "he", "use", "a", "special", "phone", "exclusively", "for", "Twitter"]
(c47-4 / assume-02
       :ARG0 (c47-8 / i)
       :ARG1 (c47-2 / use-01
                    :ARG0 (c47-6 / he)
                    :ARG1 (c47-1 / phone
                                 :ARG1-of (c47-5 / special-02))
                    :ARG2 (c47-0 / publication
                                 :name (c47-7 / name
                                              :op1 "Twitter"))
                    :manner (c47-3 / exclusive-02)))

# ::snt winterthur realDonaldTrump   Ok now I am REALLY  LAUGHINGMYSOCKSOFF  THIS INEPT IGNORAMUS DITZ NEXT DUMPBANNON
# ::tokens ["winterthur", "realDonaldTrump", "  ", "Ok", "now", "I", "am", "REALLY", " ", "LAUGHINGMYSOCKSOFF", " ", "THIS", "INEPT", "IGNORAMUS", "DITZ", "NEXT", "DUMPBANNON"]
# ::lemmas ["winterthur", "realDonaldTrump", "  ", "ok", "now", "i", "be", "REALLY", " ", "LAUGHINGMYSOCKSOFF", " ", "this", "INEPT", "IGNORAMUS", "ditz", "NEXT", "dumpbannon"]
(c48-12 / laugh-01
        :ARG0 (c48-16 / i)
        :ARG2 (c48-6 / person
                     :name (c48-15 / name
                                   :op1 "Donald"
                                   :op2 "Obama"))
        :ARG1-of (c48-2 / real-04)
        :ARG1-of (c48-13 / mean-01
                         :ARG2 (c48-5 / ditch-01
                                      :ARG0 (c48-3 / person
                                                   :mod (c48-7 / evil)
                                                   :mod (c48-10 / this))
                                      :ARG1 (c48-1 / person
                                                   :name (c48-8 / name
                                                                :op1 "Dumpbannon"))
                                      :mod (c48-4 / next)))
        :time (c48-9 / now)
        :ARG1-of (c48-0 / okay-01)
        :mod (c48-14 / person
                     :name (c48-11 / name
                                   :op1 "winterthur")
                     :mode expressive)
        :mode expressive)

# ::snt if it is my bad but I wouldnt be surprised if the Android he didnt give up since becoming Pres that he Tweets from was hacked lol
# ::tokens ["if", "it", "is", "my", "bad", "but", "I", "would", "nt", "be", "surprised", "if", "the", "Android", "he", "did", "nt", "give", "up", "since", "becoming", "Pres", "that", "he", "Tweets", "from", "was", "hacked", "lol"]
# ::lemmas ["if", "it", "be", "my", "bad", "but", "i", "would", "not", "be", "surprised", "if", "the", "Android", "he", "do", "not", "give", "up", "since", "become", "pre", "that", "he", "tweet", "from", "be", "hack", "lol"]
(c49-10 / surprise-01
        :ARG0 (c49-11 / hack-04
                      :ARG1 (c49-4 / person
                                   :mod (c49-5 / company
                                               :name (c49-14 / name
                                                             :op1 "Android"))
                                   :ARG0-of (c49-13 / give-up-07
                                                    :time (c49-8 / since
                                                                 :op1 (c49-16 / become-01
                                                                              :ARG1 c49-4
                                                                              :ARG2 (c49-1 / person
                                                                                           :ARG0-of (c49-6 / have-org-role-91
                                                                                                           :ARG2 (c49-0 / president)))))
                                                    :polarity -)
                                   :ARG1-of (c49-7 / Tweets-01
                                                   :ARG0 c49-4)))
        :ARG1 (c49-15 / i)
        :condition (c49-2 / bad-04
                          :ARG1 (c49-3 / it)
                          :ARG2 c49-15)
        :ARG2-of (c49-12 / laugh-01
                         :ARG0 c49-15
                         :manner (c49-9 / loud)
                         :mode expressive)
        :polarity -)

# ::snt they also state with the exception of our ‘list style’ articles that include relevant sources So maybe fake maybe not
# ::tokens ["they", "also", "state", "with", "the", "exception", "of", "our", "\u2018", "list", "style", "\u2019", "articles", "that", "include", "relevant", "sources", "So", "maybe", "fake", "maybe", "not"]
# ::lemmas ["they", "also", "state", "with", "the", "exception", "of", "our", "'", "list", "style", "'", "article", "that", "include", "relevant", "source", "so", "maybe", "fake", "maybe", "not"]
(c50-2 / cause-01
       :ARG0 (c50-12 / state-01
                     :ARG0 (c50-6 / they)
                     :mod (c50-9 / also)
                     :ARG2-of (c50-3 / except-01
                                     :ARG1 (c50-5 / article
                                                  :poss (c50-7 / we)
                                                  :mod (c50-8 / style
                                                              :mod (c50-13 / list))
                                                  :ARG0-of (c50-14 / include-01
                                                                   :ARG1 (c50-10 / source
                                                                                 :ARG1-of (c50-0 / relevant-01))))))
       :ARG1 (c50-4 / possible-01
                    :ARG1 (c50-11 / fake-02)
                    :ARG1-of (c50-1 / possible-01
                                    :polarity -)))
