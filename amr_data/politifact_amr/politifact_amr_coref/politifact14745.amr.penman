# ::snt OMG She must be one hell of a housekeeper to make 23000000 a year Im sorry but Michelle Obama aint never in a hundred years gonna pay some WHITE woman that much money to clean her house Michelle HATES WHITE PPL and anyone reading this KNOWS THAT Keep trying though
# ::tokens ["OMG", "She", "must", "be", "one", "hell", "of", "a", "housekeeper", "to", "make", "23000000", "a", "year", "I", "m", "sorry", "but", "Michelle", "Obama", "ai", "nt", "never", "in", "a", "hundred", "years", "gon", "na", "pay", "some", "WHITE", "woman", "that", "much", "money", "to", "clean", "her", "house", "Michelle", "HATES", "WHITE", "PPL", "and", "anyone", "reading", "this", "KNOWS", "THAT", "Keep", "trying", "though"]
# ::lemmas ["OMG", "she", "must", "be", "one", "hell", "of", "a", "housekeeper", "to", "make", "23000000", "a", "year", "i", "be", "sorry", "but", "Michelle", "Obama", "be", "not", "never", "in", "a", "hundred", "years", "go", "to", "pay", "some", "white", "woman", "that", "much", "money", "to", "clean", "her", "house", "Michelle", "HATES", "WHITE", "PPL", "and", "anyone", "read", "this", "KNOWS", "that", "keep", "try", "though"]
(c1-28 / multi-sentence
       :snt1 (c1-0 / oh-my-god
                   :mode expressive)
       :snt2 (c1-14 / contrast-01
                    :ARG1 (c1-33 / obligate-01
                                 :ARG1 (c1-40 / she)
                                 :ARG2 (c1-3 / make-05
                                             :ARG0 c1-40
                                             :ARG1 (c1-1 / rate-entity-91
                                                         :ARG1 (c1-10 / monetary-quantity
                                                                      :unit (c1-36 / dollar)
                                                                      :quant 23000000)
                                                         :ARG2 (c1-25 / temporal-quantity
                                                                      :unit (c1-44 / year)
                                                                      :quant 1))))
                    :ARG2 (c1-26 / sorry-01
                                 :ARG1 (c1-8 / i))
                    :snt3-of c1-28)
       :ARG2 (c1-5 / pay-01
                   :ARG0 (c1-11 / person
                                :name (c1-42 / name
                                             :op1 "Michelle"
                                             :op2 "Obama"))
                   :ARG1 (c1-30 / money
                                :quant (c1-43 / much
                                              :degree (c1-9 / that)))
                   :ARG2 (c1-7 / woman
                               :mod (c1-38 / some)
                               :ARG1-of (c1-22 / white-02))
                   :purpose (c1-41 / clean-01
                                   :ARG0 c1-7
                                   :ARG1 (c1-21 / house
                                                :poss c1-11))
                   :time (c1-6 / ever)
                   :time (c1-39 / after
                                :op1 (c1-15 / now)
                                :quant (c1-18 / temporal-quantity
                                              :unit (c1-12 / year)
                                              :quant 100))
                   :polarity -)
       :snt4 (c1-24 / and
                    :op1 (c1-16 / hate-01
                                :ARG0 (c1-32 / person
                                             :name (c1-4 / name
                                                         :op1 "Michelle"
                                                         :op2 "Obama"))
                                :ARG1 (c1-29 / person
                                             :ARG0-of (c1-23 / have-org-role-91
                                                             :ARG1 (c1-2 / country
                                                                         :name (c1-13 / name
                                                                                      :op1 "Palestine"))
                                                             :ARG2 (c1-17 / member))
                                             :ARG1-of (c1-37 / white-02)))
                    :op2 (c1-27 / know-01
                                :ARG0 (c1-31 / anyone
                                             :ARG0-of (c1-19 / read-01
                                                             :ARG1 (c1-35 / this)))
                                :ARG1 (c1-20 / keep-02
                                             :ARG1 (c1-34 / try-01
                                                          :ARG0 c1-32)))))

# ::snt Theyre making it obvious Roy Moore is innocent of their accusations
# ::tokens ["They", "re", "making", "it", "obvious", "Roy", "Moore", "is", "innocent", "of", "their", "accusations"]
# ::lemmas ["they", "be", "make", "it", "obvious", "Roy", "Moore", "be", "innocent", "of", "their", "accusation"]
(c2-4 / make-02
      :ARG0 (c2-2 / they)
      :ARG1 (c2-0 / obvious-01
                  :ARG1 (c2-6 / innocent-01
                              :ARG1 (c2-1 / person
                                          :name (c2-5 / name
                                                      :op1 "Roy"
                                                      :op2 "Moore"))
                              :ARG2 (c2-3 / accuse-01
                                          :ARG0 c2-2))))

# ::snt Wasnt one of the Blobama daughters a Harvey Weinstein intern Irony
# ::tokens ["Was", "nt", "one", "of", "the", "Blobama", "daughters", "a", "Harvey", "Weinstein", "intern", "Irony"]
# ::lemmas ["be", "not", "one", "of", "the", "Blobama", "daughter", "a", "Harvey", "Weinstein", "intern", "Irony"]
(c3-10 / include-91
       :ARG1 (c3-5 / person
                   :name (c3-9 / name
                               :op1 "Irony")
                   :ARG0-of (c3-1 / intern-01
                                  :ARG1 (c3-2 / person
                                              :name (c3-6 / name
                                                          :op1 "Harvey"
                                                          :op2 "Weinstein"))))
       :ARG2 (c3-0 / person
                   :ARG0-of (c3-7 / have-rel-role-91
                                  :ARG1 (c3-8 / person
                                              :name (c3-3 / name
                                                          :op1 "Blobama"))
                                  :ARG2 (c3-4 / daughter)))
       :polarity -)

# ::snt It IS an Insidious Shameful Leftwing PLOT an Alabama WILL NOT FAULTER to GODLESS Leftwing Triators n Criminals Roy MOORE n America WILL Prevail VICTORIOUS Amen
# ::tokens ["It", "IS", "an", "Insidious", "Shameful", "Leftwing", "PLOT", "an", "Alabama", "WILL", "NOT", "FAULTER", "to", "GODLESS", "Leftwing", "Triators", "n", "Criminals", "Roy", "MOORE", "n", "America", "WILL", "Prevail", "VICTORIOUS", "Amen"]
# ::lemmas ["it", "be", "an", "Insidious", "Shameful", "Leftwing", "PLOT", "an", "Alabama", "will", "not", "faulter", "to", "GODLESS", "Leftwing", "Triators", "n", "Criminals", "Roy", "MOORE", "n", "America", "will", "prevail", "victorious", "amen"]
(c4-17 / multi-sentence
       :snt1 (c4-3 / PLOT
                   :domain (c4-4 / it)
                   :mod (c4-11 / insidious)
                   :ARG0-of (c4-24 / shame-02)
                   :ARG1-of (c4-18 / left-19))
       :snt2 (c4-22 / and
                    :op1 (c4-23 / fail-01
                                :ARG1 (c4-15 / state
                                             :name (c4-26 / name
                                                          :op1 "Alabama"))
                                :ARG2 (c4-14 / and
                                             :op1 (c4-5 / person
                                                        :ARG0-of (c4-10 / have-org-role-91
                                                                        :ARG1 (c4-0 / organization
                                                                                    :name (c4-8 / name
                                                                                                :op1 "Triator")
                                                                                    :ARG1-of (c4-16 / left-19))))
                                             :op2 (c4-20 / person
                                                         :name (c4-2 / name
                                                                     :op1 "Roy"
                                                                     :op2 "Moore")
                                                         :ARG0-of (c4-9 / have-org-role-91
                                                                        :ARG3 (c4-7 / crime-02))))
                                :polarity -)
                    :op2 (c4-19 / prevail-01
                                :ARG0 (c4-25 / country
                                             :name (c4-6 / name
                                                         :op1 "America"))
                                :ARG1 (c4-12 / person
                                             :name (c4-21 / name
                                                          :op1 "Alfredo"
                                                          :op2 "Moro")
                                             :ARG0-of (c4-13 / have-org-role-91
                                                             :ARG1 (c4-1 / criminal-organization))))))

# ::snt THESE WOMEN ARE PAID LIARS
# ::tokens ["THESE", "WOMEN", "ARE", "PAID", "LIARS"]
# ::lemmas ["these", "woman", "are", "PAID", "LIARS"]
(c5-2 / woman
      :mod (c5-1 / that)
      :ARG0-of (c5-0 / lie-08))

# ::snt And I thought Iâ€™d head the UN once crooked Hillary won damn
# ::tokens ["And", "I", "thought", "I", "\u2019d", "head", "the", "UN", "once", "crooked", "Hillary", "won", "damn"]
# ::lemmas ["and", "i", "think", "i", "\u2019d", "head", "the", "UN", "once", "crook", "Hillary", "win", "damn"]
(c6-7 / and
      :op2 (c6-5 / think-01
                 :ARG0 (c6-10 / i)
                 :ARG1 (c6-8 / head-01
                             :ARG0 c6-10
                             :ARG1 (c6-0 / organization
                                         :name (c6-9 / name
                                                     :op1 "UN"))
                             :time (c6-6 / win-01
                                         :ARG0 (c6-2 / person
                                                     :name (c6-3 / name
                                                                 :op1 "Hillary")
                                                     :mod (c6-4 / crooked))
                                         :mod (c6-1 / damn
                                                    :mode expressive)))))

# ::snt I live in Alabama and I donâ€™t know anyone who believes these women Sounds like fake news I know who I am voting for
# ::tokens ["I", "live", "in", "Alabama", "and", "I", "do", "n\u2019t", "know", "anyone", "who", "believes", "these", "women", "Sounds", "like", "fake", "news", "I", "know", "who", "I", "am", "voting", "for"]
# ::lemmas ["i", "live", "in", "Alabama", "and", "i", "do", "not", "know", "anyone", "who", "believe", "these", "woman", "sound", "like", "fake", "news", "i", "know", "who", "i", "be", "vote", "for"]
(c7-13 / multi-sentence
       :snt1 (c7-7 / and
                   :op1 (c7-12 / live-01
                               :ARG0 (c7-16 / i)
                               :location (c7-11 / state
                                                :name (c7-15 / name
                                                             :op1 "Alabama")))
                   :op2 (c7-14 / know-01
                               :ARG0 c7-16
                               :ARG1 (c7-3 / anyone
                                           :ARG0-of (c7-17 / believe-01
                                                           :ARG1 (c7-5 / woman
                                                                       :mod (c7-4 / this))))
                               :polarity -))
       :snt2 (c7-6 / sound-01
                   :ARG1 (c7-2 / news
                               :ARG1-of (c7-9 / fake-02))
                   :ARG2 (c7-10 / know-01
                                :ARG0 (c7-0 / i)
                                :ARG1 (c7-1 / person
                                            :ARG1-of (c7-8 / vote-01
                                                           :ARG0 c7-0)))))

# ::snt The Dems pulled the same stuff on Trump People are on to their dirty tricks  and that goes for McConnell too
# ::tokens ["The", "Dems", "pulled", "the", "same", "stuff", "on", "Trump", "People", "are", "on", "to", "their", "dirty", "tricks", " ", "and", "that", "goes", "for", "McConnell", "too"]
# ::lemmas ["the", "Dems", "pull", "the", "same", "stuff", "on", "Trump", "people", "be", "on", "to", "their", "dirty", "trick", " ", "and", "that", "go", "for", "McConnell", "too"]
(c8-8 / and
      :op1 (c8-3 / pull-01
                 :ARG0 (c8-1 / person
                             :ARG0-of (c8-10 / have-org-role-91
                                             :ARG1 (c8-0 / political-party
                                                         :name (c8-13 / name
                                                                      :op1 "Democratic"
                                                                      :op2 "Party"))))
                 :ARG1 (c8-9 / stuff
                             :ARG1-of (c8-7 / same-01))
                 :ARG2 (c8-12 / person
                              :mod (c8-2 / person
                                         :name (c8-4 / name
                                                     :op1 "Trump"))))
      :op2 (c8-11 / go-10
                  :ARG1 c8-3
                  :ARG2 (c8-6 / trick-01
                              :ARG0 c8-12
                              :ARG1-of (c8-5 / dirty-02))
                  :mod (c8-14 / too)))

# ::snt DAMN THEY FOUND OUT  AINT THAT A BUNCH OF SHIT HARD TO SPREAD LIES NOWADAYS
# ::tokens ["DAMN", "THEY", "FOUND", "OUT", " ", "AINT", "THAT", "A", "BUNCH", "OF", "SHIT", "HARD", "TO", "SPREAD", "LIES", "NOWADAYS"]
# ::lemmas ["damn", "they", "find", "out", " ", "aint", "that", "a", "BUNCH", "of", "SHIT", "HARD", "to", "SPREAD", "lie", "NOWADAYS"]
(c9-4 / find-out-03
      :ARG0 (c9-2 / they)
      :ARG1 (c9-6 / hint-01
                  :ARG1 (c9-1 / hard-02
                              :ARG1 (c9-5 / span-01
                                          :ARG0 (c9-9 / bunch
                                                      :consist-of (c9-3 / shit))
                                          :ARG1 (c9-7 / lie-08)
                                          :time (c9-8 / now))))
      :mod (c9-0 / damn
                 :mode expressive))

# ::snt Obamaâ€™s and Clintonâ€™s are scum
# ::tokens ["Obama", "\u2019s", "and", "Clinton", "\u2019s", "are", "scum"]
# ::lemmas ["Obama", "\u2019s", "and", "Clinton", "\u2019s", "be", "scum"]
(c10-4 / scum
       :domain (c10-3 / and
                      :op1 (c10-1 / person
                                  :name (c10-5 / name
                                               :op1 "Obama"))
                      :op2 (c10-0 / person
                                  :name (c10-2 / name
                                               :op1 "Clinton"))))

# ::snt Taaaa Daaaaa
# ::tokens ["Taaaa", "Daaaaa"]
# ::lemmas ["Taaaa", "Daaaaa"]
(c11-0 / string-entity
       :value "Taaaa Daaaaa")

# ::snt It just gets better and better
# ::tokens ["It", "just", "gets", "better", "and", "better"]
# ::lemmas ["it", "just", "get", "well", "and", "well"]
(c12-3 / get-03
       :ARG1 (c12-4 / it)
       :ARG2 (c12-2 / have-degree-91
                    :ARG1 c12-4
                    :ARG2 (c12-0 / good-02)
                    :ARG3 (c12-1 / more))
       :mod (c12-5 / just))

# ::snt jimeh5 shows how deep liberals arelol
# ::tokens ["jimeh5", "shows", "how", "deep", "liberals", "arelol"]
# ::lemmas ["jimeh5", "show", "how", "deep", "liberal", "arelol"]
(c13-5 / show-01
       :ARG0 (c13-2 / person
                    :name (c13-7 / name
                                 :op1 "Jimeh5"))
       :ARG1 (c13-1 / deep-03
                    :ARG1 (c13-0 / person
                                 :ARG1-of (c13-6 / liberal-02))
                    :degree (c13-3 / so))
       :manner (c13-4 / loud))

# ::snt GOT YOU CROOKED DEMS
# ::tokens ["GOT", "YOU", "CROOKED", "DEMS"]
# ::lemmas ["GOT", "you", "crooked", "dem"]
(c14-3 / brain-01
       :ARG0 (c14-2 / i)
       :ARG1 (c14-4 / you
                    :mod (c14-0 / dummy
                                :ARG0-of (c14-1 / look-01))))

# ::snt Oh geez Give this a rest already Liberals youâ€™re Nuts
# ::tokens ["Oh", "geez", "Give", "this", "a", "rest", "already", "Liberals", "you", "\u2019re", "Nuts"]
# ::lemmas ["oh", "geez", "give", "this", "a", "rest", "already", "liberal", "you", "be", "nut"]
(c15-5 / say-01
       :ARG0 (c15-8 / i)
       :ARG1 (c15-7 / give-01
                    :ARG0 (c15-2 / person
                                 :ARG1-of (c15-6 / liberal-02))
                    :ARG1 (c15-1 / rest-01)
                    :ARG2 (c15-3 / this)
                    :time (c15-4 / already)
                    :mode imperative)
       :ARG2 c15-2
       :mod (c15-0 / oh-geez
                   :mode expressive))

# ::snt Pathetic but amazing work to conceal their scheme
# ::tokens ["Pathetic", "but", "amazing", "work", "to", "conceal", "their", "scheme"]
# ::lemmas ["pathetic", "but", "amazing", "work", "to", "conceal", "their", "scheme"]
(c16-0 / contrast-01
       :ARG1 (c16-1 / pathetic)
       :ARG2 (c16-3 / work-01
                    :ARG1 (c16-6 / conceal-01
                                 :ARG1 (c16-5 / scheme
                                              :poss (c16-2 / they)))
                    :ARG0-of (c16-4 / amaze-01)))

# ::snt Well imagine that
# ::tokens ["Well", "imagine", "that"]
# ::lemmas ["well", "imagine", "that"]
(c17-0 / imagine-01
       :ARG0 (c17-2 / you)
       :ARG1 (c17-1 / that)
       :mod (c17-3 / well))

# ::snt That figures Working for that FAT ASS LIAR gets you NO CREDIBILITY
# ::tokens ["That", "figures", "Working", "for", "that", "FAT", "ASS", "LIAR", "gets", "you", "NO", "CREDIBILITY"]
# ::lemmas ["that", "figure", "Working", "for", "that", "FAT", "ASS", "LIAR", "get", "you", "no", "CREDIBILITY"]
(c18-7 / get-01
       :ARG0 (c18-5 / figure
                    :mod (c18-3 / that)
                    :ARG0-of (c18-4 / work-01
                                    :ARG2 (c18-1 / person
                                                 :ARG0-of (c18-6 / lie-08)
                                                 :mod (c18-8 / that)
                                                 :mod (c18-0 / fat))))
       :ARG1 (c18-2 / credit-01
                    :ARG1 (c18-9 / you
                                 :ARG2-of c18-7))
       :polarity -)

# ::snt You cant make this stuff up
# ::tokens ["You", "ca", "nt", "make", "this", "stuff", "up"]
# ::lemmas ["you", "can", "not", "make", "this", "stuff", "up"]
(c19-0 / possible-01
       :ARG1 (c19-3 / make-up-10
                    :ARG0 (c19-4 / you)
                    :ARG1 (c19-2 / stuff
                                 :mod (c19-1 / this)))
       :polarity -)

# ::snt Who would ever know Coming from real dirt
# ::tokens ["Who", "would", "ever", "know", "Coming", "from", "real", "dirt"]
# ::lemmas ["who", "would", "ever", "know", "come", "from", "real", "dirt"]
(c20-5 / know-01
       :ARG0 (c20-4 / amr-unknown)
       :ARG1 (c20-2 / come-03
                    :ARG2 (c20-1 / dirt
                                 :ARG1-of (c20-0 / real-04)))
       :time (c20-3 / ever))

# ::snt Bad housekeeping Canâ€™t trust the maid either
# ::tokens ["Bad", "housekeeping", "Ca", "n\u2019t", "trust", "the", "maid", "either"]
# ::lemmas ["bad", "housekeeping", "can", "not", "trust", "the", "maid", "either"]
(c21-0 / possible-01
       :ARG1 (c21-3 / trust-02
                    :ARG0 (c21-7 / i)
                    :ARG1 (c21-5 / maid))
       :mod (c21-1 / either)
       :ARG1-of (c21-2 / cause-01
                       :ARG0 (c21-4 / keep-01
                                    :ARG1 (c21-6 / house)
                                    :ARG1-of (c21-8 / bad-02)))
       :polarity -)

# ::snt KathyPica1 izonorion71 Good Loord she must be in the 50s or 60s Ha ha ha ha ha  Moore Lies by the MSM
# ::tokens ["KathyPica1", "izonorion71", "Good", "Loord", "she", "must", "be", "in", "the", "50s", "or", "60s", "Ha", "ha", "ha", "ha", "ha", " ", "Moore", "Lies", "by", "the", "MSM"]
# ::lemmas ["KathyPica1", "izonorion71", "Good", "Loord", "she", "must", "be", "in", "the", "50s", "or", "60", "ha", "ha", "ha", "ha", "ha", " ", "Moore", "Lies", "by", "the", "MSM"]
(c22-13 / multi-sentence
        :snt1 (c22-12 / say-01
                      :ARG0 (c22-17 / i)
                      :ARG1 (c22-6 / person
                                   :name (c22-16 / name
                                                 :op1 "KathyPica1"))
                      :ARG2 (c22-2 / person
                                   :name (c22-7 / name
                                                :op1 "Good"
                                                :op2 "Lords")))
        :snt2 (c22-3 / infer-01
                     :ARG1 (c22-10 / age-01
                                   :ARG1 (c22-9 / she)
                                   :ARG2 (c22-0 / or
                                                :op1 (c22-5 / date-entity
                                                            :decade 50)
                                                :op2 (c22-11 / date-entity
                                                             :decade 60))))
        :snt3 (c22-14 / lie-08
                      :ARG0 (c22-1 / publication
                                   :name (c22-4 / name
                                                :op1 "MSM"))
                      :ARG2 (c22-15 / person
                                    :name (c22-8 / name
                                                 :op1 "Moore"))))

# ::snt Getting better by the minute
# ::tokens ["Getting", "better", "by", "the", "minute"]
# ::lemmas ["get", "well", "by", "the", "minute"]
(c23-6 / get-03
       :ARG2 (c23-5 / have-degree-91
                    :ARG2 (c23-2 / good-02)
                    :ARG3 (c23-4 / more))
       :frequency (c23-0 / rate-entity-91
                         :ARG2 (c23-3 / temporal-quantity
                                      :unit (c23-1 / minute)
                                      :quant 1)))

# ::snt 1957
# ::tokens ["1957"]
# ::lemmas ["1957"]
(c24-0 / date-entity
       :year 1957)

# ::snt Why am I not surprised lol
# ::tokens ["Why", "am", "I", "not", "surprised", "lol"]
# ::lemmas ["why", "be", "i", "not", "surprised", "lol"]
(c25-2 / surprise-01
       :ARG0 (c25-0 / amr-unknown)
       :ARG1 (c25-4 / i)
       :ARG2-of (c25-3 / laugh-01
                       :ARG0 c25-4
                       :manner (c25-1 / loud)
                       :mode expressive)
       :polarity -)

# ::snt The leftists shoot to kill  Just a week ago Michelle tried to broad sweep nastiness upon all men  Its how these people work  ANGRY AS HELL
# ::tokens ["The", "leftists", "shoot", "to", "kill", " ", "Just", "a", "week", "ago", "Michelle", "tried", "to", "broad", "sweep", "nastiness", "upon", "all", "men", " ", "Its", "how", "these", "people", "work", " ", "ANGRY", "AS", "HELL"]
# ::lemmas ["the", "leftist", "shoot", "to", "kill", " ", "Just", "a", "week", "ago", "Michelle", "try", "to", "broad", "sweep", "nastiness", "upon", "all", "man", " ", "its", "how", "these", "people", "work", " ", "ANGRY", "as", "HELL"]
(c26-13 / multi-sentence
        :snt1 (c26-20 / shoot-02
                      :ARG0 (c26-2 / person
                                   :ARG1-of (c26-14 / left-19))
                      :purpose (c26-12 / kill-01
                                       :ARG0 c26-2))
        :snt2 (c26-10 / try-01
                      :ARG0 (c26-5 / person
                                   :name (c26-21 / name
                                                 :op1 "Michelle"))
                      :ARG1 (c26-11 / sweep-01
                                    :ARG0 c26-5
                                    :ARG1 (c26-6 / nastiness)
                                    :ARG2 (c26-0 / man
                                                 :mod (c26-19 / all))
                                    :ARG1-of (c26-15 / broad-02))
                      :time (c26-18 / before
                                    :op1 (c26-1 / now)
                                    :quant (c26-4 / temporal-quantity
                                                  :unit (c26-3 / week)
                                                  :quant 1)
                                    :mod (c26-22 / just)))
        :snt3 (c26-8 / work-01
                     :ARG0 (c26-17 / person
                                   :mod (c26-7 / this))
                     :manner (c26-9 / awful
                                    :degree (c26-16 / as-hell))))

# ::snt  A couple more RoyMoore political hitjob debunking articles  httpsthegatewaypunditcom201711judgeroymooreaccuserscrubsantimooreantitrumppostingsfacebookpage â€¦
# ::tokens [" ", "A", "couple", "more", "RoyMoore", "political", "hitjob", "debunking", "articles", " ", "httpsthegatewaypunditcom201711judgeroymooreaccuserscrubsantimooreantitrumppostingsfacebookpage", "\u2026"]
# ::lemmas [" ", "a", "couple", "more", "RoyMoore", "political", "hitjob", "debunking", "article", " ", "httpsthegatewaypunditcom201711judgeroymooreaccuserscrubsantimooreantitrumppostingsfacebookpage", "\u2026"]
(c27-1 / debunk-01
       :ARG0 (c27-6 / hitjob
                    :mod (c27-2 / politics)
                    :topic (c27-0 / person
                                  :name (c27-8 / name
                                               :op1 "RoyMoore"))
                    :quant (c27-3 / couple
                                  :mod (c27-7 / more)))
       :ARG1 (c27-5 / article)
       :medium (c27-4 / url-entity
                      :value "http://sthegatewaypunditcom 201711judgeroymooreaccuserscrubsantimooreantitrumppostingsfacebookpage"))

# ::snt LORD 5HOSE PEOPLE ARE SO EVIL IF SESSIONS DONT STEP UP HE NEEDS GONE ONAMAHILLARYSOROS MUELLER COMEYPERHAPS SESSIONS WANT ANSWERS AND DONE LOCKED UP RUDY GIULIANI RUDY RUDY RUDY
# ::tokens ["LORD", "5HOSE", "PEOPLE", "ARE", "SO", "EVIL", "IF", "SESSIONS", "DONT", "STEP", "UP", "HE", "NEEDS", "GONE", "ONAMAHILLARYSOROS", "MUELLER", "COMEYPERHAPS", "SESSIONS", "WANT", "ANSWERS", "AND", "DONE", "LOCKED", "UP", "RUDY", "GIULIANI", "RUDY", "RUDY", "RUDY"]
# ::lemmas ["LORD", "5hose", "people", "are", "so", "evil", "if", "sessions", "dont", "step", "up", "HE", "NEEDS", "GONE", "ONAMAHILLARYSOROS", "mueller", "COMEYPERHAPS", "session", "want", "answer", "and", "do", "LOCKED", "up", "RUDY", "GIULIANI", "rudy", "rudy", "RUDY"]
(c28-18 / multi-sentence
        :snt1 (c28-13 / have-condition-91
                      :ARG1 (c28-11 / have-degree-91
                                    :ARG1 (c28-3 / person
                                                 :name (c28-14 / name
                                                               :op1 "LORD"
                                                               :op2 5))
                                    :ARG2 (c28-4 / evil)
                                    :ARG3 (c28-25 / so))
                      :ARG2 (c28-24 / and
                                    :op1 (c28-17 / step-up-03
                                                 :ARG1 (c28-7 / person
                                                              :ARG0-of (c28-23 / suffice-01))
                                                 :polarity -)
                                    :op2 (c28-10 / need-01
                                                 :ARG0 c28-7
                                                 :ARG1 (c28-27 / go-01
                                                               :ARG1 (c28-22 / person
                                                                             :ARG0-of (c28-9 / counsel-01)
                                                                             :mod (c28-1 / morgue))))))
        :snt2 (c28-16 / and
                      :op1 (c28-5 / want-01
                                  :ARG0 (c28-20 / person
                                                :ARG0-of (c28-21 / suffice-01
                                                                 :ARG1 (c28-15 / person
                                                                               :name (c28-2 / name
                                                                                            :op1 "George"
                                                                                            :op2 "W."
                                                                                            :op3 "Bush"))))
                                  :ARG1 (c28-8 / person
                                               :ARG0-of (c28-26 / counsel-01)))
                      :op2 (c28-19 / lock-up-03
                                   :ARG0 c28-20
                                   :ARG1 (c28-6 / person
                                                :ARG0-of (c28-0 / rape-01
                                                                :mod (c28-12 / rape-01))))))

# ::snt Doesnt surprise me Obamas administration is evil
# ::tokens ["Does", "nt", "surprise", "me", "Obamas", "administration", "is", "evil"]
# ::lemmas ["do", "not", "surprise", "me", "Obamas", "administration", "be", "evil"]
(c29-3 / surprise-01
       :ARG0 (c29-0 / evil
                    :domain (c29-2 / administrate-01
                                   :ARG0 (c29-1 / person
                                                :name (c29-4 / name
                                                             :op1 "Obama"))))
       :ARG1 (c29-5 / i)
       :polarity -)

# ::snt Excuse me while I conceal my surprise
# ::tokens ["Excuse", "me", "while", "I", "conceal", "my", "surprise"]
# ::lemmas ["excuse", "me", "while", "i", "conceal", "my", "surprise"]
(c30-0 / excuse-01
       :ARG0 (c30-4 / you)
       :ARG1 (c30-3 / i)
       :time (c30-1 / conceal-01
                    :ARG0 c30-3
                    :ARG1 (c30-2 / surprise-01
                                 :ARG1 c30-3))
       :mode imperative)

# ::snt Wow What a coincidence
# ::tokens ["Wow", "What", "a", "coincidence"]
# ::lemmas ["wow", "what", "a", "coincidence"]
(c31-0 / coincidence
       :mod (c31-2 / wow
                   :mode expressive)
       :degree (c31-1 / so))

# ::snt There are no coincidences in politics What are the odds
# ::tokens ["There", "are", "no", "coincidences", "in", "politics", "What", "are", "the", "odds"]
# ::lemmas ["there", "be", "no", "coincidence", "in", "politic", "what", "be", "the", "odd"]
(c32-4 / multi-sentence
       :snt1 (c32-1 / coincidence
                    :location (c32-2 / politics)
                    :polarity -)
       :snt2 (c32-0 / odds
                    :domain (c32-3 / amr-unknown)))

# ::snt Imagine that what a surprise
# ::tokens ["Imagine", "that", "what", "a", "surprise"]
# ::lemmas ["imagine", "that", "what", "a", "surprise"]
(c33-0 / imagine-01
       :ARG0 (c33-3 / you)
       :ARG1 (c33-2 / surprise-01
                    :mod (c33-1 / that))
       :mode imperative)

# ::snt SparkleSoup45 we should just ignore their hype of judge Moore we keep feeding into them IGNORE
# ::tokens ["SparkleSoup45", "we", "should", "just", "ignore", "their", "hype", "of", "judge", "Moore", "we", "keep", "feeding", "into", "them", "IGNORE"]
# ::lemmas ["sparklesoup45", "we", "should", "just", "ignore", "their", "hype", "of", "judge", "Moore", "we", "keep", "feed", "into", "them", "IGNORE"]
(c34-9 / say-01
       :ARG1 (c34-0 / recommend-01
                    :ARG1 (c34-13 / ignore-01
                                  :ARG0 (c34-7 / we)
                                  :ARG1 (c34-10 / hype-01
                                                :ARG0 c34-7
                                                :ARG1 (c34-3 / person
                                                             :name (c34-12 / name
                                                                           :op1 "Moore")
                                                             :ARG0-of (c34-5 / have-org-role-91
                                                                             :ARG3 (c34-14 / judge-01))))
                                  :mod (c34-1 / just))
                    :ARG2 (c34-2 / person
                                 :name (c34-4 / name
                                              :op1 "SparkleSoup45"))
                    :ARG1-of (c34-6 / cause-01
                                    :ARG0 (c34-11 / keep-02
                                                  :ARG0 c34-7
                                                  :ARG1 (c34-8 / feed-01
                                                               :ARG0 c34-7
                                                               :ARG2 c34-10))))
       :ARG2 c34-2)

# ::snt Im watching this unfold and Im like
# ::tokens ["I", "m", "watching", "this", "unfold", "and", "I", "m", "like"]
# ::lemmas ["i", "be", "watch", "this", "unfold", "and", "i", "be", "like"]
(c35-3 / and
       :op1 (c35-2 / watch-01
                   :ARG0 (c35-5 / i)
                   :ARG1 (c35-0 / unfold-02
                                :ARG1 (c35-1 / this)))
       :op2 (c35-4 / like-01
                   :ARG0 c35-5))

# ::snt  too funnythese ppl are so intertwined with each other
# ::tokens [" ", "too", "funnythese", "ppl", "are", "so", "intertwined", "with", "each", "other"]
# ::lemmas [" ", "too", "funnythese", "ppl", "be", "so", "intertwined", "with", "each", "other"]
(c36-4 / have-degree-91
       :ARG1 (c36-3 / this
                    :mod (c36-1 / ppl))
       :ARG2 (c36-5 / intertwine-01
                    :ARG1 c36-1
                    :ARG2 (c36-2 / each
                                 :mod (c36-0 / other)))
       :ARG3 (c36-6 / too))

# ::snt Of course  It is all planed
# ::tokens ["Of", "course", " ", "It", "is", "all", "planed"]
# ::lemmas ["of", "course", " ", "it", "be", "all", "plane"]
(c37-1 / plan-01
       :ARG1 (c37-2 / it
                    :mod (c37-0 / all))
       :mod (c37-3 / of-course))

# ::snt How convenient
# ::tokens ["How", "convenient"]
# ::lemmas ["how", "convenient"]
(c38-0 / convenient
       :degree (c38-1 / so))

# ::snt SOP for demos
# ::tokens ["SOP", "for", "demos"]
# ::lemmas ["SOP", "for", "demo"]
(c39-1 / product
       :name (c39-2 / name
                    :op1 "SOP")
       :purpose (c39-0 / demo-01))

# ::snt Really Big Mofo Mike himself
# ::tokens ["Really", "Big", "Mofo", "Mike", "himself"]
# ::lemmas ["really", "Big", "Mofo", "Mike", "himself"]
(c40-0 / person
       :name (c40-1 / name
                    :op1 "Big"
                    :op2 "Mike")
       :degree (c40-2 / really))

# ::snt 2BreakFree from ObAminations the great tribulation causing beast HELP ME tell SpeakerRyan INRI FAIR RETRIAL NOW Fatima100 Christmas2 Apocalypse Rapture
# ::tokens ["2BreakFree", "from", "ObAminations", "the", "great", "tribulation", "causing", "beast", "HELP", "ME", "tell", "SpeakerRyan", "INRI", "FAIR", "RETRIAL", "NOW", "Fatima100", "Christmas2", "Apocalypse", "Rapture"]
# ::lemmas ["2breakfree", "from", "ObAminations", "the", "great", "tribulation", "cause", "beast", "HELP", "ME", "tell", "SpeakerRyan", "INRI", "FAIR", "retrial", "now", "fatima100", "Christmas2", "Apocalypse", "Rapture"]
(c41-11 / help-01
        :ARG0 (c41-5 / person
                     :name (c41-13 / name
                                   :op1 "Ryan")
                     :ARG0-of (c41-10 / speak-01))
        :ARG1 (c41-7 / tell-01
                     :ARG0 c41-5
                     :ARG1 (c41-1 / return-01
                                  :ARG1 (c41-2 / person
                                               :name (c41-6 / name
                                                            :op1 "Fatemala")
                                               :ARG0-of c41-10))
                     :ARG1-of (c41-9 / faint-01)
                     :time (c41-4 / now))
        :ARG2 c41-2
        :ARG2 c41-5
        :time (c41-8 / and
                     :op1 (c41-14 / break-free-04
                                  :ARG1 c41-2
                                  :ARG2 (c41-0 / oppress-01
                                               :mod (c41-12 / great)))
                     :op2 (c41-3 / free-04
                                 :ARG1 c41-2
                                 :ARG2 c41-0)))

# ::snt BoycottNFL BoycottNBA FreeKekistan TheREVOLUTION      FrightPower TRobinsonNewEra ReasonsForTreason RinoSeason      SupportSmallStreamers
# ::tokens ["BoycottNFL", "BoycottNBA", "FreeKekistan", "TheREVOLUTION", "     ", "FrightPower", "TRobinsonNewEra", "ReasonsForTreason", "RinoSeason", "     ", "SupportSmallStreamers"]
# ::lemmas ["boycottnfl", "boycottnba", "FreeKekistan", "TheREVOLUTION", "     ", "FrightPower", "TRobinsonNewEra", "reasonsfortreason", "RinoSeason", "     ", "supportsmallstreamers"]
(c42-6 / and
       :op1 (c42-12 / boycott-01
                    :ARG0 (c42-13 / you)
                    :ARG1 (c42-10 / league
                                  :name (c42-11 / name
                                                :op1 "NFL"))
                    :mode imperative)
       :op2 (c42-0 / boycott-01
                   :ARG0 c42-13
                   :ARG1 (c42-7 / league
                                :name (c42-4 / name
                                             :op1 "NBA"
                                             :op2 "FreeKekistan"))
                   :mode imperative)
       :op3 (c42-1 / revolt-01
                   :ARG0 c42-13
                   :ARG1 (c42-3 / person
                                :name (c42-2 / name
                                             :op1 "FrightPower"
                                             :op2 "TobinsonNewEra"))
                   :mode imperative)
       :op4 (c42-9 / support-01
                   :ARG0 c42-13
                   :ARG1 (c42-5 / season
                                :mod (c42-8 / rino))
                   :mode imperative))

# ::snt Sue the shit out of them
# ::tokens ["Sue", "the", "shit", "out", "of", "them"]
# ::lemmas ["Sue", "the", "shit", "out", "of", "them"]
(c43-1 / sue-02
       :ARG0 (c43-2 / you)
       :ARG1 (c43-0 / they)
       :ARG2 (c43-3 / shit
                    :mode expressive)
       :mode imperative)

# ::snt There you go The Swamp is deep
# ::tokens ["There", "you", "go", "The", "Swamp", "is", "deep"]
# ::lemmas ["there", "you", "go", "the", "Swamp", "be", "deep"]
(c44-3 / multi-sentence
       :snt1 (c44-4 / go-02
                    :ARG0 (c44-5 / you)
                    :ARG4 (c44-1 / there))
       :snt2 (c44-0 / deep-02
                    :ARG1 (c44-2 / Swamp)))

# ::snt Of course
# ::tokens ["Of", "course"]
# ::lemmas ["of", "course"]
(c45-0 / of-course)

# ::snt My my my
# ::tokens ["My", "my", "my"]
# ::lemmas ["my", "my", "my"]
(c46-0 / i
       :part c46-0)

# ::snt They are Libtards and RINO stooges
# ::tokens ["They", "are", "Libtards", "and", "RINO", "stooges"]
# ::lemmas ["they", "be", "Libtards", "and", "RINO", "stooge"]
(c47-4 / and
       :op1 (c47-2 / person
                   :ARG1-of (c47-6 / liberal-02)
                   :domain (c47-3 / they))
       :op2 (c47-1 / person
                   :ARG0-of (c47-5 / stoog-01)
                   :domain c47-3
                   :mod (c47-0 / person
                               :name (c47-7 / name
                                            :op1 "RINO"))))

# ::snt Thus far people still voting for him The Dems are so stupid And the dont even know it
# ::tokens ["Thus", "far", "people", "still", "voting", "for", "him", "The", "Dems", "are", "so", "stupid", "And", "the", "do", "nt", "even", "know", "it"]
# ::lemmas ["thus", "far", "people", "still", "vote", "for", "him", "the", "Dems", "be", "so", "stupid", "and", "the", "do", "not", "even", "know", "it"]
(c48-13 / multi-sentence
        :snt1 (c48-6 / vote-01
                     :ARG0 (c48-2 / person)
                     :ARG1 (c48-12 / he)
                     :mod (c48-11 / still)
                     :time (c48-5 / thus-far))
        :snt2 (c48-8 / and
                     :op1 (c48-7 / stupid
                                 :degree (c48-9 / so)
                                 :domain (c48-1 / person
                                                :ARG0-of (c48-4 / have-org-role-91
                                                                :ARG1 (c48-0 / political-party
                                                                             :name (c48-15 / name
                                                                                           :op1 "Democrat")))))
                     :op2 (c48-14 / know-01
                                  :ARG0 (c48-10 / person)
                                  :ARG1 c48-7
                                  :mod (c48-3 / even)
                                  :polarity -)))

# ::snt These accusations are all heading south
# ::tokens ["These", "accusations", "are", "all", "heading", "south"]
# ::lemmas ["these", "accusation", "be", "all", "head", "south"]
(c49-4 / head-02
       :ARG0 (c49-2 / accuse-01
                    :mod (c49-1 / this)
                    :mod (c49-0 / all))
       :ARG1 (c49-3 / south))

# ::snt Certainly you canâ€™t expect them to do actual math
# ::tokens ["Certainly", "you", "ca", "n\u2019t", "expect", "them", "to", "do", "actual", "math"]
# ::lemmas ["certainly", "you", "can", "not", "expect", "them", "to", "do", "actual", "math"]
(c50-1 / possible-01
       :ARG1 (c50-2 / expect-01
                    :ARG0 (c50-7 / you)
                    :ARG1 (c50-0 / do-02
                                 :ARG0 (c50-4 / they)
                                 :ARG1 (c50-6 / mathematics
                                              :ARG1-of (c50-5 / actual-02))))
       :mod (c50-3 / certain)
       :polarity -)
