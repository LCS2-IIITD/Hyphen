# ::snt please be true
# ::tokens ["please", "be", "true"]
# ::lemmas ["please", "be", "true"]
(c1-0 / true-01
      :ARG1 (c1-1 / you)
      :mode imperative
      :polite +)

# ::snt Guessing its from one of those dedicated satire sites Swift rolls over in his grave I never hear about otherwise
# ::tokens ["Guessing", "its", "from", "one", "of", "those", "dedicated", "satire", "sites", "Swift", "rolls", "over", "in", "his", "grave", "I", "never", "hear", "about", "otherwise"]
# ::lemmas ["guess", "its", "from", "one", "of", "those", "dedicated", "satire", "site", "Swift", "roll", "over", "in", "his", "grave", "i", "never", "hear", "about", "otherwise"]
(c2-9 / hear-01
      :ARG0 (c2-12 / i)
      :ARG1 (c2-4 / have-polarity-91
                  :ARG2 -)
      :time (c2-2 / ever)
      :ARG1-of (c2-3 / cause-01
                     :ARG0 (c2-11 / guess-01
                                  :ARG0 c2-12
                                  :ARG1 (c2-13 / be-from-91
                                               :ARG1 (c2-0 / it)
                                               :ARG2 (c2-8 / site
                                                           :ARG1-of (c2-10 / include-91
                                                                           :ARG2 (c2-7 / site
                                                                                       :mod (c2-6 / satire)
                                                                                       :ARG1-of (c2-1 / dedicate-01)
                                                                                       :mod (c2-5 / that)))
                                                           :quant 1))))
      :polarity -)

# ::snt Literally the only thing that makes me dubious is I havent heard it anywhere previously
# ::tokens ["Literally", "the", "only", "thing", "that", "makes", "me", "dubious", "is", "I", "have", "nt", "heard", "it", "anywhere", "previously"]
# ::lemmas ["literally", "the", "only", "thing", "that", "make", "me", "dubious", "be", "i", "have", "not", "hear", "it", "anywhere", "previously"]
(c3-4 / hear-01
      :ARG0 (c3-7 / i)
      :ARG1 (c3-0 / it)
      :location (c3-3 / anywhere)
      :time (c3-2 / previous)
      :mod (c3-5 / literal)
      :ARG0-of (c3-6 / make-02
                     :ARG1 (c3-1 / dubious-02
                                 :ARG0 c3-7))
      :polarity -)

# ::snt FAKE NEWS This is   A LIE
# ::tokens ["FAKE", "NEWS", "This", "is", "  ", "A", "LIE"]
# ::lemmas ["FAKE", "NEWS", "this", "be", "  ", "a", "lie"]
(c4-1 / and
      :op1 (c4-2 / fake-02
                 :ARG1 (c4-4 / news))
      :op2 (c4-3 / lie-08
                 :ARG1 (c4-0 / this)))

# ::snt He does like his fried chicken Look at his waistline
# ::tokens ["He", "does", "like", "his", "fried", "chicken", "Look", "at", "his", "waistline"]
# ::lemmas ["he", "do", "like", "his", "fry", "chicken", "look", "at", "his", "waistline"]
(c5-7 / multi-sentence
      :snt1 (c5-5 / like-01
                  :ARG0 (c5-6 / he)
                  :ARG1 (c5-0 / chicken
                              :ARG1-of (c5-4 / fry-01)
                              :poss c5-6))
      :snt2 (c5-3 / look-01
                  :ARG0 (c5-8 / you)
                  :ARG1 (c5-2 / waistline
                              :poss (c5-1 / he))
                  :mode imperative))

# ::snt I know this is satire but it is hilariously funny and so close to the truth
# ::tokens ["I", "know", "this", "is", "satire", "but", "it", "is", "hilariously", "funny", "and", "so", "close", "to", "the", "truth"]
# ::lemmas ["i", "know", "this", "be", "satire", "but", "it", "be", "hilariously", "funny", "and", "so", "close", "to", "the", "truth"]
(c6-0 / contrast-01
      :ARG1 (c6-6 / know-01
                  :ARG0 (c6-9 / i)
                  :ARG1 (c6-5 / satire
                              :domain (c6-1 / this)))
      :ARG2 (c6-3 / and
                  :op1 (c6-4 / funny-02
                             :ARG1 c6-1
                             :manner (c6-7 / hilarious))
                  :op2 (c6-8 / close-10
                             :ARG1 c6-1
                             :ARG2 (c6-10 / truth)
                             :degree (c6-2 / so))))

# ::snt He also would have saved Rome stopped the comet that killed the dinosaurs  prevented Yoko from ever meeting John
# ::tokens ["He", "also", "would", "have", "saved", "Rome", "stopped", "the", "comet", "that", "killed", "the", "dinosaurs", " ", "prevented", "Yoko", "from", "ever", "meeting", "John"]
# ::lemmas ["he", "also", "would", "have", "save", "Rome", "stop", "the", "comet", "that", "kill", "the", "dinosaur", " ", "prevent", "Yoko", "from", "ever", "meet", "John"]
(c7-10 / and
       :op1 (c7-11 / save-02
                   :ARG0 (c7-12 / he)
                   :ARG1 (c7-9 / stop-01
                               :ARG0 (c7-4 / city
                                           :name (c7-16 / name
                                                        :op1 "Rome"))
                               :ARG1 (c7-13 / comet
                                            :ARG0-of (c7-14 / kill-01
                                                            :ARG1 (c7-3 / dinosaur))))
                   :mod (c7-7 / also))
       :op2 (c7-5 / prevent-01
                  :ARG0 c7-12
                  :ARG1 (c7-15 / meet-02
                               :ARG0 (c7-1 / person
                                           :name (c7-6 / name
                                                       :op1 "Yoko"))
                               :ARG1 (c7-0 / person
                                           :name (c7-2 / name
                                                       :op1 "John"))
                               :time (c7-8 / ever))))
