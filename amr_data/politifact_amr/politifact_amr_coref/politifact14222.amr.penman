# ::snt Sounds like her whole career has been nothing more than a big scam
# ::tokens ["Sounds", "like", "her", "whole", "career", "has", "been", "nothing", "more", "than", "a", "big", "scam"]
# ::lemmas ["sound", "like", "her", "whole", "career", "have", "be", "nothing", "more", "than", "a", "big", "scam"]
(c1-4 / sound-01
      :ARG1 (c1-2 / scam-01
                  :mod (c1-6 / big)
                  :domain (c1-0 / career
                                :poss (c1-1 / she)
                                :mod (c1-3 / whole))
                  :mod (c1-5 / nothing-more-than)))

# ::snt MaxineWaters Must be nice dont go to work but collect tax payers dollars Sounds like she is swindling her constituents
# ::tokens ["MaxineWaters", "Must", "be", "nice", "do", "nt", "go", "to", "work", "but", "collect", "tax", "payers", "dollars", "Sounds", "like", "she", "is", "swindling", "her", "constituents"]
# ::lemmas ["MaxineWaters", "must", "be", "nice", "do", "not", "go", "to", "work", "but", "collect", "tax", "payer", "dollar", "sound", "like", "she", "be", "swindle", "her", "constituent"]
(c2-13 / multi-sentence
       :snt1 (c2-0 / obligate-01
                   :ARG1 (c2-16 / nice-01
                                :ARG1 (c2-5 / person
                                            :name (c2-6 / name
                                                        :op1 "MaxineWaters"))))
       :snt2 (c2-7 / contrast-01
                   :ARG1 (c2-15 / go-02
                                :ARG0 (c2-17 / you)
                                :ARG4 (c2-9 / work-01)
                                :polarity -)
                   :ARG2 (c2-12 / collect-01
                                :ARG0 c2-17
                                :ARG1 (c2-4 / dollar
                                            :source (c2-2 / person
                                                          :ARG0-of (c2-1 / pay-01
                                                                         :ARG1 (c2-8 / tax))))
                                :polarity -))
       :snt3 (c2-14 / sound-01
                    :ARG1 (c2-10 / swindle-01
                                 :ARG0 (c2-11 / she)
                                 :ARG1 (c2-3 / constituent
                                             :poss c2-11))))

# ::snt Just saw her mansion cost 43 million Bernie  her should get married
# ::tokens ["Just", "saw", "her", "mansion", "cost", "43", "million", "Bernie", " ", "her", "should", "get", "married"]
# ::lemmas ["just", "see", "her", "mansion", "cost", "43", "million", "Bernie", " ", "her", "should", "get", "marry"]
(c3-8 / multi-sentence
      :snt1 (c3-7 / see-01
                  :ARG0 (c3-10 / i)
                  :ARG1 (c3-3 / cost-01
                              :ARG1 (c3-1 / mansion
                                          :poss (c3-6 / she))
                              :ARG2 (c3-11 / monetary-quantity
                                           :unit (c3-2 / dollar)
                                           :quant 43000000))
                  :mod (c3-4 / just))
      :snt2 (c3-0 / recommend-01
                  :ARG1 (c3-9 / marry-01
                              :ARG1 (c3-5 / she))))

# ::snt 22 then again shes got her mansion in Hancock Park to hang out at I bet PressGop would show up to more than 10 of said meetings
# ::tokens ["22", "then", "again", "she", "s", "got", "her", "mansion", "in", "Hancock", "Park", "to", "hang", "out", "at", "I", "bet", "PressGop", "would", "show", "up", "to", "more", "than", "10", "of", "said", "meetings"]
# ::lemmas ["22", "then", "again", "she", "s", "get", "her", "mansion", "in", "Hancock", "Park", "to", "hang", "out", "at", "i", "bet", "PressGop", "would", "show", "up", "to", "more", "than", "10", "of", "said", "meeting"]
(c4-16 / bet-01
       :ARG0 (c4-15 / i)
       :ARG2 (c4-9 / show-up-02
                   :ARG1 (c4-3 / person
                               :name (c4-14 / name
                                            :op1 "PressGop"))
                   :ARG4 (c4-10 / meet-03
                                :quant (c4-1 / more-than
                                             :op1 10)
                                :ARG1-of (c4-0 / include-91
                                               :ARG2 (c4-11 / meet-03
                                                            :ARG1-of (c4-7 / say-01)))))
       :time (c4-2 / date-entity
                   :mod (c4-6 / then)
                   :day 22)
       :mod (c4-8 / again)
       :location (c4-13 / mansion
                        :poss c4-3
                        :location (c4-4 / city-district
                                        :name (c4-5 / name
                                                    :op1 "Hancock"
                                                    :op2 "Park"))
                        :ARG1-of (c4-12 / hang-out-06
                                        :ARG2 c4-13)))

# ::snt Well good luck getting a straight answer from her Even MSNBS went after herhttpsmyoutubecomwatchebcANyPxKojGLIuASuJ1rcV7qyuPMBL6pnev54Z6NC5TFodmPLIuKDVq6zsjgNYITzE1PZpdhuQrF2xvsslX5kGzPbGrs6gAvw8nyZVSVQZg â€¦
# ::tokens ["Well", "good", "luck", "getting", "a", "straight", "answer", "from", "her", "Even", "MSNBS", "went", "after", "herhttpsmyoutubecomwatchebcANyPxKojGLIuASuJ1rcV7qyuPMBL6pnev54Z6NC5TFodmPLIuKDVq6zsjgNYITzE1PZpdhuQrF2xvsslX5kGzPbGrs6gAvw8nyZVSVQZg", "\u2026"]
# ::lemmas ["well", "good", "luck", "get", "a", "straight", "answer", "from", "her", "even", "MSNBS", "go", "after", "herhttpsmyoutubecomwatchebcANyPxKojGLIuASuJ1rcV7qyuPMBL6pnev54Z6NC5TFodmPLIuKDVq6zsjgNYITzE1PZpdhuQrF2xvsslX5kGzPbGrs6gAvw8nyZVSVQZg", "\u2026"]
(c5-10 / luck
       :ARG1-of (c5-13 / good-02)
       :topic (c5-3 / get-01
                    :ARG0 (c5-15 / you)
                    :ARG1 (c5-6 / thing
                                :ARG2-of (c5-8 / answer-01)
                                :ARG1-of (c5-9 / straight-06))
                    :ARG2 (c5-7 / she))
       :mod (c5-2 / even)
       :ARG1-of (c5-4 / cause-01
                      :ARG0 (c5-0 / go-03
                                  :ARG0 (c5-11 / company
                                               :name (c5-14 / name
                                                            :op1 "MSNBS"))
                                  :ARG1 (c5-5 / url-entity
                                              :ARG1-of (c5-12 / mean-01
                                                              :ARG2 (c5-1 / url-entity
                                                                          :value "https://www.christianforums.com/news/world-leadership/2009/04/jul/jul/kojGLIuASuJ1rcV7qyuPMBL6pnev54Z6NC5TFodmPLIuKDVq6zsjgNYITzE1PZpdhuQrF2"))
                                              :value "https://www.christianforums.com/news/world-leadership/2009/04/jul/ryan_shooting"))))

# ::snt I focus on this situation with Russia  whether theres validity
# ::tokens ["I", "focus", "on", "this", "situation", "with", "Russia", " ", "whether", "there", "s", "validity"]
# ::lemmas ["i", "focus", "on", "this", "situation", "with", "Russia", " ", "whether", "there", "s", "validity"]
(c6-3 / focus-01
      :ARG0 (c6-6 / i)
      :ARG1 (c6-4 / situation
                  :mod (c6-1 / this)
                  :prep-with (c6-0 / country
                                   :name (c6-5 / name
                                               :op1 "Russia")))
      :ARG2 (c6-7 / truth-value
                  :polarity-of (c6-2 / valid-02
                                     :ARG1 c6-4)))

# ::snt She doesnt show up to the meetings shes suppose to Kind of a big deal no That maybe why she thinks Putin invaded Korea 12
# ::tokens ["She", "does", "nt", "show", "up", "to", "the", "meetings", "she", "s", "suppose", "to", "Kind", "of", "a", "big", "deal", "no", "That", "maybe", "why", "she", "thinks", "Putin", "invaded", "Korea", "12"]
# ::lemmas ["she", "do", "not", "show", "up", "to", "the", "meeting", "she", "s", "suppose", "to", "Kind", "of", "a", "big", "deal", "no", "that", "maybe", "why", "she", "think", "Putin", "invade", "Korea", "12"]
(c7-12 / multi-sentence
       :snt1 (c7-11 / show-up-02
                    :ARG1 (c7-9 / she)
                    :ARG2 (c7-1 / meet-03
                                :ARG0 c7-9)
                    :ARG1-of (c7-8 / suppose-02
                                   :ARG2 (c7-2 / deal-03
                                               :mod (c7-17 / big
                                                           :degree (c7-13 / kind-of))))
                    :polarity -)
       :snt2 (c7-3 / possible-01
                   :ARG1 (c7-7 / thing
                               :ARG0-of (c7-4 / cause-01
                                              :ARG1 (c7-5 / think-01
                                                          :ARG0 (c7-6 / she)
                                                          :ARG1 (c7-16 / invade-01
                                                                       :ARG0 (c7-0 / person
                                                                                   :name (c7-15 / name
                                                                                                :op1 "Putin"))
                                                                       :ARG1 (c7-14 / country
                                                                                    :name (c7-10 / name
                                                                                                 :op1 "Korea"))))))))

# ::snt What does that have to do with anything
# ::tokens ["What", "does", "that", "have", "to", "do", "with", "anything"]
# ::lemmas ["what", "do", "that", "have", "to", "do", "with", "anything"]
(c8-3 / have-to-do-with-04
      :ARG0 (c8-2 / that)
      :ARG1 (c8-0 / anything)
      :ARG2 (c8-1 / amr-unknown))

# ::snt And those were by accident She was on her way to the ladies room and ended up in some meeting
# ::tokens ["And", "those", "were", "by", "accident", "She", "was", "on", "her", "way", "to", "the", "ladies", "room", "and", "ended", "up", "in", "some", "meeting"]
# ::lemmas ["and", "those", "be", "by", "accident", "she", "be", "on", "her", "way", "to", "the", "lady", "room", "and", "end", "up", "in", "some", "meeting"]
(c9-9 / multi-sentence
      :snt1 (c9-7 / and
                  :op2 (c9-3 / accident
                             :domain (c9-4 / that))
                  :snt2-of c9-9)
      :op1 (c9-11 / go-02
                  :ARG0 (c9-8 / she)
                  :ARG4 (c9-0 / room
                              :mod (c9-10 / ladies))
                  :direction (c9-5 / way))
      :op2 (c9-2 / end-up-03
                 :ARG1 c9-8
                 :ARG2 (c9-1 / meet-03
                             :ARG0 c9-8
                             :mod (c9-6 / some))))

# ::snt You must Inpeach MaxineVVaters
# ::tokens ["You", "must", "Inpeach", "MaxineVVaters"]
# ::lemmas ["you", "must", "Inpeach", "maxinevvater"]
(c10-0 / obligate-01
       :ARG1 (c10-4 / you)
       :ARG2 (c10-3 / become-01
                    :ARG1 c10-4
                    :ARG2 (c10-1 / person
                                 :name (c10-2 / name
                                              :op1 "MaxineVVaters"))))

# ::snt Im thinkin thats a great thing for ALL Americans Ms Heather     MAGA America
# ::tokens ["I", "m", "thinkin", "that", "s", "a", "great", "thing", "for", "ALL", "Americans", "Ms", "Heather", "    ", "MAGA", "America"]
# ::lemmas ["i", "be", "thinkin", "that", "s", "a", "great", "thing", "for", "all", "Americans", "Ms", "Heather", "    ", "MAGA", "America"]
(c11-7 / say-01
       :ARG0 (c11-10 / i)
       :ARG1 (c11-4 / think-01
                    :ARG0 c11-10
                    :ARG1 (c11-9 / great
                                 :domain (c11-11 / thing
                                                 :mod (c11-6 / that))
                                 :beneficiary (c11-1 / person
                                                     :mod (c11-2 / country
                                                                 :name (c11-8 / name
                                                                              :op1 "America"))
                                                     :mod (c11-5 / all))))
       :ARG2 (c11-0 / person
                    :name (c11-3 / name
                                 :op1 "Ms"
                                 :op2 "Heather")))

# ::snt But she will be the first to speak crap on our President
# ::tokens ["But", "she", "will", "be", "the", "first", "to", "speak", "crap", "on", "our", "President"]
# ::lemmas ["but", "she", "will", "be", "the", "first", "to", "speak", "crap", "on", "our", "President"]
(c12-2 / contrast-01
       :ARG2 (c12-7 / speak-01
                    :ARG0 (c12-5 / she
                                 :ord (c12-0 / ordinal-entity
                                             :value 1))
                    :ARG1 (c12-6 / crap)
                    :ARG3 (c12-3 / person
                                 :ARG0-of (c12-8 / have-org-role-91
                                                 :ARG2 (c12-1 / president))
                                 :poss (c12-4 / we))))

# ::snt And you expected more for someone who has milked the public 35 years      Term limits
# ::tokens ["And", "you", "expected", "more", "for", "someone", "who", "has", "milked", "the", "public", "35", "years", "     ", "Term", "limits"]
# ::lemmas ["and", "you", "expect", "more", "for", "someone", "who", "have", "milk", "the", "public", "35", "years", "     ", "Term", "limit"]
(c13-5 / and
       :op2 (c13-2 / expect-01
                   :ARG0 (c13-10 / you)
                   :ARG1 (c13-7 / more)
                   :beneficiary (c13-6 / someone
                                       :ARG0-of (c13-1 / milk-02
                                                       :ARG1 (c13-3 / public)
                                                       :ARG2 (c13-8 / limit-01
                                                                    :ARG1 (c13-4 / term))
                                                       :duration (c13-9 / temporal-quantity
                                                                        :unit (c13-0 / year)
                                                                        :quant 35)))))

# ::snt Because Pelose told her they are held at President Bushs Ranch
# ::tokens ["Because", "Pelose", "told", "her", "they", "are", "held", "at", "President", "Bushs", "Ranch"]
# ::lemmas ["because", "Pelose", "tell", "her", "they", "be", "hold", "at", "President", "Bushs", "Ranch"]
(c14-3 / cause-01
       :ARG0 (c14-7 / tell-01
                    :ARG0 (c14-4 / person
                                 :name (c14-10 / name
                                               :op1 "Pelose"))
                    :ARG1 (c14-9 / hold-01
                                 :ARG1 (c14-11 / they)
                                 :location (c14-1 / ranch
                                                  :poss (c14-2 / person
                                                               :name (c14-5 / name
                                                                            :op1 "Bush")
                                                               :ARG0-of (c14-6 / have-org-role-91
                                                                               :ARG2 (c14-0 / president)))))
                    :ARG2 (c14-8 / she)))

# ::snt Yet they keep voting for that creature
# ::tokens ["Yet", "they", "keep", "voting", "for", "that", "creature"]
# ::lemmas ["yet", "they", "keep", "vote", "for", "that", "creature"]
(c15-3 / keep-02
       :ARG0 (c15-1 / they)
       :ARG1 (c15-2 / vote-01
                    :ARG0 c15-1
                    :ARG1 (c15-0 / creature
                                 :mod (c15-4 / that)))
       :mod (c15-5 / yet))

# ::snt overachiever
# ::tokens ["overachiever"]
# ::lemmas ["overachiever"]
(c16-1 / person
       :ARG0-of (c16-0 / achieve-01)
       :mod (c16-2 / over))

# ::snt Then she owes American people 90 of wages she earned for her disservice Oh I forgot she thinks its ok to not work  still get paid
# ::tokens ["Then", "she", "owes", "American", "people", "90", "of", "wages", "she", "earned", "for", "her", "disservice", "Oh", "I", "forgot", "she", "thinks", "its", "ok", "to", "not", "work", " ", "still", "get", "paid"]
# ::lemmas ["then", "she", "owe", "American", "people", "90", "of", "wage", "she", "earn", "for", "her", "disservice", "oh", "i", "forget", "she", "think", "its", "ok", "to", "not", "work", " ", "still", "get", "pay"]
(c17-15 / multi-sentence
        :snt1 (c17-0 / owe-01
                     :ARG0 (c17-14 / she)
                     :ARG1 (c17-3 / monetary-quantity
                                  :unit (c17-4 / dollar)
                                  :ARG1-of (c17-5 / earn-01
                                                  :ARG0 c17-14
                                                  :ARG3 (c17-11 / serve-01
                                                                :ARG0 c17-14))
                                  :quant 90)
                     :ARG2 (c17-6 / person
                                  :mod (c17-7 / country
                                              :name (c17-16 / name
                                                            :op1 "America")))
                     :time (c17-9 / then))
        :snt2 (c17-13 / forget-01
                      :ARG0 (c17-17 / i)
                      :ARG1 (c17-18 / think-01
                                    :ARG0 (c17-10 / she)
                                    :ARG1 (c17-1 / okay-04
                                                 :ARG1 (c17-12 / work-01
                                                               :ARG0 c17-10
                                                               :polarity -))))
        :snt3 (c17-2 / pay-01
                     :ARG2 c17-10
                     :mod (c17-8 / still)))

# ::snt No show Waters misses 90 of meetings
# ::tokens ["No", "show", "Waters", "misses", "90", "of", "meetings"]
# ::lemmas ["no", "show", "Waters", "miss", "90", "of", "meeting"]
(c18-2 / show-01
       :ARG1 (c18-3 / miss-02
                    :ARG0 (c18-1 / person
                                 :name (c18-4 / name
                                              :op1 "Waters"))
                    :ARG1 (c18-0 / meet-03
                                 :ARG1-of (c18-5 / include-91
                                                 :ARG2 (c18-6 / meet-03))
                                 :quant 90))
       :polarity -)

# ::snt Good M Waters read
# ::tokens ["Good", "M", "Waters", "read"]
# ::lemmas ["Good", "M", "Waters", "read"]
(c19-3 / read-01
       :ARG0 (c19-1 / person
                    :name (c19-2 / name
                                 :op1 "M"
                                 :op2 "Waters"))
       :ARG1-of (c19-0 / good-02))

# ::snt She only has 10 Of a brain after all shes a Democrap
# ::tokens ["She", "only", "has", "10", "Of", "a", "brain", "after", "all", "she", "s", "a", "Democrap"]
# ::lemmas ["she", "only", "have", "10", "of", "a", "brain", "after", "all", "she", "s", "a", "Democrap"]
(c20-5 / have-03
       :ARG0 (c20-4 / she)
       :ARG1 (c20-6 / brain
                    :mod (c20-0 / only)
                    :quant 10)
       :mod (c20-3 / after-all)
       :ARG1-of (c20-2 / cause-01
                       :ARG0 (c20-1 / democrap
                                    :domain c20-4)))

# ::snt Too busy poverty pimpn
# ::tokens ["Too", "busy", "poverty", "pimpn"]
# ::lemmas ["too", "busy", "poverty", "pimpn"]
(c21-3 / have-degree-91
       :ARG1 (c21-0 / poor)
       :ARG2 (c21-1 / busy-01
                    :ARG1 c21-0)
       :ARG3 (c21-2 / too))

# ::snt Dump her ass
# ::tokens ["Dump", "her", "ass"]
# ::lemmas ["dump", "her", "ass"]
(c22-0 / dump-01
       :ARG0 (c22-3 / you)
       :ARG1 (c22-1 / ass
                    :part-of (c22-2 / she))
       :mode imperative)

# ::snt So why is she still congresswoman What is she being paid for Why are the people still voting her in Why are there no term limits
# ::tokens ["So", "why", "is", "she", "still", "congresswoman", "What", "is", "she", "being", "paid", "for", "Why", "are", "the", "people", "still", "voting", "her", "in", "Why", "are", "there", "no", "term", "limits"]
# ::lemmas ["so", "why", "be", "she", "still", "congresswoman", "what", "be", "she", "be", "pay", "for", "why", "be", "the", "people", "still", "vote", "her", "in", "why", "be", "there", "no", "term", "limit"]
(c23-12 / multi-sentence
        :snt1 (c23-2 / cause-01
                     :ARG0 (c23-8 / amr-unknown)
                     :ARG1 (c23-11 / have-org-role-91
                                   :ARG0 (c23-10 / she)
                                   :ARG1 (c23-15 / government-organization
                                                 :name (c23-17 / name
                                                               :op1 "Congress"))
                                   :ARG2 (c23-13 / congresswoman)
                                   :time (c23-7 / still)))
        :snt2 (c23-3 / pay-01
                     :ARG2 (c23-6 / she))
        :snt3 (c23-0 / cause-01
                     :ARG0 (c23-4 / amr-unknown)
                     :ARG1 (c23-9 / vote-01
                                  :ARG0 (c23-1 / person)
                                  :ARG1 c23-6
                                  :time (c23-16 / still)))
        :snt4 (c23-14 / limit-01
                      :ARG1 (c23-5 / term)
                      :polarity -))

# ::snt She needs to refund the taxpayer money
# ::tokens ["She", "needs", "to", "refund", "the", "taxpayer", "money"]
# ::lemmas ["she", "need", "to", "refund", "the", "taxpayer", "money"]
(c24-0 / obligate-01
       :ARG2 (c24-1 / refund-01
                    :ARG0 (c24-5 / she)
                    :ARG1 (c24-6 / money
                                 :source (c24-3 / person
                                                :ARG0-of (c24-2 / pay-01
                                                                :ARG1 (c24-4 / tax-01))))
                    :ARG2 c24-5))

# ::snt What a job No wonder they hate Trump because he wants to drain the swamp Term limits100
# ::tokens ["What", "a", "job", "No", "wonder", "they", "hate", "Trump", "because", "he", "wants", "to", "drain", "the", "swamp", "Term", "limits100"]
# ::lemmas ["what", "a", "job", "no", "wonder", "they", "hate", "Trump", "because", "he", "want", "to", "drain", "the", "swamp", "term", "limits100"]
(c25-5 / wonder-02
       :ARG1 (c25-7 / hate-01
                    :ARG0 (c25-4 / they)
                    :ARG1 (c25-2 / person
                                 :name (c25-9 / name
                                              :op1 "Trump"))
                    :ARG1-of (c25-3 / cause-01
                                    :ARG0 (c25-0 / want-01
                                                 :ARG0 c25-2
                                                 :ARG1 (c25-1 / drain-01
                                                              :ARG0 c25-2
                                                              :ARG1 (c25-6 / swamp)
                                                              :ARG2 (c25-8 / limit-01
                                                                           :ARG1 (c25-10 / term))))))
       :polarity -)

# ::snt What a surprise Not Shes a nut case
# ::tokens ["What", "a", "surprise", "Not", "She", "s", "a", "nut", "case"]
# ::lemmas ["what", "a", "surprise", "not", "she", "s", "a", "nut", "case"]
(c26-0 / contrast-01
       :ARG1 (c26-2 / surprise-01
                    :degree (c26-1 / so))
       :ARG2 (c26-4 / nutcase
                    :domain (c26-3 / he)))

# ::snt Why would httpsheshow  up to work when she doesnt even live in the district she reps
# ::tokens ["Why", "would", "httpsheshow", " ", "up", "to", "work", "when", "she", "does", "nt", "even", "live", "in", "the", "district", "she", "reps"]
# ::lemmas ["why", "would", "httpsheshow", " ", "up", "to", "work", "when", "she", "do", "not", "even", "live", "in", "the", "district", "she", "rep"]
(c27-1 / cause-01
       :ARG0 (c27-5 / amr-unknown)
       :ARG1 (c27-2 / up-to
                    :op1 (c27-4 / work-01
                                :ARG0 (c27-6 / she))
                    :condition (c27-7 / live-01
                                      :ARG0 c27-6
                                      :location (c27-0 / district)
                                      :mod (c27-3 / even)
                                      :polarity -)))

# ::snt Strange how upset the draining of the Swamp Maxine WATERS  Debbie WASSER german word for waterman are Poetic irony poor bottom feeders
# ::tokens ["Strange", "how", "upset", "the", "draining", "of", "the", "Swamp", "Maxine", "WATERS", " ", "Debbie", "WASSER", "german", "word", "for", "waterman", "are", "Poetic", "irony", "poor", "bottom", "feeders"]
# ::lemmas ["strange", "how", "upset", "the", "draining", "of", "the", "Swamp", "Maxine", "water", " ", "debbie", "WASSER", "german", "word", "for", "waterman", "be", "poetic", "irony", "poor", "bottom", "feeder"]
(c28-13 / multi-sentence
        :snt1 (c28-11 / strange
                      :domain (c28-5 / upset-01
                                     :ARG0 (c28-3 / drain-01
                                                  :ARG1 (c28-12 / local-region
                                                                :name (c28-15 / name
                                                                              :op1 "Swamp")))
                                     :degree (c28-9 / so)))
        :snt2 (c28-8 / word-01
                     :ARG0 (c28-4 / person
                                  :name (c28-6 / name
                                               :op1 "Debbie"
                                               :op2 "Waterser")
                                  :mod (c28-7 / country
                                              :name (c28-2 / name
                                                           :op1 "Germany")))
                     :ARG1 (c28-1 / person
                                  :ARG0-of (c28-10 / feed-01
                                                   :ARG2 (c28-17 / bottom))
                                  :mod (c28-0 / poor))
                     :mod (c28-16 / irony
                                  :mod (c28-14 / poetry))))

# ::snt Well she devotes alot of time to her home district   South Central LA A model of prosperity  maxinewaters doesnt  live in  own district
# ::tokens ["Well", "she", "devotes", "alot", "of", "time", "to", "her", "home", "district", "  ", "South", "Central", "LA", "A", "model", "of", "prosperity", " ", "maxinewaters", "does", "nt", " ", "live", "in", " ", "own", "district"]
# ::lemmas ["well", "she", "devote", "alot", "of", "time", "to", "her", "home", "district", "  ", "South", "Central", "LA", "a", "model", "of", "prosperity", " ", "maxinewater", "do", "not", " ", "live", "in", " ", "own", "district"]
(c29-2 / devotes-01
       :ARG0 (c29-11 / she)
       :ARG1 (c29-5 / time
                    :quant (c29-12 / lot))
       :ARG2 (c29-7 / district
                    :mod (c29-13 / home)
                    :poss c29-11
                    :ARG1-of (c29-14 / mean-01
                                     :ARG2 (c29-8 / and
                                                  :op1 (c29-1 / model-01
                                                              :ARG1 (c29-3 / prosper-01)
                                                              :location (c29-9 / local-region
                                                                               :name (c29-15 / name
                                                                                             :op1 "South"
                                                                                             :op2 "Central"
                                                                                             :op3 "LA")))
                                                  :op2 (c29-10 / live-01
                                                               :ARG0 (c29-0 / person
                                                                            :name (c29-4 / name
                                                                                         :op1 "Maxinewaters"))
                                                               :location (c29-16 / district
                                                                                 :poss c29-0)
                                                               :polarity -))))
       :mod (c29-6 / well))

# ::snt In the dictionary under Maxine Waters you will find the word swamp
# ::tokens ["In", "the", "dictionary", "under", "Maxine", "Waters", "you", "will", "find", "the", "word", "swamp"]
# ::lemmas ["in", "the", "dictionary", "under", "Maxine", "Waters", "you", "will", "find", "the", "word", "swamp"]
(c30-4 / find-01
       :ARG0 (c30-7 / you)
       :ARG1 (c30-3 / word
                    :mod (c30-5 / swamp))
       :location (c30-0 / dictionary
                        :location (c30-2 / under
                                         :op1 (c30-1 / person
                                                     :name (c30-6 / name
                                                                  :op1 "Maxine"
                                                                  :op2 "Waters")))))

# ::snt She said she doesnt need to show up as she is there both in mind and spirit as she lounges in her back fantasizing of VVP riding his horse
# ::tokens ["She", "said", "she", "does", "nt", "need", "to", "show", "up", "as", "she", "is", "there", "both", "in", "mind", "and", "spirit", "as", "she", "lounges", "in", "her", "back", "fantasizing", "of", "VVP", "riding", "his", "horse"]
# ::lemmas ["she", "say", "she", "do", "not", "need", "to", "show", "up", "as", "she", "be", "there", "both", "in", "mind", "and", "spirit", "as", "she", "lounge", "in", "her", "back", "fantasizing", "of", "VVP", "ride", "his", "horse"]
(c31-11 / say-01
        :ARG0 (c31-8 / she
                     :part (c31-16 / back))
        :ARG1 (c31-15 / need-01
                      :ARG0 c31-8
                      :ARG1 (c31-7 / show-up-02
                                   :ARG1 c31-8)
                      :ARG1-of (c31-3 / cause-01
                                      :ARG0 (c31-0 / be-located-at-91
                                                   :ARG1 c31-8
                                                   :ARG2 (c31-6 / there)
                                                   :manner (c31-9 / and
                                                                  :op1 (c31-12 / mind-05
                                                                               :ARG0 c31-8)
                                                                  :op2 (c31-2 / spirit))
                                                   :time (c31-13 / lounge-01
                                                                 :ARG0 c31-8
                                                                 :ARG1 c31-16
                                                                 :manner (c31-10 / fantasize-01
                                                                                 :ARG0 c31-8
                                                                                 :ARG1 (c31-1 / ride-01
                                                                                              :ARG0 (c31-4 / person
                                                                                                           :name (c31-5 / name
                                                                                                                        :op1 "VVP"))
                                                                                              :ARG1 (c31-14 / horse
                                                                                                            :poss c31-4))))))
                      :polarity -))

# ::snt Loser
# ::tokens ["Loser"]
# ::lemmas ["Loser"]
(c32-2 / have-degree-91
       :ARG2 (c32-0 / close-10)
       :ARG3 (c32-1 / more))

# ::snt They shud deduct wages from her this year then
# ::tokens ["They", "shud", "deduct", "wages", "from", "her", "this", "year", "then"]
# ::lemmas ["they", "shud", "deduct", "wage", "from", "her", "this", "year", "then"]
(c33-0 / deduct-01
       :ARG0 (c33-1 / they)
       :ARG1 (c33-2 / wage)
       :ARG2 (c33-4 / she)
       :time (c33-6 / year
                    :mod (c33-5 / this))
       :mod (c33-3 / then))

# ::snt Clearly she doesnt like to work she shouldnt be getting paid
# ::tokens ["Clearly", "she", "does", "nt", "like", "to", "work", "she", "should", "nt", "be", "getting", "paid"]
# ::lemmas ["clearly", "she", "do", "not", "like", "to", "work", "she", "should", "not", "be", "get", "pay"]
(c34-2 / cause-01
       :ARG0 (c34-1 / dislike-01
                    :ARG0 (c34-5 / she)
                    :ARG1 (c34-4 / work-01
                                 :ARG0 c34-5)
                    :ARG1-of (c34-6 / clear-06))
       :ARG1 (c34-0 / recommend-01
                    :ARG1 (c34-3 / pay-01
                                 :ARG2 c34-5)
                    :polarity -))

# ::snt Another reason why there must be term limits
# ::tokens ["Another", "reason", "why", "there", "must", "be", "term", "limits"]
# ::lemmas ["another", "reason", "why", "there", "must", "be", "term", "limit"]
(c35-1 / reason
       :mod (c35-4 / another)
       :ARG0-of (c35-2 / cause-01
                       :ARG1 (c35-0 / obligate-01
                                    :ARG2 (c35-5 / limit-01
                                                 :ARG1 (c35-3 / term)))))

# ::snt Democrat politicians dont like to actually earn their paychecks they just enjoy receiving them
# ::tokens ["Democrat", "politicians", "do", "nt", "like", "to", "actually", "earn", "their", "paychecks", "they", "just", "enjoy", "receiving", "them"]
# ::lemmas ["Democrat", "politician", "do", "not", "like", "to", "actually", "earn", "their", "paycheck", "they", "just", "enjoy", "receive", "them"]
(c36-7 / and
       :op1 (c36-3 / dislike-01
                   :ARG0 (c36-4 / politician
                                :ARG0-of (c36-9 / have-org-role-91
                                                :ARG1 (c36-1 / political-party
                                                             :name (c36-10 / name
                                                                           :op1 "Democratic"
                                                                           :op2 "Party"))))
                   :ARG1 (c36-5 / earn-01
                                :ARG0 c36-4
                                :ARG1 (c36-0 / paycheck
                                             :poss c36-4)
                                :ARG1-of (c36-6 / actual-02)))
       :op2 (c36-8 / enjoy-01
                   :ARG0 c36-4
                   :ARG1 (c36-2 / receive-01
                                :ARG0 c36-4
                                :ARG1 c36-0)
                   :mod (c36-11 / just)))

# ::snt GOOD The more she stays away the less damage is done
# ::tokens ["GOOD", "The", "more", "she", "stays", "away", "the", "less", "damage", "is", "done"]
# ::lemmas ["good", "the", "more", "she", "stay", "away", "the", "less", "damage", "be", "do"]
(c37-9 / good-02
       :ARG1 (c37-1 / correlate-91
                    :ARG1 (c37-7 / more
                                 :ARG3-of (c37-6 / have-quant-91
                                                 :ARG1 (c37-5 / stay-01
                                                              :ARG1 (c37-3 / she)
                                                              :ARG3 (c37-4 / away))))
                    :ARG2 (c37-8 / less
                                 :ARG3-of (c37-2 / have-quant-91
                                                 :ARG1 (c37-0 / damage-01)))))

# ::snt RodStryker  Id thank her I wouldnt want to see that old talking mule
# ::tokens ["RodStryker", " ", "I", "d", "thank", "her", "I", "would", "nt", "want", "to", "see", "that", "old", "talking", "mule"]
# ::lemmas ["RodStryker", " ", "i", "d", "thank", "her", "i", "would", "not", "want", "to", "see", "that", "old", "talking", "mule"]
(c38-6 / say-01
       :ARG0 (c38-9 / i)
       :ARG1 (c38-2 / thank-01
                    :ARG0 c38-9
                    :ARG1 (c38-1 / person
                                 :name (c38-8 / name
                                              :op1 "RodStryker")))
       :ARG2 (c38-3 / want-01
                    :ARG0 c38-9
                    :ARG1 (c38-4 / see-01
                                 :ARG0 c38-9
                                 :ARG1 (c38-7 / mule
                                              :ARG0-of (c38-10 / talk-01)
                                              :mod (c38-0 / old)
                                              :mod (c38-5 / that)))
                    :polarity -))

# ::snt She keeps forgetting where he office is or she is a complete moron
# ::tokens ["She", "keeps", "forgetting", "where", "he", "office", "is", "or", "she", "is", "a", "complete", "moron"]
# ::lemmas ["she", "keep", "forget", "where", "he", "office", "be", "or", "she", "be", "a", "complete", "moron"]
(c39-0 / or
       :op1 (c39-5 / keep-02
                   :ARG0 (c39-4 / she)
                   :ARG1 (c39-3 / forget-01
                                :ARG0 c39-4
                                :ARG1 (c39-6 / location
                                             :location-of (c39-1 / office
                                                                 :poss (c39-7 / he)))))
       :op2 (c39-8 / moron
                   :ARG1-of (c39-2 / complete-02)
                   :domain c39-4))

# ::snt Lets get rid of her Shes a Disgrace
# ::tokens ["Lets", "get", "rid", "of", "her", "She", "s", "a", "Disgrace"]
# ::lemmas ["let", "get", "rid", "of", "her", "she", "s", "a", "disgrace"]
(c40-0 / rid-01
       :ARG0 (c40-2 / we)
       :ARG1 (c40-1 / dish-01
                    :ARG0 (c40-4 / she)
                    :ARG1 (c40-3 / shame))
       :mode imperative)

# ::snt LVNancy Special public servant of We The People
# ::tokens ["LVNancy", "Special", "public", "servant", "of", "We", "The", "People"]
# ::lemmas ["LVNancy", "special", "public", "servant", "of", "we", "the", "people"]
(c41-2 / person
       :name (c41-6 / name
                    :op1 "LVNancy")
       :ARG0-of (c41-5 / serve-01
                       :ARG2 (c41-1 / public)
                       :ARG1-of (c41-4 / special-02))
       :poss (c41-0 / organization
                    :name (c41-3 / name
                                 :op1 "We"
                                 :op2 "The"
                                 :op3 "People")))

# ::snt Shes busy scamming
# ::tokens ["She", "s", "busy", "scamming"]
# ::lemmas ["she", "s", "busy", "scamming"]
(c42-0 / busy-01
       :ARG1 (c42-2 / he)
       :ARG2 (c42-1 / scam-01
                    :ARG0 c42-2))

# ::snt I guess resisting is a full time job
# ::tokens ["I", "guess", "resisting", "is", "a", "full", "time", "job"]
# ::lemmas ["i", "guess", "resist", "be", "a", "full", "time", "job"]
(c43-2 / guess-01
       :ARG0 (c43-3 / i)
       :ARG1 (c43-4 / job
                    :mod (c43-1 / full-time)
                    :domain (c43-0 / resist-01)))

# ::snt Maxine dumped her Black constituents when the CA Dem Party did in support of the illegal alien colonization of Los Angeles
# ::tokens ["Maxine", "dumped", "her", "Black", "constituents", "when", "the", "CA", "Dem", "Party", "did", "in", "support", "of", "the", "illegal", "alien", "colonization", "of", "Los", "Angeles"]
# ::lemmas ["maxine", "dump", "her", "black", "constituent", "when", "the", "CA", "Dem", "Party", "do", "in", "support", "of", "the", "illegal", "alien", "colonization", "of", "Los", "Angeles"]
(c44-4 / dump-01
       :ARG0 (c44-5 / person
                    :name (c44-14 / name
                                  :op1 "Maxine"))
       :ARG1 (c44-6 / constituent
                    :ARG1-of (c44-15 / black-05)
                    :poss c44-5)
       :time (c44-11 / support-01
                     :ARG0 (c44-1 / political-party
                                  :name (c44-7 / name
                                               :op1 "Dem"
                                               :op2 "Party")
                                  :mod (c44-9 / state
                                              :name (c44-3 / name
                                                           :op1 "CA")))
                     :ARG1 (c44-12 / colonize-01
                                   :ARG0 (c44-0 / person
                                                :ARG1-of (c44-10 / alien-01)
                                                :ARG1-of (c44-13 / legal-02
                                                                 :polarity -))
                                   :ARG1 (c44-2 / city
                                                :name (c44-8 / name
                                                             :op1 "Los"
                                                             :op2 "Angeles")))))

# ::snt Where do the Democrats get these dingbats
# ::tokens ["Where", "do", "the", "Democrats", "get", "these", "dingbats"]
# ::lemmas ["where", "do", "the", "Democrats", "get", "these", "dingbat"]
(c45-7 / get-01
       :ARG0 (c45-2 / person
                    :ARG0-of (c45-5 / have-org-role-91
                                    :ARG1 (c45-0 / political-party
                                                 :name (c45-6 / name
                                                              :op1 "Democratic"
                                                              :op2 "Party"))))
       :ARG1 (c45-1 / dingbat
                    :mod (c45-3 / this))
       :location (c45-4 / amr-unknown))

# ::snt Shes passed 3 bills in 28 years WhaT was her job description
# ::tokens ["She", "s", "passed", "3", "bills", "in", "28", "years", "WhaT", "was", "her", "job", "description"]
# ::lemmas ["she", "s", "pass", "3", "bill", "in", "28", "years", "WhaT", "be", "her", "job", "description"]
(c46-9 / multi-sentence
       :snt1 (c46-5 / pass-01
                    :ARG0 (c46-1 / person
                                 :name (c46-10 / name
                                               :op1 "Shes"))
                    :ARG1 (c46-11 / bill
                                  :quant 3)
                    :time (c46-2 / before
                                 :op1 (c46-6 / now)
                                 :duration (c46-8 / temporal-quantity
                                                  :unit (c46-12 / year)
                                                  :quant 28)))
       :snt2 (c46-4 / describe-01
                    :ARG0 (c46-0 / person
                                 :name (c46-3 / name
                                              :op1 "WhaT"))
                    :ARG1 (c46-7 / job
                                 :poss c46-0)))

# ::snt Thats why shes only passed 3 bills in 35 years
# ::tokens ["That", "s", "why", "she", "s", "only", "passed", "3", "bills", "in", "35", "years"]
# ::lemmas ["that", "s", "why", "she", "s", "only", "pass", "3", "bill", "in", "35", "years"]
(c47-2 / cause-01
       :ARG0 (c47-5 / that)
       :ARG1 (c47-3 / pass-01
                    :ARG0 (c47-6 / she)
                    :ARG1 (c47-8 / bill
                                 :quant 3)
                    :mod (c47-0 / only)
                    :time (c47-1 / before
                                 :op1 (c47-7 / now)
                                 :duration (c47-4 / temporal-quantity
                                                  :unit (c47-9 / year)
                                                  :quant 35))))

# ::snt MadMaxine must go
# ::tokens ["MadMaxine", "must", "go"]
# ::lemmas ["MadMaxine", "must", "go"]
(c48-0 / obligate-01
       :ARG2 (c48-1 / go-02
                    :ARG0 (c48-2 / person
                                 :name (c48-3 / name
                                              :op1 "MadMaxine"))))

# ::snt When she did show up she added absolutely to substance to the proceedings
# ::tokens ["When", "she", "did", "show", "up", "she", "added", "absolutely", "to", "substance", "to", "the", "proceedings"]
# ::lemmas ["when", "she", "do", "show", "up", "she", "add", "absolutely", "to", "substance", "to", "the", "proceeding"]
(c49-4 / add-02
       :ARG0 (c49-5 / she)
       :ARG1 (c49-3 / substance)
       :ARG2 (c49-0 / proceeding-02)
       :degree (c49-1 / absolute)
       :time (c49-2 / show-up-02
                    :ARG1 c49-5))

# ::snt why because theres no money in it right maxine
# ::tokens ["why", "because", "there", "s", "no", "money", "in", "it", "right", "maxine"]
# ::lemmas ["why", "because", "there", "s", "no", "money", "in", "it", "right", "maxine"]
(c50-4 / say-01
       :ARG0 (c50-7 / i)
       :ARG1 (c50-2 / cause-01
                    :ARG0 (c50-5 / money
                                 :location (c50-0 / it)
                                 :ARG1-of (c50-1 / right-03)
                                 :polarity -))
       :ARG2 (c50-3 / person
                    :name (c50-6 / name
                                 :op1 "Maxine")))
