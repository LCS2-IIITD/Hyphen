# ::snt go home then stop trying to change our country
# ::tokens ["go", "home", "then", "stop", "trying", "to", "change", "our", "country"]
# ::lemmas ["go", "home", "then", "stop", "try", "to", "change", "our", "country"]
(c1-3 / and
      :op1 (c1-7 / go-02
                 :ARG0 (c1-8 / you)
                 :ARG4 (c1-5 / home)
                 :mode imperative)
      :op2 (c1-4 / stop-01
                 :ARG0 c1-8
                 :ARG1 (c1-1 / try-01
                             :ARG0 c1-8
                             :ARG1 (c1-0 / change-01
                                         :ARG0 c1-8
                                         :ARG1 (c1-6 / country
                                                     :poss (c1-2 / we))))
                 :mode imperative))

# ::snt they get offended by everything
# ::tokens ["they", "get", "offended", "by", "everything"]
# ::lemmas ["they", "get", "offend", "by", "everything"]
(c2-0 / offend-01
      :ARG0 (c2-1 / everything)
      :ARG1 (c2-2 / they))

# ::snt well they will be going home soon to recite whatever they want
# ::tokens ["well", "they", "will", "be", "going", "home", "soon", "to", "recite", "whatever", "they", "want"]
# ::lemmas ["well", "they", "will", "be", "go", "home", "soon", "to", "recite", "whatever", "they", "want"]
(c3-7 / go-02
      :ARG0 (c3-3 / they)
      :ARG4 (c3-6 / home)
      :time (c3-5 / soon)
      :purpose (c3-0 / recite-01
                     :ARG0 c3-3
                     :ARG1 (c3-4 / whatever
                                 :ARG1-of (c3-1 / want-01
                                                :ARG0 c3-3)))
      :mod (c3-2 / well))

# ::snt GTFO
# ::tokens ["GTFO"]
# ::lemmas ["GTFO"]
(c4-0 / go-out-17
      :ARG0 (c4-2 / you)
      :mod (c4-1 / fucking
                 :mode expressive)
      :mode imperative)

# ::snt it is of OUR land Dont like  Leave
# ::tokens ["it", "is", "of", "OUR", "land", "Do", "nt", "like", " ", "Leave"]
# ::lemmas ["it", "be", "of", "our", "land", "do", "not", "like", " ", "leave"]
(c5-3 / land
      :poss (c5-1 / we)
      :domain (c5-4 / it)
      :ARG1-of (c5-0 / resemble-01
                     :ARG2 (c5-2 / leave-11
                                 :ARG0 c5-1
                                 :mode imperative)
                     :polarity -))

# ::snt This is the United States of America recite the national anthem or return to an Muslim country
# ::tokens ["This", "is", "the", "United", "States", "of", "America", "recite", "the", "national", "anthem", "or", "return", "to", "an", "Muslim", "country"]
# ::lemmas ["this", "be", "the", "United", "States", "of", "America", "recite", "the", "national", "anthem", "or", "return", "to", "an", "Muslim", "country"]
(c6-0 / or
      :op1 (c6-1 / recite-01
                 :ARG0 (c6-3 / country
                             :name (c6-10 / name
                                          :op1 "United"
                                          :op2 "States"
                                          :op3 "of"
                                          :op4 "America")
                             :domain (c6-5 / this))
                 :ARG1 (c6-6 / anthem
                             :mod (c6-4 / nation)))
      :op2 (c6-8 / return-01
                 :ARG1 c6-3
                 :ARG4 (c6-9 / country
                             :mod (c6-7 / religious-group
                                        :name (c6-2 / name
                                                    :op1 "Muslim")))))

# ::snt Dont like it go home end of discussion
# ::tokens ["Do", "nt", "like", "it", "go", "home", "end", "of", "discussion"]
# ::lemmas ["do", "not", "like", "it", "go", "home", "end", "of", "discussion"]
(c7-3 / and
      :op1 (c7-4 / like-02
                 :ARG0 (c7-7 / i)
                 :ARG1 (c7-6 / go-02
                             :ARG0 (c7-0 / it)
                             :ARG4 (c7-5 / home))
                 :polarity -)
      :op2 (c7-2 / end-01
                 :ARG1 (c7-1 / discuss-01)))

# ::snt this is the USA   Not the middle east  If you dont love America our citizens   our flag  then get out
# ::tokens ["this", "is", "the", "USA", "  ", "Not", "the", "middle", "east", " ", "If", "you", "do", "nt", "love", "America", "our", "citizens", "  ", "our", "flag", " ", "then", "get", "out"]
# ::lemmas ["this", "be", "the", "USA", "  ", "not", "the", "middle", "east", " ", "if", "you", "do", "not", "love", "America", "our", "citizen", "  ", "our", "flag", " ", "then", "get", "out"]
(c8-11 / multi-sentence
       :snt1 (c8-4 / country
                   :name (c8-14 / name
                                :op1 "USA")
                   :domain (c8-6 / this))
       :snt2 (c8-10 / country
                    :name (c8-5 / name
                                :op1 "Middle"
                                :op2 "East")
                    :domain c8-6
                    :polarity -)
       :snt3 (c8-13 / get-05
                    :ARG0 (c8-15 / you
                                 :ARG1-of c8-13)
                    :ARG2 (c8-0 / out)
                    :condition (c8-12 / love-01
                                      :ARG0 c8-15
                                      :ARG1 (c8-1 / country
                                                  :name (c8-2 / name
                                                              :op1 "America"))
                                      :ARG1-of (c8-3 / mean-01
                                                     :ARG2 (c8-7 / and
                                                                 :op1 (c8-8 / citizen
                                                                            :poss c8-1)
                                                                 :op2 (c8-9 / flag
                                                                            :poss c8-1)))
                                      :polarity -)
                    :mode imperative))

# ::snt to bad if they dont like it then dont recite but it is the right of the people that want to and Eli eve in America
# ::tokens ["to", "bad", "if", "they", "do", "nt", "like", "it", "then", "do", "nt", "recite", "but", "it", "is", "the", "right", "of", "the", "people", "that", "want", "to", "and", "Eli", "eve", "in", "America"]
# ::lemmas ["to", "bad", "if", "they", "do", "not", "like", "it", "then", "do", "not", "recite", "but", "it", "be", "the", "right", "of", "the", "people", "that", "want", "to", "and", "Eli", "eve", "in", "America"]
(c9-3 / contrast-01
      :ARG1 (c9-12 / have-condition-91
                   :ARG1 (c9-0 / recite-01
                               :ARG0 (c9-16 / you)
                               :polarity -
                               :mode imperative)
                   :ARG2 (c9-2 / dislike-01
                               :ARG0 (c9-6 / they)
                               :ARG1 (c9-14 / it)))
      :ARG2 (c9-10 / right-05
                   :ARG1 (c9-8 / and
                               :op1 (c9-4 / person
                                          :ARG0-of (c9-7 / want-01
                                                         :ARG1 (c9-9 / recite-01
                                                                     :ARG0 c9-4)))
                               :op2 (c9-1 / person
                                          :name (c9-13 / name
                                                       :op1 "Eli"
                                                       :op2 " eve")
                                          :location (c9-11 / country
                                                           :name (c9-5 / name
                                                                       :op1 "America")))))
      :ARG1-of (c9-15 / bad-07))

# ::snt Just leave We dont want you here
# ::tokens ["Just", "leave", "We", "do", "nt", "want", "you", "here"]
# ::lemmas ["just", "leave", "we", "do", "not", "want", "you", "here"]
(c10-3 / leave-11
       :ARG0 (c10-6 / you)
       :mod (c10-5 / just)
       :ARG1-of (c10-1 / cause-01
                       :ARG0 (c10-2 / want-01
                                    :ARG0 (c10-0 / we)
                                    :ARG1 c10-6
                                    :location (c10-4 / here)
                                    :polarity -))
       :mode imperative)

# ::snt PJStrikeForce Muslims if you to be in America you must conform the Pledge Allegiance is one of them then y can PrayAMEN
# ::tokens ["PJStrikeForce", "Muslims", "if", "you", "to", "be", "in", "America", "you", "must", "conform", "the", "Pledge", "Allegiance", "is", "one", "of", "them", "then", "y", "can", "PrayAMEN"]
# ::lemmas ["pjstrikeforce", "Muslims", "if", "you", "to", "be", "in", "America", "you", "must", "conform", "the", "Pledge", "Allegiance", "be", "one", "of", "them", "then", "y", "can", "prayamen"]
(c11-10 / have-condition-91
        :ARG1 (c11-5 / possible-01
                     :ARG1 (c11-2 / pray-01
                                  :ARG0 (c11-15 / you)))
        :ARG2 (c11-0 / obligate-01
                     :ARG1 (c11-6 / conform-01
                                  :ARG1 c11-15
                                  :ARG2 (c11-1 / person
                                               :ARG1-of (c11-13 / include-91
                                                                :ARG2 (c11-11 / person
                                                                              :mod (c11-3 / religious-group
                                                                                          :name (c11-12 / name
                                                                                                        :op1 "Muslim"))))
                                               :ARG2 (c11-8 / thing
                                                            :name (c11-7 / name
                                                                         :op1 "Pledge"
                                                                         :op2 "Alarmiance"))))
                     :ARG2 (c11-14 / be-located-at-91
                                   :ARG1 c11-15
                                   :ARG2 (c11-9 / country
                                                :name (c11-4 / name
                                                             :op1 "America")))))

# ::snt PJStrikeForce tell them to get out then this is America
# ::tokens ["PJStrikeForce", "tell", "them", "to", "get", "out", "then", "this", "is", "America"]
# ::lemmas ["PJStrikeForce", "tell", "them", "to", "get", "out", "then", "this", "be", "America"]
(c12-4 / tell-01
       :ARG0 (c12-1 / person
                    :name (c12-7 / name
                                 :op1 "PJStrikeForce"))
       :ARG1 (c12-8 / get-05
                    :ARG1 (c12-9 / they)
                    :ARG2 (c12-0 / out))
       :ARG2 c12-9
       :ARG1-of (c12-2 / cause-01
                       :ARG0 (c12-6 / country
                                    :name (c12-3 / name
                                                 :op1 "America")
                                    :domain (c12-5 / this))))

# ::snt leave then
# ::tokens ["leave", "then"]
# ::lemmas ["leave", "then"]
(c13-2 / leave-11
       :ARG0 (c13-0 / you)
       :time (c13-1 / then)
       :mode imperative)

# ::snt No assimilation Go home
# ::tokens ["No", "assimilation", "Go", "home"]
# ::lemmas ["no", "assimilation", "go", "home"]
(c14-1 / go-02
       :ARG0 (c14-3 / you)
       :ARG1 (c14-2 / home)
       :ARG4 (c14-0 / assimilate-01
                    :polarity -)
       :mode imperative)

# ::snt PatriotJewelUSA Using RACIST is part of the muslim manifesto They are an invasion force NOT a religion Wake Up All
# ::tokens ["PatriotJewelUSA", "Using", "RACIST", "is", "part", "of", "the", "muslim", "manifesto", "They", "are", "an", "invasion", "force", "NOT", "a", "religion", "Wake", "Up", "All"]
# ::lemmas ["PatriotJewelUSA", "Using", "RACIST", "be", "part", "of", "the", "muslim", "manifesto", "they", "be", "an", "invasion", "force", "not", "a", "religion", "wake", "up", "all"]
(c15-13 / multi-sentence
        :snt1 (c15-4 / use-01
                     :ARG0 (c15-3 / person
                                  :name (c15-14 / name
                                                :op1 "PatriotJewelUSA"))
                     :ARG1 (c15-0 / religious-group
                                  :name (c15-5 / name
                                               :op1 "RACIST"))
                     :part-of (c15-1 / manifesto
                                     :mod (c15-11 / religious-group
                                                  :name (c15-2 / name
                                                               :op1 "Muslim"))))
        :snt2 (c15-6 / contrast-01
                     :ARG1 (c15-12 / force
                                   :ARG0-of (c15-15 / invade-01)
                                   :domain (c15-7 / they))
                     :ARG2 (c15-10 / religion
                                   :domain c15-7
                                   :polarity -))
        :snt3 (c15-8 / wake-up-02
                     :ARG0 (c15-16 / you)
                     :mod (c15-9 / all)
                     :mode imperative))

# ::snt GTF OUT OF THE US Then  GO BACK TO YOUR HOMELAND MUST BE OUR RESPONSE To THIS
# ::tokens ["GTF", "OUT", "OF", "THE", "US", "Then", " ", "GO", "BACK", "TO", "YOUR", "HOMELAND", "MUST", "BE", "OUR", "RESPONSE", "To", "THIS"]
# ::lemmas ["GTF", "OUT", "OF", "THE", "US", "then", " ", "GO", "back", "to", "your", "homeland", "must", "be", "our", "response", "to", "this"]
(c16-6 / and
       :op1 (c16-0 / out-06
                   :ARG2 (c16-3 / country
                                :name (c16-10 / name
                                              :op1 "US"))
                   :mod (c16-7 / fuck
                               :mode expressive))
       :op2 (c16-9 / go-back-19
                   :ARG1 (c16-12 / you)
                   :ARG2 (c16-8 / homeland
                                :poss c16-12)
                   :time (c16-4 / then))
       :op3 (c16-1 / obligate-01
                   :ARG2 (c16-2 / RESPONSE-01
                                :ARG0 (c16-5 / we)
                                :ARG1 (c16-11 / this))))

# ::snt alesaburge Then please take them out of our schools and move back to where you came from
# ::tokens ["alesaburge", "Then", "please", "take", "them", "out", "of", "our", "schools", "and", "move", "back", "to", "where", "you", "came", "from"]
# ::lemmas ["alesaburge", "then", "please", "take", "them", "out", "of", "our", "school", "and", "move", "back", "to", "where", "you", "come", "from"]
(c17-7 / say-01
       :ARG1 (c17-6 / and
                    :op1 (c17-3 / take-out-11
                                :ARG0 (c17-12 / you)
                                :ARG1 (c17-11 / they)
                                :source (c17-5 / school
                                               :poss (c17-4 / we))
                                :mode imperative
                                :polite +)
                    :op2 (c17-8 / move-01
                                :ARG0 c17-12
                                :ARG1 c17-12
                                :ARG2 (c17-9 / location
                                             :ARG3-of (c17-1 / come-01
                                                             :ARG1 c17-12))
                                :direction (c17-0 / back)
                                :mode imperative))
       :ARG2 (c17-2 / person
                    :name (c17-10 / name
                                  :op1 "alesaburge")))

# ::snt PatriotJewelUSA they should go back to where they came from then  it offends me that their offended
# ::tokens ["PatriotJewelUSA", "they", "should", "go", "back", "to", "where", "they", "came", "from", "then", " ", "it", "offends", "me", "that", "their", "offended"]
# ::lemmas ["patriotjewelusa", "they", "should", "go", "back", "to", "where", "they", "come", "from", "then", " ", "it", "offend", "me", "that", "their", "offend"]
(c18-7 / say-01
       :ARG0 (c18-10 / i)
       :ARG1 (c18-6 / and
                    :op1 (c18-1 / recommend-01
                                :ARG1 (c18-9 / go-back-19
                                             :ARG1 (c18-5 / they)
                                             :ARG2 (c18-3 / place
                                                          :ARG3-of (c18-4 / come-01
                                                                          :ARG1 c18-5))))
                    :op2 (c18-0 / offend-01
                                :ARG0 c18-0
                                :ARG1 c18-5)
                    :ARG1 c18-10)
       :ARG2 (c18-2 / person
                    :name (c18-8 / name
                                 :op1 "PatriotJewelUSA")))

# ::snt LMAO poor kids
# ::tokens ["LMAO", "poor", "kids"]
# ::lemmas ["LMAO", "poor", "kid"]
(c19-2 / kid
       :mod (c19-0 / poor)
       :mod (c19-3 / laugh-01
                   :ARG0 (c19-4 / i)
                   :manner (c19-1 / loud)
                   :mode expressive))

# ::snt STAY IN THE WONDERFUL LAND IF THE MIDDLE EASTproblem solved
# ::tokens ["STAY", "IN", "THE", "WONDERFUL", "LAND", "IF", "THE", "MIDDLE", "EASTproblem", "solved"]
# ::lemmas ["STAY", "in", "the", "wonderful", "land", "if", "the", "MIDDLE", "EASTproblem", "solve"]
(c20-4 / stay-01
       :ARG1 (c20-9 / you)
       :location (c20-5 / land
                        :ARG1-of (c20-6 / have-degree-91
                                        :ARG2 (c20-2 / sunny)
                                        :ARG3 (c20-7 / most)))
       :condition (c20-1 / solve-01
                         :ARG1 (c20-0 / problem
                                      :topic (c20-3 / world-region
                                                    :name (c20-8 / name
                                                                 :op1 "Middle"
                                                                 :op2 "East"))))
       :mode imperative)

# ::snt   ASSIMILATE OR BE DEPORTED
# ::tokens ["  ", "ASSIMILATE", "OR", "BE", "DEPORTED"]
# ::lemmas ["  ", "ASSIMILATE", "or", "be", "deport"]
(c21-0 / or
       :op1 (c21-4 / admit-01
                   :ARG1-of (c21-1 / possible-01))
       :op2 (c21-2 / admit-01
                   :ARG1 (c21-3 / thing)
                   :polarity -))

# ::snt Australias national anthem
# ::tokens ["Australias", "national", "anthem"]
# ::lemmas ["Australias", "national", "anthem"]
(c22-0 / anthem
       :mod (c22-2 / nation)
       :mod (c22-1 / country
                   :name (c22-3 / name
                                :op1 "Australia")))

# ::snt wait you claim that youre as American as any other citizen but youre offended by the national anthem
# ::tokens ["wait", "you", "claim", "that", "you", "re", "as", "American", "as", "any", "other", "citizen", "but", "you", "re", "offended", "by", "the", "national", "anthem"]
# ::lemmas ["wait", "you", "claim", "that", "you", "be", "as", "American", "as", "any", "other", "citizen", "but", "you", "be", "offend", "by", "the", "national", "anthem"]
(c23-7 / wait-01
       :ARG1 (c23-13 / you)
       :ARG2 (c23-3 / contrast-01
                    :ARG1 (c23-10 / claim-01
                                  :ARG0 c23-13
                                  :ARG1 (c23-11 / have-mod-91
                                                :ARG1 c23-13
                                                :ARG2 (c23-1 / country
                                                             :name (c23-12 / name
                                                                           :op1 "America"))
                                                :ARG3 (c23-4 / equal)
                                                :ARG4 (c23-9 / citizen
                                                             :mod (c23-8 / any)
                                                             :mod (c23-0 / other))))
                    :ARG2 (c23-2 / offend-01
                                 :ARG0 (c23-6 / anthem
                                              :mod (c23-5 / nation))
                                 :ARG1 c23-13)))

# ::snt Wellhead on back to Syria
# ::tokens ["Wellhead", "on", "back", "to", "Syria"]
# ::lemmas ["wellhead", "on", "back", "to", "Syria"]
(c24-3 / head-02
       :direction (c24-2 / back)
       :destination (c24-0 / country
                           :name (c24-1 / name
                                        :op1 "Syria")))

# ::snt go back home if you dont like the way america is its our country not yours go live in korea
# ::tokens ["go", "back", "home", "if", "you", "do", "nt", "like", "the", "way", "america", "is", "its", "our", "country", "not", "yours", "go", "live", "in", "korea"]
# ::lemmas ["go", "back", "home", "if", "you", "do", "not", "like", "the", "way", "america", "be", "its", "our", "country", "not", "yours", "go", "live", "in", "korea"]
(c25-10 / go-02
        :ARG0 (c25-13 / you)
        :ARG1 (c25-12 / back-02
                      :ARG1 c25-13
                      :ARG3 (c25-7 / home))
        :condition (c25-1 / dislike-01
                          :ARG0 c25-13
                          :ARG1 (c25-4 / way
                                       :manner-of (c25-2 / country
                                                         :name (c25-8 / name
                                                                      :op1 "America")
                                                         :ARG1-of (c25-11 / instead-of-91
                                                                          :ARG2 (c25-6 / country
                                                                                       :poss c25-13
                                                                                       :domain c25-2)))))
        :ARG1-of (c25-0 / cause-01
                        :ARG0 c25-13
                        :ARG4 (c25-9 / live-01
                                     :ARG0 c25-13
                                     :location (c25-5 / country
                                                      :name (c25-3 / name
                                                                   :op1 "Korea")))
                        :ARG0 c25-10)
        :mode imperative)

# ::snt Well be offended Ya wont fight for your own country why should we expect ya to fight for ours
# ::tokens ["Well", "be", "offended", "Ya", "wo", "nt", "fight", "for", "your", "own", "country", "why", "should", "we", "expect", "ya", "to", "fight", "for", "ours"]
# ::lemmas ["well", "be", "offend", "Ya", "will", "not", "fight", "for", "your", "own", "country", "why", "should", "we", "expect", "ya", "to", "fight", "for", "ours"]
(c26-4 / cause-01
       :ARG0 (c26-7 / amr-unknown)
       :ARG1 (c26-1 / recommend-01
                    :ARG1 (c26-5 / expect-01
                                 :ARG0 (c26-6 / we)
                                 :ARG1 (c26-8 / fight-01
                                              :ARG0 (c26-10 / you)
                                              :ARG2 (c26-9 / country
                                                           :poss c26-6)))
                    :ARG1-of (c26-2 / cause-01
                                    :ARG0 (c26-0 / offend-01
                                                 :ARG1 c26-10
                                                 :mod (c26-3 / well)))))

# ::snt Summerskies12 Too dang bad if they dont like it they can just leave PLEASE GO BACK WHERE YOU CAME FROM
# ::tokens ["Summerskies12", "Too", "dang", "bad", "if", "they", "do", "nt", "like", "it", "they", "can", "just", "leave", "PLEASE", "GO", "BACK", "WHERE", "YOU", "CAME", "FROM"]
# ::lemmas ["Summerskies12", "Too", "dang", "bad", "if", "they", "do", "not", "like", "it", "they", "can", "just", "leave", "PLEASE", "GO", "back", "where", "you", "come", "from"]
(c27-12 / say-01
        :ARG0 (c27-16 / i)
        :ARG1 (c27-9 / and
                     :op1 (c27-5 / possible-01
                                 :ARG1 (c27-13 / leave-11
                                               :ARG0 (c27-8 / they)
                                               :mod (c27-17 / just))
                                 :condition (c27-4 / dislike-01
                                                   :ARG0 c27-8
                                                   :ARG1 (c27-1 / it))
                                 :ARG1-of (c27-14 / have-degree-91
                                                  :ARG2 (c27-0 / bad-07
                                                               :ARG1 c27-5
                                                               :mod (c27-10 / dang))
                                                  :ARG3 (c27-6 / too)))
                     :op2 (c27-15 / go-02
                                  :ARG0 (c27-19 / you)
                                  :ARG4 (c27-11 / location
                                                :ARG2-of (c27-7 / come-01
                                                                :ARG1 c27-19))
                                  :direction (c27-2 / back)
                                  :mode imperative
                                  :polite +))
        :ARG2 (c27-3 / person
                     :name (c27-18 / name
                                   :op1 "Summerskies12")))

# ::snt Get them out of our country
# ::tokens ["Get", "them", "out", "of", "our", "country"]
# ::lemmas ["get", "them", "out", "of", "our", "country"]
(c28-4 / get-05
       :ARG0 (c28-5 / you)
       :ARG1 (c28-2 / they)
       :ARG2 (c28-0 / out-06
                    :ARG1 c28-2
                    :ARG2 (c28-1 / country
                                 :poss (c28-3 / we))))

# ::snt then they should go back to their homelands Easy fix
# ::tokens ["then", "they", "should", "go", "back", "to", "their", "homelands", "Easy", "fix"]
# ::lemmas ["then", "they", "should", "go", "back", "to", "their", "homeland", "Easy", "fix"]
(c29-0 / recommend-01
       :ARG1 (c29-5 / go-back-19
                    :ARG1 (c29-2 / they)
                    :ARG2 (c29-4 / homeland
                                 :poss c29-2))
       :ARG2 c29-2
       :purpose (c29-3 / fix-02
                       :ARG1-of (c29-1 / easy-05))
       :time (c29-6 / then))

# ::snt they should leave it isnt safe for them here its in thier best interest
# ::tokens ["they", "should", "leave", "it", "is", "nt", "safe", "for", "them", "here", "its", "in", "thier", "best", "interest"]
# ::lemmas ["they", "should", "leave", "it", "be", "not", "safe", "for", "them", "here", "its", "in", "thi", "good", "interest"]
(c30-8 / multi-sentence
       :snt1 (c30-0 / recommend-01
                    :ARG1 (c30-7 / leave-14
                                 :ARG0 (c30-4 / they)
                                 :ARG1 (c30-6 / safe-01
                                              :ARG1 (c30-11 / it)
                                              :ARG2 (c30-12 / they)
                                              :location (c30-9 / here)
                                              :polarity -)))
       :snt2 (c30-1 / interest-01
                    :ARG1 (c30-5 / they)
                    :ARG1-of (c30-3 / have-degree-91
                                    :ARG2 (c30-10 / good-04
                                                  :ARG1 c30-1)
                                    :ARG3 (c30-2 / most))))

# ::snt RNRFlorida If they dont like they are free to leaveeven encouraged to leave
# ::tokens ["RNRFlorida", "If", "they", "do", "nt", "like", "they", "are", "free", "to", "leaveeven", "encouraged", "to", "leave"]
# ::lemmas ["RNRFlorida", "if", "they", "do", "not", "like", "they", "be", "free", "to", "leaveeven", "encourage", "to", "leave"]
(c31-6 / say-01
       :ARG0 (c31-9 / i)
       :ARG1 (c31-7 / have-condition-91
                    :ARG1 (c31-5 / free-04
                                 :ARG1 (c31-2 / they)
                                 :ARG3 (c31-8 / leave-11
                                              :ARG0 c31-2))
                    :ARG2 (c31-1 / encourage-01
                                 :ARG1 c31-2
                                 :ARG2 (c31-3 / leave-11
                                              :ARG0 c31-2)
                                 :mod (c31-4 / even)))
       :ARG2 (c31-0 / dislike-01
                    :ARG0 c31-2
                    :ARG1 c31-3))

# ::snt They should leave the USA if they refuse to assimilate
# ::tokens ["They", "should", "leave", "the", "USA", "if", "they", "refuse", "to", "assimilate"]
# ::lemmas ["they", "should", "leave", "the", "USA", "if", "they", "refuse", "to", "assimilate"]
(c32-0 / recommend-01
       :ARG1 (c32-5 / leave-11
                    :ARG0 (c32-2 / they)
                    :ARG1 (c32-1 / country
                                 :name (c32-6 / name
                                              :op1 "USA")))
       :condition (c32-4 / refuse-01
                         :ARG0 c32-2
                         :ARG1 (c32-3 / assimilate-01
                                      :ARG1 c32-2)))

# ::snt get them the hell out of here
# ::tokens ["get", "them", "the", "hell", "out", "of", "here"]
# ::lemmas ["get", "them", "the", "hell", "out", "of", "here"]
(c33-4 / get-05
       :ARG0 (c33-5 / you)
       :ARG1 (c33-2 / they)
       :ARG2 (c33-0 / out-06
                    :ARG1 c33-2
                    :ARG2 (c33-3 / here))
       :mod (c33-1 / hell
                   :mode expressive))

# ::snt ktd101551 I swear Ive had it up to my ears over these fuckin Muslim stories Yall go fuckin home already CYA BYE
# ::tokens ["ktd101551", "I", "swear", "I", "ve", "had", "it", "up", "to", "my", "ears", "over", "these", "fuckin", "Muslim", "stories", "Yall", "go", "fuckin", "home", "already", "CYA", "BYE"]
# ::lemmas ["ktd101551", "i", "swear", "i", "have", "have", "it", "up", "to", "my", "ear", "over", "these", "fuckin", "Muslim", "story", "Yall", "go", "fuckin", "home", "already", "CYA", "BYE"]
(c34-8 / and
       :op1 (c34-10 / swear-01
                    :ARG0 (c34-14 / i
                                  :part (c34-2 / ear))
                    :ARG1 (c34-3 / up-to
                                 :op1 c34-2
                                 :domain c34-14
                                 :topic (c34-7 / story
                                               :mod (c34-0 / religious-group
                                                           :name (c34-13 / name
                                                                         :op1 "Muslim"))
                                               :mod (c34-9 / fucking)
                                               :mod (c34-6 / this))))
       :op2 (c34-12 / go-02
                    :ARG0 (c34-5 / all)
                    :ARG4 (c34-11 / home)
                    :mod (c34-1 / fuck)
                    :time (c34-15 / already))
       :op3 (c34-4 / cheer-02
                   :mode expressive))

# ::snt might as well leave because  this is America
# ::tokens ["might", "as", "well", "leave", "because", " ", "this", "is", "America"]
# ::lemmas ["may", "as", "well", "leave", "because", " ", "this", "be", "America"]
(c35-0 / cause-01
       :ARG0 (c35-4 / country
                    :name (c35-6 / name
                                 :op1 "America")
                    :domain (c35-2 / this))
       :ARG1 (c35-1 / possible-01
                    :ARG1 (c35-5 / leave-11
                                 :ARG0 (c35-7 / i)
                                 :mod (c35-3 / as-well))))

# ::snt LEAVE
# ::tokens ["LEAVE"]
# ::lemmas ["LEAVE"]
(c36-1 / leave-11
       :ARG0 (c36-0 / you)
       :mode imperative)

# ::snt And they can just go back to the hole they crawled out of  BANISLAM
# ::tokens ["And", "they", "can", "just", "go", "back", "to", "the", "hole", "they", "crawled", "out", "of", " ", "BANISLAM"]
# ::lemmas ["and", "they", "can", "just", "go", "back", "to", "the", "hole", "they", "crawl", "out", "of", " ", "BANISLAM"]
(c37-3 / and
       :op2 (c37-0 / possible-01
                   :ARG1 (c37-7 / go-back-19
                                :ARG1 (c37-2 / they)
                                :ARG2 (c37-5 / hole
                                             :ARG1-of (c37-1 / crawl-01
                                                             :ARG0 c37-2
                                                             :ARG2 (c37-4 / city
                                                                          :name (c37-6 / name
                                                                                       :op1 "BANISLAM"))))
                                :mod (c37-8 / just))))

# ::snt hell no they dont they have one thing on there little minds and thats to take over ur country replace constitution Sharia
# ::tokens ["hell", "no", "they", "do", "nt", "they", "have", "one", "thing", "on", "there", "little", "minds", "and", "that", "s", "to", "take", "over", "ur", "country", "replace", "constitution", "Sharia"]
# ::lemmas ["hell", "no", "they", "do", "not", "they", "have", "one", "thing", "on", "there", "little", "mind", "and", "that", "s", "to", "take", "over", "ur", "country", "replace", "constitution", "Sharia"]
(c38-4 / and
       :op1 (c38-8 / have-03
                   :ARG0 (c38-3 / they)
                   :ARG1 (c38-11 / thing
                                 :location (c38-7 / mind
                                                  :mod (c38-9 / little))
                                 :quant 1)
                   :polarity -)
       :op2 (c38-0 / replace-01
                   :ARG0 c38-3
                   :ARG1 (c38-5 / law
                                :name (c38-10 / name
                                              :op1 "Sharia"))
                   :ARG2 (c38-1 / country
                                :poss c38-3)
                   :purpose (c38-6 / take-over-12
                                   :ARG0 c38-3
                                   :ARG1 c38-1))
       :mod (c38-2 / hell
                   :mode expressive))

# ::snt THEN TELL THEM2GTFOPAYBACK THE AID THEY TOOK FRM THE PPL OF HOST NATION THEY HAVE NO INTEREST 2ASSIMILATERESPECT
# ::tokens ["THEN", "TELL", "THEM2GTFOPAYBACK", "THE", "AID", "THEY", "TOOK", "FRM", "THE", "PPL", "OF", "HOST", "NATION", "THEY", "HAVE", "NO", "INTEREST", "2ASSIMILATERESPECT"]
# ::lemmas ["then", "TELL", "them2gtfopayback", "the", "aid", "they", "take", "frm", "the", "PPL", "of", "HOST", "nation", "they", "have", "no", "interest", "2assimilaterespect"]
(c39-2 / tell-01
       :ARG0 (c39-7 / i)
       :ARG1 (c39-6 / have-03
                    :ARG0 (c39-8 / they)
                    :ARG1 (c39-3 / affect-01
                                 :ARG0 c39-8
                                 :ARG1-of (c39-0 / interview-01))
                    :polarity -)
       :ARG2 c39-8
       :time (c39-4 / then)
       :time (c39-1 / halfway)
       :mod (c39-5 / fuck
                   :mode expressive))

# ::snt I would tell them to F off and recite anything they like back in their shit whole in Pakistan or Saudi pig heaven
# ::tokens ["I", "would", "tell", "them", "to", "F", "off", "and", "recite", "anything", "they", "like", "back", "in", "their", "shit", "whole", "in", "Pakistan", "or", "Saudi", "pig", "heaven"]
# ::lemmas ["i", "would", "tell", "them", "to", "F", "off", "and", "recite", "anything", "they", "like", "back", "in", "their", "shit", "whole", "in", "Pakistan", "or", "Saudi", "pig", "heaven"]
(c40-7 / tell-01
       :ARG0 (c40-15 / i)
       :ARG1 (c40-8 / and
                    :op1 (c40-9 / fuck-off-03
                                :ARG0 (c40-16 / they))
                    :op2 (c40-2 / recite-01
                                :ARG0 c40-16
                                :ARG1 (c40-6 / anything
                                             :ARG1-of (c40-11 / like-02
                                                              :ARG0 c40-16))
                                :location (c40-10 / shit
                                                  :poss c40-16
                                                  :mod (c40-1 / back))
                                :location (c40-0 / or
                                                 :op1 (c40-3 / country
                                                             :name (c40-14 / name
                                                                           :op1 "Pakistan"))
                                                 :op2 (c40-12 / heaven
                                                              :mod (c40-4 / pig)
                                                              :mod (c40-13 / country
                                                                           :name (c40-5 / name
                                                                                        :op1 "Saudi"
                                                                                        :op2 "Arabia"))))))
       :ARG2 c40-16)

# ::snt Its called assimilation We are not to conform to your sick and depraved customs you are to conform to a civilized society
# ::tokens ["Its", "called", "assimilation", "We", "are", "not", "to", "conform", "to", "your", "sick", "and", "depraved", "customs", "you", "are", "to", "conform", "to", "a", "civilized", "society"]
# ::lemmas ["its", "call", "assimilation", "we", "be", "not", "to", "conform", "to", "your", "sick", "and", "depraved", "custom", "you", "be", "to", "conform", "to", "a", "civilized", "society"]
(c41-2 / call-01
       :ARG1 (c41-6 / assimilate-01)
       :ARG2 (c41-3 / and
                    :op1 (c41-9 / conform-01
                                :ARG1 (c41-4 / we)
                                :ARG2 (c41-0 / custom
                                             :poss c41-4
                                             :ARG1-of (c41-10 / sick-02)
                                             :mod (c41-1 / depraved))
                                :polarity -)
                    :op2 (c41-8 / conform-01
                                :ARG1 c41-4
                                :ARG2 (c41-5 / society
                                             :ARG1-of (c41-7 / civilize-01)))))

# ::snt Do you want to be an American citizen Or is your allegence with Sharia
# ::tokens ["Do", "you", "want", "to", "be", "an", "American", "citizen", "Or", "is", "your", "allegence", "with", "Sharia"]
# ::lemmas ["do", "you", "want", "to", "be", "an", "American", "citizen", "or", "be", "your", "allegence", "with", "Sharia"]
(c42-4 / amr-choice
       :op1 (c42-3 / want-01
                   :ARG0 (c42-8 / you)
                   :ARG1 (c42-0 / citizen
                                :mod (c42-5 / country
                                            :name (c42-7 / name
                                                         :op1 "United"
                                                         :op2 "States"))
                                :domain c42-8))
       :op2 (c42-2 / allegiance
                   :poss c42-8
                   :prep-with (c42-6 / law
                                     :name (c42-1 / name
                                                  :op1 "Sharia"))))

# ::snt Your presence and agenda I find highly offensive
# ::tokens ["Your", "presence", "and", "agenda", "I", "find", "highly", "offensive"]
# ::lemmas ["your", "presence", "and", "agenda", "i", "find", "highly", "offensive"]
(c43-4 / find-02
       :ARG0 (c43-6 / i)
       :ARG1 (c43-0 / offend-01
                    :ARG0 (c43-3 / and
                                 :op1 (c43-1 / present-02
                                             :ARG1 (c43-7 / you))
                                 :op2 (c43-2 / agenda
                                             :poss c43-7))
                    :degree (c43-5 / high-02)))

# ::snt  Go back to the Middle East
# ::tokens [" ", "Go", "back", "to", "the", "Middle", "East"]
# ::lemmas [" ", "go", "back", "to", "the", "Middle", "East"]
(c44-2 / go-02
       :ARG0 (c44-4 / you)
       :ARG4 (c44-0 / world-region
                    :name (c44-1 / name
                                 :op1 "Middle"
                                 :op2 "East"))
       :direction (c44-3 / back)
       :mode imperative)

# ::snt Agree they can leave
# ::tokens ["Agree", "they", "can", "leave"]
# ::lemmas ["agree", "they", "can", "leave"]
(c45-2 / agree-01
       :ARG0 (c45-4 / i)
       :ARG1 (c45-0 / possible-01
                    :ARG1 (c45-3 / leave-11
                                 :ARG0 (c45-1 / they))))

# ::snt wake up America
# ::tokens ["wake", "up", "America"]
# ::lemmas ["wake", "up", "America"]
(c46-3 / wake-up-02
       :ARG0 (c46-0 / you)
       :ARG1 (c46-1 / country
                    :name (c46-2 / name
                                 :op1 "America"))
       :mode imperative)

# ::snt no Quran no Sharia no mosque
# ::tokens ["no", "Quran", "no", "Sharia", "no", "mosque"]
# ::lemmas ["no", "Quran", "no", "Sharia", "no", "mosque"]
(c47-1 / and
       :op1 (c47-5 / book
                   :name (c47-4 / name
                                :op1 "Quran"))
       :op2 (c47-2 / law
                   :name (c47-0 / name
                                :op1 "Sharia")
                   :polarity -)
       :op3 (c47-3 / mosque
                   :polarity -))

# ::snt I am offended by their demands and intentions to dominate America
# ::tokens ["I", "am", "offended", "by", "their", "demands", "and", "intentions", "to", "dominate", "America"]
# ::lemmas ["i", "be", "offend", "by", "their", "demand", "and", "intention", "to", "dominate", "America"]
(c48-0 / offend-01
       :ARG0 (c48-5 / and
                    :op1 (c48-2 / demand-01
                                :ARG0 (c48-4 / they)
                                :ARG1 (c48-6 / dominate-01
                                             :ARG0 c48-4
                                             :ARG1 (c48-3 / country
                                                          :name (c48-7 / name
                                                                       :op1 "America"))))
                    :op2 (c48-8 / intend-01
                                :ARG0 c48-4
                                :ARG1 c48-6))
       :ARG1 (c48-1 / i))

# ::snt this1isno1 Well then I guess were a nation of racists  Make them memorize it and the Pledge of Allegiance
# ::tokens ["this1isno1", "Well", "then", "I", "guess", "were", "a", "nation", "of", "racists", " ", "Make", "them", "memorize", "it", "and", "the", "Pledge", "of", "Allegiance"]
# ::lemmas ["this1isno1", "well", "then", "i", "guess", "be", "a", "nation", "of", "racist", " ", "make", "them", "memorize", "it", "and", "the", "Pledge", "of", "Allegiance"]
(c49-10 / multi-sentence
        :snt1 (c49-12 / guess-01
                      :ARG0 (c49-13 / i)
                      :ARG1 (c49-11 / nation
                                    :consist-of (c49-0 / racist)
                                    :domain (c49-5 / this))
                      :mod (c49-6 / well)
                      :time (c49-14 / then))
        :snt2 (c49-3 / make-02
                     :ARG0 (c49-15 / you)
                     :ARG1 (c49-9 / memorize-01
                                  :ARG0 (c49-8 / they)
                                  :ARG1 (c49-7 / and
                                               :op1 (c49-1 / it)
                                               :op2 (c49-2 / thing
                                                           :name (c49-4 / name
                                                                        :op1 "Pledge"
                                                                        :op2 "of"
                                                                        :op3 " Allegiance"))))
                     :mode imperative))

# ::snt Time to send them home
# ::tokens ["Time", "to", "send", "them", "home"]
# ::lemmas ["time", "to", "send", "them", "home"]
(c50-2 / time
       :time-of (c50-0 / send-01
                       :ARG1 (c50-1 / they)
                       :ARG4 (c50-3 / home)))
