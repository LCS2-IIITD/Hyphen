# ::snt The devil
# ::tokens ["The", "devil"]
# ::lemmas ["the", "devil"]
(c1-0 / devil)

# ::snt omg put 4chan on it polNewsForever
# ::tokens ["omg", "put", "4chan", "on", "it", "polNewsForever"]
# ::lemmas ["omg", "put", "4chan", "on", "it", "polnewsforever"]
(c2-2 / put-01
      :ARG0 (c2-1 / person
                  :name (c2-4 / name
                              :op1 "PolNewsForever"))
      :ARG1 (c2-0 / publication
                  :name (c2-3 / name
                              :op1 "4chan"))
      :ARG2 (c2-5 / it))

# ::snt Yupmaking dealslike one guy keeping his wife out of prison female not having to be an inmate  a guy getting to remain Speakerof theHouse
# ::tokens ["Yupmaking", "dealslike", "one", "guy", "keeping", "his", "wife", "out", "of", "prison", "female", "not", "having", "to", "be", "an", "inmate", " ", "a", "guy", "getting", "to", "remain", "Speakerof", "theHouse"]
# ::lemmas ["yupmake", "dealslike", "one", "guy", "keep", "his", "wife", "out", "of", "prison", "female", "not", "have", "to", "be", "an", "inmate", " ", "a", "guy", "get", "to", "remain", "Speakerof", "theHouse"]
(c3-16 / deal-01
       :ARG1-of (c3-1 / resemble-01
                      :ARG2 (c3-17 / and
                                   :op1 (c3-13 / keep-02
                                               :ARG0 (c3-4 / guy)
                                               :ARG1 (c3-2 / person
                                                           :ARG0-of (c3-10 / have-rel-role-91
                                                                           :ARG1 c3-4
                                                                           :ARG2 (c3-3 / wife)))
                                               :ARG2 (c3-0 / out-06
                                                           :ARG1 c3-2
                                                           :ARG2 (c3-6 / prison)))
                                   :op2 (c3-15 / obligate-01
                                               :ARG1 c3-4
                                               :ARG2 (c3-5 / inmate
                                                           :domain c3-4)
                                               :polarity -)
                                   :op3 (c3-12 / get-04
                                               :ARG1 (c3-9 / remain-01
                                                           :ARG1 (c3-7 / guy)
                                                           :ARG3 (c3-14 / person
                                                                        :ARG0-of (c3-8 / have-org-role-91
                                                                                       :ARG1 (c3-11 / government-organization
                                                                                                    :name (c3-19 / name
                                                                                                                 :op1 "House"))
                                                                                       :ARG2 (c3-18 / speaker)))))))
       :mod (c3-20 / yup))

# ::snt Its no April 1st Your source Fox News Sucks
# ::tokens ["Its", "no", "April", "1st", "Your", "source", "Fox", "News", "Sucks"]
# ::lemmas ["its", "no", "April", "1st", "your", "source", "Fox", "News", "Sucks"]
(c4-2 / suck-03
      :ARG0 (c4-4 / broadcast-program
                  :name (c4-3 / name
                              :op1 "Fox"
                              :op2 "News")
                  :ARG2-of (c4-1 / source-01
                                 :ARG0 (c4-5 / you)))
      :ARG1 (c4-0 / date-entity
                  :month 4
                  :day 1))

# ::snt More TRUTH TheJusticeDept FBI USAGSessions StateDept FoxNews Varneyco POTUS VP GOP newtgingrich SenateMajLdr Reuters Forbes
# ::tokens ["More", "TRUTH", "TheJusticeDept", "FBI", "USAGSessions", "StateDept", "FoxNews", "Varneyco", "POTUS", "VP", "GOP", "newtgingrich", "SenateMajLdr", "Reuters", "Forbes"]
# ::lemmas ["more", "truth", "thejusticedept", "FBI", "usagsession", "StateDept", "FoxNews", "Varneyco", "POTUS", "VP", "GOP", "newtgingrich", "SenateMajLdr", "Reuters", "Forbes"]
(c5-15 / true-01
       :ARG1 (c5-20 / and
                    :op1 (c5-3 / government-organization
                               :name (c5-23 / name
                                            :op1 "JusticeDept")
                               :part-of (c5-13 / government-organization
                                               :name (c5-8 / name
                                                           :op1 "FBI")))
                    :op2 (c5-4 / government-organization
                               :name (c5-0 / name
                                           :op1 "StateDept"
                                           :op2 "Fox"
                                           :op3 "News"))
                    :op3 (c5-2 / person
                               :name (c5-6 / name
                                           :op1 "Vivneyco")
                               :ARG0-of (c5-10 / have-org-role-91
                                               :ARG1 (c5-7 / country
                                                           :name (c5-19 / name
                                                                        :op1 "United"
                                                                        :op2 "States"))
                                               :ARG2 (c5-5 / president)))
                    :op4 (c5-18 / person
                                :ARG0-of (c5-9 / have-org-role-91
                                               :ARG1 (c5-17 / political-party
                                                            :name (c5-21 / name
                                                                         :op1 "GOP"))
                                               :ARG2 (c5-16 / member)))
                    :op5 (c5-12 / person
                                :ARG0-of (c5-14 / have-org-role-91
                                                :ARG1 (c5-11 / government-organization
                                                             :name (c5-22 / name
                                                                          :op1 "Senate"))
                                                :ARG2 c5-16)))
       :mod (c5-1 / more))

# ::snt Better keep the pilot safe until AFTER he testifies
# ::tokens ["Better", "keep", "the", "pilot", "safe", "until", "AFTER", "he", "testifies"]
# ::lemmas ["well", "keep", "the", "pilot", "safe", "until", "AFTER", "he", "testify"]
(c6-7 / have-degree-91
      :ARG1 (c6-6 / keep-02
                  :ARG1 (c6-5 / safe-01
                              :ARG1 (c6-1 / person
                                          :ARG0-of (c6-0 / pilot-01)))
                  :time (c6-2 / until
                              :op1 (c6-4 / after
                                         :op1 (c6-3 / testify-01
                                                    :ARG0 c6-1))))
      :ARG2 (c6-9 / good-02
                  :ARG1 c6-6)
      :ARG3 (c6-8 / more))

# ::snt SpeakerRyan you suck
# ::tokens ["SpeakerRyan", "you", "suck"]
# ::lemmas ["SpeakerRyan", "you", "suck"]
(c7-3 / say-01
      :ARG1 (c7-2 / suck-03
                  :ARG0 (c7-0 / person
                              :name (c7-4 / name
                                          :op1 "Ryan")
                              :ARG0-of (c7-1 / speak-01)
                              :ARG2-of c7-3)))

# ::snt Speaker Paul Ryan was with Bill Clinton also He should be fired immediately
# ::tokens ["Speaker", "Paul", "Ryan", "was", "with", "Bill", "Clinton", "also", "He", "should", "be", "fired", "immediately"]
# ::lemmas ["Speaker", "Paul", "Ryan", "be", "with", "Bill", "Clinton", "also", "he", "should", "be", "fire", "immediately"]
(c8-10 / multi-sentence
       :snt1 (c8-7 / accompany-01
                   :ARG0 (c8-4 / person
                               :name (c8-11 / name
                                            :op1 "Paul"
                                            :op2 "Ryan")
                               :ARG0-of (c8-9 / speak-01))
                   :ARG1 (c8-1 / person
                               :name (c8-5 / name
                                           :op1 "Bill"
                                           :op2 "Clinton"))
                   :mod (c8-6 / also))
       :snt2 (c8-2 / recommend-01
                   :ARG1 (c8-8 / fire-02
                               :ARG1 (c8-0 / person
                                           :name (c8-3 / name
                                                       :op1 "Hezbollah"))
                               :time (c8-12 / immediate))))

# ::snt Will Jr go with that as his defense
# ::tokens ["Will", "Jr", "go", "with", "that", "as", "his", "defense"]
# ::lemmas ["Will", "Jr", "go", "with", "that", "as", "his", "defense"]
(c9-4 / go-22
      :ARG1 (c9-1 / person
                  :name (c9-3 / name
                              :op1 "Will"
                              :op2 "Jr"))
      :ARG2 (c9-2 / that)
      :purpose (c9-0 / defend-01
                     :ARG1 c9-1))

# ::snt I think cnn would be interested in this story
# ::tokens ["I", "think", "cnn", "would", "be", "interested", "in", "this", "story"]
# ::lemmas ["i", "think", "cnn", "would", "be", "interested", "in", "this", "story"]
(c10-2 / think-01
       :ARG0 (c10-5 / i)
       :ARG1 (c10-0 / interest-01
                    :ARG1 (c10-1 / publication
                                 :name (c10-4 / name
                                              :op1 "CNN"))
                    :ARG2 (c10-3 / story
                                 :mod (c10-6 / this))))

# ::snt Lock her up dammit
# ::tokens ["Lock", "her", "up", "dammit"]
# ::lemmas ["lock", "her", "up", "dammit"]
(c11-2 / lock-up-03
       :ARG0 (c11-4 / you)
       :ARG1 (c11-1 / she)
       :ARG1-of (c11-0 / damn-01
                       :ARG0 (c11-3 / i))
       :mode imperative)

# ::snt SpeakerRyan  Would you Mr Ryan please comment It should not be an issue if you were not on board but if you were it will come out
# ::tokens ["SpeakerRyan", " ", "Would", "you", "Mr", "Ryan", "please", "comment", "It", "should", "not", "be", "an", "issue", "if", "you", "were", "not", "on", "board", "but", "if", "you", "were", "it", "will", "come", "out"]
# ::lemmas ["SpeakerRyan", " ", "would", "you", "Mr", "Ryan", "please", "comment", "it", "should", "not", "be", "an", "issue", "if", "you", "be", "not", "on", "board", "but", "if", "you", "be", "it", "will", "come", "out"]
(c12-7 / say-01
       :ARG0 (c12-4 / person
                    :name (c12-9 / name
                                 :op1 "SpeakerRyan"))
       :ARG1 (c12-5 / comment-01
                    :ARG0 (c12-0 / person
                                 :name (c12-6 / name
                                              :op1 "Mr"
                                              :op2 "Ryan"))
                    :ARG3 (c12-8 / contrast-01
                                 :ARG1 (c12-1 / recommend-01
                                              :ARG1 (c12-10 / issue-02
                                                            :ARG0 (c12-11 / board-01
                                                                          :ARG0 (c12-12 / you)
                                                                          :polarity -)
                                                            :polarity -))
                                 :ARG2 (c12-2 / come-out-09
                                              :ARG1 (c12-3 / it)
                                              :condition c12-11))
                    :mode imperative
                    :polite +)
       :ARG2 c12-0)

# ::snt Read the article   ok  Paul Ryan  0
# ::tokens ["Read", "the", "article", "  ", "ok", " ", "Paul", "Ryan", " ", "0"]
# ::lemmas ["read", "the", "article", "  ", "ok", " ", "Paul", "Ryan", " ", "0"]
(c13-1 / read-01
       :ARG0 (c13-5 / you)
       :ARG1 (c13-3 / article
                    :ARG1-of (c13-0 / okay-01
                                    :ARG2 (c13-2 / person
                                                 :name (c13-4 / name
                                                              :op1 "Paul"
                                                              :op2 "Ryan"))))
       :mode imperative)

# ::snt Who
# ::tokens ["Who"]
# ::lemmas ["who"]
(c14-0 / amr-unknown)

# ::snt hmm  well  hopefully it is because if true  they are getting their ducks in a row to not become another Fake News sight
# ::tokens ["hmm", " ", "well", " ", "hopefully", "it", "is", "because", "if", "true", " ", "they", "are", "getting", "their", "ducks", "in", "a", "row", "to", "not", "become", "another", "Fake", "News", "sight"]
# ::lemmas ["hmm", " ", "well", " ", "hopefully", "it", "be", "because", "if", "true", " ", "they", "be", "get", "their", "duck", "in", "a", "row", "to", "not", "become", "another", "Fake", "News", "sight"]
(c15-9 / hope-01
       :ARG1 (c15-3 / cause-01
                    :ARG0 (c15-11 / get-04
                                  :ARG0 (c15-5 / they)
                                  :ARG1 (c15-2 / duck
                                               :poss c15-5
                                               :mod (c15-1 / row))
                                  :condition (c15-12 / true-01
                                                     :ARG1 c15-11)
                                  :purpose (c15-0 / become-01
                                                  :ARG1 c15-2
                                                  :ARG2 (c15-8 / sight
                                                               :mod (c15-6 / another)
                                                               :mod (c15-10 / news
                                                                            :ARG1-of (c15-7 / fake-02)))
                                                  :polarity -)))
       :mod (c15-4 / hmm
                   :mode expressive))

# ::snt let me guess  he committed suicide
# ::tokens ["let", "me", "guess", " ", "he", "committed", "suicide"]
# ::lemmas ["let", "me", "guess", " ", "he", "commit", "suicide"]
(c16-1 / let-01
       :ARG0 (c16-5 / you)
       :ARG1 (c16-3 / guess-01
                    :ARG0 (c16-4 / i)
                    :ARG1 (c16-0 / kill-01
                                 :ARG0 (c16-2 / he
                                              :ARG1-of c16-0)))
       :mode imperative)

# ::snt Thats what they speculate in the article link He shows up on the manifest from earlier airport and as unnamed passenger on this flight
# ::tokens ["That", "s", "what", "they", "speculate", "in", "the", "article", "link", "He", "shows", "up", "on", "the", "manifest", "from", "earlier", "airport", "and", "as", "unnamed", "passenger", "on", "this", "flight"]
# ::lemmas ["that", "s", "what", "they", "speculate", "in", "the", "article", "link", "he", "show", "up", "on", "the", "manif", "from", "early", "airport", "and", "as", "unnamed", "passenger", "on", "this", "flight"]
(c17-9 / speculate-01
       :ARG0 (c17-4 / they)
       :ARG1 (c17-14 / that)
       :location (c17-10 / link
                         :mod (c17-6 / article))
       :ARG1-of (c17-1 / cause-01
                       :ARG0 (c17-5 / show-up-02
                                    :ARG1 (c17-11 / he
                                                  :ARG0-of (c17-2 / passenger-01
                                                                  :ARG1 (c17-8 / fly-01
                                                                               :mod (c17-7 / this)))
                                                  :ARG1-of (c17-13 / name-01
                                                                   :polarity -))
                                    :location (c17-12 / manifest
                                                      :source (c17-3 / airport
                                                                     :time (c17-0 / before))))))

# ::snt hmmm
# ::tokens ["hmmm"]
# ::lemmas ["hmmm"]
(c18-0 / hmm
       :mode expressive)

# ::snt Paul Ryan
# ::tokens ["Paul", "Ryan"]
# ::lemmas ["Paul", "Ryan"]
(c19-0 / person
       :name (c19-1 / name
                    :op1 "Paul"
                    :op2 "Ryan"))

# ::snt 100  says it wasnt Lynchs grandchild  She has none
# ::tokens ["100", " ", "says", "it", "was", "nt", "Lynchs", "grandchild", " ", "She", "has", "none"]
# ::lemmas ["100", " ", "say", "it", "be", "not", "Lynchs", "grandchild", " ", "she", "have", "none"]
(c20-7 / multi-sentence
       :snt1 (c20-5 / say-01
                    :ARG1 (c20-1 / person
                                 :ARG0-of (c20-6 / have-rel-role-91
                                                 :ARG1 (c20-0 / person
                                                              :name (c20-9 / name
                                                                           :op1 "Lynch"))
                                                 :ARG2 (c20-8 / grandchild))
                                 :polarity -)
                    :li 100)
       :snt2 (c20-3 / have-03
                    :ARG0 (c20-4 / she)
                    :ARG1 (c20-2 / none)))

# ::snt Is this true
# ::tokens ["Is", "this", "true"]
# ::lemmas ["be", "this", "true"]
(c21-2 / true-01
       :polarity (c21-0 / amr-unknown)
       :ARG1 (c21-1 / this))

# ::snt smuller68 or was itSatan
# ::tokens ["smuller68", "or", "was", "itSatan"]
# ::lemmas ["smuller68", "or", "be", "itSatan"]
(c22-3 / amr-choice
       :op1 (c22-1 / person
                   :name (c22-4 / name
                                :op1 "smuller68"))
       :op2 (c22-0 / person
                   :name (c22-2 / name
                                :op1 "Satan")))

# ::snt smuller68 obamalamadingdong
# ::tokens ["smuller68", "obamalamadingdong"]
# ::lemmas ["smuller68", "obamalamadingdong"]
(c23-0 / person
       :name (c23-1 / name
                    :op1 "smuller68")
       :mod (c23-2 / obamalamadingdong))
