# ::snt mail them all on Jan 20th
# ::tokens ["mail", "them", "all", "on", "Jan", "20th"]
# ::lemmas ["mail", "them", "all", "on", "Jan", "20th"]
(c1-1 / email-01
      :ARG0 (c1-4 / you)
      :ARG1 (c1-2 / they
                  :mod (c1-3 / all))
      :time (c1-0 / date-entity
                  :month 1
                  :day 20)
      :mode imperative)

# ::snt httpwwwslatecomblogstheslatest20151222videoobamasayingmerrychristmashtml … ENJOY
# ::tokens ["httpwwwslatecomblogstheslatest20151222videoobamasayingmerrychristmashtml", "\u2026", "ENJOY"]
# ::lemmas ["httpwwwslatecomblogstheslatest20151222videoobamasayingmerrychristmashtml", "\u2026", "ENJOY"]
(c2-2 / multi-sentence
      :snt1 (c2-4 / be-temporally-at-91
                  :ARG2 (c2-0 / publication
                              :name (c2-3 / name
                                          :op1 "slatecomblogstheslatest")))
      :snt2 (c2-1 / enjoy-01
                  :ARG0 (c2-5 / you)
                  :mode imperative))

# ::snt ◄ sucker for FakeNews
# ::tokens ["\u25c4", "sucker", "for", "FakeNews"]
# ::lemmas ["\u25c4", "sucker", "for", "FakeNews"]
(c3-2 / sucker
      :beneficiary (c3-1 / broadcast-program
                         :name (c3-0 / name
                                     :op1 " FakeNews")))

# ::snt httpwwwslatecomblogstheslatest20151222videoobamasayingmerrychristmashtml … ENJOY
# ::tokens ["httpwwwslatecomblogstheslatest20151222videoobamasayingmerrychristmashtml", "\u2026", "ENJOY"]
# ::lemmas ["httpwwwslatecomblogstheslatest20151222videoobamasayingmerrychristmashtml", "\u2026", "ENJOY"]
(c4-2 / and
      :op1 (c4-0 / publication
                 :name (c4-4 / name
                             :op1 "slatecomblogstheslatest"))
      :op2 (c4-1 / email-address-entity
                 :value "151222videoobamasayingmerrychristmashtml")
      :op3 (c4-3 / enjoy-01))

# ::snt That Ass
# ::tokens ["That", "Ass"]
# ::lemmas ["that", "ass"]
(c5-0 / ass
      :domain (c5-1 / that)
      :mode expressive)

# ::snt WTF Fake news
# ::tokens ["WTF", "Fake", "news"]
# ::lemmas ["WTF", "Fake", "news"]
(c6-0 / news
      :ARG1-of (c6-1 / fake-02)
      :mod (c6-2 / fuck
                 :mode expressive))

# ::snt Thank God he is on the way out
# ::tokens ["Thank", "God", "he", "is", "on", "the", "way", "out"]
# ::lemmas ["thank", "God", "he", "be", "on", "the", "way", "out"]
(c7-2 / thank-01
      :ARG0 (c7-6 / i)
      :ARG1 (c7-1 / person
                  :name (c7-5 / name
                              :op1 "God"))
      :ARG2 (c7-3 / way
                  :direction (c7-0 / out)
                  :domain (c7-4 / he)))

# ::snt  ENJOY this clip
# ::tokens [" ", "ENJOY", "this", "clip"]
# ::lemmas [" ", "ENJOY", "this", "clip"]
(c8-0 / enjoy-01
      :ARG0 (c8-3 / you)
      :ARG1 (c8-1 / clip
                  :mod (c8-2 / this))
      :mode imperative)

# ::snt ◄ sucker for FakeNews
# ::tokens ["\u25c4", "sucker", "for", "FakeNews"]
# ::lemmas ["\u25c4", "sucker", "for", "FakeNews"]
(c9-2 / sucker
      :beneficiary (c9-1 / broadcast-program
                         :name (c9-0 / name
                                     :op1 " FakeNews")))

# ::snt POTUS You cant leave fast enough you coward
# ::tokens ["POTUS", "You", "ca", "nt", "leave", "fast", "enough", "you", "coward"]
# ::lemmas ["POTUS", "you", "can", "not", "leave", "fast", "enough", "you", "coward"]
(c10-7 / say-01
       :ARG0 (c10-12 / i)
       :ARG1 (c10-2 / possible-01
                    :ARG1 (c10-8 / leave-11
                                 :ARG0 (c10-1 / person
                                              :ARG0-of (c10-9 / have-org-role-91
                                                              :ARG1 (c10-3 / country
                                                                           :name (c10-11 / name
                                                                                         :op1 "United"
                                                                                         :op2 "States"))
                                                              :ARG2 (c10-0 / president)))
                                 :ARG1-of (c10-6 / fast-02
                                                 :ARG2-of (c10-4 / have-degree-91
                                                                 :ARG1 c10-8
                                                                 :ARG3 (c10-5 / enough))))
                    :polarity -)
       :ARG2 (c10-13 / you
                     :mod (c10-10 / coward)))

# ::snt davislevin
# ::tokens ["davislevin"]
# ::lemmas ["davislevin"]
(c11-0 / person
       :name (c11-1 / name
                    :op1 "Davislevin"))

# ::snt hes a pos and gone soon
# ::tokens ["he", "s", "a", "pos", "and", "gone", "soon"]
# ::lemmas ["he", "s", "a", "pos", "and", "go", "soon"]
(c12-1 / and
       :op1 (c12-0 / posh
                   :domain (c12-3 / he))
       :op2 (c12-4 / go-02
                   :ARG0 c12-3
                   :time (c12-2 / soon)
                   :mode imperative))

# ::snt According to the article items shipped are checked
# ::tokens ["According", "to", "the", "article", "items", "shipped", "are", "checked"]
# ::lemmas ["accord", "to", "the", "article", "item", "ship", "be", "check"]
(c13-3 / say-01
       :ARG0 (c13-2 / article)
       :ARG1 (c13-0 / check-01
                    :ARG1 (c13-4 / item
                                 :ARG1-of (c13-1 / ship-01))))

# ::snt The Muslim traitor cant ban shit this goes totally against our constitution
# ::tokens ["The", "Muslim", "traitor", "ca", "nt", "ban", "shit", "this", "goes", "totally", "against", "our", "constitution"]
# ::lemmas ["the", "Muslim", "traitor", "can", "not", "ban", "shit", "this", "go", "totally", "against", "our", "constitution"]
(c14-3 / possible-01
       :ARG1 (c14-13 / ban-01
                     :ARG0 (c14-0 / person
                                  :mod (c14-1 / religious-group
                                              :name (c14-12 / name
                                                            :op1 "Muslim"))
                                  :ARG0-of (c14-2 / betray-01))
                     :ARG1 (c14-9 / shit))
       :ARG1-of (c14-4 / cause-01
                       :ARG0 (c14-11 / go-08
                                     :ARG1 (c14-6 / this)
                                     :ARG2 (c14-8 / against
                                                  :op1 (c14-10 / constitution
                                                               :poss (c14-7 / we))
                                                  :degree (c14-5 / total))))
       :polarity -)

# ::snt This is out of control  it needs to stop  Now
# ::tokens ["This", "is", "out", "of", "control", " ", "it", "needs", "to", "stop", " ", "Now"]
# ::lemmas ["this", "be", "out", "of", "control", " ", "it", "need", "to", "stop", " ", "now"]
(c15-4 / and
       :op1 (c15-0 / out-06
                   :ARG1 (c15-3 / this)
                   :ARG2 (c15-1 / control-01
                                :ARG1 c15-3))
       :op2 (c15-6 / need-01
                   :ARG0 (c15-7 / it)
                   :ARG1 (c15-5 / stop-01
                                :ARG0 c15-7
                                :ARG1 c15-3)
                   :time (c15-2 / now)))

# ::snt Linda your tweet was lost on me cuz I dont have a clue what you were referring to Sorry
# ::tokens ["Linda", "your", "tweet", "was", "lost", "on", "me", "cuz", "I", "do", "nt", "have", "a", "clue", "what", "you", "were", "referring", "to", "Sorry"]
# ::lemmas ["Linda", "your", "tweet", "be", "lose", "on", "me", "cuz", "i", "do", "not", "have", "a", "clue", "what", "you", "be", "refer", "to", "Sorry"]
(c16-1 / cause-01
       :ARG0 (c16-4 / have-03
                    :ARG0 (c16-7 / i)
                    :ARG1 (c16-3 / clue
                                 :topic (c16-2 / thing
                                               :ARG1-of (c16-0 / refer-01
                                                               :ARG0 (c16-9 / you))))
                    :polarity -)
       :ARG1 (c16-5 / lose-02
                    :ARG1 (c16-8 / tweet-01
                                 :ARG0 c16-9)
                    :location c16-7
                    :degree (c16-6 / kind-of)))

# ::snt If that were the case there would be a lot more of r military alive bc his rules of engagement resulted in increased deaths
# ::tokens ["If", "that", "were", "the", "case", "there", "would", "be", "a", "lot", "more", "of", "r", "military", "alive", "bc", "his", "rules", "of", "engagement", "resulted", "in", "increased", "deaths"]
# ::lemmas ["if", "that", "be", "the", "case", "there", "would", "be", "a", "lot", "more", "of", "r", "military", "alive", "bc", "his", "rule", "of", "engagement", "result", "in", "increase", "death"]
(c17-3 / cause-01
       :ARG0 (c17-0 / result-01
                    :ARG1 (c17-7 / rule-01
                                 :ARG0 (c17-8 / he)
                                 :ARG1 (c17-4 / engage-01))
                    :ARG2 (c17-2 / die-01
                                 :ARG1-of (c17-11 / increase-01)))
       :ARG1 (c17-9 / live-01
                    :ARG0 (c17-10 / military
                                  :quant (c17-1 / more
                                                :quant (c17-6 / lot)))
                    :condition (c17-5 / that)))

# ::snt According to Obama the military doesnt have to do what the Commander and Chief says
# ::tokens ["According", "to", "Obama", "the", "military", "does", "nt", "have", "to", "do", "what", "the", "Commander", "and", "Chief", "says"]
# ::lemmas ["accord", "to", "Obama", "the", "military", "do", "not", "have", "to", "do", "what", "the", "Commander", "and", "Chief", "say"]
(c18-10 / say-01
        :ARG0 (c18-4 / person
                     :name (c18-14 / name
                                   :op1 "Obama"))
        :ARG1 (c18-0 / obligate-01
                     :ARG2 (c18-3 / do-02
                                  :ARG0 (c18-11 / military)
                                  :ARG1 (c18-7 / thing
                                               :ARG1-of (c18-8 / say-01
                                                               :ARG0 (c18-9 / and
                                                                            :op1 (c18-2 / person
                                                                                        :ARG0-of (c18-12 / have-org-role-91
                                                                                                         :ARG2 (c18-5 / commander)))
                                                                            :op2 (c18-1 / person
                                                                                        :ARG0-of (c18-6 / have-org-role-91
                                                                                                        :ARG2 (c18-13 / chief)))))))
                     :polarity -))

# ::snt Someone said this is a false site
# ::tokens ["Someone", "said", "this", "is", "a", "false", "site"]
# ::lemmas ["someone", "say", "this", "be", "a", "false", "site"]
(c19-4 / say-01
       :ARG0 (c19-2 / someone)
       :ARG1 (c19-1 / site
                    :mod (c19-3 / false)
                    :domain (c19-0 / this)))

# ::snt He has no power to ban Christmas anything against our constitutional right arrest him Treason America
# ::tokens ["He", "has", "no", "power", "to", "ban", "Christmas", "anything", "against", "our", "constitutional", "right", "arrest", "him", "Treason", "America"]
# ::lemmas ["he", "have", "no", "power", "to", "ban", "Christmas", "anything", "against", "our", "constitutional", "right", "arrest", "him", "Treason", "America"]
(c20-3 / power-01
       :ARG1 (c20-11 / he)
       :ARG2 (c20-13 / ban-01
                     :ARG0 c20-11
                     :ARG1 (c20-9 / festival
                                  :name (c20-12 / name
                                                :op1 "Christmas")))
       :ARG0-of (c20-4 / counter-01
                       :ARG1 (c20-8 / anything
                                    :ARG1-of (c20-0 / right-05
                                                    :ARG2 (c20-7 / we)
                                                    :mod (c20-10 / constitution))))
       :ARG0-of (c20-6 / arrest-01
                       :ARG1 (c20-1 / person
                                    :mod (c20-2 / country
                                                :name (c20-5 / name
                                                             :op1 "Treason"
                                                             :op2 "America"))))
       :polarity -)

# ::snt Why do you hate Christians and our Military BarackObama
# ::tokens ["Why", "do", "you", "hate", "Christians", "and", "our", "Military", "BarackObama"]
# ::lemmas ["why", "do", "you", "hate", "Christians", "and", "our", "military", "BarackObama"]
(c21-8 / say-01
       :ARG0 (c21-12 / i)
       :ARG1 (c21-9 / hate-01
                    :ARG0 (c21-2 / person
                                 :name (c21-11 / name
                                               :op1 "BarackObama"))
                    :ARG1 (c21-7 / and
                                 :op1 (c21-0 / person
                                             :mod (c21-1 / religious-group
                                                         :name (c21-3 / name
                                                                      :op1 "Christian")))
                                 :op2 (c21-10 / military
                                              :poss (c21-6 / we)))
                    :ARG1-of (c21-4 / cause-01
                                    :ARG0 (c21-5 / amr-unknown)))
       :ARG2 c21-2)

# ::snt yes and guess where hes from will start a pool
# ::tokens ["yes", "and", "guess", "where", "he", "s", "from", "will", "start", "a", "pool"]
# ::lemmas ["yes", "and", "guess", "where", "he", "s", "from", "will", "start", "a", "pool"]
(c22-2 / and
       :op1 (c22-7 / yes)
       :op2 (c22-6 / guess-01
                   :ARG0 (c22-0 / you)
                   :ARG1 (c22-4 / location
                                :source-of (c22-5 / he))
                   :ARG2-of (c22-3 / start-01
                                   :ARG1 (c22-1 / pool))
                   :mode imperative))

# ::snt I heard that someone has a copy of Obamas birth certificate the real one
# ::tokens ["I", "heard", "that", "someone", "has", "a", "copy", "of", "Obamas", "birth", "certificate", "the", "real", "one"]
# ::lemmas ["i", "hear", "that", "someone", "have", "a", "copy", "of", "Obamas", "birth", "certificate", "the", "real", "one"]
(c23-5 / hear-01
       :ARG0 (c23-8 / i)
       :ARG1 (c23-3 / have-03
                    :ARG0 (c23-4 / someone)
                    :ARG1 (c23-1 / copy-01
                                 :ARG1 (c23-6 / certificate
                                              :topic (c23-9 / bear-02
                                                            :ARG1 (c23-2 / person
                                                                         :name (c23-7 / name
                                                                                      :op1 "Obama")))
                                              :ARG1-of (c23-0 / real-04)))))

# ::snt I order a ban on Obama he is sickening  Muslim yetch
# ::tokens ["I", "order", "a", "ban", "on", "Obama", "he", "is", "sickening", " ", "Muslim", "yetch"]
# ::lemmas ["i", "order", "a", "ban", "on", "Obama", "he", "be", "sicken", " ", "Muslim", "yetch"]
(c24-6 / say-01
       :ARG0 (c24-8 / i)
       :ARG1 (c24-0 / order-01
                    :ARG0 c24-8
                    :ARG1 (c24-9 / ban-01
                                 :ARG1 (c24-3 / person
                                              :name (c24-7 / name
                                                           :op1 "Obama")))
                    :ARG0-of (c24-5 / sicken-01
                                    :ARG1 (c24-1 / person
                                                 :mod (c24-2 / religious-group
                                                             :name (c24-4 / name
                                                                          :op1 "Muslim")))))
       :ARG2 (c24-10 / yetch))

# ::snt seems that way
# ::tokens ["seems", "that", "way"]
# ::lemmas ["seem", "that", "way"]
(c25-1 / seem-01
       :manner (c25-2 / way
                      :mod (c25-0 / that)))

# ::snt yes  a ban on all pork products that would offend Muslims
# ::tokens ["yes", " ", "a", "ban", "on", "all", "pork", "products", "that", "would", "offend", "Muslims"]
# ::lemmas ["yes", " ", "a", "ban", "on", "all", "pork", "product", "that", "would", "offend", "Muslims"]
(c26-7 / ban-01
       :ARG1 (c26-4 / product
                    :mod (c26-2 / pork)
                    :mod (c26-5 / all)
                    :ARG0-of (c26-0 / offend-01
                                    :ARG1 (c26-1 / person
                                                 :mod (c26-3 / religious-group
                                                             :name (c26-6 / name
                                                                          :op1 "Muslim"))))))

# ::snt casscj is this for REAL
# ::tokens ["casscj", "is", "this", "for", "REAL"]
# ::lemmas ["casscj", "be", "this", "for", "REAL"]
(c27-3 / serious-01
       :ARG1 (c27-1 / this)
       :ARG1-of (c27-2 / say-01
                       :ARG0 (c27-5 / i)
                       :ARG2 (c27-0 / person
                                    :name (c27-4 / name
                                                 :op1 "Casscj"))))
