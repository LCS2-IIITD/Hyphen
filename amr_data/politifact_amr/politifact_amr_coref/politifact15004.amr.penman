# ::snt any truth to this  people are telling me this is fake news
# ::tokens ["any", "truth", "to", "this", " ", "people", "are", "telling", "me", "this", "is", "fake", "news"]
# ::lemmas ["any", "truth", "to", "this", " ", "people", "be", "tell", "me", "this", "be", "fake", "news"]
(c1-1 / true-01
      :ARG1 (c1-6 / this)
      :ARG2 (c1-4 / news
                  :ARG1-of (c1-3 / fake-02)
                  :domain (c1-2 / this))
      :ARG1-of (c1-7 / tell-01
                     :ARG0 (c1-0 / person)
                     :ARG2 (c1-5 / i)))

# ::snt Gee I wonder if they used the Clinton Crime Family assassin
# ::tokens ["Gee", "I", "wonder", "if", "they", "used", "the", "Clinton", "Crime", "Family", "assassin"]
# ::lemmas ["gee", "i", "wonder", "if", "they", "use", "the", "Clinton", "Crime", "Family", "assassin"]
(c2-3 / wonder-01
      :ARG0 (c2-9 / i)
      :ARG1 (c2-2 / truth-value
                  :polarity-of (c2-1 / use-01
                                     :ARG0 (c2-10 / they)
                                     :ARG1 (c2-0 / person
                                                 :ARG0-of (c2-4 / assassinate-01)
                                                 :ARG0-of (c2-6 / have-org-role-91
                                                                :ARG1 (c2-5 / family
                                                                            :name (c2-8 / name
                                                                                        :op1 "Clinton"
                                                                                        :op2 "Crime"
                                                                                        :op3 "Family"))))))
      :mod (c2-7 / gee
                 :mode expressive))

# ::snt This is fake news just sayin
# ::tokens ["This", "is", "fake", "news", "just", "sayin"]
# ::lemmas ["this", "be", "fake", "news", "just", "sayin"]
(c3-2 / say-01
      :ARG1 (c3-3 / news
                  :ARG1-of (c3-1 / fake-02)
                  :domain (c3-0 / this))
      :mod (c3-4 / just))

# ::snt Wtf why you keep tweeting this spam
# ::tokens ["Wtf", "why", "you", "keep", "tweeting", "this", "spam"]
# ::lemmas ["Wtf", "why", "you", "keep", "tweet", "this", "spam"]
(c4-0 / cause-01
      :ARG0 (c4-2 / amr-unknown)
      :ARG1 (c4-4 / keep-02
                  :ARG0 (c4-7 / you)
                  :ARG1 (c4-1 / tweet-01
                              :ARG0 c4-7
                              :ARG1 (c4-5 / spam
                                          :mod (c4-6 / this))))
      :mod (c4-3 / fuck
                 :mode expressive))

# ::snt This is fake
# ::tokens ["This", "is", "fake"]
# ::lemmas ["this", "be", "fake"]
(c5-0 / fake-02
      :ARG1 (c5-1 / this))

# ::snt Fake story No such person ever employed by NFL TerezOwens is just driving traffic to its website
# ::tokens ["Fake", "story", "No", "such", "person", "ever", "employed", "by", "NFL", "TerezOwens", "is", "just", "driving", "traffic", "to", "its", "website"]
# ::lemmas ["fake", "story", "no", "such", "person", "ever", "employ", "by", "NFL", "TerezOwens", "be", "just", "drive", "traffic", "to", "its", "website"]
(c6-10 / multi-sentence
       :snt1 (c6-9 / story
                   :ARG1-of (c6-8 / fake-02))
       :snt2 (c6-0 / drive-01
                   :ARG0 (c6-1 / person
                               :name (c6-12 / name
                                            :op1 "TerezOwens")
                               :ARG1-of (c6-2 / employ-01
                                              :ARG0 (c6-11 / league
                                                           :name (c6-3 / name
                                                                       :op1 "The"
                                                                       :op2 "Footbal"))
                                              :time (c6-7 / ever))
                               :mod (c6-6 / such))
                   :ARG1 (c6-4 / traffic)
                   :ARG2 (c6-5 / website
                               :poss (c6-13 / it))
                   :mod (c6-14 / just)))

# ::snt All I want to know is who was he taking
# ::tokens ["All", "I", "want", "to", "know", "is", "who", "was", "he", "taking"]
# ::lemmas ["all", "i", "want", "to", "know", "be", "who", "be", "he", "take"]
(c7-2 / want-01
      :ARG0 (c7-6 / i)
      :ARG1 (c7-4 / know-01
                  :ARG0 c7-6
                  :ARG1 (c7-0 / person
                              :ARG1-of (c7-1 / take-01
                                             :ARG0 (c7-5 / he)))
                  :mod (c7-3 / all)))

# ::snt Fake news
# ::tokens ["Fake", "news"]
# ::lemmas ["fake", "news"]
(c8-0 / news
      :ARG1-of (c8-1 / fake-02))

# ::snt This story has PardonMyTake PFTCommenter and BarstoolBigCat all over it
# ::tokens ["This", "story", "has", "PardonMyTake", "PFTCommenter", "and", "BarstoolBigCat", "all", "over", "it"]
# ::lemmas ["this", "story", "have", "PardonMyTake", "PFTCommenter", "and", "BarstoolBigCat", "all", "over", "it"]
(c9-8 / be-located-at-91
      :ARG1 (c9-6 / story
                  :mod (c9-4 / this))
      :ARG2 (c9-5 / all-over
                  :op1 (c9-3 / and
                             :op1 (c9-1 / person
                                        :name (c9-7 / name
                                                    :op1 "PardonMyTake"
                                                    :op2 "PFTCommenter"))
                             :op2 (c9-0 / person
                                        :name (c9-2 / name
                                                    :op1 "BarstoolBigCat")))))

# ::snt I understand thatâ€™s a fake story  do you have a verifiable source
# ::tokens ["I", "understand", "that", "\u2019s", "a", "fake", "story", " ", "do", "you", "have", "a", "verifiable", "source"]
# ::lemmas ["i", "understand", "that", "\u2019", "a", "fake", "story", " ", "do", "you", "have", "a", "verifiable", "source"]
(c10-8 / multi-sentence
       :snt1 (c10-1 / understand-01
                    :ARG0 (c10-10 / i)
                    :ARG1 (c10-7 / story
                                 :ARG1-of (c10-6 / fake-02)
                                 :domain (c10-2 / that)))
       :snt2 (c10-9 / have-03
                    :ARG0 (c10-11 / you)
                    :ARG1 (c10-4 / source
                                 :ARG1-of (c10-3 / verify-01
                                                 :ARG1-of (c10-0 / possible-01)))
                    :polarity (c10-5 / amr-unknown)))

# ::snt Its a profit sharing league Why not It makes great business sense You also create Heros
# ::tokens ["Its", "a", "profit", "sharing", "league", "Why", "not", "It", "makes", "great", "business", "sense", "You", "also", "create", "Heros"]
# ::lemmas ["its", "a", "profit", "share", "league", "why", "not", "it", "make", "great", "business", "sense", "you", "also", "create", "Heros"]
(c11-9 / multi-sentence
       :snt1 (c11-8 / league
                    :domain (c11-12 / it)
                    :purpose (c11-7 / share-01
                                    :ARG1 (c11-2 / profit))
                    :ARG1-of (c11-3 / cause-01
                                    :ARG0 (c11-6 / amr-unknown)))
       :snt2 (c11-5 / sense-02
                    :ARG1 (c11-0 / it)
                    :mod (c11-13 / business
                                 :mod (c11-11 / great)))
       :snt3 (c11-10 / create-01
                     :ARG0 (c11-15 / you)
                     :ARG1 (c11-1 / product
                                  :name (c11-14 / name
                                                :op1 "Heros"))
                     :mod (c11-4 / also)))

# ::snt Gotta follow up on that story
# ::tokens ["Got", "ta", "follow", "up", "on", "that", "story"]
# ::lemmas ["got", "to", "follow", "up", "on", "that", "story"]
(c12-0 / obligate-01
       :ARG2 (c12-1 / follow-up-03
                    :ARG1 (c12-3 / story
                                 :mod (c12-2 / that))))

# ::snt albert312r
# ::tokens ["albert312r"]
# ::lemmas ["albert312r"]
(c13-0 / person
       :name (c13-1 / name
                    :op1 "albert312r"))

# ::snt This is a fake article  nothing true about this at all
# ::tokens ["This", "is", "a", "fake", "article", " ", "nothing", "true", "about", "this", "at", "all"]
# ::lemmas ["this", "be", "a", "fake", "article", " ", "nothing", "true", "about", "this", "at", "all"]
(c14-2 / and
       :op1 (c14-0 / article
                   :ARG1-of (c14-4 / fake-02)
                   :domain (c14-1 / this))
       :op2 (c14-6 / true-01
                   :ARG1 (c14-5 / nothing)
                   :ARG2 (c14-3 / this)
                   :mod (c14-7 / at-all)
                   :polarity -))

# ::snt Just putting out there NYTimes posted then deleted story
# ::tokens ["Just", "putting", "out", "there", "NYTimes", "posted", "then", "deleted", "story"]
# ::lemmas ["just", "put", "out", "there", "NYTimes", "post", "then", "delete", "story"]
(c15-3 / put-01
       :ARG0 (c15-9 / you)
       :ARG1 (c15-5 / and
                    :op1 (c15-1 / post-01
                                :ARG0 (c15-7 / newspaper
                                             :name (c15-4 / name
                                                          :op1 "NYTimes"))
                                :ARG1 (c15-6 / story))
                    :op2 (c15-2 / delete-01
                                :ARG0 c15-7
                                :ARG1 c15-6))
       :ARG2 (c15-0 / out-there)
       :mod (c15-8 / just))

# ::snt FAKE  come on TerezOwens Ur better than this
# ::tokens ["FAKE", " ", "come", "on", "TerezOwens", "Ur", "better", "than", "this"]
# ::lemmas ["fake", " ", "come", "on", "TerezOwens", "Ur", "well", "than", "this"]
(c16-3 / fake-02
       :ARG0 (c16-8 / you)
       :ARG1 (c16-0 / come-on-25
                    :ARG1 (c16-1 / person
                                 :name (c16-7 / name
                                              :op1 "TerezOwens"))
                    :ARG1-of (c16-4 / have-degree-91
                                    :ARG2 (c16-6 / good-02
                                                 :ARG1 c16-0)
                                    :ARG3 (c16-5 / more)
                                    :ARG4 (c16-2 / this)))
       :mode imperative)

# ::snt What the what
# ::tokens ["What", "the", "what"]
# ::lemmas ["what", "the", "what"]
(c17-0 / amr-unknown
       :mod (c17-1 / thing))

# ::snt fakenews
# ::tokens ["fakenews"]
# ::lemmas ["fakenews"]
(c18-0 / publication
       :name (c18-1 / name
                    :op1 "Fakenews"))

# ::snt I havenâ€™t watched the item yet but my gut instinct says no
# ::tokens ["I", "have", "n\u2019t", "watched", "the", "item", "yet", "but", "my", "gut", "instinct", "says", "no"]
# ::lemmas ["i", "have", "not", "watch", "the", "item", "yet", "but", "my", "gut", "instinct", "say", "no"]
(c19-1 / contrast-01
       :ARG1 (c19-2 / watch-01
                    :ARG0 (c19-7 / i)
                    :ARG1 (c19-0 / item)
                    :time (c19-8 / yet)
                    :polarity -)
       :ARG2 (c19-3 / say-01
                    :ARG0 (c19-5 / instinct
                                 :mod (c19-6 / gut)
                                 :poss c19-7)
                    :ARG1 (c19-4 / no)))

# ::snt All players refs coaches and officials involved with major sports are all about LieCheatSteal NFL MLB NBA NHL soccer etc etc Big Money  Big Lie
# ::tokens ["All", "players", "refs", "coaches", "and", "officials", "involved", "with", "major", "sports", "are", "all", "about", "LieCheatSteal", "NFL", "MLB", "NBA", "NHL", "soccer", "etc", "etc", "Big", "Money", " ", "Big", "Lie"]
# ::lemmas ["all", "player", "ref", "coach", "and", "official", "involve", "with", "major", "sport", "be", "all", "about", "liecheatsteal", "NFL", "MLB", "NBA", "NHL", "soccer", "etc", "etc", "big", "money", " ", "big", "lie"]
(c20-10 / concern-02
        :ARG0 (c20-18 / lie-08
                      :ARG0 (c20-24 / and
                                    :op1 (c20-3 / person
                                                :ARG0-of (c20-25 / coach-01
                                                                 :ARG1 (c20-8 / person
                                                                              :ARG0-of (c20-23 / play-01))))
                                    :op2 (c20-20 / person
                                                 :ARG0-of (c20-13 / have-org-role-91
                                                                  :ARG2 (c20-0 / official)))
                                    :ARG1-of (c20-6 / involve-01
                                                    :ARG2 (c20-26 / sport
                                                                  :ARG1-of (c20-19 / major-02)))
                                    :mod (c20-16 / all))
                      :ARG1 (c20-22 / and
                                    :op1 (c20-17 / lie-08
                                                 :ARG0 (c20-14 / person))
                                    :op2 (c20-12 / lie-08
                                                 :ARG0 c20-14)
                                    :op3 (c20-7 / and
                                                :op1 (c20-5 / game
                                                            :name (c20-27 / name
                                                                          :op1 "MLB"))
                                                :op2 (c20-15 / game
                                                             :name (c20-11 / name
                                                                           :op1 "NBA"))
                                                :op3 (c20-9 / game
                                                            :name (c20-1 / name
                                                                         :op1 "NHL"))
                                                :op4 (c20-4 / et-cetera))
                                    :op5 (c20-2 / money
                                                :mod (c20-21 / big)))))

# ::snt Q posted flyeaglesfly Kelly Ann Conway in a pre game interview on Fox called the Eagles to win Thought she was just an Eagles fan Maybe more to it
# ::tokens ["Q", "posted", "flyeaglesfly", "Kelly", "Ann", "Conway", "in", "a", "pre", "game", "interview", "on", "Fox", "called", "the", "Eagles", "to", "win", "Thought", "she", "was", "just", "an", "Eagles", "fan", "Maybe", "more", "to", "it"]
# ::lemmas ["Q", "post", "flyeaglesfly", "Kelly", "Ann", "Conway", "in", "a", "pre", "game", "interview", "on", "Fox", "call", "the", "Eagles", "to", "win", "Thought", "she", "be", "just", "an", "Eagles", "fan", "maybe", "more", "to", "it"]
(c21-17 / and
        :op1 (c21-2 / post-01
                    :ARG0 (c21-6 / person
                                 :name (c21-10 / name
                                               :op1 "Q"))
                    :ARG1 (c21-15 / person
                                  :name (c21-9 / name
                                               :op1 "Kelly"
                                               :op2 "Ann"
                                               :op3 "Conway")
                                  :ARG0-of (c21-18 / fly-01)
                                  :ARG0-of (c21-8 / call-03
                                                  :ARG1 (c21-11 / team
                                                                :name (c21-1 / name
                                                                             :op1 "Philadelphia"
                                                                             :op2 "Eagles"))
                                                  :purpose (c21-3 / win-01
                                                                  :ARG0 c21-11)))
                    :ARG2 (c21-4 / interview-01
                                 :ARG0 (c21-14 / broadcast-program
                                               :name (c21-7 / name
                                                            :op1 "Fox"))
                                 :ARG1 c21-15
                                 :time (c21-16 / before
                                               :op1 (c21-19 / game))))
        :op2 (c21-5 / think-01
                    :ARG0 c21-6
                    :ARG1 (c21-0 / fan
                                 :domain c21-15
                                 :mod (c21-20 / just)
                                 :mod c21-11)
                    :ARG1-of (c21-13 / possible-01)
                    :mod (c21-12 / more)))

# ::snt I hate snopes but this seems to be fake news the NY times article does not exist Goodes not a real person etc
# ::tokens ["I", "hate", "snopes", "but", "this", "seems", "to", "be", "fake", "news", "the", "NY", "times", "article", "does", "not", "exist", "Goodes", "not", "a", "real", "person", "etc"]
# ::lemmas ["i", "hate", "snope", "but", "this", "seem", "to", "be", "fake", "news", "the", "NY", "times", "article", "do", "not", "exist", "goode", "not", "a", "real", "person", "etc"]
(c22-4 / contrast-01
       :ARG1 (c22-15 / hate-01
                     :ARG0 (c22-18 / i)
                     :ARG1 (c22-14 / snope))
       :ARG2 (c22-10 / seem-01
                     :ARG1 (c22-13 / fake-02
                                   :ARG1 (c22-17 / news
                                                 :domain (c22-8 / this))))
       :ARG1-of (c22-16 / cause-01
                        :ARG0 (c22-11 / and
                                      :op1 (c22-5 / exist-01
                                                  :ARG1 (c22-7 / article
                                                               :mod (c22-6 / newspaper
                                                                           :name (c22-2 / name
                                                                                        :op1 "NY"
                                                                                        :op2 "Times")))
                                                  :polarity -)
                                      :op2 (c22-9 / person
                                                  :ARG1-of (c22-0 / real-04
                                                                  :polarity -)
                                                  :domain (c22-1 / person
                                                                 :name (c22-3 / name
                                                                              :op1 "Goodes")))
                                      :op3 (c22-12 / et-cetera))))

# ::snt HOLY SHT
# ::tokens ["HOLY", "SHT"]
# ::lemmas ["HOLY", "SHT"]
(c23-0 / tough-02
       :mod (c23-1 / hey
                   :mode expressive))

# ::snt We are living in a world where telling the truth can cost you your life We need to change that or suffer the consequences
# ::tokens ["We", "are", "living", "in", "a", "world", "where", "telling", "the", "truth", "can", "cost", "you", "your", "life", "We", "need", "to", "change", "that", "or", "suffer", "the", "consequences"]
# ::lemmas ["we", "be", "live", "in", "a", "world", "where", "tell", "the", "truth", "can", "cost", "you", "your", "life", "we", "need", "to", "change", "that", "or", "suffer", "the", "consequence"]
(c24-11 / multi-sentence
        :snt1 (c24-10 / live-01
                      :ARG0 (c24-7 / we)
                      :location (c24-3 / world
                                       :location-of (c24-4 / possible-01
                                                           :ARG1 (c24-5 / cost-01
                                                                        :ARG1 (c24-6 / tell-01
                                                                                     :ARG0 (c24-14 / you)
                                                                                     :ARG1 (c24-13 / truth))
                                                                        :ARG2 c24-10
                                                                        :ARG0 c24-14)
                                                           :ARG3 c24-14)))
        :snt2 (c24-0 / or
                     :op1 (c24-1 / obligate-01
                                 :ARG1 c24-14)
                     :ARG2 (c24-9 / change-01
                                  :ARG0 c24-14
                                  :ARG1 (c24-8 / that)))
        :op2 (c24-12 / suffer-01
                     :ARG0 c24-14
                     :ARG1 (c24-2 / consequence-03
                                  :ARG1 c24-14
                                  :ARG3 c24-6)))

# ::snt Whats up with that Were any Clintons involved
# ::tokens ["What", "s", "up", "with", "that", "Were", "any", "Clintons", "involved"]
# ::lemmas ["what", "s", "up", "with", "that", "be", "any", "Clintons", "involve"]
(c25-5 / involve-01
       :ARG1 (c25-0 / person
                    :name (c25-4 / name
                                 :op1 "Clinton")
                    :mod (c25-3 / any))
       :ARG2 (c25-2 / that)
       :polarity (c25-1 / amr-unknown)
       :manner (c25-6 / amr-unknown))

# ::snt The NFL had him killed obviously probably after getting some pointers from the Clintons
# ::tokens ["The", "NFL", "had", "him", "killed", "obviously", "probably", "after", "getting", "some", "pointers", "from", "the", "Clintons"]
# ::lemmas ["the", "NFL", "have", "him", "kill", "obviously", "probably", "after", "get", "some", "pointer", "from", "the", "Clintons"]
(c26-9 / have-04
       :ARG0 (c26-8 / league
                    :name (c26-12 / name
                                  :op1 "The"
                                  :op2 "NFL"))
       :ARG1 (c26-7 / kill-01
                    :ARG1 (c26-5 / he))
       :ARG1-of (c26-0 / obvious-01)
       :time (c26-6 / after
                    :op1 (c26-10 / get-01
                                 :ARG0 c26-5
                                 :ARG1 (c26-3 / pointers
                                              :quant (c26-11 / some))
                                 :ARG2 (c26-2 / person
                                              :name (c26-4 / name
                                                           :op1 "Clinton")))
                    :mod (c26-1 / probable)))

# ::snt Oh wow
# ::tokens ["Oh", "wow"]
# ::lemmas ["oh", "wow"]
(c27-1 / wow
       :mod (c27-0 / oh)
       :mode expressive)

# ::snt Yarrrrp
# ::tokens ["Yarrrrp"]
# ::lemmas ["Yarrrrp"]
(c28-0 / yarrrrp
       :mode expressive)

# ::snt Yes I too heard it was rigged No doubt
# ::tokens ["Yes", "I", "too", "heard", "it", "was", "rigged", "No", "doubt"]
# ::lemmas ["yes", "i", "too", "hear", "it", "be", "rig", "no", "doubt"]
(c29-4 / hear-01
       :ARG0 (c29-5 / i)
       :ARG1 (c29-1 / rig-01
                    :ARG1 (c29-0 / it))
       :mod (c29-3 / too)
       :ARG1-of (c29-2 / doubt-01
                       :polarity -))

# ::snt Fake Republican crooked nasty  Trump boldly boasted  Ive been greedy greedy greedy all my lifecant be to greedy  Just wondering Trump also boasted that he gets even  gets revenge on all who do not give their loyalty to himOnly trump is above ruleslawspatriotism
# ::tokens ["Fake", "Republican", "crooked", "nasty", " ", "Trump", "boldly", "boasted", " ", "I", "ve", "been", "greedy", "greedy", "greedy", "all", "my", "lifecant", "be", "to", "greedy", " ", "Just", "wondering", "Trump", "also", "boasted", "that", "he", "gets", "even", " ", "gets", "revenge", "on", "all", "who", "do", "not", "give", "their", "loyalty", "to", "himOnly", "trump", "is", "above", "ruleslawspatriotism"]
# ::lemmas ["fake", "Republican", "crooked", "nasty", " ", "Trump", "boldly", "boast", " ", "i", "have", "be", "greedy", "greedy", "greedy", "all", "my", "lifecant", "be", "to", "greedy", " ", "just", "wonder", "Trump", "also", "boast", "that", "he", "get", "even", " ", "get", "revenge", "on", "all", "who", "do", "not", "give", "their", "loyalty", "to", "himonly", "trump", "be", "above", "ruleslawspatriotism"]
(c30-17 / multi-sentence
        :snt1 (c30-20 / boast-01
                      :ARG0 (c30-2 / person
                                   :name (c30-12 / name
                                                 :op1 "Trump")
                                   :mod (c30-10 / nasty)
                                   :ARG1-of (c30-26 / fake-02)
                                   :mod (c30-6 / political-party
                                               :name (c30-1 / name
                                                            :op1 "Republican")))
                      :ARG1 (c30-27 / greedy
                                    :domain c30-2
                                    :degree (c30-14 / greedy)
                                    :extent (c30-18 / lifecant
                                                    :poss c30-2
                                                    :mod (c30-25 / all)))
                      :ARG1-of (c30-23 / bold-02))
        :snt2 (c30-4 / wonder-01
                     :ARG1 (c30-7 / boast-01
                                  :ARG0 (c30-22 / person
                                                :name (c30-9 / name
                                                             :op1 "Trump"))
                                  :ARG1 (c30-8 / get-01
                                               :ARG0 c30-22
                                               :ARG1 (c30-0 / revenge)
                                               :ARG4 (c30-19 / person
                                                             :mod (c30-15 / all)
                                                             :ARG0-of (c30-16 / loyal-01
                                                                              :ARG1 c30-22
                                                                              :ARG2 c30-22
                                                                              :polarity -))
                                               :mod (c30-3 / even)))
                     :mod (c30-21 / also))
        :snt3 (c30-5 / above
                     :op1 (c30-11 / rulespatriotism)
                     :domain (c30-13 / person
                                     :name (c30-24 / name
                                                   :op1 " trump"))))

# ::snt Did he leak who wins before be died
# ::tokens ["Did", "he", "leak", "who", "wins", "before", "be", "died"]
# ::lemmas ["do", "he", "leak", "who", "win", "before", "be", "die"]
(c31-5 / leak-01
       :ARG0 (c31-4 / he)
       :ARG1 (c31-1 / person
                    :ARG0-of (c31-2 / win-01)
                    :time (c31-6 / before
                                 :op1 (c31-0 / die-01
                                             :ARG1 c31-1)))
       :polarity (c31-3 / amr-unknown))

# ::snt Wow Even sports have turned to murder as a tool What a very sick country we are
# ::tokens ["Wow", "Even", "sports", "have", "turned", "to", "murder", "as", "a", "tool", "What", "a", "very", "sick", "country", "we", "are"]
# ::lemmas ["wow", "even", "sport", "have", "turn", "to", "murder", "as", "a", "tool", "what", "a", "very", "sick", "country", "we", "be"]
(c32-3 / turn-02
       :ARG0 (c32-7 / sport
                    :mod (c32-1 / even))
       :ARG1 (c32-8 / murder-01
                    :ARG0 c32-7
                    :prep-as (c32-9 / tool))
       :ARG2 (c32-2 / country
                    :ARG1-of (c32-5 / sick-02
                                    :degree (c32-4 / very))
                    :domain (c32-6 / we))
       :mod (c32-0 / wow
                   :mode expressive))

# ::snt We cant see you
# ::tokens ["We", "ca", "nt", "see", "you"]
# ::lemmas ["we", "can", "not", "see", "you"]
(c33-1 / possible-01
       :ARG1 (c33-2 / see-01
                    :ARG0 (c33-3 / we)
                    :ARG1 (c33-0 / you))
       :polarity -)

# ::snt Whats the NFL term for Hillarys Disease
# ::tokens ["What", "s", "the", "NFL", "term", "for", "Hillarys", "Disease"]
# ::lemmas ["what", "s", "the", "NFL", "term", "for", "Hillarys", "Disease"]
(c34-2 / term-01
       :ARG0 (c34-4 / league
                    :name (c34-5 / name
                                 :op1 "NFL"))
       :ARG1 (c34-0 / disease
                    :name (c34-1 / name
                                 :op1 "Hillarys"
                                 :op2 "Disease"))
       :ARG2 (c34-3 / amr-unknown))
