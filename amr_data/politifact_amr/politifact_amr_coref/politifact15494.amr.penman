# ::snt Let him join Greta and Megyngood riddance
# ::tokens ["Let", "him", "join", "Greta", "and", "Megyngood", "riddance"]
# ::lemmas ["let", "him", "join", "Greta", "and", "Megyngood", "riddance"]
(c1-4 / let-01
      :ARG0 (c1-8 / you)
      :ARG1 (c1-7 / join-01
                  :ARG0 (c1-5 / he)
                  :ARG1 (c1-0 / riddance
                              :mod (c1-2 / person
                                         :name (c1-6 / name
                                                     :op1 "Greta"))
                              :mod (c1-1 / person
                                         :name (c1-3 / name
                                                     :op1 "Megyngood"))))
      :mode imperative)

# ::snt I hope so
# ::tokens ["I", "hope", "so"]
# ::lemmas ["i", "hope", "so"]
(c2-2 / hope-01
      :ARG0 (c2-0 / i)
      :ARG1 (c2-1 / so))

# ::snt wendyfarrier1  Dont TEASE me  Firing a fake conservative  doesnt SOUND like Faux News
# ::tokens ["wendyfarrier1", " ", "Do", "nt", "TEASE", "me", " ", "Firing", "a", "fake", "conservative", " ", "does", "nt", "SOUND", "like", "Faux", "News"]
# ::lemmas ["wendyfarrier1", " ", "do", "not", "tease", "me", " ", "fire", "a", "fake", "conservative", " ", "do", "not", "sound", "like", "Faux", "News"]
(c3-8 / say-01
      :ARG0 (c3-10 / i)
      :ARG1 (c3-6 / and
                  :op1 (c3-4 / TEASE-00
                             :ARG0 (c3-12 / you)
                             :ARG1 c3-10
                             :polarity -
                             :mode imperative)
                  :op2 (c3-5 / sound-01
                             :ARG1 (c3-7 / fire-02
                                         :ARG1 (c3-2 / conservative
                                                     :ARG1-of (c3-1 / fake-02)))
                             :ARG2 (c3-0 / resemble-01
                                         :ARG1 c3-7
                                         :ARG2 (c3-11 / broadcast-program
                                                      :name (c3-9 / name
                                                                  :op1 "Faux"
                                                                  :op2 "News")))
                             :polarity -))
      :ARG2 (c3-3 / person
                  :name c3-9
                  :op1 "wendyfarrier1"))

# ::snt CarolHello1 I New it would happen sooner or latersmh
# ::tokens ["CarolHello1", "I", "New", "it", "would", "happen", "sooner", "or", "latersmh"]
# ::lemmas ["carolhello1", "i", "New", "it", "would", "happen", "soon", "or", "latersmh"]
(c4-5 / say-01
      :ARG0 (c4-8 / i)
      :ARG1 (c4-4 / and
                  :op1 (c4-6 / hello
                             :mode expressive)
                  :op2 (c4-7 / new-01
                             :ARG0 c4-8
                             :ARG1 (c4-0 / it
                                         :time (c4-1 / eventual))))
      :ARG2 (c4-2 / person
                  :name (c4-3 / name
                              :op1 "CarolHello1")))

# ::snt Oh well Colbert should be next
# ::tokens ["Oh", "well", "Colbert", "should", "be", "next"]
# ::lemmas ["oh", "well", "Colbert", "should", "be", "next"]
(c5-1 / recommend-01
      :ARG1 (c5-4 / next
                  :domain (c5-2 / person
                                :name (c5-3 / name
                                            :op1 "Colbert")))
      :mod (c5-0 / oh-well
                 :mode expressive))

# ::snt I dont think they MSNBC or CNN would want Shepard Smith
# ::tokens ["I", "do", "nt", "think", "they", "MSNBC", "or", "CNN", "would", "want", "Shepard", "Smith"]
# ::lemmas ["i", "do", "not", "think", "they", "MSNBC", "or", "CNN", "would", "want", "Shepard", "Smith"]
(c6-6 / think-01
      :ARG0 (c6-9 / i)
      :ARG1 (c6-7 / want-01
                  :ARG0 (c6-0 / or
                              :op1 (c6-4 / publication
                                         :name (c6-8 / name
                                                     :op1 "MSNBC"))
                              :op2 (c6-2 / publication
                                         :name (c6-5 / name
                                                     :op1 "CNN")))
                  :ARG1 (c6-1 / person
                              :name (c6-3 / name
                                          :op1 "Shepard"
                                          :op2 "Smith")))
      :polarity -)

# ::snt I do to but you cant tell with all the Fake news realDonaldTrump  POTUS
# ::tokens ["I", "do", "to", "but", "you", "ca", "nt", "tell", "with", "all", "the", "Fake", "news", "realDonaldTrump", " ", "POTUS"]
# ::lemmas ["i", "do", "to", "but", "you", "can", "not", "tell", "with", "all", "the", "Fake", "news", "realdonaldtrump", " ", "POTUS"]
(c7-3 / contrast-01
      :ARG1 (c7-2 / do-02
                  :ARG0 (c7-13 / i)
                  :mod (c7-6 / too))
      :ARG2 (c7-4 / possible-01
                  :ARG1 (c7-14 / tell-02
                               :ARG0 (c7-15 / you)
                               :ARG1 (c7-12 / news
                                            :ARG1-of (c7-8 / fake-02)
                                            :mod (c7-7 / all)
                                            :ARG1-of (c7-10 / mean-01
                                                            :ARG2 (c7-1 / person
                                                                        :ARG0-of (c7-11 / have-org-role-91
                                                                                        :ARG1 (c7-9 / country
                                                                                                    :name (c7-5 / name
                                                                                                                :op1 "United"
                                                                                                                :op2 "States"))
                                                                                        :ARG2 (c7-0 / president))))))
                  :polarity -))

# ::snt God I HOPE this is true
# ::tokens ["God", "I", "HOPE", "this", "is", "true"]
# ::lemmas ["God", "i", "hope", "this", "be", "true"]
(c8-2 / hope-01
      :ARG0 (c8-4 / i)
      :ARG1 (c8-1 / true-01
                  :ARG1 (c8-5 / this))
      :mod (c8-0 / person
                 :name (c8-3 / name
                             :op1 "God")
                 :mode expressive))

# ::snt Great
# ::tokens ["Great"]
# ::lemmas ["great"]
(c9-0 / great)

# ::snt I wish this were true
# ::tokens ["I", "wish", "this", "were", "true"]
# ::lemmas ["i", "wish", "this", "be", "true"]
(c10-3 / wish-01
       :ARG0 (c10-0 / i)
       :ARG1 (c10-2 / true-01
                    :ARG1 (c10-1 / this)))

# ::snt Hope this is true
# ::tokens ["Hope", "this", "is", "true"]
# ::lemmas ["hope", "this", "be", "true"]
(c11-3 / hope-01
       :ARG0 (c11-0 / i)
       :ARG1 (c11-2 / true-01
                    :ARG1 (c11-1 / this)))

# ::snt He can go to CNN
# ::tokens ["He", "can", "go", "to", "CNN"]
# ::lemmas ["he", "can", "go", "to", "CNN"]
(c12-1 / possible-01
       :ARG1 (c12-4 / go-02
                    :ARG0 (c12-2 / he)
                    :ARG4 (c12-0 / publication
                                 :name (c12-3 / name
                                              :op1 "CNN"))))

# ::snt Now dont tease US
# ::tokens ["Now", "do", "nt", "tease", "US"]
# ::lemmas ["now", "do", "not", "tease", "US"]
(c13-2 / tease-01
       :ARG0 (c13-4 / you)
       :ARG1 (c13-0 / country
                    :name (c13-3 / name
                                 :op1 "US"))
       :time (c13-1 / now)
       :polarity -
       :mode imperative)

# ::snt Cyber bear Tell Putin his asset is compromised
# ::tokens ["Cyber", "bear", "Tell", "Putin", "his", "asset", "is", "compromised"]
# ::lemmas ["Cyber", "bear", "Tell", "Putin", "his", "asset", "be", "compromise"]
(c14-2 / tell-01
       :ARG0 (c14-7 / bear
                    :mod (c14-0 / cyber))
       :ARG1 (c14-4 / compromise-02
                    :ARG1 (c14-3 / asset
                                 :poss (c14-5 / he)))
       :ARG2 (c14-1 / person
                    :name (c14-6 / name
                                 :op1 "Putin")))

# ::snt like Trump said NewJobs bye Shep
# ::tokens ["like", "Trump", "said", "NewJobs", "bye", "Shep"]
# ::lemmas ["like", "Trump", "say", "NewJobs", "bye", "Shep"]
(c15-0 / resemble-01
       :ARG2 (c15-4 / say-01
                    :ARG0 (c15-2 / person
                                 :name (c15-5 / name
                                              :op1 "Trump"))
                    :ARG1 (c15-6 / bye)
                    :ARG2 (c15-1 / person
                                 :name (c15-3 / name
                                              :op1 "NewJobs"))))

# ::snt view from PrisonPlanet is that 30 of these fronts are compromised by paedoism it will be very obvious soon
# ::tokens ["view", "from", "PrisonPlanet", "is", "that", "30", "of", "these", "fronts", "are", "compromised", "by", "paedoism", "it", "will", "be", "very", "obvious", "soon"]
# ::lemmas ["view", "from", "PrisonPlanet", "be", "that", "30", "of", "these", "front", "be", "compromise", "by", "paedoism", "it", "will", "be", "very", "obvious", "soon"]
(c16-3 / compromise-02
       :ARG0 (c16-4 / pedophilia)
       :ARG1 (c16-8 / front
                    :ARG1-of (c16-11 / include-91
                                     :ARG2 (c16-2 / front
                                                  :mod (c16-5 / this)))
                    :quant 30)
       :ARG1-of (c16-0 / obvious-01
                       :time (c16-9 / soon)
                       :degree (c16-6 / very))
       :ARG1-of (c16-7 / view-02
                       :ARG0 (c16-1 / publication
                                    :name (c16-10 / name
                                                  :op1 "PrisonPlanet"))))

# ::snt Ã‡a fait un bout de temps que je me demandais pourquoi il navait pas rejoint Megyn K au lieu de faire le dÃ©goÃ»tÃ© Ã  lantenne
# ::tokens ["\u00c7a", "fait", "un", "bout", "de", "temps", "que", "je", "me", "demandais", "pourquoi", "il", "navait", "pas", "rejoint", "Megyn", "K", "au", "lieu", "de", "faire", "le", "d\u00e9go\u00fbt\u00e9", "\u00e0", "lantenne"]
# ::lemmas ["\u00e7a", "fait", "un", "bout", "de", "temps", "que", "je", "me", "demandais", "pourquoi", "il", "navait", "pas", "rejoint", "Megyn", "K", "au", "lieu", "de", "faire", "le", "d\u00e9go\u00fbt\u00e9", "\u00e0", "lantenne"]
(c17-12 / multi-sentence
        :snt1 (c17-5 / cause-01
                     :ARG0 (c17-10 / amr-unknown)
                     :ARG1 (c17-4 / demand-01
                                  :ARG0 (c17-17 / you)
                                  :ARG1 (c17-8 / amr-unintelligible
                                               :mod (c17-15 / bout
                                                            :mod (c17-9 / temps))
                                               :value "Un")))
        :snt2 (c17-0 / rejoint-01
                     :ARG0 (c17-14 / il)
                     :ARG1 (c17-6 / person
                                  :name (c17-13 / name
                                                :op1 "Megyn"
                                                :op2 "K"))
                     :ARG2 (c17-7 / navait-00
                                  :ARG0 c17-14)
                     :ARG1-of c17-5
                     :ARG0 (c17-16 / attend-02
                                   :ARG0 c17-14
                                   :ARG1 c17-6
                                   :ARG1-of (c17-1 / instead-of-91
                                                   :ARG2 (c17-11 / faire-01
                                                                 :ARG1 (c17-2 / product
                                                                              :name (c17-3 / name
                                                                                           :op1 "Le"
                                                                                           :op2 "Dieu"
                                                                                           :op3 "Ã»t"
                                                                                           :op4 "de"
                                                                                           :op5 "lant"
                                                                                           :op6 "enne")))))))

# ::snt He needs to be gone
# ::tokens ["He", "needs", "to", "be", "gone"]
# ::lemmas ["he", "need", "to", "be", "go"]
(c18-1 / need-01
       :ARG0 (c18-2 / he)
       :ARG1 (c18-0 / go-02
                    :ARG0 c18-2))

# ::snt Shepherd is a Far leftistDont watch his show
# ::tokens ["Shepherd", "is", "a", "Far", "leftistDont", "watch", "his", "show"]
# ::lemmas ["Shepherd", "be", "a", "Far", "leftistdont", "watch", "his", "show"]
(c19-5 / multi-sentence
       :snt1 (c19-4 / left-19
                    :ARG1 (c19-0 / person
                                 :name (c19-7 / name
                                              :op1 "Shepherd"))
                    :degree (c19-2 / far))
       :snt2 (c19-1 / watch-01
                    :ARG0 (c19-8 / you)
                    :ARG1 (c19-3 / show-04
                                 :ARG0 (c19-6 / he))
                    :polarity -
                    :mode imperative))

# ::snt I wish that was true Worst Fox anchor ever
# ::tokens ["I", "wish", "that", "was", "true", "Worst", "Fox", "anchor", "ever"]
# ::lemmas ["i", "wish", "that", "be", "true", "Worst", "Fox", "anchor", "ever"]
(c20-6 / wish-01
       :ARG0 (c20-11 / i)
       :ARG1 (c20-5 / true-01
                    :ARG1 (c20-12 / that))
       :ARG2 (c20-8 / have-degree-91
                    :ARG1 (c20-2 / person
                                 :ARG0-of (c20-4 / have-org-role-91
                                                 :ARG1 (c20-0 / broadcast-program
                                                              :name (c20-10 / name
                                                                            :op1 "Fox"))
                                                 :ARG2 (c20-7 / anchor)))
                    :ARG2 (c20-1 / bad-02
                                 :ARG1 c20-2)
                    :ARG3 (c20-9 / most)
                    :ARG5 (c20-3 / ever)))

# ::snt STOP THE FAKE NEWS  BUT WE ALL HOPE SO  IF YOU HAVE PROOF SPIT IT OUT
# ::tokens ["STOP", "THE", "FAKE", "NEWS", " ", "BUT", "WE", "ALL", "HOPE", "SO", " ", "IF", "YOU", "HAVE", "PROOF", "SPIT", "IT", "OUT"]
# ::lemmas ["stop", "the", "FAKE", "NEWS", " ", "but", "we", "all", "hope", "so", " ", "if", "you", "have", "proof", "spit", "it", "out"]
(c21-0 / contrast-01
       :ARG1 (c21-7 / stick-01
                    :ARG0 (c21-10 / you)
                    :ARG1 (c21-9 / news
                                 :ARG1-of (c21-6 / fake-02))
                    :mode imperative)
       :ARG2 (c21-8 / hope-01
                    :ARG0 (c21-2 / we
                                 :mod (c21-4 / all))
                    :degree (c21-3 / so)
                    :condition (c21-1 / prove-01
                                      :ARG0 c21-10
                                      :ARG1 (c21-5 / shit-out-02
                                                   :ARG0 c21-10
                                                   :ARG1 c21-9))))

# ::snt good riddens
# ::tokens ["good", "riddens"]
# ::lemmas ["good", "riddens"]
(c22-1 / ridden
       :ARG1-of (c22-0 / good-02))

# ::snt Long overdue He should join Meghan
# ::tokens ["Long", "overdue", "He", "should", "join", "Meghan"]
# ::lemmas ["long", "overdue", "he", "should", "join", "Meghan"]
(c23-3 / multi-sentence
       :snt1 (c23-0 / overdue
                    :ARG1-of (c23-4 / long-03))
       :snt2 (c23-1 / recommend-01
                    :ARG1 (c23-7 / join-04
                                 :ARG0 (c23-5 / he)
                                 :ARG1 (c23-2 / person
                                              :name (c23-6 / name
                                                           :op1 "Meghan")))))

# ::snt I and my associates and friends are going to have a party when hes fired
# ::tokens ["I", "and", "my", "associates", "and", "friends", "are", "going", "to", "have", "a", "party", "when", "he", "s", "fired"]
# ::lemmas ["i", "and", "my", "associate", "and", "friend", "be", "go", "to", "have", "a", "party", "when", "he", "s", "fire"]
(c24-3 / party-01
       :ARG0 (c24-6 / and
                    :op1 (c24-9 / i)
                    :op2 (c24-5 / and
                                :op1 (c24-1 / person
                                            :ARG1-of (c24-10 / associate-01
                                                             :ARG2 c24-9))
                                :op2 (c24-0 / person
                                            :ARG0-of (c24-8 / have-rel-role-91
                                                            :ARG1 c24-9
                                                            :ARG2 (c24-7 / friend)))))
       :time (c24-2 / fire-02
                    :ARG1 (c24-4 / he)))

# ::snt good because they are not supposed to give us their opinion theyre supposed to report news
# ::tokens ["good", "because", "they", "are", "not", "supposed", "to", "give", "us", "their", "opinion", "they", "re", "supposed", "to", "report", "news"]
# ::lemmas ["good", "because", "they", "be", "not", "suppose", "to", "give", "us", "their", "opinion", "they", "be", "suppose", "to", "report", "news"]
(c25-2 / cause-01
       :ARG0 (c25-7 / suppose-02
                    :ARG1 (c25-4 / they)
                    :ARG2 (c25-9 / give-01
                                 :ARG0 c25-4
                                 :ARG1 (c25-0 / opine-01
                                              :ARG0 c25-4
                                              :ARG1 (c25-6 / suppose-02
                                                           :ARG1 c25-4
                                                           :ARG2 (c25-1 / report-01
                                                                        :ARG0 c25-4
                                                                        :ARG1 (c25-8 / news))))
                                 :ARG2 (c25-5 / we))
                    :polarity -)
       :ARG1 (c25-3 / good-02))

# ::snt CarolHello1 Took them long enough
# ::tokens ["CarolHello1", "Took", "them", "long", "enough"]
# ::lemmas ["carolhello1", "take", "them", "long", "enough"]
(c26-3 / say-01
       :ARG0 (c26-7 / i)
       :ARG1 (c26-2 / take-10
                    :ARG1 (c26-8 / they)
                    :ARG1-of (c26-4 / have-degree-91
                                    :ARG2 (c26-5 / long-03
                                                 :ARG1 c26-2)
                                    :ARG3 (c26-0 / enough)))
       :ARG2 (c26-1 / person
                    :name (c26-6 / name
                                 :op1 "CarolHello1")))

# ::snt Agree Stop watching when hes on FoxNews Fox411 foxandfriends FoxNewsResearch FoxBusiness seanhannity IngrahamAngle
# ::tokens ["Agree", "Stop", "watching", "when", "he", "s", "on", "FoxNews", "Fox411", "foxandfriends", "FoxNewsResearch", "FoxBusiness", "seanhannity", "IngrahamAngle"]
# ::lemmas ["Agree", "stop", "watch", "when", "he", "s", "on", "FoxNews", "fox411", "foxandfriend", "FoxNewsResearch", "FoxBusiness", "seanhannity", "IngrahamAngle"]
(c27-9 / agree-01
       :ARG0 (c27-13 / i)
       :ARG1 (c27-11 / stop-01
                     :ARG0 (c27-15 / you)
                     :ARG1 (c27-7 / watch-01
                                  :ARG0 c27-15
                                  :time (c27-6 / and
                                               :op1 (c27-14 / broadcast-program
                                                            :name (c27-12 / name
                                                                          :op1 "FoxNews"))
                                               :op2 (c27-0 / broadcast-program
                                                           :name (c27-5 / name
                                                                        :op1 "Fox411"))
                                               :op3 (c27-1 / broadcast-program
                                                           :name (c27-2 / name
                                                                        :op1 "FoxNewsResearch"))
                                               :op4 (c27-4 / person
                                                           :name (c27-3 / name
                                                                        :op1 "Sanhannity"
                                                                        :op2 "IngrahamAngle")
                                                           :mod (c27-10 / broadcast-program
                                                                        :name (c27-8 / name
                                                                                     :op1 "FoxBusiness")))))
                     :mode imperative))

# ::snt get rid of him
# ::tokens ["get", "rid", "of", "him"]
# ::lemmas ["get", "rid", "of", "him"]
(c28-0 / rid-01
       :ARG1 (c28-1 / he))
