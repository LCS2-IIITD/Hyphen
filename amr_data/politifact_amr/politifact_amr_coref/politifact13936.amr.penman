# ::snt is there truth to body being taken from morgue after autopsy by unknown person people Did any1 else hear that
# ::tokens ["is", "there", "truth", "to", "body", "being", "taken", "from", "morgue", "after", "autopsy", "by", "unknown", "person", "people", "Did", "any1", "else", "hear", "that"]
# ::lemmas ["be", "there", "truth", "to", "body", "be", "take", "from", "morgue", "after", "autopsy", "by", "unknown", "person", "people", "do", "any1", "else", "hear", "that"]
(c1-8 / hear-01
      :polarity (c1-6 / amr-unknown)
      :ARG0 (c1-3 / anyone
                  :mod (c1-1 / else))
      :ARG1 (c1-4 / truth
                  :topic (c1-10 / take-01
                                :ARG0 (c1-2 / person
                                            :ARG1-of (c1-7 / know-01
                                                           :polarity -))
                                :ARG1 (c1-0 / body)
                                :ARG3 (c1-9 / morgue)
                                :time (c1-11 / after
                                             :op1 (c1-5 / autopsy-01
                                                        :ARG0 c1-2)))))

# ::snt I fucking knew it back in 1993 Any sane person did
# ::tokens ["I", "fucking", "knew", "it", "back", "in", "1993", "Any", "sane", "person", "did"]
# ::lemmas ["i", "fucking", "know", "it", "back", "in", "1993", "any", "sane", "person", "do"]
(c2-6 / know-01
      :ARG0 (c2-8 / i)
      :ARG1 (c2-0 / it)
      :mod (c2-5 / fucking)
      :time (c2-1 / date-entity
                  :mod (c2-9 / back)
                  :year 1993)
      :ARG1-of (c2-3 / do-02
                     :ARG0 (c2-2 / person
                                 :mod (c2-7 / sane)
                                 :mod (c2-4 / any))))

# ::snt Thus far there are no cooberating stories so this one isnt looking to good
# ::tokens ["Thus", "far", "there", "are", "no", "cooberating", "stories", "so", "this", "one", "is", "nt", "looking", "to", "good"]
# ::lemmas ["thus", "far", "there", "be", "no", "cooberating", "story", "so", "this", "one", "be", "not", "look", "to", "good"]
(c3-1 / cause-01
      :ARG0 (c3-3 / story
                  :ARG0-of (c3-5 / cooberate-01)
                  :time (c3-2 / thus-far)
                  :polarity -)
      :ARG1 (c3-4 / look-02
                  :ARG0 (c3-0 / one
                              :mod (c3-7 / this))
                  :ARG1 (c3-6 / good-02)
                  :polarity -))

# ::snt Perhaps  Utterly laughable that they are some sort of authority but they are not always wrong either  Just FYI
# ::tokens ["Perhaps", " ", "Utterly", "laughable", "that", "they", "are", "some", "sort", "of", "authority", "but", "they", "are", "not", "always", "wrong", "either", " ", "Just", "FYI"]
# ::lemmas ["perhaps", " ", "utterly", "laughable", "that", "they", "be", "some", "sort", "of", "authority", "but", "they", "be", "not", "always", "wrong", "either", " ", "just", "FYI"]
(c4-0 / contrast-01
      :ARG1 (c4-1 / possible-01
                  :ARG1 (c4-10 / laughable-03
                               :ARG1 (c4-7 / authority
                                           :mod (c4-9 / sort
                                                      :mod (c4-6 / some))
                                           :domain (c4-4 / they))
                               :mod (c4-2 / utter)))
      :ARG2 (c4-5 / wrong-04
                  :ARG1 c4-4
                  :time (c4-3 / always
                              :polarity -)
                  :mod (c4-8 / either))
      :purpose (c4-11 / inform-01
                      :ARG1 (c4-13 / you)
                      :mod (c4-12 / just)))

# ::snt Snopes is declaring its fake news Which obviously means its probably true
# ::tokens ["Snopes", "is", "declaring", "its", "fake", "news", "Which", "obviously", "means", "its", "probably", "true"]
# ::lemmas ["Snopes", "be", "declare", "its", "fake", "news", "which", "obviously", "mean", "its", "probably", "true"]
(c5-2 / declare-01
      :ARG0 (c5-3 / publication
                  :name (c5-8 / name
                              :op1 "Snopes"))
      :ARG2 (c5-4 / news
                  :ARG1-of (c5-6 / fake-02)
                  :poss c5-3)
      :ARG0-of (c5-7 / mean-01
                     :ARG2 (c5-1 / probable
                                 :domain (c5-5 / true-01
                                               :ARG1 c5-4))
                     :ARG1-of (c5-0 / obvious-01)))

# ::snt Might want to corroborate that  I cant
# ::tokens ["Might", "want", "to", "corroborate", "that", " ", "I", "ca", "nt"]
# ::lemmas ["may", "want", "to", "corroborate", "that", " ", "i", "can", "not"]
(c6-2 / possible-01
      :ARG1 (c6-5 / want-01
                  :ARG0 (c6-7 / i)
                  :ARG1 (c6-3 / corroborate-01
                              :ARG0 c6-7
                              :ARG1 (c6-4 / that)))
      :ARG1-of (c6-6 / contrast-01
                     :ARG2 (c6-0 / possible-01
                                 :ARG1 (c6-1 / do-02
                                             :ARG0 c6-7
                                             :ARG1 c6-3)
                                 :polarity -)))

# ::snt trey gowdys the man
# ::tokens ["trey", "gowdys", "the", "man"]
# ::lemmas ["trey", "gowdys", "the", "man"]
(c7-0 / person
      :name (c7-1 / name
                  :op1 "Trey"
                  :op2 "Gowdys"
                  :op3 "the"
                  :op4 "Man"))

# ::snt HEY KILLARY GET READY KARMAS HELL
# ::tokens ["HEY", "KILLARY", "GET", "READY", "KARMAS", "HELL"]
# ::lemmas ["HEY", "KILLARY", "get", "ready", "karmas", "hell"]
(c8-0 / read-01
      :ARG0 (c8-5 / you
                  :ARG0-of (c8-2 / kill-01))
      :ARG1 (c8-3 / hell
                  :mod (c8-1 / festival
                             :name (c8-4 / name
                                         :op1 "Karmas")))
      :mode imperative)

# ::snt FOX NEWS IS THIS TRUE
# ::tokens ["FOX", "NEWS", "IS", "THIS", "TRUE"]
# ::lemmas ["FOX", "NEWS", "be", "this", "true"]
(c9-3 / true-01
      :ARG1 (c9-2 / broadcast-program
                  :name (c9-1 / name
                              :op1 "Fox"
                              :op2 "News"))
      :polarity (c9-0 / amr-unknown))

# ::snt RealTrumpDoc feel very sorry for his family they must be going through a lot right about now
# ::tokens ["RealTrumpDoc", "feel", "very", "sorry", "for", "his", "family", "they", "must", "be", "going", "through", "a", "lot", "right", "about", "now"]
# ::lemmas ["realtrumpdoc", "feel", "very", "sorry", "for", "his", "family", "they", "must", "be", "go", "through", "a", "lot", "right", "about", "now"]
(c10-6 / feel-01
       :ARG0 (c10-2 / person
                    :name (c10-12 / name
                                  :op1 "RealTrumpDoc"))
       :ARG1 (c10-7 / sorry-01
                    :ARG1 c10-2
                    :ARG2 (c10-1 / family
                                 :ARG1-of (c10-10 / go-through-20
                                                  :ARG0 (c10-0 / person
                                                               :ARG0-of (c10-8 / have-rel-role-91
                                                                               :ARG1 c10-2
                                                                               :ARG2 (c10-9 / member)))
                                                  :ARG1-of (c10-13 / infer-01)
                                                  :time (c10-5 / about
                                                               :op1 (c10-3 / now))
                                                  :quant (c10-11 / lot)))
                    :degree (c10-4 / very))
       :ARG2 c10-0)

# ::snt This is satire but could possibly hold a grain of truth if there were an exhumation
# ::tokens ["This", "is", "satire", "but", "could", "possibly", "hold", "a", "grain", "of", "truth", "if", "there", "were", "an", "exhumation"]
# ::lemmas ["this", "be", "satire", "but", "could", "possibly", "hold", "a", "grain", "of", "truth", "if", "there", "be", "an", "exhumation"]
(c11-0 / contrast-01
       :ARG1 (c11-4 / satire
                    :domain (c11-3 / this))
       :ARG2 (c11-1 / possible-01
                    :ARG1 (c11-5 / hold-01
                                 :ARG0 c11-3
                                 :ARG1 (c11-6 / grain
                                              :mod (c11-7 / true-01))
                                 :condition (c11-2 / exhumate-01))))

# ::snt Surprise
# ::tokens ["Surprise"]
# ::lemmas ["surprise"]
(c12-0 / surprise-01)

# ::snt The site you are using is run by The Resistance Its satirical in nature which is why they post the disclaimer
# ::tokens ["The", "site", "you", "are", "using", "is", "run", "by", "The", "Resistance", "Its", "satirical", "in", "nature", "which", "is", "why", "they", "post", "the", "disclaimer"]
# ::lemmas ["the", "site", "you", "be", "use", "be", "run", "by", "the", "Resistance", "its", "satirical", "in", "nature", "which", "be", "why", "they", "post", "the", "disclaimer"]
(c13-0 / run-01
       :ARG0 (c13-3 / political-movement
                    :name (c13-9 / name
                                 :op1 "The"
                                 :op2 "Resistance"))
       :ARG1 (c13-8 / site
                    :ARG1-of (c13-4 / use-01
                                    :ARG0 (c13-10 / you)))
       :manner (c13-7 / satire
                      :mod (c13-5 / nature)
                      :ARG0-of (c13-6 / cause-01
                                      :ARG1 (c13-1 / post-01
                                                   :ARG0 c13-3
                                                   :ARG1 (c13-2 / disclaimer)))))

# ::snt wolfgangfaustX why did it take this long Oh wait No one to go to for helpThe government was in on it allwPOTUS
# ::tokens ["wolfgangfaustX", "why", "did", "it", "take", "this", "long", "Oh", "wait", "No", "one", "to", "go", "to", "for", "helpThe", "government", "was", "in", "on", "it", "allwPOTUS"]
# ::lemmas ["wolfgangfaustx", "why", "do", "it", "take", "this", "long", "oh", "wait", "no", "one", "to", "go", "to", "for", "helpThe", "government", "be", "in", "on", "it", "allwpotus"]
(c14-17 / multi-sentence
        :snt1 (c14-22 / say-01
                      :ARG0 (c14-4 / i)
                      :ARG1 (c14-16 / take-10
                                    :ARG0 (c14-14 / it)
                                    :ARG1 (c14-18 / long-03
                                                  :mod (c14-5 / this))
                                    :ARG1-of (c14-8 / cause-01
                                                    :ARG0 (c14-21 / amr-unknown)))
                      :ARG2 (c14-2 / person
                                   :name (c14-12 / name
                                                 :op1 "wolfgangfaustX")))
        :snt2 (c14-3 / wait-01
                     :ARG1 (c14-9 / no-one)
                     :purpose (c14-24 / go-01
                                      :ARG1 c14-9
                                      :purpose (c14-11 / help-01
                                                       :ARG0 c14-9)))
        :snt3 (c14-19 / be-located-at-91
                      :ARG1 (c14-15 / government-organization
                                    :ARG0-of (c14-6 / govern-01))
                      :ARG2 (c14-13 / it)
                      :ARG1-of (c14-23 / cause-01
                                       :ARG0 (c14-7 / person
                                                    :ARG0-of (c14-10 / have-org-role-91
                                                                     :ARG1 (c14-0 / country
                                                                                  :name (c14-1 / name
                                                                                               :op1 "United"
                                                                                               :op2 "States"))
                                                                     :ARG2 (c14-20 / president))))))

# ::snt This was a fakenews story started years ago We have enough of this with CNN now we have to deal with click baits assholes
# ::tokens ["This", "was", "a", "fakenews", "story", "started", "years", "ago", "We", "have", "enough", "of", "this", "with", "CNN", "now", "we", "have", "to", "deal", "with", "click", "baits", "assholes"]
# ::lemmas ["this", "be", "a", "fakenews", "story", "start", "years", "ago", "we", "have", "enough", "of", "this", "with", "CNN", "now", "we", "have", "to", "deal", "with", "click", "bait", "asshole"]
(c15-14 / multi-sentence
        :snt1 (c15-19 / start-01
                      :ARG1 (c15-13 / story
                                    :mod (c15-18 / fake))
                      :time (c15-15 / before
                                    :op1 (c15-20 / now)
                                    :quant (c15-1 / multiple
                                                  :op1 (c15-12 / temporal-quantity
                                                               :unit (c15-21 / year)
                                                               :quant 1))))
        :snt2 (c15-10 / have-03
                      :ARG0 (c15-5 / we)
                      :ARG1 (c15-6 / this)
                      :instrument (c15-3 / publication
                                         :name (c15-8 / name
                                                      :op1 "CNN"))
                      :ARG1-of (c15-9 / have-quant-91
                                      :ARG3 (c15-4 / enough)))
        :snt3 (c15-0 / obligate-01
                     :ARG1 (c15-11 / we)
                     :ARG2 (c15-16 / deal-01
                                   :ARG0 c15-11
                                   :ARG1 (c15-17 / asshole
                                                 :mod (c15-7 / click-01)))
                     :time (c15-2 / now)))

# ::snt This is a fakenews story started by some website for click bait Bullshit Propaganda Call them all out please VinceFoster
# ::tokens ["This", "is", "a", "fakenews", "story", "started", "by", "some", "website", "for", "click", "bait", "Bullshit", "Propaganda", "Call", "them", "all", "out", "please", "VinceFoster"]
# ::lemmas ["this", "be", "a", "fakenews", "story", "start", "by", "some", "website", "for", "click", "bait", "Bullshit", "Propaganda", "call", "them", "all", "out", "please", "VinceFoster"]
(c16-12 / multi-sentence
        :snt1 (c16-11 / start-01
                      :ARG0 (c16-8 / website
                                   :mod (c16-7 / some))
                      :ARG1 (c16-6 / story
                                   :mod (c16-10 / fake)
                                   :domain (c16-5 / this)))
        :snt2 (c16-3 / call-out-15
                     :ARG0 (c16-4 / person
                                  :name (c16-13 / name
                                                :op1 "VinceFoster"))
                     :ARG1 (c16-14 / they
                                   :mod (c16-9 / all))
                     :ARG2 (c16-1 / propaganda
                                  :mod (c16-0 / bullshit)
                                  :ARG1-of (c16-2 / bait-01))
                     :mode imperative
                     :polite +))

# ::snt Seens to be a pattern in a number of deaths where theres no autopsy
# ::tokens ["Seens", "to", "be", "a", "pattern", "in", "a", "number", "of", "deaths", "where", "there", "s", "no", "autopsy"]
# ::lemmas ["seen", "to", "be", "a", "pattern", "in", "a", "number", "of", "death", "where", "there", "s", "no", "autopsy"]
(c17-3 / seem-01
       :ARG1 (c17-1 / pattern-01
                    :ARG1 (c17-0 / die-01
                                 :quant (c17-4 / number)
                                 :location-of (c17-2 / autopsy-01
                                                     :polarity -))))

# ::snt Wow
# ::tokens ["Wow"]
# ::lemmas ["wow"]
(c18-0 / wow
       :mode expressive)

# ::snt Fake news no
# ::tokens ["Fake", "news", "no"]
# ::lemmas ["fake", "news", "no"]
(c19-0 / news
       :ARG1-of (c19-1 / fake-02)
       :polarity -)

# ::snt Who was the reporter  I cant find any info
# ::tokens ["Who", "was", "the", "reporter", " ", "I", "ca", "nt", "find", "any", "info"]
# ::lemmas ["who", "be", "the", "reporter", " ", "i", "can", "not", "find", "any", "info"]
(c20-7 / multi-sentence
       :snt1 (c20-3 / person
                    :ARG0-of (c20-1 / report-01)
                    :domain (c20-5 / amr-unknown))
       :snt2 (c20-0 / possible-01
                    :ARG1 (c20-6 / find-01
                                 :ARG0 (c20-8 / i)
                                 :ARG1 (c20-2 / information
                                              :mod (c20-4 / any)))
                    :polarity -))

# ::snt This guy needs investigated now
# ::tokens ["This", "guy", "needs", "investigated", "now"]
# ::lemmas ["this", "guy", "need", "investigate", "now"]
(c21-2 / need-01
       :ARG1 (c21-4 / investigate-01
                    :ARG1 (c21-3 / guy
                                 :mod (c21-1 / this)))
       :time (c21-0 / now))

# ::snt the exhumation story is most likely false
# ::tokens ["the", "exhumation", "story", "is", "most", "likely", "false"]
# ::lemmas ["the", "exhumation", "story", "be", "most", "likely", "false"]
(c22-4 / likely-01
       :ARG1 (c22-1 / false
                    :domain (c22-2 / story
                                   :topic (c22-0 / autopsy-01)))
       :ARG2-of (c22-3 / have-degree-91
                       :ARG1 c22-1
                       :ARG3 (c22-5 / most)))

# ::snt httpsmyoutubecomwatchvF5JapU0Vf44 …
# ::tokens ["httpsmyoutubecomwatchvF5JapU0Vf44", "\u2026"]
# ::lemmas ["httpsmyoutubecomwatchvf5japu0vf44", "\u2026"]
(c23-0 / url-entity
       :value "https://myoutubecomwatchvF5JapU0Vf44")

# ::snt Wow Im glad to hear this Bet Hillary is sweating it Good
# ::tokens ["Wow", "I", "m", "glad", "to", "hear", "this", "Bet", "Hillary", "is", "sweating", "it", "Good"]
# ::lemmas ["wow", "i", "be", "glad", "to", "hear", "this", "Bet", "Hillary", "be", "sweat", "it", "good"]
(c24-8 / glad-02
       :ARG0 (c24-6 / hear-01
                    :ARG0 (c24-9 / i)
                    :ARG1 (c24-5 / sweat-01
                                 :ARG0 (c24-1 / person
                                              :name (c24-7 / name
                                                           :op1 "Hillary"))
                                 :ARG1 (c24-0 / it)
                                 :manner (c24-2 / good-02)
                                 :mod (c24-3 / this)))
       :ARG1 c24-9
       :mod (c24-4 / wow
                   :mode expressive))

# ::snt Is this a true report or fake news
# ::tokens ["Is", "this", "a", "true", "report", "or", "fake", "news"]
# ::lemmas ["be", "this", "a", "true", "report", "or", "fake", "news"]
(c25-2 / amr-choice
       :op1 (c25-0 / report-01
                   :ARG1 (c25-1 / this)
                   :ARG1-of (c25-5 / true-01))
       :op2 (c25-4 / news
                   :ARG1-of (c25-3 / fake-02)
                   :domain c25-1))

# ::snt nope look back further to Arkansas
# ::tokens ["nope", "look", "back", "further", "to", "Arkansas"]
# ::lemmas ["nope", "look", "back", "further", "to", "Arkansas"]
(c26-3 / look-01
       :ARG0 (c26-6 / you)
       :ARG1 (c26-2 / state
                    :name (c26-4 / name
                                 :op1 "Arkansas"))
       :direction (c26-5 / back)
       :mod (c26-0 / nope)
       :degree (c26-1 / further)
       :mode imperative)

# ::snt Was John F Kennedy Jr Hillarys first
# ::tokens ["Was", "John", "F", "Kennedy", "Jr", "Hillarys", "first"]
# ::lemmas ["be", "John", "F", "Kennedy", "Jr", "Hillarys", "first"]
(c27-1 / ordinal-entity
       :poss (c27-2 / person
                    :name (c27-3 / name
                                 :op1 "John"
                                 :op2 "F"
                                 :op3 "Kennedy"
                                 :op4 "Jr."))
       :polarity (c27-0 / amr-unknown)
       :value 1)

# ::snt holy smokes This is fantastic as far as Im concerned While yall are at it do DNA test for Chelsea fatherhood
# ::tokens ["holy", "smokes", "This", "is", "fantastic", "as", "far", "as", "I", "m", "concerned", "While", "y", "all", "are", "at", "it", "do", "DNA", "test", "for", "Chelsea", "fatherhood"]
# ::lemmas ["holy", "smoke", "this", "be", "fantastic", "as", "far", "as", "i", "be", "concerned", "while", "y", "all", "be", "at", "it", "do", "dna", "test", "for", "Chelsea", "fatherhood"]
(c28-9 / multi-sentence
       :snt1 (c28-7 / fantastic-02
                    :ARG1 (c28-5 / this)
                    :topic (c28-12 / i))
       :snt2 (c28-13 / test-01
                     :ARG0 (c28-14 / you
                                   :mod (c28-6 / all))
                     :ARG1 (c28-2 / fatherhood
                                  :mod (c28-3 / person
                                              :name (c28-11 / name
                                                            :op1 "Chelsea")))
                     :ARG2 (c28-4 / nucleic-acid
                                  :name c28-11
                                  :op1 "DNA"))
       :time (c28-0 / be-located-at-91
                    :ARG1 c28-14
                    :ARG2 (c28-1 / it))
       :mod (c28-8 / smokes
                   :mod (c28-10 / holy)
                   :mode expressive))

# ::snt MsMaxwell6 theyre going to exhume all bodies tied to the Clintons then Obama
# ::tokens ["MsMaxwell6", "they", "re", "going", "to", "exhume", "all", "bodies", "tied", "to", "the", "Clintons", "then", "Obama"]
# ::lemmas ["msmaxwell6", "they", "be", "go", "to", "exhume", "all", "body", "tie", "to", "the", "Clintons", "then", "Obama"]
(c29-10 / say-01
        :ARG1 (c29-3 / exhume-01
                     :ARG0 (c29-7 / they)
                     :ARG1 (c29-12 / body
                                   :mod (c29-9 / all)
                                   :ARG1-of (c29-4 / tie-01
                                                   :ARG2 (c29-6 / and
                                                                :op1 (c29-5 / person
                                                                            :name (c29-11 / name
                                                                                          :op1 "Clinton"))
                                                                :op2 (c29-1 / person
                                                                            :name (c29-8 / name
                                                                                         :op1 "Obama"))))))
        :ARG2 (c29-0 / person
                     :name (c29-2 / name
                                  :op1 "MsMaxwell6")))

# ::snt Parody account
# ::tokens ["Parody", "account"]
# ::lemmas ["parody", "account"]
(c30-0 / account-01
       :ARG1 (c30-1 / person
                    :ARG0-of (c30-2 / parole-01)))

# ::snt KSouth4trump Is this true
# ::tokens ["KSouth4trump", "Is", "this", "true"]
# ::lemmas ["KSouth4trump", "be", "this", "true"]
(c31-2 / ask-01
       :ARG0 (c31-4 / i)
       :ARG1 (c31-1 / true-01
                    :ARG1 (c31-5 / this))
       :ARG2 (c31-0 / person
                    :name (c31-3 / name
                                 :op1 "KSouth4"
                                 :op2 "Trump")))

# ::snt either the biggest censorship case ever or total BS reporter who was killed named L Marcus Hubidore cant find any internet record of him
# ::tokens ["either", "the", "biggest", "censorship", "case", "ever", "or", "total", "BS", "reporter", "who", "was", "killed", "named", "L", "Marcus", "Hubidore", "ca", "nt", "find", "any", "internet", "record", "of", "him"]
# ::lemmas ["either", "the", "big", "censorship", "case", "ever", "or", "total", "BS", "reporter", "who", "be", "kill", "name", "L", "Marcus", "Hubidore", "can", "not", "find", "any", "internet", "record", "of", "him"]
(c32-5 / possible-01
       :ARG1 (c32-12 / find-01
                     :ARG0 (c32-0 / or
                                  :op1 (c32-6 / case-03
                                              :ARG1 (c32-13 / censor-01)
                                              :ARG1-of (c32-14 / have-degree-91
                                                               :ARG2 (c32-19 / big)
                                                               :ARG3 (c32-15 / most)
                                                               :ARG5 (c32-7 / ever)))
                                  :op2 (c32-2 / person
                                              :ARG0-of (c32-3 / report-01)
                                              :ARG1-of (c32-16 / kill-01)
                                              :ARG1-of (c32-4 / bullshit-01
                                                              :mod (c32-9 / total))
                                              :ARG1-of (c32-17 / name-01
                                                               :ARG2 (c32-1 / person
                                                                            :name (c32-8 / name
                                                                                         :op1 "LMarcus"
                                                                                         :op2 "Hubidore")))))
                     :ARG1 (c32-11 / record-01
                                   :ARG1 c32-1
                                   :medium (c32-18 / internet)
                                   :mod (c32-10 / any)))
       :polarity -)

# ::snt cant find him on the dcexaminer web site either L Marcus Hubidore
# ::tokens ["ca", "nt", "find", "him", "on", "the", "dcexaminer", "web", "site", "either", "L", "Marcus", "Hubidore"]
# ::lemmas ["can", "not", "find", "him", "on", "the", "dcexaminer", "web", "site", "either", "L", "Marcus", "Hubidore"]
(c33-1 / possible-01
       :ARG1 (c33-4 / find-01
                    :ARG0 (c33-8 / you)
                    :ARG1 (c33-6 / he)
                    :location (c33-5 / site
                                     :mod (c33-3 / web)
                                     :poss (c33-0 / publication
                                                  :name (c33-7 / name
                                                               :op1 "Dcexaminer")))
                    :mod (c33-2 / either))
       :polarity -)

# ::snt Exactly
# ::tokens ["Exactly"]
# ::lemmas ["exactly"]
(c34-0 / exact)

# ::snt snopes lol one reason to believe its a true story snopes says it aint
# ::tokens ["snopes", "lol", "one", "reason", "to", "believe", "its", "a", "true", "story", "snopes", "says", "it", "ai", "nt"]
# ::lemmas ["snope", "lol", "one", "reason", "to", "believe", "its", "a", "true", "story", "snope", "say", "it", "be", "not"]
(c35-4 / and
       :op1 (c35-6 / snope)
       :op2 (c35-2 / cause-01
                   :ARG0 (c35-0 / reason
                                :quant 1)
                   :ARG1 (c35-9 / believe-01
                                :ARG1 (c35-3 / true-01
                                             :ARG1 (c35-8 / it)))
                   :ARG2-of (c35-7 / laugh-01
                                   :ARG0 (c35-1 / i)
                                   :manner (c35-5 / loud)
                                   :mode expressive)))

# ::snt taxicat7 Suicide would have suited Hill just fine but now we know that wasnt the case scratch Teflon and something will stick
# ::tokens ["taxicat7", "Suicide", "would", "have", "suited", "Hill", "just", "fine", "but", "now", "we", "know", "that", "was", "nt", "the", "case", "scratch", "Teflon", "and", "something", "will", "stick"]
# ::lemmas ["taxicat7", "Suicide", "would", "have", "suit", "Hill", "just", "fine", "but", "now", "we", "know", "that", "be", "not", "the", "case", "scratch", "Teflon", "and", "something", "will", "stick"]
(c36-4 / contrast-01
       :ARG1 (c36-13 / suit-01
                     :ARG1 (c36-9 / suicide
                                  :mod (c36-5 / person
                                              :name (c36-17 / name
                                                            :op1 "taxicat7")))
                     :ARG2 (c36-0 / person
                                  :name (c36-6 / name
                                               :op1 "Hill"))
                     :ARG1-of (c36-11 / fine-04
                                      :mod (c36-18 / just)))
       :ARG2 (c36-14 / know-01
                     :ARG0 (c36-8 / we)
                     :ARG1 (c36-15 / case-04
                                   :ARG1 c36-13
                                   :polarity -)
                     :time (c36-2 / now))
       :ARG1-of (c36-1 / cause-01
                       :ARG0 (c36-10 / scratch-02
                                     :ARG1 (c36-12 / company
                                                   :name (c36-3 / name
                                                                :op1 "Teflon")))
                       :ARG1-of (c36-7 / stick-01
                                       :ARG2 (c36-16 / something))))

# ::snt Is it at all possible AG Sessions could assign someone to this case
# ::tokens ["Is", "it", "at", "all", "possible", "AG", "Sessions", "could", "assign", "someone", "to", "this", "case"]
# ::lemmas ["be", "it", "at", "all", "possible", "AG", "Sessions", "could", "assign", "someone", "to", "this", "case"]
(c37-1 / possible-01
       :ARG1 (c37-5 / assign-01
                    :ARG0 (c37-0 / person
                                 :name (c37-8 / name
                                              :op1 "Sessions")
                                 :ARG0-of (c37-7 / have-org-role-91
                                                 :ARG2 (c37-3 / attorney)))
                    :ARG1 (c37-6 / someone)
                    :ARG2 (c37-2 / case-03
                                 :ARG1 (c37-4 / this)))
       :polarity (c37-10 / amr-unknown)
       :mod (c37-9 / at-all))

# ::snt Comey has got to be taken off this case  swamp is swampthere will be no justice
# ::tokens ["Comey", "has", "got", "to", "be", "taken", "off", "this", "case", " ", "swamp", "is", "swampthere", "will", "be", "no", "justice"]
# ::lemmas ["Comey", "have", "get", "to", "be", "take", "off", "this", "case", " ", "swamp", "be", "swampthere", "will", "be", "no", "justice"]
(c38-1 / cause-01
       :ARG0 (c38-5 / swamp
                    :location (c38-7 / here)
                    :ARG1-of (c38-6 / mean-01
                                    :ARG2 (c38-10 / justice)
                                    :polarity -))
       :ARG1 (c38-0 / obligate-01
                    :ARG2 (c38-4 / take-off-07
                                 :ARG1 (c38-2 / person
                                              :name (c38-9 / name
                                                           :op1 "Comey"))
                                 :topic (c38-8 / case-04
                                               :mod (c38-3 / this)))))

# ::snt They dont provide any evidence to back up anything in this article Gowdy didnt exhume anything It is a hoax  HaleyGreentree
# ::tokens ["They", "do", "nt", "provide", "any", "evidence", "to", "back", "up", "anything", "in", "this", "article", "Gowdy", "did", "nt", "exhume", "anything", "It", "is", "a", "hoax", " ", "HaleyGreentree"]
# ::lemmas ["they", "do", "not", "provide", "any", "evidence", "to", "back", "up", "anything", "in", "this", "article", "Gowdy", "do", "not", "exhume", "anything", "it", "be", "a", "hoax", " ", "HaleyGreentree"]
(c39-12 / multi-sentence
        :snt1 (c39-3 / provide-01
                     :ARG0 (c39-7 / they)
                     :ARG1 (c39-15 / thing
                                   :ARG0-of (c39-4 / evidence-01)
                                   :mod (c39-9 / any)
                                   :ARG0-of (c39-0 / back-up-04
                                                   :ARG1 (c39-6 / anything
                                                                :location (c39-16 / article
                                                                                  :mod (c39-11 / this)))))
                     :polarity -)
        :snt2 (c39-10 / exhume-01
                      :ARG0 (c39-1 / person
                                   :name (c39-14 / name
                                                 :op1 "Gowdy"))
                      :ARG1 (c39-8 / anything)
                      :polarity -)
        :snt3 (c39-13 / hoax-01
                      :ARG0 (c39-2 / person
                                   :name (c39-5 / name
                                                :op1 "HaleyGreentree"))))

# ::snt Fake News
# ::tokens ["Fake", "News"]
# ::lemmas ["Fake", "News"]
(c40-0 / news
       :ARG1-of (c40-1 / fake-02))

# ::snt Foster mummynoand his other mummy
# ::tokens ["Foster", "mummynoand", "his", "other", "mummy"]
# ::lemmas ["Foster", "mummynoand", "his", "other", "mummy"]
(c41-7 / and
       :op1 (c41-4 / person
                   :ARG0-of (c41-9 / have-rel-role-91
                                   :ARG1 (c41-5 / he)
                                   :ARG2 (c41-8 / mummy)
                                   :mod (c41-0 / oster)))
       :op2 (c41-1 / person
                   :ARG0-of (c41-6 / have-rel-role-91
                                   :ARG1 c41-5
                                   :ARG2 (c41-3 / mummy))
                   :mod (c41-2 / other)))

# ::snt yea ok
# ::tokens ["yea", "ok"]
# ::lemmas ["yea", "ok"]
(c42-0 / okay-04
       :mod (c42-1 / yeh))

# ::snt maybe there will be justice after all
# ::tokens ["maybe", "there", "will", "be", "justice", "after", "all"]
# ::lemmas ["maybe", "there", "will", "be", "justice", "after", "all"]
(c43-1 / possible-01
       :ARG1 (c43-2 / justice
                    :mod (c43-0 / after-all)))

# ::snt 2 shots in the BACK of the head both fatal and NO autopsy was done
# ::tokens ["2", "shots", "in", "the", "BACK", "of", "the", "head", "both", "fatal", "and", "NO", "autopsy", "was", "done"]
# ::lemmas ["2", "shot", "in", "the", "back", "of", "the", "head", "both", "fatal", "and", "no", "autopsy", "be", "do"]
(c44-2 / and
       :op1 (c44-3 / fatal
                   :domain (c44-4 / shoot-02
                                  :location (c44-6 / back
                                                   :part-of (c44-5 / head))
                                  :mod (c44-0 / both)
                                  :quant 2))
       :op2 (c44-1 / autopsy-01
                   :polarity -))

# ::snt Can I get a nondownload muh appz app link please
# ::tokens ["Can", "I", "get", "a", "nondownload", "muh", "appz", "app", "link", "please"]
# ::lemmas ["can", "i", "get", "a", "nondownload", "muh", "appz", "app", "link", "please"]
(c45-2 / possible-01
       :polarity (c45-3 / amr-unknown)
       :ARG1 (c45-6 / get-01
                    :ARG0 (c45-7 / i)
                    :ARG1 (c45-4 / link
                                 :mod (c45-1 / product
                                             :name (c45-5 / name
                                                          :op1 "Appz"))
                                 :mod (c45-0 / off)))
       :polite +)

# ::snt gowdified
# ::tokens ["gowdified"]
# ::lemmas ["gowdifie"]
(c46-0 / person
       :name (c46-1 / name
                    :op1 "gowdified"))

# ::snt With new evidence Rep Trey Gowdy successfully petitioned a federal judge to have the body of Vince Foster exhumed for autopsy The body wasn’t autopsied before burial the first time which aided in the theory of a coverup
# ::tokens ["With", "new", "evidence", "Rep", "Trey", "Gowdy", "successfully", "petitioned", "a", "federal", "judge", "to", "have", "the", "body", "of", "Vince", "Foster", "exhumed", "for", "autopsy", "The", "body", "was", "n\u2019t", "autopsied", "before", "burial", "the", "first", "time", "which", "aided", "in", "the", "theory", "of", "a", "coverup"]
# ::lemmas ["with", "new", "evidence", "Rep", "Trey", "Gowdy", "successfully", "petition", "a", "federal", "judge", "to", "have", "the", "body", "of", "Vince", "Foster", "exhume", "for", "autopsy", "the", "body", "be", "not", "autopsie", "before", "burial", "the", "first", "time", "which", "aid", "in", "the", "theory", "of", "a", "coverup"]
(c47-15 / multi-sentence
        :snt1 (c47-3 / petition-01
                     :ARG0 (c47-5 / person
                                  :name (c47-24 / name
                                                :op1 "Trey"
                                                :op2 "Gowdy")
                                  :ARG0-of (c47-11 / have-org-role-91
                                                   :ARG1 (c47-19 / political-party
                                                                 :name (c47-9 / name
                                                                              :op1 "Republican"))
                                                   :ARG2 (c47-1 / member)))
                     :ARG1 (c47-10 / have-04
                                   :ARG0 c47-5
                                   :ARG1 (c47-4 / exhum-01
                                                :ARG1 (c47-17 / body
                                                              :poss (c47-16 / person
                                                                            :name (c47-2 / name
                                                                                         :op1 "Vince"
                                                                                         :op2 "Foster")))
                                                :purpose (c47-21 / autopsy-01
                                                                 :ARG1 c47-17)))
                     :ARG1-of (c47-22 / succeed-01
                                      :ARG0 c47-5)
                     :ARG1-of (c47-8 / cause-01
                                     :ARG0 (c47-14 / evidence-01
                                                   :ARG1-of (c47-7 / new-01))))
        :snt2 (c47-12 / autopsie-01
                      :ARG1 c47-17
                      :polarity -)
        :time (c47-20 / before
                      :op1 (c47-6 / bury-01
                                  :ARG1 c47-17)
                      :ord (c47-0 / ordinal-entity
                                  :value 1)
                      :ARG0-of (c47-18 / aid-01
                                       :ARG1 (c47-13 / theory
                                                     :topic (c47-23 / cover-up-04)))))

# ::snt These people are out of their minds Pure EVIL  The story previously is linked to this one also LOCK THEM UP
# ::tokens ["These", "people", "are", "out", "of", "their", "minds", "Pure", "EVIL", " ", "The", "story", "previously", "is", "linked", "to", "this", "one", "also", "LOCK", "THEM", "UP"]
# ::lemmas ["these", "people", "be", "out", "of", "their", "mind", "Pure", "EVIL", " ", "the", "story", "previously", "be", "link", "to", "this", "one", "also", "lock", "them", "up"]
(c48-12 / multi-sentence
        :snt1 (c48-0 / out-06
                     :ARG1 (c48-4 / person
                                  :mod (c48-6 / this)
                                  :part (c48-3 / mind
                                               :ARG2-of c48-0))
                     :ARG1-of (c48-2 / pure-02
                                     :ARG2 (c48-5 / evil)))
        :snt2 (c48-13 / lock-up-03
                      :ARG0 (c48-11 / story
                                    :time (c48-1 / previous)
                                    :ARG1-of (c48-8 / link-01
                                                    :ARG2 (c48-7 / story
                                                                 :mod (c48-14 / this))))
                      :ARG1 (c48-10 / they)
                      :mod (c48-9 / also)))

# ::snt ferbytrisch Is this for real
# ::tokens ["ferbytrisch", "Is", "this", "for", "real"]
# ::lemmas ["ferbytrisch", "be", "this", "for", "real"]
(c49-3 / ask-01
       :ARG1 (c49-0 / real-04
                    :ARG1 (c49-2 / this))
       :ARG2 (c49-1 / person
                    :name (c49-4 / name
                                 :op1 "ferbytrisch")))

# ::snt I just have a feeling if u want2 REALLY get ridda a rogueGov u needa go BIG Just think theyre trolling BIG
# ::tokens ["I", "just", "have", "a", "feeling", "if", "u", "want2", "REALLY", "get", "ridda", "a", "rogueGov", "u", "needa", "go", "BIG", "Just", "think", "they", "re", "trolling", "BIG"]
# ::lemmas ["i", "just", "have", "a", "feeling", "if", "u", "want2", "REALLY", "get", "ridda", "a", "roguegov", "u", "needa", "go", "BIG", "just", "think", "they", "be", "troll", "BIG"]
(c50-12 / feel-01
        :ARG0 (c50-15 / i)
        :ARG1 (c50-0 / obligate-01
                     :ARG1 (c50-17 / you)
                     :ARG2 (c50-14 / go-01
                                   :ARG1 c50-17
                                   :ARG4 (c50-16 / big))
                     :condition (c50-10 / want-01
                                        :ARG0 c50-17
                                        :ARG1 (c50-6 / get-04
                                                     :ARG0 c50-17
                                                     :ARG1 (c50-1 / riddance-00
                                                                  :ARG0 c50-17
                                                                  :ARG1 (c50-2 / government-organization
                                                                               :name (c50-13 / name
                                                                                             :op1 " rogueGov")))
                                                     :degree (c50-11 / really)))
                     :ARG0-of (c50-5 / cause-01
                                     :ARG1 (c50-7 / need-01
                                                  :ARG0 c50-17
                                                  :ARG1 c50-14)))
        :mod (c50-4 / just)
        :ARG1-of c50-5
        :ARG0 (c50-9 / think-01
                     :ARG0 c50-15
                     :ARG1 (c50-8 / troll-01
                                  :ARG0 c50-2
                                  :degree (c50-3 / big))))
