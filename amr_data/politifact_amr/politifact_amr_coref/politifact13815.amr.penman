# ::snt Blizzy gross
# ::tokens ["Blizzy", "gross"]
# ::lemmas ["Blizzy", "gross"]
(c1-1 / person
      :name (c1-2 / name
                  :op1 "Blizzy")
      :ARG1-of (c1-0 / gross-05))

# ::snt KFreetage JDrewek absolutely disgusting
# ::tokens ["KFreetage", "JDrewek", "absolutely", "disgusting"]
# ::lemmas ["KFreetage", "JDrewek", "absolutely", "disgust"]
(c2-0 / disgust-01
      :ARG0 (c2-1 / person
                  :name (c2-4 / name
                              :op1 "KFreetage")
                  :mod (c2-2 / company
                             :name c2-4
                             :op1 "JDrewek"))
      :degree (c2-3 / absolute))

# ::snt cherieholman JDrewek yum yum in my tum tum
# ::tokens ["cherieholman", "JDrewek", "yum", "yum", "in", "my", "tum", "tum"]
# ::lemmas ["cherieholman", "JDrewek", "yum", "yum", "in", "my", "tum", "tum"]
(c3-4 / say-01
      :ARG0 (c3-6 / i
                  :part (c3-2 / tum))
      :ARG1 (c3-3 / and
                  :op1 (c3-7 / yum
                             :mode expressive)
                  :op2 (c3-0 / yum
                             :mode expressive)
                  :location c3-2)
      :ARG2 (c3-1 / person
                  :name (c3-5 / name
                              :op1 "cherieholman")))

# ::snt JDrewek KFreetage yuck
# ::tokens ["JDrewek", "KFreetage", "yuck"]
# ::lemmas ["JDrewek", "KFreetage", "yuck"]
(c4-2 / yuck
      :domain (c4-0 / person
                    :name (c4-1 / name
                                :op1 "JDrewek"
                                :op2 "KFreetage"))
      :mode expressive)

# ::snt ResjaHunter kaila americans eating rats now oh no kaila auntie sia nice me curry
# ::tokens ["ResjaHunter", "kaila", "americans", "eating", "rats", "now", "oh", "no", "kaila", "auntie", "sia", "nice", "me", "curry"]
# ::lemmas ["ResjaHunter", "kaila", "americans", "eat", "rat", "now", "oh", "no", "kaila", "auntie", "sia", "nice", "me", "curry"]
(c5-13 / multi-sentence
       :snt1 (c5-5 / person
                   :name (c5-17 / name
                                :op1 "Resja"
                                :op2 "Hunter"))
       :snt2 (c5-6 / eat-01
                   :ARG0 (c5-1 / person
                               :mod (c5-7 / country
                                          :name (c5-8 / name
                                                      :op1 "America")))
                   :ARG1 (c5-2 / rat)
                   :time (c5-3 / now))
       :snt3 (c5-11 / and
                    :op1 (c5-0 / person
                               :name (c5-4 / name
                                           :op1 "Kaila"))
                    :op2 (c5-15 / person
                                :name (c5-10 / name
                                             :op1 "Auntie"))
                    :op3 (c5-9 / person
                               :name (c5-12 / name
                                            :op1 "Sia"))
                    :op4 (c5-14 / nice-01
                                :ARG1 (c5-18 / i)
                                :ARG2 (c5-16 / curry))))

# ::snt I have hard time understanding how people didnt notice the dif in bones when they ate rat thinking it was a chicken wing Need bio class
# ::tokens ["I", "have", "hard", "time", "understanding", "how", "people", "did", "nt", "notice", "the", "dif", "in", "bones", "when", "they", "ate", "rat", "thinking", "it", "was", "a", "chicken", "wing", "Need", "bio", "class"]
# ::lemmas ["i", "have", "hard", "time", "understand", "how", "people", "do", "not", "notice", "the", "dif", "in", "bone", "when", "they", "eat", "rat", "think", "it", "be", "a", "chicken", "wing", "need", "bio", "class"]
(c6-10 / hard-02
       :ARG1 (c6-3 / understand-01
                   :ARG0 (c6-12 / i)
                   :ARG1 (c6-11 / notice-01
                                :ARG0 (c6-2 / person)
                                :ARG1 (c6-1 / dif
                                            :location (c6-13 / bone))
                                :time (c6-4 / eat-01
                                            :ARG0 c6-2
                                            :ARG1 (c6-0 / rat)
                                            :manner (c6-6 / think-01
                                                          :ARG0 c6-2
                                                          :ARG1 (c6-5 / class
                                                                      :topic (c6-7 / wing
                                                                                   :part-of (c6-9 / chicken))
                                                                      :ARG1-of (c6-8 / need-01))))
                                :polarity -)))

# ::snt Qnik That is scary shit as often as i eat chicken wings Im done
# ::tokens ["Qnik", "That", "is", "scary", "shit", "as", "often", "as", "i", "eat", "chicken", "wings", "I", "m", "done"]
# ::lemmas ["Qnik", "that", "be", "scary", "shit", "as", "often", "as", "i", "eat", "chicken", "wing", "i", "be", "do"]
(c7-9 / say-01
      :ARG0 (c7-12 / i)
      :ARG1 (c7-6 / shit
                  :ARG0-of (c7-5 / scary-03)
                  :domain (c7-4 / that)
                  :ARG1-of (c7-10 / have-frequency-91
                                  :ARG2 (c7-0 / often)
                                  :ARG3 (c7-1 / equal)
                                  :ARG4 (c7-8 / eat-01
                                              :ARG0 c7-12
                                              :ARG1 (c7-7 / wing
                                                          :consist-of (c7-2 / chicken)))))
      :ARG2 (c7-3 / person
                  :name (c7-11 / name
                               :op1 "Qnik")))

# ::snt Qnik pblaauw reasons to be vegetarian D
# ::tokens ["Qnik", "pblaauw", "reasons", "to", "be", "vegetarian", "D"]
# ::lemmas ["Qnik", "pblaauw", "reason", "to", "be", "vegetarian", "d"]
(c8-4 / say-01
      :ARG0 (c8-6 / i)
      :ARG1 (c8-0 / reason
                  :ARG0-of (c8-1 / cause-01
                                 :ARG1 (c8-3 / vegetarian
                                             :domain c8-6))
                  :domain (c8-2 / person
                                :name (c8-5 / name
                                            :op1 "Qnik")
                                :ARG2-of c8-4)))

# ::snt Qnik Tygerlylly Thats silly Rats dont have wings
# ::tokens ["Qnik", "Tygerlylly", "That", "s", "silly", "Rats", "do", "nt", "have", "wings"]
# ::lemmas ["Qnik", "Tygerlylly", "that", "s", "silly", "Rats", "do", "not", "have", "wing"]
(c9-5 / say-01
      :ARG0 (c9-8 / i)
      :ARG1 (c9-6 / have-03
                  :ARG0 (c9-0 / rat
                              :mod (c9-4 / silly)
                              :domain (c9-2 / that))
                  :ARG1 (c9-3 / wing)
                  :polarity -)
      :ARG2 (c9-1 / person
                  :name (c9-7 / name
                              :op1 "Qnik"
                              :op2 "Tygerlylly")))

# ::snt Qnik Greeenguy111 this is troubling to say the least
# ::tokens ["Qnik", "Greeenguy111", "this", "is", "troubling", "to", "say", "the", "least"]
# ::lemmas ["Qnik", "Greeenguy111", "this", "be", "troubling", "to", "say", "the", "least"]
(c10-3 / say-01
       :ARG1 (c10-1 / trouble-01
                    :ARG0 (c10-7 / this)
                    :ARG1 (c10-0 / person
                                 :name (c10-6 / name
                                              :op1 "Qnik"
                                              :op2 "Greeenguy111"))
                    :ARG1-of (c10-4 / have-quant-91
                                    :ARG3 (c10-5 / least)
                                    :ARG5 (c10-2 / say-01
                                                 :ARG1 c10-7)))
       :ARG2 c10-0)

# ::snt Qnik truthglow congress just voted to remove COO labels Excuse me while I go puke WTF ReestablishCOOLabels
# ::tokens ["Qnik", "truthglow", "congress", "just", "voted", "to", "remove", "COO", "labels", "Excuse", "me", "while", "I", "go", "puke", "WTF", "ReestablishCOOLabels"]
# ::lemmas ["Qnik", "truthglow", "congress", "just", "vote", "to", "remove", "coo", "label", "excuse", "me", "while", "i", "go", "puke", "WTF", "ReestablishCOOLabels"]
(c11-12 / multi-sentence
        :snt1 (c11-11 / say-01
                      :ARG0 (c11-3 / publication
                                   :name (c11-15 / name
                                                 :op1 "Truthglow"))
                      :ARG1 (c11-8 / vote-01
                                   :ARG0 (c11-14 / government-organization
                                                 :name (c11-4 / name
                                                              :op1 "Congress"))
                                   :ARG1 (c11-1 / remove-01
                                                :ARG0 c11-14
                                                :ARG1 (c11-13 / label-01
                                                              :ARG2 (c11-0 / operate-01
                                                                           :ARG1 c11-0)
                                                              :mod (c11-5 / chief)
                                                              :mod (c11-6 / executive))))
                      :time (c11-17 / just))
        :snt2 (c11-9 / excuse-01
                     :ARG0 (c11-18 / you)
                     :ARG1 (c11-16 / i)
                     :time (c11-7 / go-05
                                  :ARG0 c11-16
                                  :ARG1 (c11-2 / puke-01
                                               :ARG0 c11-16)
                                  :mod (c11-10 / fuck
                                               :mode expressive))
                     :mode imperative))

# ::snt Qnik GodandtheBear MikeLoBurgio
# ::tokens ["Qnik", "GodandtheBear", "MikeLoBurgio"]
# ::lemmas ["Qnik", "GodandtheBear", "mikeloburgio"]
(c12-4 / say-01
       :ARG0 (c12-6 / i)
       :ARG2 (c12-3 / and
                    :op1 (c12-1 / person
                                :name (c12-5 / name
                                             :op1 "Qnik"
                                             :op2 "GodandtheBear"))
                    :op2 (c12-0 / person
                                :name (c12-2 / name
                                             :op1 "MikeLoBurgio"))))

# ::snt Qnik GodandtheBear MikeLoBurgio did you see this WTF
# ::tokens ["Qnik", "GodandtheBear", "MikeLoBurgio", "did", "you", "see", "this", "WTF"]
# ::lemmas ["Qnik", "GodandtheBear", "MikeLoBurgio", "do", "you", "see", "this", "WTF"]
(c13-7 / ask-01
       :ARG0 (c13-11 / i)
       :ARG1 (c13-9 / see-01
                    :ARG0 (c13-3 / person
                                 :name (c13-10 / name
                                               :op1 "MikeLoBurgio"))
                    :ARG1 (c13-8 / fuck
                                 :mod (c13-6 / this)
                                 :mode expressive)
                    :polarity (c13-5 / amr-unknown))
       :ARG2 (c13-12 / and
                     :op1 (c13-1 / person
                                 :name (c13-4 / name
                                              :op1 "Qnik"
                                              :op2 "GodandtheBear"))
                     :op2 (c13-0 / person
                                 :name (c13-2 / name
                                              :op1 "MikeLoBurgio"))))

# ::snt declara how would you go to take a bite and not realize its a rat and not a chicken wing
# ::tokens ["declara", "how", "would", "you", "go", "to", "take", "a", "bite", "and", "not", "realize", "its", "a", "rat", "and", "not", "a", "chicken", "wing"]
# ::lemmas ["declara", "how", "would", "you", "go", "to", "take", "a", "bite", "and", "not", "realize", "its", "a", "rat", "and", "not", "a", "chicken", "wing"]
(c14-1 / declare-02
       :ARG0 (c14-12 / you)
       :ARG1 (c14-6 / amr-unknown
                    :manner-of (c14-3 / and
                                      :op1 (c14-8 / go-05
                                                  :ARG0 c14-12
                                                  :ARG1 (c14-4 / take-01
                                                               :ARG0 c14-12
                                                               :ARG1 (c14-10 / bite)))
                                      :op2 (c14-0 / realize-01
                                                  :ARG0 c14-12
                                                  :ARG1 (c14-11 / and
                                                                :op1 (c14-7 / rat
                                                                            :domain (c14-9 / it))
                                                                :op2 (c14-5 / wing
                                                                            :mod (c14-2 / chicken)
                                                                            :domain c14-9))
                                                  :polarity -))))

# ::snt declara why I decided to turn Vegan
# ::tokens ["declara", "why", "I", "decided", "to", "turn", "Vegan"]
# ::lemmas ["declara", "why", "i", "decide", "to", "turn", "Vegan"]
(c15-0 / declare-01
       :ARG0 (c15-5 / i)
       :ARG1 (c15-2 / thing
                    :ARG0-of (c15-1 / cause-01
                                    :ARG1 (c15-4 / decide-01
                                                 :ARG0 c15-5
                                                 :ARG1 (c15-6 / turn-02
                                                              :ARG0 c15-5
                                                              :ARG1 c15-5
                                                              :ARG2 (c15-3 / vegan))))))

# ::snt jpanderson9999 agreed  Fish and veggies
# ::tokens ["jpanderson9999", "agreed", " ", "Fish", "and", "veggies"]
# ::lemmas ["jpanderson9999", "agree", " ", "Fish", "and", "veggie"]
(c16-3 / agree-01
       :ARG0 (c16-0 / person
                    :name (c16-5 / name
                                 :op1 "jpanderson9999"))
       :ARG1 (c16-1 / and
                    :op1 (c16-4 / fish)
                    :op2 (c16-2 / vegetable)))

# ::snt HermeneNdigo Just maybe we should cut back our meat consumption or farm raise our food
# ::tokens ["HermeneNdigo", "Just", "maybe", "we", "should", "cut", "back", "our", "meat", "consumption", "or", "farm", "raise", "our", "food"]
# ::lemmas ["HermeneNdigo", "just", "maybe", "we", "should", "cut", "back", "our", "meat", "consumption", "or", "farm", "raise", "our", "food"]
(c17-8 / say-01
       :ARG0 (c17-12 / i)
       :ARG1 (c17-4 / possible-01
                    :ARG1 (c17-1 / recommend-01
                                 :ARG1 (c17-0 / or
                                              :op1 (c17-5 / cut-back-05
                                                          :ARG0 (c17-6 / we)
                                                          :ARG1 (c17-9 / consume-01
                                                                       :ARG0 c17-6
                                                                       :ARG1 (c17-10 / meat)))
                                              :op2 (c17-7 / farm
                                                          :ARG0 c17-6
                                                          :ARG1 (c17-2 / food
                                                                       :poss c17-6)))
                                 :ARG2 c17-6))
       :ARG2 (c17-3 / person
                    :name (c17-11 / name
                                  :op1 "HermeneNdigo")))

# ::snt sushmahari anilkapur rats  chicken  dog pig all same dont be racist  ha ha ha enjoy
# ::tokens ["sushmahari", "anilkapur", "rats", " ", "chicken", " ", "dog", "pig", "all", "same", "do", "nt", "be", "racist", " ", "ha", "ha", "ha", "enjoy"]
# ::lemmas ["sushmahari", "anilkapur", "rat", " ", "chicken", " ", "dog", "pig", "all", "same", "do", "not", "be", "racist", " ", "ha", "ha", "ha", "enjoy"]
(c18-6 / and
       :op1 (c18-0 / racist
                   :domain (c18-5 / and
                                  :op1 (c18-7 / rat
                                              :mod (c18-11 / anilapur))
                                  :op2 (c18-2 / chicken)
                                  :op3 (c18-3 / pig
                                              :mod (c18-1 / dog))
                                  :ARG1-of (c18-8 / same-01)
                                  :mod (c18-10 / all))
                   :polarity -)
       :op2 (c18-9 / laugh-01
                   :ARG0 (c18-12 / you)
                   :mode imperative
                   :polarity -)
       :op3 (c18-4 / enjoy-01
                   :ARG0 c18-12
                   :mode imperative))
