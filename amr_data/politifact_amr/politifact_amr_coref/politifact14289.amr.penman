# ::snt 666 Dumbasses
# ::tokens ["666", "Dumbasses"]
# ::lemmas ["666", "dumbass"]
(c1-0 / dumbass
      :mod 666)

# ::snt neueWeltordnun  That is very interesting Thankyou
# ::tokens ["neueWeltordnun", " ", "That", "is", "very", "interesting", "Thankyou"]
# ::lemmas ["neueWeltordnun", " ", "that", "be", "very", "interesting", "thankyou"]
(c2-3 / say-01
      :ARG1 (c2-5 / interest-01
                  :ARG2 (c2-1 / that)
                  :degree (c2-2 / very))
      :ARG2 (c2-0 / person
                  :name (c2-4 / name
                              :op1 "neueWeltordnun")))

# ::snt Cool   The future is here
# ::tokens ["Cool", "  ", "The", "future", "is", "here"]
# ::lemmas ["cool", "  ", "the", "future", "be", "here"]
(c3-2 / be-located-at-91
      :ARG1 (c3-1 / future)
      :ARG2 (c3-3 / here)
      :ARG1-of (c3-0 / cool-04))

# ::snt Well after they allowed the govt to disarm them what did they expect
# ::tokens ["Well", "after", "they", "allowed", "the", "govt", "to", "disarm", "them", "what", "did", "they", "expect"]
# ::lemmas ["well", "after", "they", "allow", "the", "govt", "to", "disarm", "them", "what", "do", "they", "expect"]
(c4-1 / expect-01
      :ARG0 (c4-4 / they)
      :ARG1 (c4-6 / amr-unknown)
      :time (c4-3 / after
                  :op1 (c4-8 / allow-01
                             :ARG0 c4-4
                             :ARG1 (c4-0 / disarm-01
                                         :ARG0 (c4-7 / government-organization
                                                     :ARG0-of (c4-2 / govern-01))
                                         :ARG1 c4-4))
                  :mod (c4-5 / well)))

# ::snt More like bugger off Hillary Bill created the chip Obama mandated it  it just stands to reason she will implement it lynda1sherer
# ::tokens ["More", "like", "bugger", "off", "Hillary", "Bill", "created", "the", "chip", "Obama", "mandated", "it", " ", "it", "just", "stands", "to", "reason", "she", "will", "implement", "it", "lynda1sherer"]
# ::lemmas ["more", "like", "bugger", "off", "Hillary", "Bill", "create", "the", "chip", "Obama", "mandate", "it", " ", "it", "just", "stand", "to", "reason", "she", "will", "implement", "it", "lynda1sherer"]
(c5-13 / multi-sentence
       :snt1 (c5-12 / have-degree-of-resemblance-91
                    :ARG1 (c5-6 / create-01
                                :ARG0 (c5-7 / person
                                            :name (c5-16 / name
                                                         :op1 "Hillary"
                                                         :op2 "Bill"))
                                :ARG1 (c5-11 / chip
                                             :ARG1-of (c5-4 / mandate-01
                                                            :ARG0 (c5-1 / person
                                                                        :name (c5-8 / name
                                                                                    :op1 "Obama")))))
                    :ARG2 (c5-18 / bugger-off-00)
                    :ARG3 (c5-14 / more))
       :snt2 (c5-15 / stand-08
                    :ARG1 (c5-17 / it)
                    :ARG2 (c5-2 / reason
                                :ARG0-of (c5-3 / cause-01
                                               :ARG1 (c5-5 / implement-01
                                                           :ARG0 (c5-0 / person
                                                                       :name (c5-9 / name
                                                                                   :op1 "Lynda1sherer"))
                                                           :ARG1 c5-11)))
                    :mod (c5-10 / just)))

# ::snt Gov kept us in the dark that SmartMetres digitalising medicarecensusvoting systems suddenly rehauling prisons led to RFID lynda1sherer
# ::tokens ["Gov", "kept", "us", "in", "the", "dark", "that", "SmartMetres", "digitalising", "medicarecensusvoting", "systems", "suddenly", "rehauling", "prisons", "led", "to", "RFID", "lynda1sherer"]
# ::lemmas ["Gov", "keep", "us", "in", "the", "dark", "that", "SmartMetres", "digitalise", "medicarecensusvoting", "system", "suddenly", "rehaule", "prison", "lead", "to", "RFID", "lynda1sherer"]
(c6-12 / keep-02
       :ARG0 (c6-16 / government-organization
                    :ARG0-of (c6-5 / govern-01))
       :ARG1 (c6-8 / we)
       :ARG2 (c6-17 / be-located-at-91
                    :ARG1 c6-8
                    :ARG2 (c6-3 / dark))
       :ARG1-of (c6-4 / cause-01
                      :ARG0 (c6-13 / lead-03
                                   :ARG0 (c6-10 / digitize-01
                                                :ARG0 (c6-14 / company
                                                             :name (c6-18 / name
                                                                          :op1 "SmartMetres"))
                                                :ARG1 (c6-15 / system
                                                             :ARG0-of (c6-9 / vote-01
                                                                            :ARG1 (c6-0 / census))
                                                             :mod (c6-6 / program
                                                                        :name (c6-7 / name
                                                                                    :op1 "Medicare")))
                                                :manner (c6-11 / sudden))
                                   :ARG2 (c6-1 / rethink-01
                                               :ARG0 c6-14
                                               :ARG1 (c6-2 / prison)))))

# ::snt yes indeed it is but people are still sleeping
# ::tokens ["yes", "indeed", "it", "is", "but", "people", "are", "still", "sleeping"]
# ::lemmas ["yes", "indeed", "it", "be", "but", "people", "be", "still", "sleep"]
(c7-1 / contrast-01
      :ARG1 (c7-5 / it
                  :mod (c7-0 / indeed))
      :ARG2 (c7-4 / sleep-01
                  :ARG0 (c7-2 / person)
                  :mod (c7-3 / still)))

# ::snt Interesting read Well soon be labeled Antichippers or some catchy phrase
# ::tokens ["Interesting", "read", "Well", "soon", "be", "labeled", "Antichippers", "or", "some", "catchy", "phrase"]
# ::lemmas ["interesting", "read", "well", "soon", "be", "label", "Antichippers", "or", "some", "catchy", "phrase"]
(c8-10 / interest-01
       :ARG0 (c8-1 / read-01
                   :ARG1 (c8-9 / label-01
                               :ARG1 (c8-3 / person)
                               :ARG2 (c8-0 / or
                                           :op1 (c8-7 / antichippers)
                                           :op2 (c8-2 / phrase
                                                      :mod (c8-8 / some)
                                                      :ARG0-of (c8-4 / catchy)))
                               :time (c8-6 / soon
                                           :mod (c8-5 / well)))))

# ::snt httpthecomingnewworldorderblogspotcomaupblogpagehtml … here is one view but considering how current governments cant be trusted who knows
# ::tokens ["httpthecomingnewworldorderblogspotcomaupblogpagehtml", "\u2026", "here", "is", "one", "view", "but", "considering", "how", "current", "governments", "ca", "nt", "be", "trusted", "who", "knows"]
# ::lemmas ["httpthecomingnewworldorderblogspotcomaupblogpagehtml", "\u2026", "here", "be", "one", "view", "but", "consider", "how", "current", "government", "can", "not", "be", "trust", "who", "know"]
(c9-9 / multi-sentence
      :snt1 (c9-3 / url-entity
                  :value "httpthecomingnewworldorderblogspotcomaupblogpagehtml")
      :snt2 (c9-2 / contrast-01
                  :ARG1 (c9-7 / view
                              :location (c9-10 / here)
                              :quant 1)
                  :ARG2 (c9-8 / consider-02
                              :ARG1 (c9-6 / thing
                                          :manner-of (c9-4 / possible-01
                                                           :ARG1 (c9-13 / trust-01
                                                                        :ARG1 (c9-12 / government-organization
                                                                                     :ARG0-of (c9-5 / govern-01)
                                                                                     :time (c9-0 / current))
                                                                        :ARG2 (c9-1 / person
                                                                                    :ARG0-of (c9-11 / know-01)))
                                                           :polarity -)))))

# ::snt Wonder just how easily the chips could be programed to influence the body it has invaded PavlovsDogs
# ::tokens ["Wonder", "just", "how", "easily", "the", "chips", "could", "be", "programed", "to", "influence", "the", "body", "it", "has", "invaded", "PavlovsDogs"]
# ::lemmas ["wonder", "just", "how", "easily", "the", "chip", "could", "be", "programed", "to", "influence", "the", "body", "it", "have", "invade", "PavlovsDogs"]
(c10-7 / wonder-01
       :ARG1 (c10-6 / thing
                    :degree-of (c10-3 / easy-05
                                      :ARG1 (c10-4 / program-01
                                                   :ARG1 (c10-5 / chip)
                                                   :ARG2 (c10-9 / influence-01
                                                                :ARG0 c10-5
                                                                :ARG1 (c10-10 / body
                                                                              :ARG1-of (c10-0 / invade-01
                                                                                              :ARG0 c10-5
                                                                                              :ARG2 (c10-1 / product
                                                                                                           :name (c10-8 / name
                                                                                                                        :op1 "PavlovsDogs")))))))
                    :mod (c10-2 / just)))

# ::snt WTH No Thanks is exactly right I like light switches  keys
# ::tokens ["WTH", "No", "Thanks", "is", "exactly", "right", "I", "like", "light", "switches", " ", "keys"]
# ::lemmas ["WTH", "no", "thanks", "be", "exactly", "right", "i", "like", "light", "switch", " ", "key"]
(c11-8 / multi-sentence
       :snt1 (c11-12 / by-the-way)
       :snt2 (c11-3 / thank-01
                    :ARG0 (c11-11 / i)
                    :ARG1 (c11-13 / you)
                    :ARG2 (c11-0 / right-06
                                 :ARG1 c11-13
                                 :mod (c11-2 / exact)))
       :snt3 (c11-9 / like-01
                    :ARG0 (c11-1 / i)
                    :ARG1 (c11-4 / and
                                 :op1 (c11-7 / switch
                                             :ARG1-of (c11-5 / light-06))
                                 :op2 (c11-10 / key
                                              :mod (c11-6 / light)))))

# ::snt ShieldMaiden88 no thanks lol
# ::tokens ["ShieldMaiden88", "no", "thanks", "lol"]
# ::lemmas ["ShieldMaiden88", "no", "thank", "lol"]
(c12-3 / say-01
       :ARG0 (c12-6 / i)
       :ARG1 (c12-5 / no)
       :ARG2 (c12-0 / person
                    :name (c12-1 / name
                                 :op1 "ShieldMaiden88"))
       :ARG2-of (c12-4 / laugh-01
                       :ARG0 c12-6
                       :manner (c12-2 / loud)
                       :mode expressive))

# ::snt This is the way I live
# ::tokens ["This", "is", "the", "way", "I", "live"]
# ::lemmas ["this", "be", "the", "way", "i", "live"]
(c13-2 / live-01
       :ARG0 (c13-0 / i)
       :manner (c13-1 / this))

# ::snt errlol no idea
# ::tokens ["errlol", "no", "idea"]
# ::lemmas ["errlol", "no", "idea"]
(c14-1 / idea
       :mod (c14-2 / laugh-01
                   :manner (c14-0 / loud)
                   :mode expressive)
       :polarity -)

# ::snt everything served with micro chips  it begins in Australia the place  to not emigrate 2they think you are all still convicts
# ::tokens ["everything", "served", "with", "micro", "chips", " ", "it", "begins", "in", "Australia", "the", "place", " ", "to", "not", "emigrate", "2they", "think", "you", "are", "all", "still", "convicts"]
# ::lemmas ["everything", "serve", "with", "micro", "chip", " ", "it", "begin", "in", "Australia", "the", "place", " ", "to", "not", "emigrate", "2they", "think", "you", "be", "all", "still", "convict"]
(c15-11 / multi-sentence
        :snt1 (c15-10 / serve-02
                      :ARG1 (c15-3 / everything)
                      :instrument (c15-4 / chip
                                         :mod (c15-2 / micro)))
        :snt2 (c15-15 / begin-01
                      :ARG1 (c15-14 / it)
                      :location (c15-12 / country
                                        :name (c15-13 / name
                                                      :op1 "Australia"))
                      :purpose (c15-9 / emigrate-01
                                      :ARG0 (c15-16 / you)
                                      :polarity -))
        :snt3 (c15-6 / think-01
                     :ARG0 (c15-5 / they)
                     :ARG1 (c15-0 / convict-01
                                  :ARG1 (c15-1 / you
                                               :mod (c15-8 / all))
                                  :mod (c15-7 / still))))

# ::snt David Icke has been saying this for years and hes a fruitcake
# ::tokens ["David", "Icke", "has", "been", "saying", "this", "for", "years", "and", "he", "s", "a", "fruitcake"]
# ::lemmas ["David", "Icke", "have", "be", "say", "this", "for", "years", "and", "he", "s", "a", "fruitcake"]
(c16-2 / and
       :op1 (c16-4 / say-01
                   :ARG0 (c16-0 / person
                                :name (c16-6 / name
                                             :op1 "David"
                                             :op2 "Icke"))
                   :ARG1 (c16-1 / this)
                   :duration (c16-5 / multiple
                                    :op1 (c16-7 / temporal-quantity
                                                :unit (c16-8 / year)
                                                :quant 1)))
       :op2 (c16-3 / fruitcake
                   :domain c16-0))

# ::snt Not us
# ::tokens ["Not", "us"]
# ::lemmas ["not", "us"]
(c17-0 / event
       :domain (c17-1 / we)
       :polarity -)

# ::snt its almost hilarious MINORITY REPORT did a good job of showing the downside freeradicalone
# ::tokens ["its", "almost", "hilarious", "MINORITY", "REPORT", "did", "a", "good", "job", "of", "showing", "the", "downside", "freeradicalone"]
# ::lemmas ["its", "almost", "hilarious", "MINORITY", "REPORT", "do", "a", "good", "job", "of", "show", "the", "downside", "freeradicalone"]
(c18-1 / do-02
       :ARG0 (c18-0 / report-01
                    :mod (c18-6 / minority)
                    :mod (c18-7 / hilarious
                                :mod (c18-3 / almost)))
       :ARG1 (c18-9 / job
                    :ARG1-of (c18-8 / good-02))
       :ARG2 (c18-5 / show-01
                    :ARG0 c18-0
                    :ARG1 (c18-4 / freeradicalone
                                 :mod (c18-2 / upside))))

# ::snt Loathe to say but sounds scarily inevitable if its falsely promoted with benefits safety and convenience freeradicalone
# ::tokens ["Loathe", "to", "say", "but", "sounds", "scarily", "inevitable", "if", "its", "falsely", "promoted", "with", "benefits", "safety", "and", "convenience", "freeradicalone"]
# ::lemmas ["loathe", "to", "say", "but", "sound", "scarily", "inevitable", "if", "its", "falsely", "promote", "with", "benefit", "safety", "and", "convenience", "freeradicalone"]
(c19-3 / contrast-01
       :ARG1 (c19-0 / oathe-00
                    :ARG1 (c19-10 / say-01))
       :ARG2 (c19-7 / sound-01
                    :ARG1 c19-10
                    :ARG2 (c19-4 / possible-01
                                 :ARG1 (c19-8 / avoid-01
                                              :ARG1 c19-10)
                                 :manner (c19-6 / scarily)
                                 :condition (c19-1 / promote-02
                                                   :ARG1 (c19-12 / it)
                                                   :manner (c19-9 / false)
                                                   :manner (c19-5 / and
                                                                  :op1 (c19-13 / safe-01)
                                                                  :op2 (c19-2 / free-04
                                                                              :ARG3 (c19-11 / convenience))))
                                 :polarity -)))

# ::snt The near future  You dont have an RFID chip Whats wrong with you   freeradicalone Choisse8nous
# ::tokens ["The", "near", "future", " ", "You", "do", "nt", "have", "an", "RFID", "chip", "What", "s", "wrong", "with", "you", "  ", "freeradicalone", "Choisse8nous"]
# ::lemmas ["the", "near", "future", " ", "you", "do", "not", "have", "an", "RFID", "chip", "what", "s", "wrong", "with", "you", "  ", "freeradicalone", "choisse8nous"]
(c20-9 / multi-sentence
       :snt1 (c20-7 / future
                    :ARG1-of (c20-10 / near-02))
       :snt2 (c20-8 / have-03
                    :ARG0 (c20-12 / you)
                    :ARG1 (c20-2 / chip
                                 :ARG1-of (c20-11 / identify-01
                                                  :ARG1-of (c20-4 / verify-01
                                                                  :ARG1-of (c20-3 / possible-01))))
                    :polarity -)
       :snt3 (c20-5 / wrong-02
                    :ARG1 (c20-6 / amr-unknown)
                    :ARG2 (c20-1 / you
                                 :mod (c20-0 / freeradicalone))))

# ::snt the Oz case on many wanting RFID chip implants is indicative of how this kinda stuff gains traction Choisse8nous
# ::tokens ["the", "Oz", "case", "on", "many", "wanting", "RFID", "chip", "implants", "is", "indicative", "of", "how", "this", "kinda", "stuff", "gains", "traction", "Choisse8nous"]
# ::lemmas ["the", "Oz", "case", "on", "many", "want", "RFID", "chip", "implant", "be", "indicative", "of", "how", "this", "kinda", "stuff", "gain", "traction", "choisse8nous"]
(c21-12 / say-01
        :ARG0 (c21-18 / i)
        :ARG1 (c21-1 / indicate-01
                     :ARG0 (c21-4 / case-03
                                  :ARG0 (c21-5 / person
                                               :name (c21-17 / name
                                                             :op1 "Oz"))
                                  :ARG1 (c21-2 / person
                                               :quant (c21-13 / many)
                                               :ARG0-of (c21-9 / want-01
                                                               :ARG1 (c21-15 / implant-01
                                                                             :ARG1 (c21-14 / chip
                                                                                           :ARG1-of (c21-3 / RFID-01))))))
                     :ARG1 (c21-16 / gain-02
                                   :ARG0 (c21-10 / stuff
                                                 :mod (c21-19 / kind
                                                              :mod (c21-8 / this)))
                                   :ARG1 (c21-6 / traction)
                                   :manner (c21-11 / amr-unknown)))
        :ARG2 (c21-0 / person
                     :name (c21-7 / name
                                  :op1 "Choisse8nous")))

# ::snt Thats why we have to get out of her  own our own vessel
# ::tokens ["That", "s", "why", "we", "have", "to", "get", "out", "of", "her", " ", "own", "our", "own", "vessel"]
# ::lemmas ["that", "s", "why", "we", "have", "to", "get", "out", "of", "her", " ", "own", "our", "own", "vessel"]
(c22-2 / cause-01
       :ARG0 (c22-3 / that)
       :ARG1 (c22-0 / obligate-01
                    :ARG1 (c22-4 / we)
                    :ARG2 (c22-6 / get-05
                                 :ARG1 c22-4
                                 :ARG2 (c22-1 / out-06
                                              :ARG1 c22-4
                                              :ARG2 (c22-5 / vessel
                                                           :poss c22-4)))))

# ::snt thats wot u get 4 remaining faithfulsubservient2british imperialism httpemmaholisterartblogspotfr201609doctoredaccountsdrcartoonshtml …
# ::tokens ["that", "s", "wot", "u", "get", "4", "remaining", "faithfulsubservient2british", "imperialism", "httpemmaholisterartblogspotfr201609doctoredaccountsdrcartoonshtml", "\u2026"]
# ::lemmas ["that", "s", "wot", "u", "get", "4", "remain", "faithfulsubservient2british", "imperialism", "httpemmaholisterartblogspotfr201609doctoredaccountsdrcartoonshtml", "\u2026"]
(c23-7 / get-01
       :ARG0 (c23-9 / you)
       :ARG1 (c23-1 / person
                    :ARG1-of (c23-0 / remain-01)
                    :ARG0-of (c23-4 / adhere-02
                                    :ARG1 (c23-5 / faithful))
                    :mod (c23-8 / imperialism
                                :mod (c23-2 / country
                                            :name (c23-6 / name
                                                         :op1 "United"
                                                         :op2 "Kingdom")))
                    :quant 4)
       :polarity (c23-3 / amr-unknown))

# ::snt Microchip is a radiofrequency transponder which emits chronic radiation which is carcinogen Put in an eye is misanthropy  human disdain
# ::tokens ["Microchip", "is", "a", "radiofrequency", "transponder", "which", "emits", "chronic", "radiation", "which", "is", "carcinogen", "Put", "in", "an", "eye", "is", "misanthropy", " ", "human", "disdain"]
# ::lemmas ["microchip", "be", "a", "radiofrequency", "transponder", "which", "emit", "chronic", "radiation", "which", "be", "carcinogen", "Put", "in", "an", "eye", "be", "misanthropy", " ", "human", "disdain"]
(c24-10 / multi-sentence
        :snt1 (c24-6 / transponder
                     :mod (c24-0 / radiofrequency)
                     :ARG0-of (c24-3 / emit-01
                                     :ARG1 (c24-13 / thing
                                                   :ARG1-of (c24-8 / radiate-01)
                                                   :mod (c24-4 / chronic)
                                                   :mod (c24-9 / carcinogen
                                                               :ARG1-of (c24-5 / put-01
                                                                               :ARG2 (c24-7 / eye)))))
                     :domain (c24-1 / microchip))
        :snt2 (c24-2 / despise-01
                     :ARG0 (c24-11 / human)
                     :mod (c24-12 / misanthropy)))

# ::snt bbodine18457 wow   Not me  Not ever
# ::tokens ["bbodine18457", "wow", "  ", "Not", "me", " ", "Not", "ever"]
# ::lemmas ["bbodine18457", "wow", "  ", "not", "me", " ", "not", "ever"]
(c25-2 / multi-sentence
       :snt1 (c25-3 / wow
                    :mode expressive)
       :snt2 (c25-1 / i
                    :time (c25-0 / ever)
                    :polarity -))

# ::snt montana0323 They wont to do the to us if we dont VOTE Trump
# ::tokens ["montana0323", "They", "wo", "nt", "to", "do", "the", "to", "us", "if", "we", "do", "nt", "VOTE", "Trump"]
# ::lemmas ["montana0323", "they", "will", "not", "to", "do", "the", "to", "us", "if", "we", "do", "not", "vote", "trump"]
(c26-6 / say-01
       :ARG0 (c26-8 / i)
       :ARG1 (c26-0 / do-02
                    :ARG0 (c26-3 / they)
                    :ARG1 (c26-9 / thing)
                    :ARG2 (c26-4 / we)
                    :condition (c26-5 / vote-01
                                      :ARG0 c26-4
                                      :ARG1 (c26-1 / person
                                                   :name (c26-7 / name
                                                                :op1 "Trump")
                                                   :ARG2-of c26-6)
                                      :polarity -)
                    :polarity -)
       :name (c26-2 / name
                    :op1 "montana0323"))

# ::snt oh no
# ::tokens ["oh", "no"]
# ::lemmas ["oh", "no"]
(c27-0 / oh-no
       :mode expressive)

# ::snt I would never allow it
# ::tokens ["I", "would", "never", "allow", "it"]
# ::lemmas ["i", "would", "never", "allow", "it"]
(c28-0 / allow-01
       :ARG0 (c28-2 / i)
       :ARG1 (c28-3 / it)
       :time (c28-1 / ever)
       :polarity -)

# ::snt I hope you realise that is a completely rubbish article Factually incorrect  equates individual choice with conspiracy
# ::tokens ["I", "hope", "you", "realise", "that", "is", "a", "completely", "rubbish", "article", "Factually", "incorrect", " ", "equates", "individual", "choice", "with", "conspiracy"]
# ::lemmas ["i", "hope", "you", "realise", "that", "be", "a", "completely", "rubbish", "article", "Factually", "incorrect", " ", "equate", "individual", "choice", "with", "conspiracy"]
(c29-10 / hope-01
        :ARG0 (c29-11 / i)
        :ARG1 (c29-0 / realize-01
                     :ARG0 (c29-12 / you)
                     :ARG1 (c29-3 / correct-02
                                  :ARG1 (c29-6 / article
                                               :domain (c29-5 / that))
                                  :ARG1-of (c29-9 / complete-02)
                                  :mod (c29-7 / factual)
                                  :ARG0-of (c29-4 / equate-01
                                                  :ARG1 (c29-1 / choose-01
                                                               :ARG0 (c29-2 / individual))
                                                  :ARG2 (c29-8 / conspiracy))
                                  :polarity -)))

# ::snt this isnt good news for anybody
# ::tokens ["this", "is", "nt", "good", "news", "for", "anybody"]
# ::lemmas ["this", "be", "not", "good", "news", "for", "anybody"]
(c30-1 / news
       :ARG1-of (c30-0 / good-02
                       :beneficiary (c30-2 / anybody))
       :domain (c30-3 / this)
       :polarity -)

# ::snt Well theyre certainty keeping it dark  never heard of it  Im Australian live Sydney
# ::tokens ["Well", "they", "re", "certainty", "keeping", "it", "dark", " ", "never", "heard", "of", "it", " ", "I", "m", "Australian", "live", "Sydney"]
# ::lemmas ["well", "they", "be", "certainty", "keep", "it", "dark", " ", "never", "hear", "of", "it", " ", "i", "be", "Australian", "live", "Sydney"]
(c31-7 / multi-sentence
       :snt1 (c31-6 / keep-02
                    :ARG0 (c31-4 / they)
                    :ARG1 (c31-1 / dark-02
                                 :ARG1 (c31-12 / it))
                    :mod (c31-2 / certainty)
                    :mod (c31-5 / well))
       :snt2 (c31-8 / hear-01
                    :ARG0 (c31-0 / i)
                    :ARG1 (c31-9 / it)
                    :time (c31-3 / ever)
                    :polarity -)
       :snt3 (c31-10 / live-01
                     :ARG0 c31-0
                     :location (c31-11 / city
                                       :name (c31-13 / name
                                                     :op1 "Sydney"))))

# ::snt Australia in a nutshell httpswwwredditcomrKotakuInActioncomments44263haustraliasantifreespeechlawsindigenous …
# ::tokens ["Australia", "in", "a", "nutshell", "httpswwwredditcomrKotakuInActioncomments44263haustraliasantifreespeechlawsindigenous", "\u2026"]
# ::lemmas ["Australia", "in", "a", "nutshell", "httpswwwredditcomrkotakuinactioncomments44263haustraliasantifreespeechlawsindigenous", "\u2026"]
(c32-4 / be-located-at-91
       :ARG1 (c32-0 / country
                    :name (c32-3 / name
                                 :op1 "Australia"))
       :ARG2 (c32-2 / nutshell
                    :mod (c32-1 / url-entity
                                :value "www.redditcomrKotakuInActioncomments44263haustraliasantifreespeechlawsindigenous")))

# ::snt Now we will have to start doing it because “everyone’s doing it” and we wouldn’t want to fall behind
# ::tokens ["Now", "we", "will", "have", "to", "start", "doing", "it", "because", "\u201c", "everyone", "\u2019s", "doing", "it", "\u201d", "and", "we", "would", "n\u2019t", "want", "to", "fall", "behind"]
# ::lemmas ["now", "we", "will", "have", "to", "start", "do", "it", "because", "\"", "everyone", "\u2019", "do", "it", "\"", "and", "we", "would", "not", "want", "to", "fall", "behind"]
(c33-2 / cause-01
       :ARG0 (c33-5 / and
                    :op1 (c33-1 / do-02
                                :ARG0 (c33-4 / we)
                                :ARG1 (c33-9 / it))
                    :op2 (c33-6 / do-02
                                :ARG0 (c33-3 / everyone)
                                :ARG1 c33-9))
       :ARG1 (c33-0 / obligate-01
                    :ARG1 c33-4
                    :ARG2 (c33-7 / start-01
                                 :ARG0 c33-4
                                 :ARG1 c33-1)
                    :time (c33-8 / now)))

# ::snt they assume all technology is beneficial by definition
# ::tokens ["they", "assume", "all", "technology", "is", "beneficial", "by", "definition"]
# ::lemmas ["they", "assume", "all", "technology", "be", "beneficial", "by", "definition"]
(c34-4 / assume-02
       :ARG0 (c34-3 / they)
       :ARG1 (c34-0 / benefit-01
                    :ARG0 (c34-5 / technology
                                 :mod (c34-2 / all))
                    :ARG1-of (c34-1 / define-01)))

# ::snt invigilate as something useful making life easier and new technology 22
# ::tokens ["invigilate", "as", "something", "useful", "making", "life", "easier", "and", "new", "technology", "22"]
# ::lemmas ["invigilate", "as", "something", "useful", "make", "life", "easy", "and", "new", "technology", "22"]
(c35-5 / vigilant-01
       :ARG0-of (c35-7 / make-02
                       :ARG1 (c35-6 / and
                                    :op1 (c35-9 / live-01
                                                :ARG1-of (c35-8 / have-degree-91
                                                                :ARG2 (c35-2 / easy-05)
                                                                :ARG3 (c35-1 / more)))
                                    :op2 (c35-4 / technology
                                                :ARG1-of (c35-10 / new-01))))
       :ARG1-of (c35-3 / useful-05)
       :ord (c35-0 / ordinal-entity
                   :value 22))

# ::snt ppl interviewed there were very excited about that from what I remember basically it looked to me like selling way to 12
# ::tokens ["ppl", "interviewed", "there", "were", "very", "excited", "about", "that", "from", "what", "I", "remember", "basically", "it", "looked", "to", "me", "like", "selling", "way", "to", "12"]
# ::lemmas ["ppl", "interview", "there", "be", "very", "excited", "about", "that", "from", "what", "i", "remember", "basically", "it", "look", "to", "me", "like", "sell", "way", "to", "12"]
(c36-12 / multi-sentence
        :snt1 (c36-16 / interview-01
                      :ARG1 (c36-5 / person
                                   :name (c36-15 / name
                                                 :op1 "ppl"))
                      :location (c36-7 / there))
        :snt2 (c36-6 / excite-01
                     :ARG0 (c36-17 / that)
                     :ARG1 (c36-1 / i)
                     :degree (c36-8 / very)
                     :source (c36-9 / thing
                                    :ARG1-of (c36-2 / remember-01
                                                    :ARG0 (c36-14 / i))
                                    :ARG1-of (c36-13 / look-02
                                                     :ARG0 c36-14
                                                     :ARG2 (c36-10 / resemble-01
                                                                   :ARG1 (c36-3 / it)
                                                                   :ARG2 (c36-11 / sell-01
                                                                                 :ARG1 (c36-4 / person
                                                                                              :quant 12))
                                                                   :mod (c36-0 / basic))))))

# ::snt hmmm I didnt hear that I can totally see the Millennials clamouring for this too
# ::tokens ["hmmm", "I", "did", "nt", "hear", "that", "I", "can", "totally", "see", "the", "Millennials", "clamouring", "for", "this", "too"]
# ::lemmas ["hmmm", "i", "do", "not", "hear", "that", "i", "can", "totally", "see", "the", "Millennials", "clamour", "for", "this", "too"]
(c37-7 / hear-01
       :ARG0 (c37-8 / i)
       :ARG1 (c37-1 / possible-01
                    :ARG1 (c37-6 / see-01
                                 :ARG0 c37-8
                                 :ARG1 (c37-2 / clamor-01
                                              :ARG0 (c37-0 / person
                                                           :mod (c37-10 / young))
                                              :ARG1 (c37-4 / this)
                                              :mod (c37-9 / too))
                                 :degree (c37-5 / total)))
       :mod (c37-3 / hmm
                   :mode expressive)
       :polarity -)

# ::snt the most important is to counter their moves httpwwwactivismnetcypherpunkcryptoanarchyhtml …
# ::tokens ["the", "most", "important", "is", "to", "counter", "their", "moves", "httpwwwactivismnetcypherpunkcryptoanarchyhtml", "\u2026"]
# ::lemmas ["the", "most", "important", "be", "to", "counter", "their", "move", "httpwwwactivismnetcypherpunkcryptoanarchyhtml", "\u2026"]
(c38-5 / have-degree-91
       :ARG1 (c38-1 / counter-01
                    :ARG1 (c38-4 / move-02
                                 :ARG0 (c38-3 / they)))
       :ARG2 (c38-6 / important-01
                    :ARG1 c38-1)
       :ARG3 (c38-0 / most)
       :ARG5 (c38-2 / url-entity
                    :value "wwwactivismnetcypherpunkcryptoanarchyhtml"))

# ::snt having no regard for their ability to do anything without being plugged into a machine
# ::tokens ["having", "no", "regard", "for", "their", "ability", "to", "do", "anything", "without", "being", "plugged", "into", "a", "machine"]
# ::lemmas ["have", "no", "regard", "for", "their", "ability", "to", "do", "anything", "without", "be", "plug", "into", "a", "machine"]
(c39-0 / regard-01
       :ARG1 (c39-2 / capable-01
                    :ARG1 (c39-4 / they)
                    :ARG2 (c39-1 / do-02
                                 :ARG0 c39-4
                                 :ARG1 (c39-5 / anything)
                                 :manner (c39-3 / plug-04
                                                :ARG1 c39-4
                                                :ARG2 (c39-6 / machine)
                                                :polarity -)))
       :polarity -)

# ::snt couple years ago like 5 or 6 Ive seen in TV ppl praising chipping in Germany on program called Galileo its world trend
# ::tokens ["couple", "years", "ago", "like", "5", "or", "6", "I", "ve", "seen", "in", "TV", "ppl", "praising", "chipping", "in", "Germany", "on", "program", "called", "Galileo", "its", "world", "trend"]
# ::lemmas ["couple", "years", "ago", "like", "5", "or", "6", "i", "have", "see", "in", "tv", "ppl", "praise", "chipping", "in", "Germany", "on", "program", "call", "Galileo", "its", "world", "trend"]
(c40-17 / see-01
        :ARG0 (c40-5 / i)
        :ARG1 (c40-3 / praise-01
                     :ARG0 (c40-7 / person
                                  :ARG0-of (c40-16 / post-01
                                                   :ARG2 (c40-13 / television)))
                     :ARG1 (c40-10 / chip-01
                                   :ARG2 (c40-18 / country
                                                 :name (c40-19 / name
                                                               :op1 "Germany"))
                                   :medium (c40-14 / program
                                                   :name (c40-11 / name
                                                                 :op1 "Galileo")
                                                   :mod (c40-6 / trend
                                                               :mod (c40-4 / world)
                                                               :poss c40-18))))
        :time (c40-15 / before
                      :op1 (c40-2 / now)
                      :quant (c40-1 / couple
                                    :op1 (c40-12 / temporal-quantity
                                                 :unit (c40-9 / year)
                                                 :quant 1))
                      :time-of c40-17)
        :op1 c40-2
        :quant (c40-20 / temporal-quantity
                       :quant (c40-0 / or
                                     :op1 5
                                     :op2 6)
                       :unit (c40-8 / year)))

# ::snt this NOT A GOOD THING
# ::tokens ["this", "NOT", "A", "GOOD", "THING"]
# ::lemmas ["this", "not", "a", "good", "thing"]
(c41-0 / good-02
       :ARG1 (c41-1 / this)
       :polarity -)

# ::snt oops sorry crankyallAnimal
# ::tokens ["oops", "sorry", "crankyallAnimal"]
# ::lemmas ["oops", "sorry", "crankyallanimal"]
(c42-3 / say-01
       :ARG1 (c42-2 / sorry-01)
       :ARG2 (c42-1 / person
                    :name (c42-4 / name
                                 :op1 "crumpyallAnimal"))
       :mod (c42-0 / oops
                   :mode expressive))

# ::snt Iraq rape is horrendous too completely unacceptable
# ::tokens ["Iraq", "rape", "is", "horrendous", "too", "completely", "unacceptable"]
# ::lemmas ["Iraq", "rape", "be", "horrendous", "too", "completely", "unacceptable"]
(c43-1 / possible-01
       :ARG1 (c43-4 / accept-01
                    :ARG1 (c43-0 / rape-01
                                 :location (c43-2 / country
                                                  :name (c43-7 / name
                                                               :op1 "Iraq")))
                    :ARG1-of (c43-5 / complete-02))
       :ARG2-of (c43-6 / have-degree-91
                       :ARG1 c43-0
                       :ARG3 (c43-3 / too))
       :polarity -)

# ::snt greenie  leftie craphttpwwworganicandhealthyorgsearchupdatedmax20170328T003A313A002B013A00maxresults7PageNo3 …
# ::tokens ["greenie", " ", "leftie", "craphttpwwworganicandhealthyorgsearchupdatedmax20170328T003A313A002B013A00maxresults7PageNo3", "\u2026"]
# ::lemmas ["greenie", " ", "leftie", "craphttpwwworganicandhealthyorgsearchupdatedmax20170328t003a313a002b013a00maxresults7pageno3", "\u2026"]
(c44-0 / person
       :name (c44-4 / name
                    :op1 "greenie")
       :ARG1-of (c44-3 / left-19)
       :ARG0-of (c44-2 / search-01
                       :mod (c44-1 / url-entity
                                   :value "organicandhealthyorgsearch")
                       :ARG1-of (c44-5 / update-01)))

# ::snt Do you believe the crap article It makes people superhuman lol
# ::tokens ["Do", "you", "believe", "the", "crap", "article", "It", "makes", "people", "superhuman", "lol"]
# ::lemmas ["do", "you", "believe", "the", "crap", "article", "it", "make", "people", "superhuman", "lol"]
(c45-9 / believe-01
       :ARG0 (c45-10 / you)
       :ARG1 (c45-3 / article
                    :ARG1-of (c45-0 / crap-01)
                    :topic (c45-6 / make-02
                                  :ARG1 (c45-5 / superhuman
                                               :domain (c45-1 / person))
                                  :ARG0 c45-3))
       :polarity (c45-2 / amr-unknown)
       :ARG2-of (c45-7 / laugh-01
                       :ARG0 (c45-8 / i)
                       :manner (c45-4 / loud)))

# ::snt I hope they save 12000 of them for the NEW ARRIVALS
# ::tokens ["I", "hope", "they", "save", "12000", "of", "them", "for", "the", "NEW", "ARRIVALS"]
# ::lemmas ["i", "hope", "they", "save", "12000", "of", "them", "for", "the", "new", "arrival"]
(c46-7 / hope-01
       :ARG0 (c46-9 / i)
       :ARG1 (c46-5 / save-01
                    :ARG0 (c46-3 / they)
                    :ARG1 (c46-6 / monetary-quantity
                                 :unit (c46-1 / dollar)
                                 :ARG1-of (c46-0 / include-91
                                                 :ARG2 (c46-10 / they))
                                 :quant 12000)
                    :ARG3 (c46-2 / person
                                 :ARG1-of (c46-8 / new-01)
                                 :ARG0-of (c46-4 / survive-01))))

# ::snt They can Shove it up their Backside   What a GREAT Idea
# ::tokens ["They", "can", "Shove", "it", "up", "their", "Backside", "  ", "What", "a", "GREAT", "Idea"]
# ::lemmas ["they", "can", "shove", "it", "up", "their", "Backside", "  ", "what", "a", "great", "idea"]
(c47-5 / multi-sentence
       :snt1 (c47-0 / possible-01
                    :ARG1 (c47-4 / shove-01
                                 :ARG0 (c47-2 / they)
                                 :ARG1 (c47-7 / idea)
                                 :ARG2 (c47-8 / backside
                                              :poss (c47-1 / they))))
       :snt2 (c47-6 / great
                    :degree (c47-3 / so)
                    :domain c47-7))

# ::snt 人へのマイクロチップの埋め込みが始まった。恐るべきことの起きる可能性の始まり！miyadai
# ::tokens ["\u4eba\u3078\u306e\u30de\u30a4\u30af\u30ed\u30c1\u30c3\u30d7\u306e\u57cb\u3081\u8fbc\u307f\u304c\u59cb\u307e\u3063\u305f\u3002\u6050\u308b\u3079\u304d\u3053\u3068\u306e\u8d77\u304d\u308b\u53ef\u80fd\u6027\u306e\u59cb\u307e\u308a\uff01miyadai"]
# ::lemmas ["\u4eba\u3078\u306e\u30de\u30a4\u30af\u30ed\u30c1\u30c3\u30d7\u306e\u57cb\u3081\u8fbc\u307f\u304c\u59cb\u307e\u3063\u305f\u3002\u6050\u308b\u3079\u304d\u3053\u3068\u306e\u8d77\u304d\u308b\u53ef\u80fd\u6027\u306e\u59cb\u307e\u308a\uff01miyadai"]
(c48-12 / multi-sentence
        :snt1 (c48-2 / person
                     :name (c48-19 / name
                                   :op1 "人")
                     :ARG1-of (c48-0 / mean-01
                                     :ARG2 (c48-6 / person
                                                  :name (c48-8 / name
                                                               :op1 "マイクロ"
                                                               :op2 "チップ")
                                                  :ARG1-of (c48-5 / mean-01
                                                                  :ARG2 (c48-14 / person
                                                                                :name (c48-1 / name
                                                                                             :op1 "始"
                                                                                             :op2 "ま"
                                                                                             :op3 "っ"
                                                                                             :op4 "た")))))
                     :snt2 (c48-17 / and
                                   :op1 (c48-3 / warn-01
                                               :ARG0 (c48-13 / person
                                                             :name (c48-7 / name
                                                                          :op1 "こ"
                                                                          :op2 "と"))
                                               :ARG1 (c48-11 / thing
                                                             :ARG2-of (c48-15 / defend-01
                                                                              :ARG1 c48-13)))
                                   :op2 (c48-10 / warn-01
                                                :ARG0 c48-13
                                                :ARG1 (c48-4 / thing
                                                             :ARG2-of (c48-18 / defend-01
                                                                              :ARG1 c48-13))
                                                :ARG2 c48-13)
                                   :op3 (c48-16 / warn-01
                                                :ARG0 c48-13
                                                :ARG1 (c48-9 / thing
                                                             :ARG2-of (c48-20 / defend-01
                                                                              :ARG1 c48-13))
                                                :ARG2 c48-13))))

# ::snt The fact that people are lining up for them willingly scares me
# ::tokens ["The", "fact", "that", "people", "are", "lining", "up", "for", "them", "willingly", "scares", "me"]
# ::lemmas ["the", "fact", "that", "people", "be", "line", "up", "for", "them", "willingly", "scare", "me"]
(c49-3 / scare-01
       :ARG0 (c49-4 / line-up-02
                    :ARG1 (c49-0 / person)
                    :ARG3 (c49-1 / they)
                    :ARG1-of (c49-2 / will-02
                                    :ARG0 c49-0))
       :ARG1 (c49-5 / i))

# ::snt and so it begins
# ::tokens ["and", "so", "it", "begins"]
# ::lemmas ["and", "so", "it", "begin"]
(c50-0 / and
       :op2 (c50-2 / begin-01
                   :ARG1 (c50-1 / it))
       :mod (c50-3 / so))
