# ::snt , ,
# ::tokens [",", ","]
# ::lemmas [",", ","]
(c2-0 / amr-empty)

# ::snt Tajinder Bagga paji hai abhi help karne ko
# ::tokens ["Tajinder", "Bagga", "paji", "hai", "abhi", "help", "karne", "ko"]
# ::lemmas ["Tajinder", "Bagga", "paji", "hai", "abhi", "help", "karne", "ko"]
(c4-4 / multi-sentence
      :snt1 (c4-3 / paji
                  :domain (c4-1 / person
                                :name (c4-5 / name
                                            :op1 "Tajinder"
                                            :op2 "Bagga"))
                  :mode expressive)
      :snt2 (c4-0 / help-01
                  :ARG0 (c4-6 / you)
                  :ARG1 c4-1
                  :name (c4-2 / name
                              :op1 "Karne")
                  :mode imperative))

# ::snt I pray, corona get well soon.
# ::tokens ["I", "pray", ",", "corona", "get", "well", "soon", "."]
# ::lemmas ["i", "pray", ",", "corona", "get", "well", "soon", "."]
(c5-4 / pray-01
      :ARG0 (c5-2 / i)
      :ARG1 (c5-3 / get-well-12
                  :ARG1 (c5-1 / country
                              :name (c5-5 / name
                                          :op1 "Corona"))
                  :time (c5-0 / soon)))

# ::snt Beta abhi paida hue ho sambhal jao
# ::tokens ["Beta", "abhi", "paida", "hue", "ho", "sambhal", "jao"]
# ::lemmas ["beta", "abhi", "paida", "hue", "ho", "sambhal", "jao"]
(c6-0 / and
      :op1 (c6-5 / pay-01
                 :ARG0 (c6-2 / person
                             :name (c6-6 / name
                                         :op1 "Beta"
                                         :op2 "Abhi"))
                 :ARG1 (c6-1 / hue))
      :op2 (c6-4 / ho-hum
                 :mod (c6-3 / jao)
                 :mode expressive))

# ::snt Sir one by one account of Nationalist are getting suspend.... please help
# ::tokens ["Sir", "one", "by", "one", "account", "of", "Nationalist", "are", "getting", "suspend", "....", "please", "help"]
# ::lemmas ["Sir", "one", "by", "one", "account", "of", "Nationalist", "be", "get", "suspend", "....", "please", "help"]
(c7-8 / multi-sentence
      :snt1 (c7-0 / say-01
                  :ARG0 (c7-7 / i)
                  :ARG1 (c7-6 / suspend-01
                              :ARG1 (c7-5 / person
                                          :name (c7-9 / name
                                                      :op1 "Sir"))
                              :manner (c7-2 / one-by-one)
                              :topic (c7-3 / political-party
                                           :name (c7-4 / name
                                                       :op1 "Nationalist")))
                  :ARG2 c7-5)
      :snt2 (c7-1 / help-01
                  :ARG0 (c7-10 / you)
                  :polite +
                  :mode imperative))

# ::snt Ban Twitter join another platform.. I
# ::tokens ["Ban", "Twitter", "join", "another", "platform", "..", "I"]
# ::lemmas ["Ban", "Twitter", "join", "another", "platform", "..", "i"]
(c8-2 / ban-01
      :ARG0 (c8-6 / you)
      :ARG1 (c8-4 / publication
                  :name (c8-5 / name
                              :op1 "Twitter"))
      :ARG2 (c8-3 / join-04
                  :ARG0 c8-6
                  :ARG1 (c8-1 / platform
                              :mod (c8-0 / another)))
      :mode imperative)

# ::snt , ,
# ::tokens [",", ","]
# ::lemmas [",", ","]
(c9-0 / amr-empty)

# ::snt Aaukat m rehe Bhai. Ek naari able bhari...
# ::tokens ["Aaukat", "m", "rehe", "Bhai", ".", "Ek", "naari", "able", "bhari", "..."]
# ::lemmas ["Aaukat", "m", "rehe", "Bhai", ".", "Ek", "naari", "able", "bhari", "..."]
(c10-8 / multi-sentence
       :snt1 (c10-4 / rehearse-01
                    :ARG0 (c10-7 / person
                                 :name (c10-9 / name
                                              :op1 "Aaukat"))
                    :ARG1 (c10-3 / person
                                 :name (c10-5 / name
                                              :op1 "Bhai")))
       :snt2 (c10-1 / possible-01
                    :ARG1 (c10-6 / bhari)
                    :mod (c10-0 / person
                                :name (c10-2 / name
                                             :op1 "Ek"
                                             :op2 "naari"))))

# ::snt Bade harami kism ke ho be
# ::tokens ["Bade", "harami", "kism", "ke", "ho", "be"]
# ::lemmas ["Bade", "harami", "kism", "ke", "ho", "be"]
(c11-0 / bade-harami
       :mod (c11-2 / kism
                   :mod (c11-1 / ho-be)))

# ::snt Dekh tere reply se teri condition pta chal rahi....sulgaai hui thi kangna ne teri ?
# ::tokens ["Dekh", "tere", "reply", "se", "teri", "condition", "pta", "chal", "rahi", "....", "sulgaai", "hui", "thi", "kangna", "ne", "teri", "?"]
# ::lemmas ["Dekh", "tere", "reply", "se", "teri", "condition", "pta", "chal", "rahi", "....", "sulgaai", "hui", "thi", "kangna", "ne", "teri", "?"]
(c12-13 / multi-sentence
        :snt1 (c12-9 / try-01
                     :polarity (c12-3 / amr-unknown)
                     :ARG0 (c12-15 / you)
                     :ARG1 (c12-10 / reply-01
                                   :ARG0 c12-15
                                   :ARG2 (c12-6 / condition
                                                :poss (c12-0 / country
                                                             :name (c12-14 / name
                                                                           :op1 "Taiwan"))
                                                :ARG1-of (c12-1 / say-01
                                                                :ARG0 (c12-12 / person
                                                                              :name (c12-11 / name
                                                                                            :op1 "Chal"
                                                                                            :op2 "Rahi"))))))
        :snt2 (c12-16 / and
                      :op1 (c12-7 / hui
                                  :polarity (c12-2 / amr-unknown))
                      :op2 (c12-4 / kangna
                                  :polarity (c12-8 / amr-unknown)
                                  :poss (c12-5 / you)
                                  :polarity -)))

# ::snt Sirf ye nai bohot bimar ho gye hai illegal kam karne ke bad police ke dar se.
# ::tokens ["Sirf", "ye", "nai", "bohot", "bimar", "ho", "gye", "hai", "illegal", "kam", "karne", "ke", "bad", "police", "ke", "dar", "se", "."]
# ::lemmas ["Sirf", "ye", "nai", "bohot", "bimar", "ho", "gye", "hai", "illegal", "kam", "karne", "ke", "bad", "police", "ke", "dar", "se", "."]
(c16-10 / multi-sentence
        :snt1 (c16-9 / person
                     :name (c16-11 / name
                                   :op1 "Sirf")
                     :polarity (c16-2 / amr-unknown))
        :snt2 (c16-13 / and
                      :op1 (c16-8 / bohot)
                      :ARG1 (c16-12 / you)
                      :mode imperative)
        :op2 (c16-7 / legal-02
                    :ARG1 (c16-4 / you)
                    :op3-of c16-10
                    :polarity -
                    :mode imperative)
        :ARG1 (c16-0 / you)
        :op4 (c16-3 / karne
                    :mode expressive)
        :op5 (c16-6 / police
                    :ARG1-of (c16-1 / bad-07)
                    :mode expressive)
        :op6 (c16-5 / ke-dar-se)
        :polarity -
        :mode imperative)

# ::snt What you mean our dont count me in cos Im not gonna pray for her .
# ::tokens ["What", "you", "mean", "our", "do", "nt", "count", "me", "in", "cos", "I", "m", "not", "gon", "na", "pray", "for", "her", "."]
# ::lemmas ["what", "you", "mean", "our", "do", "nt", "count", "i", "in", "cos", "i", "m", "not", "going", "to", "pray", "for", "she", "."]
(c17-6 / mean-01
       :ARG0 (c17-7 / you)
       :ARG2 (c17-2 / count-02
                    :ARG0 (c17-3 / we)
                    :ARG1 (c17-5 / i)
                    :ARG1-of (c17-0 / cause-01
                                    :ARG0 (c17-4 / pray-01
                                                 :ARG0 c17-5
                                                 :beneficiary (c17-1 / she)
                                                 :polarity -))
                    :polarity -))

# ::snt english to thik se bol le phle..pray bad me krliyo
# ::tokens ["english", "to", "thik", "se", "bol", "le", "phle", "..", "pray", "bad", "me", "krliyo"]
# ::lemmas ["english", "to", "thik", "se", "bol", "le", "phle", "..", "pray", "bad", "i", "krliyo"]
(c18-9 / multi-sentence
       :snt1 (c18-0 / say-01
                    :ARG0 (c18-1 / country
                                 :name (c18-10 / name
                                               :op1 "England"))
                    :ARG1 (c18-3 / try-01
                                 :ARG0 (c18-11 / you)
                                 :ARG1 (c18-6 / get-01
                                              :ARG1 (c18-7 / string-entity
                                                           :value "bol le phle")))
                    :ARG2 c18-11
                    :snt2-of c18-9)
       :ARG0 (c18-8 / i)
       :ARG1 (c18-2 / bad-07
                    :ARG1 (c18-12 / you))
       :ARG2 (c18-5 / person
                    :name (c18-4 / name
                                 :op1 "Krliyo")))

# ::snt !!
# ::tokens ["!", "!"]
# ::lemmas ["!", "!"]
(c19-0 / thing
       :mode expressive)

# ::snt ,
# ::tokens [","]
# ::lemmas [","]
(c20-0 / amr-empty)

# ::snt Get well soon corona
# ::tokens ["Get", "well", "soon", "corona"]
# ::lemmas ["get", "well", "soon", "corona"]
(c21-0 / say-01
       :ARG1 (c21-2 / get-03
                    :ARG1 (c21-4 / person
                                 :name (c21-5 / name
                                              :op1 "Corona"))
                    :ARG2 (c21-1 / well-05
                                 :ARG1 c21-4)
                    :time (c21-3 / soon)
                    :mode imperative)
       :ARG2 c21-4)

# ::snt Teri kab dadi hai dede ne
# ::tokens ["Teri", "kab", "dadi", "hai", "dede", "ne"]
# ::lemmas ["Teri", "kab", "dadi", "hai", "dede", "ne"]
(c23-0 / dede-01
       :ARG0 (c23-1 / person
                    :name (c23-2 / name
                                 :op1 "Teri"
                                 :op2 "Kab"
                                 :op3 "Dadi"))
       :ARG1 (c23-3 / ne))

# ::snt Dear
# ::tokens ["Dear"]
# ::lemmas ["dear"]
(c25-0 / dear)

# ::snt ,
# ::tokens [","]
# ::lemmas [","]
(c26-0 / amr-empty)

# ::snt Andh Bhakts are still supporting her. Gadhi
# ::tokens ["Andh", "Bhakts", "are", "still", "supporting", "her", ".", "Gadhi"]
# ::lemmas ["Andh", "Bhakts", "be", "still", "support", "she", ".", "Gadhi"]
(c27-6 / multi-sentence
       :snt1 (c27-0 / support-01
                    :ARG0 (c27-5 / person
                                 :name (c27-7 / name
                                              :op1 "Andh"
                                              :op2 "Bhakts"))
                    :ARG1 (c27-4 / she)
                    :mod (c27-1 / still))
       :snt2 (c27-2 / person
                    :name (c27-3 / name
                                 :op1 "Gadhi")))

# ::snt Get well soon Kangana
# ::tokens ["Get", "well", "soon", "Kangana"]
# ::lemmas ["get", "well", "soon", "Kangana"]
(c28-0 / say-01
       :ARG0 (c28-5 / i)
       :ARG1 (c28-3 / get-03
                    :ARG1 (c28-2 / person
                                 :name (c28-6 / name
                                              :op1 "Kangana"))
                    :ARG2 (c28-1 / well-05
                                 :ARG1 c28-2)
                    :time (c28-4 / soon)
                    :mode imperative)
       :ARG2 c28-2)

# ::snt ..
# ::tokens [".."]
# ::lemmas [".."]
(c29-0 / amr-empty)

# ::snt The virus should be scared not that communal thug
# ::tokens ["The", "virus", "should", "be", "scared", "not", "that", "communal", "thug"]
# ::lemmas ["the", "virus", "should", "be", "scared", "not", "that", "communal", "thug"]
(c30-2 / contrast-01
       :ARG1 (c30-7 / recommend-01
                    :ARG1 (c30-0 / scare-01
                                 :ARG0 (c30-5 / virus)))
       :ARG2 (c30-4 / recommend-01
                    :ARG1 (c30-8 / scare-01
                                 :ARG0 (c30-6 / thug
                                              :mod (c30-1 / communal)
                                              :mod (c30-3 / that))
                                 :ARG1 c30-5)
                    :polarity -))

# ::snt Har hindostani ki duayen Kangnaranaut ke sath hainJaiShreeRam
# ::tokens ["Har", "hindostani", "ki", "duayen", "Kangnaranaut", "ke", "sath", "hainJaiShreeRam"]
# ::lemmas ["Har", "hindostani", "ki", "duayen", "Kangnaranaut", "ke", "sath", "hainjaishreeram"]
(c31-1 / ke-sath
       :ARG1-of (c31-2 / cause-01
                       :ARG0 (c31-5 / person
                                    :name (c31-6 / name
                                                 :op1 "Hindostani")))
       :ARG2 (c31-3 / person
                    :name (c31-4 / name
                                 :op1 "Kangnaranaut"))
       :mod (c31-0 / duayen)
       :mode expressive)

# ::snt Get back your mental balance soon u can go to a gufa and get some peace of mind.
# ::tokens ["Get", "back", "your", "mental", "balance", "soon", "u", "can", "go", "to", "a", "gufa", "and", "get", "some", "peace", "of", "mind", "."]
# ::lemmas ["get", "back", "your", "mental", "balance", "soon", "u", "can", "go", "to", "a", "gufa", "and", "get", "some", "peace", "of", "mind", "."]
(c32-7 / get-back-10
       :ARG0 (c32-12 / you)
       :ARG1 (c32-11 / balance-01
                     :ARG1 c32-12
                     :ARG2 (c32-10 / mind))
       :time (c32-0 / soon)
       :ARG1-of (c32-4 / cause-01
                       :ARG0 (c32-9 / possible-01
                                    :ARG1 (c32-2 / and
                                                 :op1 (c32-3 / go-02
                                                             :ARG0 c32-12
                                                             :ARG4 (c32-1 / gufa))
                                                 :op2 (c32-6 / get-01
                                                             :ARG0 c32-12
                                                             :ARG1 (c32-5 / peace
                                                                          :mod c32-10
                                                                          :quant (c32-8 / some))))))
       :mode imperative)

# ::snt Grand finish with no more breathing
# ::tokens ["Grand", "finish", "with", "no", "more", "breathing"]
# ::lemmas ["grand", "finish", "with", "no", "more", "breathing"]
(c33-3 / finish-01
       :mod (c33-0 / grand)
       :manner (c33-2 / breathe-01
                      :mod (c33-1 / more)
                      :polarity -))

# ::snt How can a virus get affected by a virus
# ::tokens ["How", "can", "a", "virus", "get", "affected", "by", "a", "virus"]
# ::lemmas ["how", "can", "a", "virus", "get", "affect", "by", "a", "virus"]
(c34-1 / possible-01
       :ARG1 (c34-2 / affect-01
                    :ARG0 (c34-0 / virus
                                 :ARG1-of c34-2)
                    :manner (c34-3 / amr-unknown)))

# ::snt Have you received any message from Sardana from hell
# ::tokens ["Have", "you", "received", "any", "message", "from", "Sardana", "from", "hell"]
# ::lemmas ["have", "you", "receive", "any", "message", "from", "Sardana", "from", "hell"]
(c35-4 / receive-01
       :ARG0 (c35-7 / you)
       :ARG1 (c35-3 / thing
                    :ARG1-of (c35-5 / message-01
                                    :ARG0 (c35-1 / country
                                                 :name (c35-6 / name
                                                              :op1 "Sardana")
                                                 :ARG2-of c35-4)))
       :polarity (c35-0 / amr-unknown)
       :source (c35-2 / hell))

# ::snt Shaitaan k liye dua nhi krte
# ::tokens ["Shaitaan", "k", "liye", "dua", "nhi", "krte"]
# ::lemmas ["Shaitaan", "k", "liye", "dua", "nhi", "krte"]
(c36-1 / and
       :op1 (c36-0 / shaitaan
                   :mode expressive)
       :op2 (c36-3 / liye
                   :mode expressive)
       :op3 (c36-2 / nhi
                   :mode expressive))

# ::snt is Really Very Lucky and a Proud Nation to have such Male Population, who are doing a Great Humanitarian Service to the Nation by Demonising, Bashing, Abusing and Humiliating an Hapless Corona affected Lady
# ::tokens ["is", "Really", "Very", "Lucky", "and", "a", "Proud", "Nation", "to", "have", "such", "Male", "Population", ",", "who", "are", "doing", "a", "Great", "Humanitarian", "Service", "to", "the", "Nation", "by", "Demonising", ",", "Bashing", ",", "Abusing", "and", "Humiliating", "an", "Hapless", "Corona", "affected", "Lady"]
# ::lemmas ["be", "really", "very", "lucky", "and", "a", "Proud", "Nation", "to", "have", "such", "Male", "Population", ",", "who", "be", "do", "a", "Great", "Humanitarian", "Service", "to", "the", "Nation", "by", "Demonising", ",", "Bashing", ",", "Abusing", "and", "Humiliating", "an", "Hapless", "Corona", "affect", "Lady"]
(c37-13 / and
        :op1 (c37-16 / lucky
                     :degree (c37-5 / very)
                     :domain (c37-14 / have-03
                                     :ARG1 (c37-19 / population
                                                   :mod (c37-7 / male)
                                                   :mod (c37-10 / such)
                                                   :ARG0-of (c37-0 / do-02
                                                                   :ARG1 (c37-18 / serve-01
                                                                                 :ARG0 c37-19
                                                                                 :ARG1 (c37-3 / humanitarian)
                                                                                 :ARG2 (c37-8 / nation)
                                                                                 :manner (c37-9 / and
                                                                                                :op1 (c37-12 / Demonize-01
                                                                                                             :ARG0 c37-19)
                                                                                                :op2 (c37-17 / bash-01
                                                                                                             :ARG0 c37-19
                                                                                                             :ARG1 (c37-15 / person
                                                                                                                           :name (c37-2 / name
                                                                                                                                        :op1 "Corona")
                                                                                                                           :ARG1-of (c37-1 / affect-01)))
                                                                                                :op3 (c37-20 / abuse-01
                                                                                                             :ARG0 c37-19
                                                                                                             :ARG1 c37-15)
                                                                                                :op4 (c37-4 / humor-01
                                                                                                            :ARG0 c37-19
                                                                                                            :ARG1 c37-15))))))
                     :degree (c37-6 / really))
        :op2 (c37-11 / pride-01
                     :ARG0 c37-8
                     :ARG1 c37-14))

# ::snt She must be treated with gau mutra cow dunk and coronil
# ::tokens ["She", "must", "be", "treated", "with", "gau", "mutra", "cow", "dunk", "and", "coronil"]
# ::lemmas ["she", "must", "be", "treat", "with", "gau", "mutra", "cow", "dunk", "and", "coronil"]
(c38-5 / obligate-01
       :ARG2 (c38-6 / treat-03
                    :ARG1 (c38-0 / she)
                    :ARG2 (c38-3 / and
                                 :op1 (c38-1 / dunk-02
                                             :ARG1 (c38-4 / cow
                                                          :mod (c38-7 / mutra))
                                             :ARG2 (c38-2 / coronil
                                                          :op2-of c38-3)))))

# ::snt Kangna tweet kaha se padegi dogy
# ::tokens ["Kangna", "tweet", "kaha", "se", "padegi", "dogy"]
# ::lemmas ["Kangna", "tweet", "kaha", "se", "padegi", "dogy"]
(c39-0 / and
       :op1 (c39-3 / thing
                   :ARG1-of (c39-1 / tweet-02
                                   :ARG0 (c39-6 / you))
                   :mod (c39-5 / kangna))
       :op2 (c39-2 / haha
                   :op3 (c39-4 / pade-gi-dogy)
                   :mode expressive))

# ::snt , , .. ,
# ::tokens [",", ",", "..", ","]
# ::lemmas [",", ",", "..", ","]
(c41-0 / amr-empty)

# ::snt Aacha aacha ji Modi kaafi Hain sabko Marne kee liye
# ::tokens ["Aacha", "aacha", "ji", "Modi", "kaafi", "Hain", "sabko", "Marne", "kee", "liye"]
# ::lemmas ["aacha", "aacha", "ji", "Modi", "kaafi", "Hain", "sabko", "Marne", "kee", "liye"]
(c42-0 / say-01
       :ARG0 (c42-12 / i)
       :ARG1 (c42-3 / and
                    :op1 (c42-14 / aacha
                                 :mod (c42-10 / person
                                              :name (c42-13 / name
                                                            :op1 "Aacha")))
                    :op2 (c42-1 / aacha
                                :mod (c42-8 / person
                                            :name (c42-9 / name
                                                         :op1 "Modi")))
                    :op3 (c42-4 / kaafi
                                :mod (c42-6 / person
                                            :name (c42-7 / name
                                                         :op1 "Hain")))
                    :op4 (c42-11 / sabko
                                 :mod (c42-2 / kee
                                             :mode expressive)))
       :ARG2 (c42-5 / person))

# ::snt over deaths recorded in hours, read my news
# ::tokens ["over", "deaths", "recorded", "in", "hours", ",", "read", "my", "news"]
# ::lemmas ["over", "death", "record", "in", "hours", ",", "read", "my", "news"]
(c43-1 / and
       :op1 (c43-6 / record-01
                   :ARG1 (c43-0 / die-01
                                :mod (c43-4 / over))
                   :duration (c43-8 / multiple
                                    :op1 (c43-5 / temporal-quantity
                                                :unit (c43-2 / hour)
                                                :quant 1)))
       :op2 (c43-3 / read-01
                   :ARG0 (c43-10 / you)
                   :ARG1 (c43-9 / news
                                :poss (c43-7 / i))
                   :mode imperative))

# ::snt We pray that you get well soon and start your daily doses of liquor and weed sasti Rakhi Sawant ho tum
# ::tokens ["We", "pray", "that", "you", "get", "well", "soon", "and", "start", "your", "daily", "doses", "of", "liquor", "and", "weed", "sasti", "Rakhi", "Sawant", "ho", "tum"]
# ::lemmas ["we", "pray", "that", "you", "get", "well", "soon", "and", "start", "your", "daily", "dose", "of", "liquor", "and", "weed", "sasti", "Rakhi", "Sawant", "ho", "tum"]
(c45-13 / pray-01
        :ARG0 (c45-3 / we)
        :ARG1 (c45-2 / and
                     :op1 (c45-11 / get-03
                                  :ARG1 (c45-14 / you)
                                  :ARG2 (c45-15 / well-05
                                                :ARG1 c45-14)
                                  :time (c45-0 / soon))
                     :op2 (c45-12 / start-01
                                  :ARG0 c45-14
                                  :ARG1 (c45-1 / dose-01
                                               :ARG1 c45-14
                                               :ARG2 (c45-6 / and
                                                            :op1 (c45-9 / liquor)
                                                            :op2 (c45-10 / weed))
                                               :frequency (c45-8 / rate-entity-91
                                                                 :ARG3 (c45-7 / temporal-quantity
                                                                              :unit (c45-4 / day)
                                                                              :quant 1))))
                     :mod (c45-5 / ho-tok
                                 :mode expressive)))

# ::snt Ex bjp minister and his brother capture refugee land and Kathua revenue department and jk GOVERNMENT doesn't take any action
# ::tokens ["Ex", "bjp", "minister", "and", "his", "brother", "capture", "refugee", "land", "and", "Kathua", "revenue", "department", "and", "jk", "GOVERNMENT", "does", "n't", "take", "any", "action"]
# ::lemmas ["Ex", "bjp", "minister", "and", "his", "brother", "capture", "refugee", "land", "and", "Kathua", "revenue", "department", "and", "jk", "GOVERNMENT", "do", "not", "take", "any", "action"]
(c46-14 / act-02
        :ARG0 (c46-10 / and
                      :op1 (c46-19 / person
                                   :ARG0-of (c46-15 / have-org-role-91
                                                    :ARG1 (c46-4 / country
                                                                 :name (c46-9 / name
                                                                              :op1 "Japan"))
                                                    :ARG2 (c46-8 / minister)
                                                    :time (c46-11 / ex)))
                      :op2 (c46-16 / person
                                   :ARG0-of (c46-3 / have-rel-role-91
                                                   :ARG1 c46-19
                                                   :ARG2 (c46-18 / brother))))
        :ARG1 (c46-1 / and
                     :op1 (c46-0 / capture-01
                                 :ARG0 (c46-20 / and
                                               :op1 c46-19
                                               :op2 c46-16)
                                 :ARG1 (c46-17 / land
                                               :mod (c46-6 / refugee)))
                     :op2 (c46-7 / government-organization
                                 :name (c46-2 / name
                                              :op1 "Nathua"
                                              :op2 "Revenue"
                                              :op3 "Department")
                                 :op3-of c46-1)
                     :ARG0-of (c46-13 / govern-01
                                      :ARG1 (c46-5 / country
                                                   :name (c46-12 / name
                                                                 :op1 "Japan"))))
        :polarity -)

# ::snt is a Deadly Virus but Murderer of Hundreds of Hindus Mamata is an Innocent, Hapless Poor Lady Going India
# ::tokens ["is", "a", "Deadly", "Virus", "but", "Murderer", "of", "Hundreds", "of", "Hindus", "Mamata", "is", "an", "Innocent", ",", "Hapless", "Poor", "Lady", "Going", "India"]
# ::lemmas ["be", "a", "Deadly", "Virus", "but", "Murderer", "of", "Hundreds", "of", "Hindus", "Mamata", "be", "an", "innocent", ",", "Hapless", "Poor", "Lady", "go", "India"]
(c47-2 / contrast-01
       :ARG1 (c47-7 / virus
                    :ARG0-of (c47-1 / kill-01)
                    :domain (c47-14 / person
                                    :name (c47-16 / name
                                                  :op1 "Mamata")
                                    :ARG0-of (c47-15 / murder-01
                                                     :ARG1 (c47-9 / person
                                                                  :mod (c47-10 / religious-group
                                                                               :name (c47-11 / name
                                                                                             :op1 "Hindu"))
                                                                  :quant (c47-3 / multiple
                                                                                :op1 100)))))
       :ARG2 (c47-12 / lady
                     :ARG1-of (c47-4 / innocent-01)
                     :mod (c47-5 / poor)
                     :ARG0-of (c47-13 / go-02
                                      :ARG1 (c47-0 / country
                                                   :name (c47-8 / name
                                                                :op1 "India")))
                     :ARG1-of (c47-6 / hapless-00)))
