# ::snt Oh my Godse
# ::tokens ["Oh", "my", "Godse"]
# ::lemmas ["oh", "my", "Godse"]
(c1-1 / person
      :name (c1-2 / name
                  :op1 "Godse")
      :mod (c1-0 / oh
                 :mode expressive)
      :mode expressive)

# ::snt ?
# ::tokens ["?"]
# ::lemmas ["?"]
(c2-0 / request-confirmation-91)

# ::snt Jyga jyga
# ::tokens ["Jyga", "jyga"]
# ::lemmas ["Jyga", "jyga"]
(c3-0 / person
      :name (c3-1 / name
                  :op1 "Jyga"
                  :op2 "Jyga"))

# ::snt Ese reaction daalte waqt news link b share krdia kro.
# ::tokens ["Ese", "reaction", "daalte", "waqt", "news", "link", "b", "share", "krdia", "kro", "."]
# ::lemmas ["Ese", "reaction", "daalte", "waqt", "news", "link", "b", "share", "krdia", "kro", "."]
(c4-11 / multi-sentence
       :snt1 (c4-7 / react-01
                   :ARG0 (c4-10 / person
                                :name (c4-12 / name
                                             :op1 "Daalte"
                                             :op2 "Waqt"))
                   :ARG1 (c4-13 / event))
       :snt2 (c4-1 / and
                   :op1 (c4-8 / link
                              :mod (c4-9 / news)
                              :mod (c4-6 / publication
                                         :name (c4-5 / name
                                                     :op1 "Daalte"
                                                     :op2 "Waqt")))
                   :op2 (c4-0 / share-01
                              :ARG0 (c4-4 / person)
                              :ARG1 (c4-3 / publication
                                          :name (c4-2 / name
                                                      :op1 "Krdia"
                                                      :op2 "Kro")))))

# ::snt Aameen
# ::tokens ["Aameen"]
# ::lemmas ["Aameen"]
(c5-0 / person
      :name (c5-1 / name
                  :op1 "Aameen"))

# ::snt and should free him ASAP...
# ::tokens ["and", "should", "free", "him", "ASAP", "..."]
# ::lemmas ["and", "should", "free", "he", "asap", "..."]
(c7-0 / and
      :op2 (c7-3 / recommend-01
                 :ARG1 (c7-1 / free-01
                             :ARG1 (c7-2 / he)
                             :time (c7-4 / immediate))))

# ::snt I can read both ways.
# ::tokens ["I", "can", "read", "both", "ways", "."]
# ::lemmas ["i", "can", "read", "both", "way", "."]
(c8-4 / possible-01
      :ARG1 (c8-2 / read-01
                  :ARG0 (c8-0 / i)
                  :manner (c8-1 / way
                                :mod (c8-3 / both))))

# ::snt Aisa jeena bhi koi jeena hai...
# ::tokens ["Aisa", "jeena", "bhi", "koi", "jeena", "hai", "..."]
# ::lemmas ["Aisa", "jeena", "bhi", "koi", "jeena", "hai", "..."]
(c10-0 / say-01
       :ARG0 (c10-6 / i)
       :ARG1 (c10-1 / and
                    :op1 (c10-8 / aisa
                                :mode expressive)
                    :op2 (c10-4 / bhi
                                :mode expressive)
                    :op3 (c10-7 / koi
                                :mod (c10-5 / jeena)
                                :mode expressive))
       :ARG2 (c10-2 / person
                    :name (c10-3 / name
                                 :op1 "Aisa")))

# ::snt Fingers crossed. Hoping what's best for the country
# ::tokens ["Fingers", "crossed", ".", "Hoping", "what", "'s", "best", "for", "the", "country"]
# ::lemmas ["Fingers", "cross", ".", "hope", "what", "be", "good", "for", "the", "country"]
(c12-8 / multi-sentence
       :snt1 (c12-2 / cross-02
                    :ARG1 (c12-1 / finger))
       :snt2 (c12-4 / hope-01
                    :ARG1 (c12-5 / thing
                                 :ARG1-of (c12-7 / have-degree-91
                                                 :ARG2 (c12-6 / good-04
                                                              :ARG2 (c12-0 / country))
                                                 :ARG3 (c12-3 / most)))))

# ::snt Prayers are needed. Sab apne mann mein hi prarthana karen.
# ::tokens ["Prayers", "are", "needed", ".", "Sab", "apne", "mann", "mein", "hi", "prarthana", "karen", "."]
# ::lemmas ["prayer", "be", "need", ".", "Sab", "apne", "mann", "mein", "hi", "prarthana", "karen", "."]
(c14-10 / multi-sentence
        :snt1 (c14-11 / need-01
                      :ARG1 (c14-9 / pray-01))
        :snt2 (c14-2 / contrast-01
                     :ARG1 (c14-1 / man-01
                                  :ARG1 (c14-7 / person
                                               :name (c14-8 / name
                                                            :op1 "Sab")))
                     :ARG2 (c14-3 / i))
        :snt3 (c14-0 / say-01
                     :ARG0 c14-3)
        :ARG1 (c14-5 / hi)
        :ARG2 (c14-4 / person
                     :name (c14-6 / name
                                  :op1 "prarthana"
                                  :op2 "karen")))

# ::snt ??
# ::tokens ["?", "?"]
# ::lemmas ["?", "?"]
(c15-0 / amr-unknown)

# ::snt min ke liye...
# ::tokens ["min", "ke", "liye", "..."]
# ::lemmas ["min", "ke", "liye", "..."]
(c16-0 / string-entity
       :value "min ke liye")

# ::snt RIP
# ::tokens ["RIP"]
# ::lemmas ["RIP"]
(c17-2 / rest-01
       :ARG1 (c17-1 / you)
       :manner (c17-0 / peace))

# ::snt Lets all pray for our country's betterment.
# ::tokens ["Lets", "all", "pray", "for", "our", "country", "'s", "betterment", "."]
# ::lemmas ["let", "all", "pray", "for", "our", "country", "'s", "betterment", "."]
(c18-4 / pray-01
       :ARG0 (c18-2 / we
                    :mod (c18-0 / all))
       :ARG1 (c18-3 / better-01
                    :ARG1 (c18-1 / country
                                 :poss c18-2))
       :mode imperative)

# ::snt Please take DNA
# ::tokens ["Please", "take", "DNA"]
# ::lemmas ["please", "take", "DNA"]
(c19-1 / take-01
       :ARG0 (c19-2 / you)
       :ARG1 (c19-0 / nucleic-acid
                    :name (c19-3 / name
                                 :op1 "DNA"))
       :mode imperative
       :polite +)

# ::snt RIP
# ::tokens ["RIP"]
# ::lemmas ["RIP"]
(c20-2 / rest-01
       :ARG1 (c20-1 / you)
       :manner (c20-0 / peace))

# ::snt Yeh Mukti day uskay shareer ko bhagwaan
# ::tokens ["Yeh", "Mukti", "day", "uskay", "shareer", "ko", "bhagwaan"]
# ::lemmas ["Yeh", "Mukti", "day", "uskay", "shareer", "ko", "bhagwaan"]
(c21-4 / multi-sentence
       :snt1 (c21-6 / event
                    :name (c21-5 / name
                                 :op1 "Yeh"
                                 :op2 "Mukti"
                                 :op3 "Day"))
       :snt2 (c21-1 / laugh-01
                    :ARG0 (c21-0 / we)
                    :manner (c21-2 / loud)
                    :mode expressive)
       :snt3 (c21-3 / bhagwaan))

# ::snt "thou who wish ill to others , have their souls at stake already "
# ::tokens ["\"", "thou", "who", "wish", "ill", "to", "others", ",", "have", "their", "souls", "at", "stake", "already", "\""]
# ::lemmas ["\"", "thou", "who", "wish", "ill", "to", "other", ",", "have", "their", "soul", "at", "stake", "already", "\""]
(c22-0 / stake-01
       :ARG0 (c22-7 / person
                    :ARG0-of (c22-3 / wish-01
                                    :ARG1 (c22-2 / ill-01
                                                 :ARG1 c22-7)
                                    :beneficiary (c22-5 / person
                                                        :mod (c22-4 / other)))
                    :part (c22-6 / soul
                                 :ARG1-of c22-0))
       :time (c22-1 / already))

# ::snt Didn't he get coronil treatment?
# ::tokens ["Did", "n't", "he", "get", "coronil", "treatment", "?"]
# ::lemmas ["do", "not", "he", "get", "coronil", "treatment", "?"]
(c23-2 / treat-03
       :ARG0 (c23-3 / coronal)
       :ARG1 (c23-1 / he)
       :polarity (c23-0 / amr-unknown)
       :polarity -)

# ::snt Someone transfer him to Gaushala and hand him a CORONIL bottle
# ::tokens ["Someone", "transfer", "him", "to", "Gaushala", "and", "hand", "him", "a", "CORONIL", "bottle"]
# ::lemmas ["someone", "transfer", "he", "to", "Gaushala", "and", "hand", "he", "a", "coronil", "bottle"]
(c25-1 / and
       :op1 (c25-4 / transfer-01
                   :ARG0 (c25-0 / someone)
                   :ARG1 (c25-2 / he)
                   :ARG2 (c25-7 / province
                                :name (c25-8 / name
                                             :op1 "Gaushala")))
       :op2 (c25-6 / hand-01
                   :ARG0 c25-0
                   :ARG1 (c25-5 / bottle
                                :mod (c25-3 / product
                                            :name c25-8
                                            :op1 "Coronil")))
       :ARG2 c25-2)

# ::snt Karma
# ::tokens ["Karma"]
# ::lemmas ["Karma"]
(c26-0 / person
       :name (c26-1 / name
                    :op1 "Karma"))

# ::snt Abhi Alvida na Kehna
# ::tokens ["Abhi", "Alvida", "na", "Kehna"]
# ::lemmas ["Abhi", "Alvida", "na", "Kehna"]
(c27-0 / person
       :name (c27-1 / name
                    :op1 "Abhi"
                    :op2 "Al Alvida"
                    :op3 "na"
                    :op4 "Kehna"))

# ::snt Itni nafrat..kaise log ho..
# ::tokens ["Itni", "nafrat", "..", "kaise", "log", "ho", ".."]
# ::lemmas ["Itni", "nafrat", "..", "kaise", "log", "ho", ".."]
(c28-1 / multi-sentence
       :snt1 (c28-0 / person
                    :name (c28-2 / name
                                 :op1 "Itni"
                                 :op2 "Nafrat"))
       :snt2 (c28-3 / log-ho
                    :mode expressive))

# ::snt Amen
# ::tokens ["Amen"]
# ::lemmas ["amen"]
(c29-0 / man)

# ::snt May Almighty Accept Your Prayers
# ::tokens ["May", "Almighty", "Accept", "Your", "Prayers"]
# ::lemmas ["May", "Almighty", "accept", "your", "prayer"]
(c30-4 / possible-01
       :ARG1 (c30-0 / accept-01
                    :ARG0 (c30-2 / person
                                 :name (c30-5 / name
                                              :op1 "God"))
                    :ARG1 (c30-3 / thing
                                 :ARG1-of (c30-1 / pray-01
                                                 :ARG0 (c30-6 / you)))))

# ::snt What?
# ::tokens ["What", "?"]
# ::lemmas ["what", "?"]
(c31-0 / amr-unknown)

# ::snt Bhagwan to desh k liye Shi ho wo kre.
# ::tokens ["Bhagwan", "to", "desh", "k", "liye", "Shi", "ho", "wo", "kre", "."]
# ::lemmas ["Bhagwan", "to", "desh", "k", "liye", "Shi", "ho", "wo", "kre", "."]
(c32-2 / ask-01
       :ARG0 (c32-1 / person
                    :name (c32-3 / name
                                 :op1 "Bhagwan"))
       :ARG1 (c32-0 / desh-k
                    :mode expressive)
       :ARG2 c32-1)

# ::snt Same wid u ..
# ::tokens ["Same", "wid", "u", ".."]
# ::lemmas ["same", "wid", "u", ".."]
(c33-0 / same-01
       :ARG1 (c33-3 / event)
       :ARG2 (c33-2 / you)
       :ARG1-of (c33-1 / know-01
                       :ARG0 c33-2))

# ::snt Lungs
# ::tokens ["Lungs"]
# ::lemmas ["lung"]
(c34-0 / string-entity
       :value "Lungs")

# ::snt ?
# ::tokens ["?"]
# ::lemmas ["?"]
(c35-0 / request-confirmation-91)

# ::snt Sudhir Chaudhary is corona positive
# ::tokens ["Sudhir", "Chaudhary", "is", "corona", "positive"]
# ::lemmas ["Sudhir", "Chaudhary", "be", "corona", "positive"]
(c37-0 / positive
       :mod (c37-3 / corona)
       :domain (c37-1 / person
                      :name (c37-2 / name
                                   :op1 "Sudhir"
                                   :op2 "Chaudhary")))

# ::snt Dua de raha hai ya laga raha hai
# ::tokens ["Dua", "de", "raha", "hai", "ya", "laga", "raha", "hai"]
# ::lemmas ["Dua", "de", "raha", "hai", "ya", "laga", "raha", "hai"]
(c40-1 / laugh-01
       :ARG0 (c40-0 / you)
       :mod (c40-2 / emoticon
                   :value "Dua de raha hai")
       :mode expressive)

# ::snt I hope he gets a bed in baba ramdev's ashram , bacha lo isko baba
# ::tokens ["I", "hope", "he", "gets", "a", "bed", "in", "baba", "ramdev", "'s", "ashram", ",", "bacha", "lo", "isko", "baba"]
# ::lemmas ["i", "hope", "he", "get", "a", "bed", "in", "baba", "ramdev", "'s", "ashram", ",", "bacha", "lo", "isko", "baba"]
(c41-9 / multi-sentence
       :snt1 (c41-3 / hope-01
                    :ARG0 (c41-8 / i)
                    :ARG1 (c41-6 / get-01
                                 :ARG0 (c41-7 / he)
                                 :ARG1 (c41-10 / bed)
                                 :location (c41-1 / ashram
                                                  :poss (c41-4 / person
                                                               :name (c41-5 / name
                                                                            :op1 "Baba"
                                                                            :op2 "Ramdev")))))
       :snt2 (c41-0 / bacha
                    :mod (c41-11 / amko)
                    :mod (c41-2 / baba)
                    :mode expressive))

# ::snt Stay safe corona
# ::tokens ["Stay", "safe", "corona"]
# ::lemmas ["stay", "safe", "corona"]
(c42-0 / stay-01
       :ARG1 (c42-4 / you)
       :ARG3 (c42-2 / safe-01
                    :ARG1 c42-4)
       :location (c42-1 / city
                        :name (c42-3 / name
                                     :op1 "Corona")))

# ::snt Nimo bhai cbi ki mang kare kya sudhir sir ke liye ??
# ::tokens ["Nimo", "bhai", "cbi", "ki", "mang", "kare", "kya", "sudhir", "sir", "ke", "liye", "?", "?"]
# ::lemmas ["Nimo", "bhai", "cbi", "ki", "mang", "kare", "kya", "sudhir", "sir", "ke", "liye", "?", "?"]
(c43-0 / and
       :op1 (c43-9 / nimo
                   :mode expressive)
       :op2 (c43-10 / ask-01
                    :ARG0 (c43-7 / i)
                    :ARG1 (c43-3 / thing
                                 :ARG1-of (c43-8 / mang-01))
                    :ARG2 (c43-5 / person
                                 :name (c43-4 / name
                                              :op1 "Cbi"))
                    :op3-of c43-0
                    :mode expressive)
       :ARG0 c43-7
       :ARG1 (c43-2 / person
                    :ARG0-of (c43-1 / have-rel-role-91
                                    :ARG2 (c43-6 / brother)))
       :ARG2 c43-5
       :op4 c43-10
       :ARG0 c43-7
       :ARG2 c43-5
       :mode expressive
       :mode expressive)

# ::snt Marr gaya kya ?
# ::tokens ["Marr", "gaya", "kya", "?"]
# ::lemmas ["Marr", "gaya", "kya", "?"]
(c44-0 / amr-unintelligible
       :value "Marr gaya kya")

# ::snt Mere ek dost ko aisa hi hua tha wo marr gaya. Uska naam tha Rohit Sardana. Isliye bataya
# ::tokens ["Mere", "ek", "dost", "ko", "aisa", "hi", "hua", "tha", "wo", "marr", "gaya", ".", "Uska", "naam", "tha", "Rohit", "Sardana", ".", "Isliye", "bataya"]
# ::lemmas ["mere", "ek", "dost", "ko", "aisa", "hi", "hua", "tha", "will", "marr", "gaya", ".", "Uska", "naam", "tha", "Rohit", "Sardana", ".", "Isliye", "bataya"]
(c45-14 / multi-sentence
        :snt1 (c45-13 / possible-01
                      :ARG1 (c45-8 / ost-00
                                   :ARG0 (c45-16 / you)
                                   :ARG1 (c45-17 / you))
                      :polarity -)
        :snt2 (c45-5 / hi
                     :mod (c45-12 / hua)
                     :ARG1-of (c45-1 / cause-01
                                     :ARG0 (c45-9 / person
                                                  :ARG0-of (c45-2 / mar-01
                                                                  :ARG1 (c45-4 / person
                                                                               :name (c45-15 / name
                                                                                             :op1 "Gaya")))))
                     :mode expressive)
        :snt3 (c45-11 / nam
                      :mod (c45-7 / Uska)
                      :mode expressive)
        :snt4 (c45-10 / nam
                      :mod (c45-3 / person
                                  :name (c45-0 / name
                                               :op1 "Rohit"
                                               :op2 "Sardana")))
        :snt5 (c45-6 / isliye))

# ::snt Won't happen. You will go first, for sure .
# ::tokens ["Wo", "n't", "happen", ".", "You", "will", "go", "first", ",", "for", "sure", "."]
# ::lemmas ["will", "not", "happen", ".", "you", "will", "go", "first", ",", "for", "sure", "."]
(c46-3 / multi-sentence
       :snt1 (c46-5 / event
                    :polarity -)
       :snt2 (c46-2 / go-02
                    :ARG0 (c46-4 / you)
                    :ord (c46-1 / ordinal-entity
                                :value 1)
                    :ARG1-of (c46-0 / sure-02)))

# ::snt After analysis it was confirmed that corona19 ko hua hai.. Aur aj gyarawa din hai... Bs tin din ki baat hai aur..? To be continued.... Till next
# ::tokens ["After", "analysis", "it", "was", "confirmed", "that", "corona19", "ko", "hua", "hai", "..", "Aur", "aj", "gyarawa", "din", "hai", "...", "Bs", "tin", "din", "ki", "baat", "hai", "aur", "..", "?", "To", "be", "continued", "....", "Till", "next"]
# ::lemmas ["after", "analysis", "it", "be", "confirm", "that", "corona19", "ko", "hua", "hai", "..", "Aur", "aj", "gyarawa", "din", "hai", "...", "b", "tin", "din", "ki", "baat", "hai", "aur", "..", "?", "to", "be", "continue", "....", "till", "next"]
(c47-10 / multi-sentence
        :snt1 (c47-4 / confirm-01
                     :ARG1 (c47-3 / and
                                  :op1 (c47-0 / string-entity
                                              :value "cona19")
                                  :op2 (c47-9 / string-entity
                                              :value "hua")
                                  :op3 (c47-5 / string-entity
                                              :value "aj gyarawa")
                                  :op4 (c47-8 / string-entity
                                              :value "aj")
                                  :op5 (c47-12 / string-entity
                                               :value "bs"
                                               :op6 "tin"
                                               :op7 " ki baat"
                                               :op8 "aa"))
                     :time (c47-7 / after
                                  :op1 (c47-1 / analyze-01)))
        :snt2 (c47-2 / continue-01
                     :time (c47-6 / until
                                  :op1 (c47-11 / next))))

# ::snt Ye Tihari bhi na.. Hamare Sanathan ayurveda chod ke sikular western walon ka English medicine le raha hai.. Gau mutr peena chahiye, Coronil lena chahiye na.. Lagta hai ye bhi liberandu banraha hai.. RIP
# ::tokens ["Ye", "Tihari", "bhi", "na", "..", "Hamare", "Sanathan", "ayurveda", "chod", "ke", "sikular", "western", "walon", "ka", "English", "medicine", "le", "raha", "hai", "..", "Gau", "mutr", "peena", "chahiye", ",", "Coronil", "lena", "chahiye", "na", "..", "Lagta", "hai", "ye", "bhi", "liberandu", "banraha", "hai", "..", "RIP"]
# ::lemmas ["Ye", "Tihari", "bhi", "na", "..", "Hamare", "Sanathan", "ayurveda", "chod", "ke", "sikular", "western", "walon", "ka", "English", "medicine", "le", "raha", "hai", "..", "Gau", "mutr", "peena", "chahiye", ",", "Coronil", "lena", "chahiye", "na", "..", "Lagta", "hai", "ye", "bhi", "liberandu", "banraha", "hai", "..", "RIP"]
(c48-13 / multi-sentence
        :snt1 (c48-31 / bhi
                      :domain (c48-32 / person
                                      :name (c48-14 / name
                                                    :op1 "Tihari"))
                      :mode expressive)
        :snt2 (c48-29 / person
                      :name (c48-3 / name
                                   :op1 "Hamare"
                                   :op2 "Sanathan")
                      :mod (c48-25 / ayurveda)
                      :mod (c48-8 / chod
                                  :mod (c48-17 / sikular))
                      :mod (c48-9 / walon
                                  :location (c48-16 / world-region
                                                    :name (c48-21 / name
                                                                  :op1 "West")))
                      :mod (c48-27 / medicine
                                   :mod (c48-0 / country
                                               :name (c48-7 / name
                                                            :op1 "England"))))
        :snt3 (c48-30 / laugh-01
                      :ARG0 (c48-5 / i)
                      :manner (c48-4 / loud)
                      :mode expressive)
        :snt4 (c48-15 / and
                      :op1 (c48-12 / gau
                                   :mod (c48-10 / chahiye)
                                   :op2-of c48-15)
                      :mod (c48-22 / chahiye))
        :op3 (c48-18 / person
                     :name (c48-11 / name
                                   :op1 "Coronil"
                                   :op2 "Lena"
                                   :op3 "Chahiye"))
        :op4 (c48-1 / laugh-01
                    :ARG0 (c48-19 / i)
                    :manner (c48-2 / loud)
                    :mode expressive)
        :snt5 (c48-28 / have-condition-91
                      :ARG2 (c48-26 / fuck-01
                                    :mode expressive))
        :snt6 (c48-6 / wish-01
                     :ARG1 c48-15
                     :op1 (c48-20 / free-04
                                  :ARG1 (c48-23 / you))
                     :op2 (c48-24 / banraha
                                  :mode expressive)
                     :mode expressive))

# ::snt Ayurvedic users admitted in Allopathic institutions
# ::tokens ["Ayurvedic", "users", "admitted", "in", "Allopathic", "institutions"]
# ::lemmas ["Ayurvedic", "user", "admit", "in", "Allopathic", "institution"]
(c49-1 / admit-01
       :ARG1 (c49-4 / person
                    :ARG0-of (c49-3 / use-01
                                    :ARG1 (c49-5 / ayurvedic)))
       :ARG2 (c49-2 / institution
                    :mod (c49-0 / allopathy)))

# ::snt Why?
# ::tokens ["Why", "?"]
# ::lemmas ["why", "?"]
(c50-1 / cause-01
       :ARG0 (c50-0 / amr-unknown))
