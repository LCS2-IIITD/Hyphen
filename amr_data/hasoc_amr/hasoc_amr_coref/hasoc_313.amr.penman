# ::snt Very true sir
# ::tokens ["Very", "true", "sir"]
# ::lemmas ["very", "true", "sir"]
(c1-0 / say-01
      :ARG1 (c1-2 / true-01
                  :degree (c1-1 / very))
      :ARG2 (c1-3 / sir))

# ::snt To all those blind bhakts who still think development means Hindu, Muslims, and all those nonsense jumla. Btw non-sense means having no judgemental seance we r becoming same like Germans in till . R U getting my point ?
# ::tokens ["To", "all", "those", "blind", "bhakts", "who", "still", "think", "development", "means", "Hindu", ",", "Muslims", ",", "and", "all", "those", "nonsense", "jumla", ".", "Btw", "non", "-", "sense", "means", "having", "no", "judgemental", "seance", "we", "r", "becoming", "same", "like", "Germans", "in", "till", ".", "R", "U", "getting", "my", "point", "?"]
# ::lemmas ["to", "all", "those", "blind", "bhakts", "who", "still", "think", "development", "mean", "Hindu", ",", "Muslims", ",", "and", "all", "those", "nonsense", "jumla", ".", "btw", "non", "-", "sense", "mean", "have", "no", "judgemental", "seance", "we", "r", "become", "same", "like", "Germans", "in", "till", ".", "r", "U", "get", "my", "point", "?"]
(c3-15 / multi-sentence
       :snt1 (c3-18 / say-01
                    :ARG1 (c3-26 / mean-01
                                 :ARG1 (c3-0 / develop-02)
                                 :ARG2 (c3-25 / and
                                              :op1 (c3-13 / religious-group
                                                          :name (c3-16 / name
                                                                       :op1 "Hindu"))
                                              :op2 (c3-11 / religious-group
                                                          :name (c3-3 / name
                                                                      :op1 "Muslim"))
                                              :op3 (c3-29 / jumla
                                                          :mod (c3-22 / nonsense)
                                                          :mod (c3-17 / all)))
                                 :mod (c3-31 / still))
                    :ARG2 (c3-32 / person
                                 :mod (c3-12 / that)
                                 :ARG1-of (c3-30 / blind-02)
                                 :mod (c3-1 / all)))
       :snt2 (c3-21 / mean-01
                    :ARG1 (c3-20 / sense-02
                                 :ARG1-of (c3-8 / cause-01
                                                :ARG0 (c3-27 / have-03
                                                             :ARG1 (c3-5 / seance
                                                                         :mod (c3-33 / judge-01))
                                                             :polarity -))
                                 :polarity -)
                    :ARG2 (c3-24 / become-01
                                 :ARG1 (c3-9 / we)
                                 :ARG2 (c3-6 / same-01
                                             :ARG1 c3-9
                                             :ARG2 (c3-28 / person
                                                          :mod (c3-2 / country
                                                                     :name (c3-7 / name
                                                                                 :op1 "Germany"))))
                                 :time (c3-10 / till))
                    :polarity (c3-34 / amr-unknown))
       :snt3 (c3-14 / get-30
                    :ARG0 (c3-23 / you)
                    :ARG1 (c3-19 / point-04
                                 :ARG0 (c3-4 / i))))

# ::snt Improve your English....
# ::tokens ["Improve", "your", "English", "...."]
# ::lemmas ["improve", "your", "English", "...."]
(c4-0 / improve-01
      :ARG0 (c4-2 / you)
      :ARG1 (c4-3 / language
                  :name (c4-1 / name
                              :op1 "English")
                  :poss c4-2))

# ::snt Suvar ke muh valle nesuvara ko jawab diyya
# ::tokens ["Suvar", "ke", "muh", "valle", "nesuvara", "ko", "jawab", "diyya"]
# ::lemmas ["Suvar", "ke", "muh", "valle", "nesuvara", "ko", "jawab", "diyya"]
(c5-5 / multi-sentence
      :snt1 (c5-6 / kemuh
                  :mode expressive)
      :snt2 (c5-1 / valle
                  :mode expressive)
      :snt3 (c5-0 / say-01
                  :ARG0 (c5-4 / i)
                  :ARG1 (c5-2 / nesuvara)
                  :ARG2 (c5-7 / you))
      :snt4 (c5-3 / jawab
                  :mode expressive))

# ::snt Bhai Tu bass Kar ...Tu to sabse BADA chuuu....hain
# ::tokens ["Bhai", "Tu", "bass", "Kar", "...", "Tu", "to", "sabse", "BADA", "chuuu", "....", "hain"]
# ::lemmas ["Bhai", "Tu", "bass", "Kar", "...", "Tu", "to", "sabse", "BADA", "chuuu", "....", "hain"]
(c6-6 / multi-sentence
      :snt1 (c6-4 / bhai
                  :mod (c6-5 / person
                             :name (c6-7 / name
                                         :op1 "Bhai"
                                         :op2 "Tu"
                                         :op3 "Banka"
                                         :op4 "Kar"))
                  :mode expressive)
      :snt2 (c6-1 / ask-02
                  :ARG0 (c6-8 / you)
                  :ARG1 (c6-0 / sabse-bADA
                              :mod (c6-2 / chuuu
                                         :mode expressive))
                  :ARG2 c6-8
                  :mode expressive)
      :snt3 (c6-3 / hain
                  :mode expressive))

# ::snt Only hell is happening only for hell people like you..
# ::tokens ["Only", "hell", "is", "happening", "only", "for", "hell", "people", "like", "you", ".."]
# ::lemmas ["only", "hell", "be", "happen", "only", "for", "hell", "people", "like", "you", ".."]
(c7-6 / event
      :mod (c7-0 / hell)
      :mod (c7-1 / only)
      :beneficiary (c7-4 / person
                         :ARG1-of (c7-2 / resemble-01
                                        :ARG2 (c7-5 / you)))
      :mod (c7-3 / hell)
      :mod c7-1)
