# ::snt ....????
# ::tokens ["....", "?", "?", "?", "?"]
# ::lemmas ["....", "?", "?", "?", "?"]
(c2-0 / amr-empty)

# ::snt Very nice
# ::tokens ["Very", "nice"]
# ::lemmas ["very", "nice"]
(c3-1 / nice-01
      :degree (c3-0 / very))

# ::snt ...
# ::tokens ["..."]
# ::lemmas ["..."]
(c5-0 / amr-empty)

# ::snt , ,, ,, ,, ..
# ::tokens [",", ",", ",", ",", ",", ",", ",", ".."]
# ::lemmas [",", ",", ",", ",", ",", ",", ",", ".."]
(c6-0 / amr-empty)

# ::snt . . ..
# ::tokens [".", ".", ".."]
# ::lemmas [".", ".", ".."]
(c8-0 / amr-empty)

# ::snt Yahi sab tu bbi he bhadwa.lutera or andhbhakt chamcha
# ::tokens ["Yahi", "sab", "tu", "bbi", "he", "bhadwa.lutera", "or", "andhbhakt", "chamcha"]
# ::lemmas ["Yahi", "sab", "tu", "bbi", "he", "bhadwa.lutera", "or", "andhbhakt", "chamcha"]
(c9-2 / or
      :op1 (c9-5 / bhutera)
      :op2 (c9-0 / and
                 :op1 (c9-3 / laugh-01
                            :ARG0 (c9-6 / i)
                            :manner (c9-4 / loud)
                            :op2-of c9-0
                            :mode expressive)
                 :ARG0 c9-6
                 :manner c9-4
                 :mode expressive)
      :op3 (c9-1 / chamcha))

# ::snt Right
# ::tokens ["Right"]
# ::lemmas ["right"]
(c12-0 / right-06)

# ::snt %
# ::tokens ["%"]
# ::lemmas ["%"]
(c13-0 / percentage-entity
       :value 25)

# ::snt Hans mt pagli pyar ho jayega
# ::tokens ["Hans", "mt", "pagli", "pyar", "ho", "jayega"]
# ::lemmas ["Hans", "mt", "pagli", "pyar", "ho", "jayega"]
(c17-5 / multi-sentence
       :snt1 (c17-1 / have-polarity-91
                    :ARG2 -)
       :snt2 (c17-2 / laugh-01
                    :ARG0 (c17-0 / we)
                    :manner (c17-3 / loud)
                    :mode expressive)
       :snt3 (c17-4 / ho-jayega
                    :mode expressive))

# ::snt Right mam
# ::tokens ["Right", "mam"]
# ::lemmas ["right", "mam"]
(c18-0 / right-mam
       :ARG2-of (c18-1 / right-06))

# ::snt Mam Plz Fb Plz Plz mam
# ::tokens ["Mam", "Plz", "Fb", "Plz", "Plz", "mam"]
# ::lemmas ["Mam", "Plz", "Fb", "plz", "plz", "mam"]
(c21-2 / and
       :op1 (c21-3 / amr-unintelligible
                   :value "plz")
       :op2 (c21-0 / amr-unintelligible
                   :value "fb")
       :op3 (c21-1 / amr-unintelligible
                   :value "plz"))

# ::snt Plz Fb MamPlz
# ::tokens ["Plz", "Fb", "MamPlz"]
# ::lemmas ["Plz", "Fb", "MamPlz"]
(c22-0 / and
       :op1 (c22-3 / post-scriptum
                   :domain (c22-2 / person
                                  :name (c22-4 / name
                                               :op1 "Fb"
                                               :op2 "MamPlz")))
       :op2 (c22-1 / post-scriptum
                   :domain c22-2))

# ::snt Wow
# ::tokens ["Wow"]
# ::lemmas ["wow"]
(c23-0 / wow
       :mode expressive)

# ::snt Wah maza aagya
# ::tokens ["Wah", "maza", "aagya"]
# ::lemmas ["Wah", "maza", "aagya"]
(c25-0 / wah
       :mod (c25-2 / maza
                   :mod (c25-1 / aagya)))

# ::snt ...... !!
# ::tokens ["......", "!", "!"]
# ::lemmas ["......", "!", "!"]
(c28-0 / !!)

# ::snt Beshaq
# ::tokens ["Beshaq"]
# ::lemmas ["Beshaq"]
(c29-0 / person
       :name (c29-1 / name
                    :op1 "Beshaq"))

# ::snt chup kar
# ::tokens ["chup", "kar"]
# ::lemmas ["chup", "kar"]
(c30-0 / person
       :name (c30-1 / name
                    :op1 "chup kar"))

# ::snt ?
# ::tokens ["?"]
# ::lemmas ["?"]
(c32-0 / request-confirmation-91)

# ::snt ,...
# ::tokens [",", "..."]
# ::lemmas [",", "..."]
(c35-0 / amr-empty)

# ::snt Shi bola aap n
# ::tokens ["Shi", "bola", "aap", "n"]
# ::lemmas ["Shi", "bola", "aap", "n"]
(c36-0 / bola
       :mod (c36-1 / shit)
       :mode expressive)

# ::snt Jay ho
# ::tokens ["Jay", "ho"]
# ::lemmas ["Jay", "ho"]
(c37-0 / person
       :name (c37-1 / name
                    :op1 "Jay-Ho"))

# ::snt "" ""
# ::tokens ["\"", "\"", "\"", "\""]
# ::lemmas ["\"", "\"", "\"", "\""]
(c38-0 / amr-empty)

# ::snt Are pagla bokhla gaya ,bechara.
# ::tokens ["Are", "pagla", "bokhla", "gaya", ",", "bechara", "."]
# ::lemmas ["be", "pagla", "bokhla", "gaya", ",", "bechara", "."]
(c43-0 / say-01
       :ARG1 (c43-2 / amr-unintelligible
                    :value "pagla bokhla gaya")
       :ARG2 (c43-1 / person
                    :name (c43-3 / name
                                 :op1 "bechara")))

# ::snt I like the way you are giving work to ANDHBHAKTS by just putting one line...You are following RG. After putting one line or a statement the entire RSS / BJP ANDHBHAKTS including their IT CELL get bz on trolling.
# ::tokens ["I", "like", "the", "way", "you", "are", "giving", "work", "to", "ANDHBHAKTS", "by", "just", "putting", "one", "line", "...", "You", "are", "following", "RG", ".", "After", "putting", "one", "line", "or", "a", "statement", "the", "entire", "RSS", "/", "BJP", "ANDHBHAKTS", "including", "their", "IT", "CELL", "get", "bz", "on", "trolling", "."]
# ::lemmas ["i", "like", "the", "way", "you", "be", "give", "work", "to", "ANDHBHAKTS", "by", "just", "put", "one", "line", "...", "you", "be", "follow", "RG", ".", "after", "put", "one", "line", "or", "a", "statement", "the", "entire", "RSS", "/", "BJP", "ANDHBHAKTS", "include", "their", "it", "cell", "get", "bz", "on", "trolling", "."]
(c45-12 / multi-sentence
        :snt1 (c45-28 / like-01
                      :ARG0 (c45-3 / i)
                      :ARG1 (c45-7 / way
                                   :manner-of (c45-11 / give-01
                                                      :ARG0 (c45-23 / you)
                                                      :ARG1 (c45-14 / work-01)
                                                      :ARG2 (c45-24 / and
                                                                    :op1 (c45-9 / organization
                                                                                :name (c45-13 / name
                                                                                              :op1 "AndHBHAKTS")))
                                                      :manner (c45-30 / put-01
                                                                      :ARG0 c45-23
                                                                      :ARG1 (c45-2 / line
                                                                                   :quant 1)
                                                                      :mod (c45-29 / just)))))
        :snt2 (c45-25 / follow-02
                      :ARG0 (c45-22 / you)
                      :ARG1 (c45-27 / person
                                    :name (c45-1 / name
                                                 :op1 "RG")))
        :snt3 (c45-21 / get-04
                      :ARG0 (c45-16 / slash
                                    :op1 (c45-26 / organization
                                                 :name (c45-20 / name
                                                               :op1 "RSS"))
                                    :op2 (c45-4 / organization
                                                :name (c45-5 / name
                                                             :op1 "BJP"))
                                    :mod (c45-15 / entire)
                                    :ARG2-of (c45-19 / include-91
                                                     :ARG1 (c45-6 / CELL
                                                                  :mod (c45-10 / technology)
                                                                  :poss c45-16)))
                      :ARG1 (c45-8 / troll-01
                                   :ARG0 c45-16))
        :time (c45-17 / after
                      :op1 (c45-18 / put-01
                                   :ARG0 c45-22
                                   :ARG1 (c45-0 / line
                                                :quant 1))))

# ::snt ( )
# ::tokens ["(", ")"]
# ::lemmas ["(", ")"]
(c46-0 / amr-empty)

# ::snt Unfortunately, the TROLLERS forget that by using all the NONSENSE they are PROVING their UPBRINGING and the kind of PARENTS / GIRU they have.,.
# ::tokens ["Unfortunately", ",", "the", "TROLLERS", "forget", "that", "by", "using", "all", "the", "NONSENSE", "they", "are", "PROVING", "their", "UPBRINGING", "and", "the", "kind", "of", "PARENTS", "/", "GIRU", "they", "have", ".", ",", "."]
# ::lemmas ["unfortunately", ",", "the", "troller", "forget", "that", "by", "use", "all", "the", "nonsense", "they", "be", "prove", "their", "UPBRINGING", "and", "the", "kind", "of", "parent", "/", "GIRU", "they", "have", ".", ",", "."]
(c47-4 / forget-01
       :ARG0 (c47-14 / person
                     :ARG0-of (c47-0 / draft-02))
       :ARG1 (c47-11 / prove-01
                     :ARG0 c47-14
                     :ARG1 (c47-3 / and
                                  :op1 (c47-9 / upbring-00
                                              :ARG0 c47-14)
                                  :op2 (c47-16 / kind
                                               :mod (c47-1 / slash
                                                           :op1 (c47-6 / person
                                                                       :ARG0-of (c47-7 / have-rel-role-91
                                                                                       :ARG1 c47-14
                                                                                       :ARG2 (c47-12 / girlfriend)))
                                                           :op2 (c47-5 / person
                                                                       :ARG0-of (c47-13 / have-rel-role-91
                                                                                        :ARG1 c47-14
                                                                                        :ARG2 (c47-15 / mother))))))
                     :manner (c47-8 / use-01
                                    :ARG0 c47-14
                                    :ARG1 (c47-2 / sense-02
                                                 :ARG1 c47-14
                                                 :mod (c47-17 / all)
                                                 :polarity -)))
       :ARG2-of (c47-10 / fortunate-01
                        :polarity -))

# ::snt Phir inki maa kaun hai
# ::tokens ["Phir", "inki", "maa", "kaun", "hai"]
# ::lemmas ["phir", "inki", "maa", "kaun", "hai"]
(c49-0 / person
       :name (c49-1 / name
                    :op1 "Phir"
                    :op2 "inki"
                    :op3 "Maa"
                    :op4 "Kaun"
                    :op5 "Hai"))

# ::snt Baap shayad bhakton ke honge, hum toh Hindustani hai!
# ::tokens ["Baap", "shayad", "bhakton", "ke", "honge", ",", "hum", "toh", "Hindustani", "hai", "!"]
# ::lemmas ["Baap", "shayad", "bhakton", "ke", "honge", ",", "hum", "toh", "Hindustani", "hai", "!"]
(c50-2 / and
       :op1 (c50-4 / bhakton
                   :mod (c50-0 / shayad))
       :op2 (c50-3 / honge)
       :op3 (c50-5 / hum-01
                   :ARG0 (c50-6 / you)
                   :ARG1 (c50-1 / Hindustani
                                :mode expressive)
                   :mode imperative)
       :mode expressive)
