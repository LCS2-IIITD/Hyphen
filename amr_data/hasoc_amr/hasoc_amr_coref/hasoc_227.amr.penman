# ::snt We are getting tears for today
# ::tokens ["We", "are", "getting", "tears", "for", "today"]
# ::lemmas ["we", "be", "get", "tear", "for", "today"]
(c1-0 / get-01
      :ARG0 (c1-2 / we)
      :ARG1 (c1-3 / tear)
      :time (c1-1 / today))

# ::snt Vaccine slot is janam me to na mil raha
# ::tokens ["Vaccine", "slot", "is", "janam", "me", "to", "na", "mil", "raha"]
# ::lemmas ["Vaccine", "slot", "be", "janam", "i", "to", "na", "mil", "raha"]
(c2-0 / say-01
      :ARG0 (c2-5 / i)
      :ARG1 (c2-2 / truth-value
                  :polarity-of (c2-4 / slot
                                     :mod (c2-1 / cruise)))
      :ARG2 (c2-3 / person
                  :name (c2-6 / name
                              :op1 "Nikko")))

# ::snt We have got Fake Tears in today's quota
# ::tokens ["We", "have", "got", "Fake", "Tears", "in", "today", "'s", "quota"]
# ::lemmas ["we", "have", "get", "fake", "Tears", "in", "today", "'s", "quota"]
(c3-5 / get-02
      :ARG0 (c3-1 / we)
      :ARG1 (c3-4 / tear
                  :ARG1-of (c3-0 / fake-02))
      :prep-in (c3-2 / quota
                     :time (c3-3 / today)))

# ::snt Phizer &amp; Moderna best
# ::tokens ["Phizer", "&", "amp", ";", "Moderna", "best"]
# ::lemmas ["Phizer", "&", "amp", ";", "Moderna", "well"]
(c4-6 / multi-sentence
      :snt1 (c4-1 / company
                  :name (c4-7 / name
                              :op1 "Phizer"
                              :op2 "&amp"))
      :snt2 (c4-0 / company
                  :name (c4-4 / name
                              :op1 "Moderna")
                  :ARG1-of (c4-3 / have-degree-91
                                 :ARG2 (c4-5 / good-02
                                             :ARG1 c4-0)
                                 :ARG3 (c4-2 / most))))

# ::snt Bengal needs President rule
# ::tokens ["Bengal", "needs", "President", "rule"]
# ::lemmas ["bengal", "need", "President", "rule"]
(c5-6 / need-01
      :ARG0 (c5-0 / country
                  :name (c5-4 / name
                              :op1 "Bengal"))
      :ARG1 (c5-3 / rule-03
                  :ARG0 (c5-5 / person
                              :ARG0-of (c5-1 / have-org-role-91
                                             :ARG2 (c5-2 / president)))))

# ::snt It is stiil important to get vaccinated ASAP before another wave strikes. Study shows it is important to be fully vaccinated as soon as possible.
# ::tokens ["It", "is", "stiil", "important", "to", "get", "vaccinated", "ASAP", "before", "another", "wave", "strikes", ".", "Study", "shows", "it", "is", "important", "to", "be", "fully", "vaccinated", "as", "soon", "as", "possible", "."]
# ::lemmas ["it", "be", "stiil", "important", "to", "get", "vaccinate", "asap", "before", "another", "wave", "strike", ".", "study", "show", "it", "be", "important", "to", "be", "fully", "vaccinated", "as", "soon", "as", "possible", "."]
(c6-16 / multi-sentence
       :snt1 (c6-15 / important-01
                    :ARG1 (c6-10 / vaccinate-01
                                 :time (c6-13 / before
                                              :op1 (c6-0 / strike-01
                                                         :mod (c6-4 / wave
                                                                    :mod (c6-1 / another))))
                                 :time (c6-5 / immediate))
                    :degree (c6-2 / very))
       :snt2 (c6-14 / show-01
                    :ARG0 (c6-6 / study)
                    :ARG1 (c6-7 / important-01
                                :ARG1 (c6-8 / vaccinate-01
                                            :ARG1-of (c6-3 / full-09)
                                            :time (c6-11 / soon
                                                         :ARG2-of (c6-9 / have-degree-91
                                                                        :ARG1 c6-8
                                                                        :ARG3 (c6-17 / equal)
                                                                        :ARG4 (c6-12 / possible-01
                                                                                     :ARG1 c6-8)))))))

# ::snt We need relief from YOU ! Please spare us.....
# ::tokens ["We", "need", "relief", "from", "YOU", "!", "Please", "spare", "us", "....."]
# ::lemmas ["we", "need", "relief", "from", "you", "!", "please", "spare", "we", "....."]
(c7-4 / multi-sentence
      :snt1 (c7-5 / need-01
                  :ARG0 (c7-1 / we)
                  :ARG1 (c7-3 / relieve-01
                              :ARG0 (c7-6 / you)
                              :ARG1 c7-1))
      :snt2 (c7-0 / spare-01
                  :ARG0 (c7-7 / you)
                  :ARG1 (c7-2 / we)
                  :polite +
                  :mode imperative))

# ::snt Bsdke ke sach jaaney ki himmat nahi to inko fillow kyu krta hai
# ::tokens ["Bsdke", "ke", "sach", "jaaney", "ki", "himmat", "nahi", "to", "inko", "fillow", "kyu", "krta", "hai"]
# ::lemmas ["Bsdke", "ke", "sach", "jaaney", "ki", "himmat", "nahi", "to", "inko", "fillow", "kyu", "krta", "hai"]
(c8-1 / and
      :op1 (c8-11 / ke-sach
                  :op1 (c8-10 / person
                              :name (c8-8 / name
                                          :op1 "Bsdke"))
                  :op2-of c8-1)
      :op2 (c8-6 / person
                 :name (c8-7 / name
                             :op1 "Jaaney"))
      :op3 (c8-5 / hemat-00
                 :ARG1 (c8-3 / inko
                             :mod (c8-2 / fillow
                                        :mod (c8-0 / kyu
                                                   :mod (c8-4 / krta
                                                              :mod (c8-9 / hai)))))))

# ::snt Cow dung is enough for uCome out of the shells u bhaktsWht wrong did she say?
# ::tokens ["Cow", "dung", "is", "enough", "for", "uCome", "out", "of", "the", "shells", "u", "bhaktsWht", "wrong", "did", "she", "say", "?"]
# ::lemmas ["cow", "dung", "be", "enough", "for", "uCome", "out", "of", "the", "shell", "u", "bhaktsWht", "wrong", "do", "she", "say", "?"]
(c9-6 / have-quant-91
      :ARG1 (c9-0 / dung
                  :mod (c9-4 / cow))
      :ARG3 (c9-10 / enough)
      :ARG6 (c9-1 / come-out-09
                  :ARG1 (c9-9 / you)
                  :ARG2 (c9-2 / shell))
      :ARG1-of (c9-5 / wrong-02
                     :ARG2 (c9-8 / say-01
                                 :ARG0 (c9-7 / she)
                                 :ARG1 (c9-3 / amr-unknown))))

# ::snt World needs Vaccine &amp; peace
# ::tokens ["World", "needs", "Vaccine", "&", "amp", ";", "peace"]
# ::lemmas ["world", "need", "Vaccine", "&", "amp", ";", "peace"]
(c10-4 / need-01
       :ARG0 (c10-1 / world)
       :ARG1 (c10-0 / and
                    :op1 (c10-2 / vaccine)
                    :op2 (c10-5 / amp)
                    :op3 (c10-3 / peace)))

# ::snt And gets COVIDJUMLA.
# ::tokens ["And", "gets", "COVIDJUMLA", "."]
# ::lemmas ["and", "get", "covidjumla", "."]
(c11-2 / and
       :op2 (c11-0 / get-01
                   :ARG1 (c11-1 / program
                                :name (c11-3 / name
                                             :op1 "COVIDJUMLA"))))

# ::snt ""
# ::tokens ["\"", "\""]
# ::lemmas ["\"", "\""]
(c12-0 / amr-empty)

# ::snt "no more tears" se chala na padega
# ::tokens ["\"", "no", "more", "tears", "\"", "se", "chala", "na", "padega"]
# ::lemmas ["\"", "no", "more", "tear", "\"", "se", "chala", "na", "padega"]
(c13-3 / cry-01
       :mod (c13-2 / more
                   :polarity -)
       :mod (c13-0 / chala
                   :mod (c13-1 / padega)
                   :mode expressive))

# ::snt Meanwhile have some crocodile tears
# ::tokens ["Meanwhile", "have", "some", "crocodile", "tears"]
# ::lemmas ["meanwhile", "have", "some", "crocodile", "tear"]
(c14-2 / have-06
       :ARG0 (c14-5 / you)
       :ARG1 (c14-3 / tear
                    :mod (c14-1 / crocodile)
                    :quant (c14-0 / some))
       :time (c14-4 / meanwhile)
       :mode imperative)

# ::snt Yes ma'am India need vaccine, Doctors,and facilities..
# ::tokens ["Yes", "ma'am", "India", "need", "vaccine", ",", "Doctors", ",", "and", "facilities", ".."]
# ::lemmas ["yes", "ma'am", "India", "need", "vaccine", ",", "doctor", ",", "and", "facility", ".."]
(c15-0 / say-01
       :ARG0 (c15-7 / i)
       :ARG1 (c15-9 / need-01
                    :ARG0 (c15-4 / country
                                 :name (c15-6 / name
                                              :op1 "India"))
                    :ARG1 (c15-2 / and
                                 :op1 (c15-5 / vaccine)
                                 :op2 (c15-1 / doctor)
                                 :op3 (c15-3 / facility)))
       :ARG2 (c15-8 / ma'am))

# ::snt Everything already there. Just go and encourage your cult to get tested
# ::tokens ["Everything", "already", "there", ".", "Just", "go", "and", "encourage", "your", "cult", "to", "get", "tested"]
# ::lemmas ["everything", "already", "there", ".", "just", "go", "and", "encourage", "your", "cult", "to", "get", "test"]
(c16-7 / multi-sentence
       :snt1 (c16-10 / everything
                     :location (c16-4 / there)
                     :time (c16-0 / already))
       :snt2 (c16-9 / and
                    :op1 (c16-5 / go-02
                                :ARG0 (c16-8 / you)
                                :mod (c16-6 / just)
                                :mode imperative)
                    :op2 (c16-3 / encourage-01
                                :ARG0 c16-8
                                :ARG1 (c16-1 / cult
                                             :poss c16-8)
                                :ARG2 (c16-2 / test-01
                                             :ARG1 c16-1)
                                :mode imperative)))

# ::snt Don't wear masks, but scream for vaccines...
# ::tokens ["Do", "n't", "wear", "masks", ",", "but", "scream", "for", "vaccines", "..."]
# ::lemmas ["do", "not", "wear", "mask", ",", "but", "scream", "for", "vaccine", "..."]
(c17-1 / contrast-01
       :ARG1 (c17-2 / wear-01
                    :ARG0 (c17-5 / you)
                    :ARG1 (c17-4 / mask)
                    :polarity -
                    :mode imperative)
       :ARG2 (c17-0 / scream-01
                    :ARG0 c17-5
                    :purpose (c17-3 / vaccinate-01)
                    :mode imperative))

# ::snt India Needs Uniform Civil Code and Population Control Bill
# ::tokens ["India", "Needs", "Uniform", "Civil", "Code", "and", "Population", "Control", "Bill"]
# ::lemmas ["India", "need", "Uniform", "Civil", "Code", "and", "Population", "Control", "Bill"]
(c18-4 / need-01
       :ARG0 (c18-1 / country
                    :name (c18-2 / name
                                 :op1 "India"))
       :ARG1 (c18-0 / and
                    :op1 (c18-3 / law
                                :name c18-2
                                :op2-of c18-4
                                :op1 "Un Uniform"
                                :op2 "Civil"
                                :op3 "Code"))
       :name c18-2
       :op1 "Population"
       :op2 "Control"
       :op3 "Bill")

# ::snt Facilities are also of crucial importance that is very true.
# ::tokens ["Facilities", "are", "also", "of", "crucial", "importance", "that", "is", "very", "true", "."]
# ::lemmas ["facility", "be", "also", "of", "crucial", "importance", "that", "be", "very", "true", "."]
(c19-5 / important-01
       :ARG1 (c19-1 / facility)
       :mod (c19-2 / crucial)
       :ARG1-of (c19-4 / true-01
                       :degree (c19-3 / very))
       :mod (c19-0 / also))

# ::snt Bro, paanch baar namaz and no corona. Ameen!!
# ::tokens ["Bro", ",", "paanch", "baar", "namaz", "and", "no", "corona", ".", "Ameen", "!", "!"]
# ::lemmas ["Bro", ",", "paanch", "baar", "namaz", "and", "no", "corona", ".", "Ameen", "!", "!"]
(c20-4 / multi-sentence
       :snt1 (c20-1 / and
                    :op1 (c20-3 / bwahaha
                                :mode expressive)
                    :op2 (c20-0 / ban-01
                                :ARG0 (c20-6 / you)
                                :ARG1 (c20-5 / namaz)
                                :mode imperative)
                    :op3 (c20-2 / corona
                                :polarity -))
       :snt2 (c20-7 / Ameen
                    :mode expressive))

# ::snt Ha kyu ke india mai fokatiya log bhaut zayda hai...economy mei kutch dete nai..aur fokat ki chezz chilla chilla ke mangte hai!!
# ::tokens ["Ha", "kyu", "ke", "india", "mai", "fokatiya", "log", "bhaut", "zayda", "hai", "...", "economy", "mei", "kutch", "dete", "nai", "..", "aur", "fokat", "ki", "chezz", "chilla", "chilla", "ke", "mangte", "hai", "!", "!"]
# ::lemmas ["ha", "kyu", "ke", "india", "mai", "fokatiya", "log", "bhaut", "zayda", "hai", "...", "economy", "mei", "kutch", "dete", "nai", "..", "aur", "fokat", "ki", "chezz", "chilla", "chilla", "ke", "mangte", "hai", "!", "!"]
(c21-13 / multi-sentence
        :snt1 (c21-19 / and
                      :op1 (c21-22 / laugh-01
                                   :ARG0 (c21-7 / i)
                                   :ARG2 (c21-10 / country
                                                 :name (c21-14 / name
                                                               :op1 "India"))
                                   :manner (c21-6 / loud)
                                   :mode expressive)
                      :op2 (c21-1 / laugh-01
                                  :ARG0 (c21-17 / i)
                                  :manner (c21-4 / loud)
                                  :mode expressive)
                      :op3 (c21-8 / laugh-01
                                  :ARG0 c21-17
                                  :manner (c21-21 / loud)
                                  :mode expressive)
                      :op4 (c21-11 / laugh-01
                                   :ARG0 c21-17
                                   :manner (c21-12 / loud)
                                   :mode expressive)
                      :op5 (c21-23 / laugh-01
                                   :ARG0 c21-17
                                   :manner (c21-24 / loud)
                                   :mode expressive)
                      :snt2 (c21-15 / economy
                                    :location (c21-0 / country
                                                     :name (c21-5 / name
                                                                  :op1 "India"))
                                    :manner (c21-3 / loud))
                      :snt3 (c21-20 / fuck-01
                                    :ARG0 (c21-25 / person
                                                  :name (c21-18 / name
                                                                :op1 "aur")
                                                  :ARG1-of c21-20)
                                    :name (c21-9 / name
                                                 :op1 "chezz"
                                                 :op2 "chilla")
                                    :mode expressive)
                      :manner (c21-2 / loud)
                      :manner (c21-16 / loud)))

# ::snt Apni madam se kaho agar itni fiqr hai to bhijwa den.Aur aap yahan barati hain kya?
# ::tokens ["Apni", "madam", "se", "kaho", "agar", "itni", "fiqr", "hai", "to", "bhijwa", "den", ".", "Aur", "aap", "yahan", "barati", "hain", "kya", "?"]
# ::lemmas ["Apni", "madam", "se", "kaho", "agar", "itni", "fiqr", "hai", "to", "bhijwa", "den", ".", "Aur", "aap", "yahan", "barati", "hain", "kya", "?"]
(c22-6 / multi-sentence
       :snt1 (c22-14 / and
                     :op1 (c22-18 / person
                                  :name (c22-7 / name
                                               :op1 "Apni"
                                               :op2 "Madam"))
                     :op2 (c22-16 / person
                                  :name (c22-1 / name
                                               :op1 "Hijwa"
                                               :op2 "Den"))
                     :op3 (c22-17 / be-located-at-91
                                  :ARG1 (c22-11 / person
                                                :mod (c22-5 / religious-group
                                                            :name (c22-12 / name
                                                                          :op1 "Fiqr")))
                                  :ARG2 (c22-15 / here))
                     :op4 (c22-13 / be-located-at-91
                                  :ARG1 c22-11
                                  :ARG2 (c22-2 / here))
                     :polarity (c22-8 / amr-unknown))
       :snt2 (c22-10 / be-located-at-91
                     :ARG1 (c22-9 / person
                                  :name (c22-4 / name
                                               :op1 "Aap"
                                               :op2 "Yahan"))
                     :ARG2 (c22-3 / barati)
                     :polarity (c22-0 / amr-unknown)))

# ::snt Kagaz ke bina Vaccine nahi milega.
# ::tokens ["Kagaz", "ke", "bina", "Vaccine", "nahi", "milega", "."]
# ::lemmas ["Kagaz", "ke", "bina", "Vaccine", "nahi", "milega", "."]
(c23-1 / nahi
       :mod (c23-0 / vaccine
                   :name (c23-2 / name
                                :op1 "Kagaz"
                                :op2 "ke"
                                :op3 "bina"
                                :op4 "Vaccine"))
       :mode expressive)

# ::snt India also needs to kick all outsiders out of India
# ::tokens ["India", "also", "needs", "to", "kick", "all", "outsiders", "out", "of", "India"]
# ::lemmas ["India", "also", "need", "to", "kick", "all", "outsider", "out", "of", "India"]
(c24-4 / need-01
       :ARG0 (c24-1 / country
                    :name (c24-3 / name
                                 :op1 "India"))
       :ARG1 (c24-5 / kick-out-05
                    :ARG0 c24-1
                    :ARG1 (c24-2 / outsider
                                 :mod (c24-0 / all))
                    :ARG2 c24-1)
       :mod (c24-6 / also))

# ::snt Agree .. but vaccine for you is not invented yet
# ::tokens ["Agree", "..", "but", "vaccine", "for", "you", "is", "not", "invented", "yet"]
# ::lemmas ["agree", "..", "but", "vaccine", "for", "you", "be", "not", "invent", "yet"]
(c26-1 / contrast-01
       :ARG1 (c26-0 / agree-01
                    :ARG0 (c26-4 / i))
       :ARG2 (c26-2 / invent-01
                    :ARG1 (c26-3 / vaccine
                                 :beneficiary (c26-5 / you))
                    :time (c26-6 / yet)
                    :polarity -))

# ::snt Modi is giving Vaccines.... keep Aadhar ready
# ::tokens ["Modi", "is", "giving", "Vaccines", "....", "keep", "Aadhar", "ready"]
# ::lemmas ["Modi", "be", "give", "Vaccines", "....", "keep", "Aadhar", "ready"]
(c27-7 / multi-sentence
       :snt1 (c27-5 / give-01
                    :ARG0 (c27-6 / person
                                 :name (c27-8 / name
                                              :op1 "Modi"))
                    :ARG1 (c27-1 / vaccine))
       :snt2 (c27-0 / keep-02
                    :ARG0 (c27-9 / you)
                    :ARG1 (c27-3 / ready-02
                                 :ARG1 c27-9
                                 :ARG2 (c27-2 / product
                                              :name (c27-4 / name
                                                           :op1 "Aadhar")))
                    :mode imperative))

# ::snt % needs times
# ::tokens ["%", "needs", "times"]
# ::lemmas ["%", "need", "time"]
(c28-1 / time
       :time-of (c28-0 / need-01)
       :mod (c28-2 / percentage-entity))

# ::snt toh ab tak kya chyawanprash khila rahe they
# ::tokens ["toh", "ab", "tak", "kya", "chyawanprash", "khila", "rahe", "they"]
# ::lemmas ["toh", "ab", "tak", "kya", "chyawanprash", "khila", "rahe", "they"]
(c29-1 / and
       :op1 (c29-4 / toh
                   :mode expressive)
       :op2 (c29-2 / tak
                   :mode expressive)
       :op3 (c29-7 / kya
                   :mode expressive)
       :op4 (c29-0 / kya
                   :mod (c29-6 / person
                               :name (c29-5 / name
                                            :op1 "Wawanprash"))
                   :mode expressive)
       :op5 (c29-3 / khila
                   :mod (c29-8 / they)
                   :mode expressive))

# ::snt Yeah record is as old as years
# ::tokens ["Yeah", "record", "is", "as", "old", "as", "years"]
# ::lemmas ["yeah", "record", "be", "as", "old", "as", "year"]
(c30-0 / have-degree-91
       :ARG1 (c30-3 / record)
       :ARG2 (c30-1 / old)
       :ARG3 (c30-7 / equal)
       :ARG4 (c30-4 / multiple
                    :op1 (c30-2 / temporal-quantity
                                :unit (c30-5 / year)
                                :quant 1))
       :mod (c30-6 / yeah))

# ::snt So do I do you have any video explaining its benefits please upload
# ::tokens ["So", "do", "I", "do", "you", "have", "any", "video", "explaining", "its", "benefits", "please", "upload"]
# ::lemmas ["so", "do", "i", "do", "you", "have", "any", "video", "explain", "its", "benefit", "please", "upload"]
(c31-9 / multi-sentence
       :snt1 (c31-2 / cause-01
                    :ARG1 (c31-0 / do-02
                                 :polarity (c31-1 / amr-unknown)
                                 :ARG0 (c31-8 / i)
                                 :ARG1 (c31-5 / video
                                              :mod (c31-11 / any)
                                              :ARG0-of (c31-12 / explain-01
                                                               :ARG1 (c31-7 / benefit-01
                                                                            :ARG0 (c31-3 / it))))))
       :snt2 (c31-6 / let-01
                    :ARG0 (c31-10 / you)
                    :ARG1 (c31-4 / upload-01
                                 :ARG0 c31-10
                                 :ARG1 c31-5)
                    :polite +))

# ::snt Study shows it is important to be fully vaccinated as soon as possible.
# ::tokens ["Study", "shows", "it", "is", "important", "to", "be", "fully", "vaccinated", "as", "soon", "as", "possible", "."]
# ::lemmas ["study", "show", "it", "be", "important", "to", "be", "fully", "vaccinated", "as", "soon", "as", "possible", "."]
(c32-0 / show-01
       :ARG0 (c32-6 / study)
       :ARG1 (c32-7 / important-01
                    :ARG1 (c32-4 / vaccinate-01
                                 :ARG1-of (c32-1 / full-09)
                                 :time (c32-3 / soon
                                              :ARG2-of (c32-2 / have-degree-91
                                                              :ARG1 c32-4
                                                              :ARG3 (c32-8 / equal)
                                                              :ARG4 (c32-5 / possible-01
                                                                           :ARG1 c32-4))))))

# ::snt ...For libertards.
# ::tokens ["...", "For", "libertards", "."]
# ::lemmas ["...", "for", "libertard", "."]
(c33-0 / benefit-01
       :ARG1 (c33-1 / person
                    :ARG1-of (c33-2 / liberal-02)))

# ::snt They have sold outside .
# ::tokens ["They", "have", "sold", "outside", "."]
# ::lemmas ["they", "have", "sell", "outside", "."]
(c34-0 / sell-01
       :ARG0 (c34-2 / they)
       :location (c34-1 / outside))

# ::snt India Need True Indians...
# ::tokens ["India", "Need", "True", "Indians", "..."]
# ::lemmas ["India", "need", "True", "Indians", "..."]
(c35-4 / need-01
       :ARG0 (c35-0 / country
                    :name (c35-2 / name
                                 :op1 "India"))
       :ARG1 (c35-3 / person
                    :ARG1-of (c35-1 / true-01
                                    :ARG2 c35-0)))

# ::snt ?
# ::tokens ["?"]
# ::lemmas ["?"]
(c36-0 / request-confirmation-91)

# ::snt I think contraceptive vaccines more.
# ::tokens ["I", "think", "contraceptive", "vaccines", "more", "."]
# ::lemmas ["i", "think", "contraceptive", "vaccine", "more", "."]
(c37-2 / think-01
       :ARG0 (c37-3 / i)
       :ARG1 (c37-1 / vaccine
                    :mod (c37-0 / contraceptive)
                    :mod (c37-4 / more)))

# ::snt Palestine needs peace. Focus on them.
# ::tokens ["Palestine", "needs", "peace", ".", "Focus", "on", "them", "."]
# ::lemmas ["Palestine", "need", "peace", ".", "focus", "on", "they", "."]
(c38-5 / multi-sentence
       :snt1 (c38-6 / need-01
                    :ARG0 (c38-1 / country
                                 :name (c38-3 / name
                                              :op1 "Palestine"))
                    :ARG1 (c38-4 / peace))
       :snt2 (c38-0 / focus-01
                    :ARG0 (c38-7 / you)
                    :ARG2 (c38-2 / they)
                    :mode imperative))

# ::snt Peace is attained there, meanwhile floating body in GANGA is still there.
# ::tokens ["Peace", "is", "attained", "there", ",", "meanwhile", "floating", "body", "in", "GANGA", "is", "still", "there", "."]
# ::lemmas ["peace", "be", "attain", "there", ",", "meanwhile", "float", "body", "in", "GANGA", "be", "still", "there", "."]
(c39-2 / and
       :op1 (c39-10 / attain-01
                    :ARG1 (c39-7 / peace)
                    :location (c39-5 / there))
       :op2 (c39-6 / be-located-at-91
                   :ARG1 (c39-1 / body
                                :ARG1-of (c39-3 / float-01)
                                :location (c39-4 / country
                                                 :name (c39-9 / name
                                                              :op1 "GANGA")))
                   :ARG2 c39-5
                   :time (c39-8 / meanwhile)
                   :mod (c39-0 / still)))

# ::snt INDIA at the UN, we have send more vaccines to other countries then what we kept for our people.
# ::tokens ["INDIA", "at", "the", "UN", ",", "we", "have", "send", "more", "vaccines", "to", "other", "countries", "then", "what", "we", "kept", "for", "our", "people", "."]
# ::lemmas ["INDIA", "at", "the", "UN", ",", "we", "have", "send", "more", "vaccine", "to", "other", "country", "then", "what", "we", "keep", "for", "our", "people", "."]
(c40-14 / multi-sentence
        :snt1 (c40-4 / country
                     :name (c40-15 / name
                                   :op1 "India")
                     :location (c40-10 / organization
                                       :name (c40-11 / name
                                                     :op1 "UN")))
        :snt2 (c40-7 / have-03
                     :ARG0 (c40-5 / we)
                     :ARG1 (c40-0 / send-01
                                  :ARG0 c40-5
                                  :ARG1 (c40-9 / vaccine
                                               :ARG1-of (c40-12 / have-quant-91
                                                                :ARG3 (c40-6 / more)
                                                                :ARG4 (c40-3 / vaccine
                                                                             :ARG1-of (c40-2 / keep-01
                                                                                             :ARG0 (c40-16 / we)
                                                                                             :ARG3 (c40-13 / person
                                                                                                           :poss c40-16)))))
                                  :ARG2 (c40-1 / country
                                               :mod (c40-8 / other)))))

# ::snt Govt already said I have there is no shortage.
# ::tokens ["Govt", "already", "said", "I", "have", "there", "is", "no", "shortage", "."]
# ::lemmas ["Govt", "already", "say", "i", "have", "there", "be", "no", "shortage", "."]
(c41-0 / say-01
       :ARG0 (c41-3 / government-organization
                    :ARG0-of (c41-6 / govern-01))
       :ARG1 (c41-2 / have-03
                    :ARG0 (c41-5 / i))
       :time (c41-1 / already)
       :ARG1 (c41-4 / short-06
                    :polarity -))

# ::snt And not fake tears
# ::tokens ["And", "not", "fake", "tears"]
# ::lemmas ["and", "not", "fake", "tear"]
(c42-0 / and
       :op2 (c42-1 / tear
                   :ARG1-of (c42-2 / fake-02
                                   :polarity -)))

# ::snt Ok Aaj ka hogaya ?
# ::tokens ["Ok", "Aaj", "ka", "hogaya", "?"]
# ::lemmas ["Ok", "Aaj", "ka", "hogaya", "?"]
(c43-0 / okay-01
       :ARG1 (c43-2 / ka-hoo
                    :mode expressive)
       :polarity (c43-1 / amr-unknown))

# ::snt Go get them... as if its that easy....
# ::tokens ["Go", "get", "them", "...", "as", "if", "its", "that", "easy", "...."]
# ::lemmas ["go", "get", "they", "...", "as", "if", "its", "that", "easy", "...."]
(c44-3 / go-05
       :ARG0 (c44-1 / you)
       :ARG1 (c44-4 / get-01
                    :ARG0 c44-1
                    :ARG1 (c44-2 / they))
       :manner (c44-5 / easy-05
                      :degree (c44-0 / that))
       :mode imperative)

# ::snt Wo toh modi ne videsh bhej diya
# ::tokens ["Wo", "toh", "modi", "ne", "videsh", "bhej", "diya"]
# ::lemmas ["will", "toh", "modi", "ne", "videsh", "bhej", "diya"]
(c45-1 / and
       :op1 (c45-2 / Wo
                   :mode expressive)
       :op2 (c45-7 / modi
                   :mode expressive)
       :op3 (c45-3 / videsh
                   :mode expressive)
       :op4 (c45-0 / say-01
                   :ARG0 (c45-6 / i)
                   :ARG1 (c45-8 / no)
                   :ARG2 (c45-5 / person
                                :name (c45-4 / name
                                             :op1 "diya"))))

# ::snt Theres a cream called BURNOL you can use it.
# ::tokens ["There", "s", "a", "cream", "called", "BURNOL", "you", "can", "use", "it", "."]
# ::lemmas ["there", "s", "a", "cream", "call", "BURNOL", "you", "can", "use", "it", "."]
(c46-0 / cream
       :name (c46-3 / name
                    :op1 "BURNOL")
       :ARG1-of (c46-1 / use-01
                       :ARG0 (c46-4 / you)
                       :ARG1-of (c46-2 / possible-01)))

# ::snt Yes it is true MAM
# ::tokens ["Yes", "it", "is", "true", "MAM"]
# ::lemmas ["yes", "it", "be", "true", "MAM"]
(c47-0 / say-01
       :ARG0 (c47-3 / i)
       :ARG1 (c47-1 / true-01)
       :ARG2 (c47-2 / person
                    :name (c47-4 / name
                                 :op1 "MAMA")))

# ::snt Shez crap under muslim phobia, supported Burhan Wani openly, escaped from India when chargesheet was issued against her.
# ::tokens ["Shez", "crap", "under", "muslim", "phobia", ",", "supported", "Burhan", "Wani", "openly", ",", "escaped", "from", "India", "when", "chargesheet", "was", "issued", "against", "her", "."]
# ::lemmas ["Shez", "crap", "under", "muslim", "phobia", ",", "support", "Burhan", "Wani", "openly", ",", "escape", "from", "India", "when", "chargesheet", "be", "issue", "against", "she", "."]
(c48-2 / and
       :op1 (c48-4 / crap-01
                   :ARG0 (c48-14 / person
                                 :name (c48-15 / name
                                               :op1 "Shez"))
                   :ARG1-of (c48-0 / cause-01
                                   :ARG0 (c48-9 / phobia
                                                :mod (c48-11 / religious-group
                                                             :name (c48-12 / name
                                                                           :op1 "Islam")))))
       :op2 (c48-1 / support-01
                   :ARG0 c48-14
                   :ARG1 (c48-6 / person
                                :name (c48-8 / name
                                             :op1 "Burhan"
                                             :op2 "Wani"))
                   :ARG1-of (c48-10 / open-04))
       :op3 (c48-16 / escape-01
                    :ARG0 c48-14
                    :ARG1 (c48-7 / country
                                 :name (c48-3 / name
                                              :op1 "India"))
                    :time (c48-5 / issue-01
                                 :ARG1 (c48-13 / chargesheet)
                                 :prep-against c48-14)))

# ::snt Kabhi khana to kabhi Vaccine mangte ho. Decide kar lo pahle kya chahiye!
# ::tokens ["Kabhi", "khana", "to", "kabhi", "Vaccine", "mangte", "ho", ".", "Decide", "kar", "lo", "pahle", "kya", "chahiye", "!"]
# ::lemmas ["Kabhi", "khana", "to", "kabhi", "Vaccine", "mangte", "ho", ".", "Decide", "kar", "lo", "pahle", "kya", "chahiye", "!"]
(c49-7 / multi-sentence
       :snt1 (c49-14 / and
                     :op1 (c49-18 / kabhi
                                  :ARG2-of (c49-2 / include-91
                                                  :ARG1 (c49-17 / person
                                                                :name (c49-8 / name
                                                                             :op1 "Kabhi"
                                                                             :op2 "Khana")))
                                  :mode expressive)
                     :op2 (c49-3 / kabhi
                                 :ARG2-of (c49-11 / include-91
                                                  :ARG1 (c49-15 / person
                                                                :ARG0-of (c49-5 / vaccinate-01)
                                                                :ARG2-of (c49-12 / include-91
                                                                                 :ARG1 (c49-10 / person
                                                                                               :name (c49-1 / name
                                                                                                            :op1 "Mazte"
                                                                                                            :op2 "Ho")))))
                                 :mode expressive))
       :snt2 (c49-0 / Decide-01
                    :ARG0 (c49-13 / you)
                    :ARG1 c49-14
                    :op1 (c49-6 / kar)
                    :op2 (c49-16 / lo
                                 :mode expressive)
                    :op3 (c49-9 / pahle
                                :mode expressive)
                    :op4 (c49-4 / chahiye
                                :mode expressive)
                    :mode imperative))

# ::snt No Vaccine against vermins.
# ::tokens ["No", "Vaccine", "against", "vermins", "."]
# ::lemmas ["no", "Vaccine", "against", "vermin", "."]
(c50-0 / vaccinate-01
       :ARG1 (c50-1 / vermin)
       :polarity -)
