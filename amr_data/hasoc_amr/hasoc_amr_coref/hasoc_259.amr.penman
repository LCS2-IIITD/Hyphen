# ::snt Bsdke ke sach jaaney ki himmat nahi to inko fillow kyu krta hai
# ::tokens ["Bsdke", "ke", "sach", "jaaney", "ki", "himmat", "nahi", "to", "inko", "fillow", "kyu", "krta", "hai"]
# ::lemmas ["Bsdke", "ke", "sach", "jaaney", "ki", "himmat", "nahi", "to", "inko", "fillow", "kyu", "krta", "hai"]
(c1-1 / and
      :op1 (c1-11 / ke-sach
                  :op1 (c1-10 / person
                              :name (c1-8 / name
                                          :op1 "Bsdke"))
                  :op2-of c1-1)
      :op2 (c1-6 / person
                 :name (c1-7 / name
                             :op1 "Jaaney"))
      :op3 (c1-5 / hemat-00
                 :ARG1 (c1-3 / inko
                             :mod (c1-2 / fillow
                                        :mod (c1-0 / kyu
                                                   :mod (c1-4 / krta
                                                              :mod (c1-9 / hai)))))))

# ::snt Cow dung is enough for uCome out of the shells u bhaktsWht wrong did she say?
# ::tokens ["Cow", "dung", "is", "enough", "for", "uCome", "out", "of", "the", "shells", "u", "bhaktsWht", "wrong", "did", "she", "say", "?"]
# ::lemmas ["cow", "dung", "be", "enough", "for", "uCome", "out", "of", "the", "shell", "u", "bhaktsWht", "wrong", "do", "she", "say", "?"]
(c2-6 / have-quant-91
      :ARG1 (c2-0 / dung
                  :mod (c2-4 / cow))
      :ARG3 (c2-10 / enough)
      :ARG6 (c2-1 / come-out-09
                  :ARG1 (c2-9 / you)
                  :ARG2 (c2-2 / shell))
      :ARG1-of (c2-5 / wrong-02
                     :ARG2 (c2-8 / say-01
                                 :ARG0 (c2-7 / she)
                                 :ARG1 (c2-3 / amr-unknown))))
