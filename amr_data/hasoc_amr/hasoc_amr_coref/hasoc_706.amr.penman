# ::snt Mr Fake ID, do you know how many vaccine production centres are kept closed by the centre? They could well be used for producing Covaxin. Is 'Bond' a reason?
# ::tokens ["Mr", "Fake", "ID", ",", "do", "you", "know", "how", "many", "vaccine", "production", "centres", "are", "kept", "closed", "by", "the", "centre", "?", "They", "could", "well", "be", "used", "for", "producing", "Covaxin", ".", "Is", "'", "Bond", "'", "a", "reason", "?"]
# ::lemmas ["Mr", "Fake", "ID", ",", "do", "you", "know", "how", "many", "vaccine", "production", "centre", "be", "keep", "close", "by", "the", "centre", "?", "they", "could", "well", "be", "use", "for", "produce", "Covaxin", ".", "be", "'", "bond", "'", "a", "reason", "?"]
(c1-9 / multi-sentence
      :snt1 (c1-17 / ask-01
                   :ARG1 (c1-22 / know-01
                                :ARG0 (c1-21 / person
                                             :name (c1-10 / name
                                                          :op1 "Mr"
                                                          :op2 " Fake"
                                                          :op3 "ID"))
                                :ARG1 (c1-3 / number
                                            :quant-of (c1-4 / center
                                                            :ARG0-of (c1-19 / produce-01
                                                                            :ARG1 (c1-7 / vaccine))
                                                            :ARG1-of (c1-0 / close-01
                                                                           :ARG0 (c1-6 / center))))
                                :polarity (c1-11 / amr-unknown))
                   :ARG2 c1-21)
      :snt2 (c1-14 / possible-01
                   :ARG1 (c1-18 / use-01
                                :ARG1 (c1-16 / center
                                             :mod (c1-8 / this))
                                :ARG2 (c1-12 / produce-01
                                             :ARG1 (c1-2 / product
                                                         :name (c1-15 / name
                                                                      :op1 "Covaxin")))
                                :mod (c1-5 / well))
                   :polarity (c1-1 / amr-unknown))
      :snt3 (c1-20 / bond-01
                   :ARG0-of (c1-13 / cause-01
                                   :ARG1 (c1-23 / amr-unknown))))

# ::snt Only andh bhakts keep themselves covered with gobar to get protection from covid. If govt fails to order vaccine in time who would manufacture more than ordered quantities.
# ::tokens ["Only", "andh", "bhakts", "keep", "themselves", "covered", "with", "gobar", "to", "get", "protection", "from", "covid", ".", "If", "govt", "fails", "to", "order", "vaccine", "in", "time", "who", "would", "manufacture", "more", "than", "ordered", "quantities", "."]
# ::lemmas ["only", "andh", "bhakts", "keep", "themselves", "cover", "with", "gobar", "to", "get", "protection", "from", "covid", ".", "if", "govt", "fail", "to", "order", "vaccine", "in", "time", "who", "would", "manufacture", "more", "than", "order", "quantity", "."]
(c2-10 / multi-sentence
       :snt1 (c2-25 / keep-02
                    :ARG0 (c2-17 / and
                                 :op1 (c2-24 / person
                                             :mod (c2-8 / only))
                                 :op2 (c2-22 / person
                                             :mod (c2-23 / bhakt)))
                    :ARG1 (c2-6 / cover-01
                                :ARG1 c2-17
                                :ARG2 (c2-9 / government-organization
                                            :name (c2-11 / name
                                                         :op1 "Gobar")))
                    :purpose (c2-16 / get-01
                                    :ARG0 c2-17
                                    :ARG1 (c2-13 / protect-01
                                                 :ARG0 c2-9
                                                 :ARG1 c2-17
                                                 :ARG2 (c2-12 / product
                                                              :name (c2-3 / name
                                                                          :op1 "Covid")))))
       :snt2 (c2-20 / have-condition-91
                    :ARG2 (c2-18 / fail-01
                                 :ARG1 (c2-0 / government-organization
                                             :ARG0-of (c2-15 / govern-01))
                                 :ARG2 (c2-21 / order-01
                                              :ARG0 c2-0
                                              :ARG1 (c2-7 / vaccine
                                                          :ARG0-of (c2-19 / manufacture-01
                                                                          :ARG1 (c2-1 / product
                                                                                      :ARG1-of (c2-4 / have-quant-91
                                                                                                     :ARG3 (c2-14 / more)
                                                                                                     :ARG4 (c2-2 / quantity
                                                                                                                 :ARG1-of c2-21))))))
                                 :time (c2-5 / in-time))))

# ::snt if brain is not.. what they will do
# ::tokens ["if", "brain", "is", "not", "..", "what", "they", "will", "do"]
# ::lemmas ["if", "brain", "be", "not", "..", "what", "they", "will", "do"]
(c3-0 / do-02
      :ARG0 (c3-2 / they)
      :ARG1 (c3-1 / thing)
      :condition (c3-3 / brain
                       :polarity -))

# ::snt If he had brains, she wouldn't post such dumb things on SM
# ::tokens ["If", "he", "had", "brains", ",", "she", "would", "n't", "post", "such", "dumb", "things", "on", "SM"]
# ::lemmas ["if", "he", "have", "brain", ",", "she", "would", "not", "post", "such", "dumb", "thing", "on", "SM"]
(c4-8 / post-01
      :ARG0 (c4-0 / she)
      :ARG1 (c4-5 / thing
                  :mod (c4-1 / dumb
                             :degree (c4-7 / such)))
      :ARG2 (c4-4 / publication
                  :name (c4-9 / name
                              :op1 "SM"))
      :condition (c4-2 / have-03
                       :ARG0 (c4-3 / he)
                       :ARG1 (c4-6 / brain))
      :polarity -)

# ::snt Govt can announce one more mega TIKA UTSAV to make bhakt happy
# ::tokens ["Govt", "can", "announce", "one", "more", "mega", "TIKA", "UTSAV", "to", "make", "bhakt", "happy"]
# ::lemmas ["Govt", "can", "announce", "one", "more", "mega", "TIKA", "UTSAV", "to", "make", "bhakt", "happy"]
(c5-7 / possible-01
      :ARG1 (c5-0 / announce-01
                  :ARG0 (c5-6 / government-organization
                              :ARG0-of (c5-10 / govern-01))
                  :ARG1 (c5-5 / product
                              :name (c5-9 / name
                                          :op1 "TIKA"
                                          :op2 "UTSAV")
                              :mod (c5-8 / mega)
                              :quant (c5-1 / more))
                  :purpose (c5-4 / make-02
                                 :ARG0 c5-6
                                 :ARG1 (c5-2 / happy-01
                                             :ARG1 (c5-3 / bhakt)))))

# ::snt BHAKT NAHI SUDHRE GA
# ::tokens ["BHAKT", "NAHI", "SUDHRE", "GA"]
# ::lemmas ["BHAKT", "NAHI", "SUDHRE", "GA"]
(c6-0 / person
      :name (c6-1 / name
                  :op1 "Bhok"
                  :op2 "Nahhi"
                  :op3 "Sudhre"
                  :op4 "GA"))

# ::snt they kept their Brain at Tweeter head office..
# ::tokens ["they", "kept", "their", "Brain", "at", "Tweeter", "head", "office", ".."]
# ::lemmas ["they", "keep", "their", "Brain", "at", "Tweeter", "head", "office", ".."]
(c7-6 / keep-01
      :ARG0 (c7-2 / they)
      :ARG1 (c7-4 / brain
                  :part-of c7-2)
      :location (c7-1 / office
                      :mod (c7-0 / head)
                      :poss (c7-5 / publication
                                  :name (c7-3 / name
                                              :op1 "Tweeter"))))

# ::snt Hoo... Poor government
# ::tokens ["Hoo", "...", "Poor", "government"]
# ::lemmas ["hoo", "...", "poor", "government"]
(c8-0 / and
      :op1 (c8-1 / hoo
                 :mode expressive)
      :op2 (c8-2 / government-organization
                 :ARG0-of (c8-4 / govern-01)
                 :mod (c8-3 / poor)))

# ::snt Keep licking the boots....
# ::tokens ["Keep", "licking", "the", "boots", "...."]
# ::lemmas ["keep", "lick", "the", "boot", "...."]
(c9-1 / keep-02
      :ARG0 (c9-2 / you)
      :ARG1 (c9-3 / lick-01
                  :ARG0 c9-2
                  :ARG1 (c9-0 / boot))
      :mode imperative)

# ::snt Congratulations, you have been diagnosed with orange fungus.
# ::tokens ["Congratulations", ",", "you", "have", "been", "diagnosed", "with", "orange", "fungus", "."]
# ::lemmas ["congratulation", ",", "you", "have", "be", "diagnose", "with", "orange", "fungus", "."]
(c10-2 / congratulate-01
       :ARG2 (c10-0 / diagnose-01
                    :ARG1 (c10-4 / you)
                    :ARG2 (c10-1 / fungus
                                 :mod (c10-3 / orange))))

# ::snt At least vaccinate cow dung or cow urine.
# ::tokens ["At", "least", "vaccinate", "cow", "dung", "or", "cow", "urine", "."]
# ::lemmas ["at", "least", "vaccinate", "cow", "dung", "or", "cow", "urine", "."]
(c11-4 / vaccinate-01
       :ARG1 (c11-5 / or
                    :op1 (c11-0 / dung
                                :source (c11-2 / cow))
                    :op2 (c11-3 / urine
                                :source c11-2))
       :mod (c11-1 / at-least))
