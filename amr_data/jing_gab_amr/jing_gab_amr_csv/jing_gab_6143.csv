comment,amr
who is Marie?,"# ::snt who is Marie?
(p / person
      :name (n / name
            :op1 ""Marie"")
      :domain (a / amr-unknown))"
Just because someone likes the same sex doesn't mean they deserve to be made fun of.,"# ::snt Just because someone likes the same sex doesn't mean they deserve to be made fun of.
(m / mean-01
      :polarity -
      :ARG1 (l / like-01
            :ARG0 (s / someone)
            :ARG1 (s2 / same-sex))
      :ARG2 (d / deserve-01
            :ARG0 s
            :ARG1 (m2 / make-fun-04
                  :ARG1 s))
      :mod (j / just))"
"Well shes on the telly for a reason, so maybe don't be so harsh.","# ::snt Well shes on the telly for a reason, so maybe don't be so harsh.
(c / cause-01
      :ARG0 (b / be-located-at-91
            :ARG1 (s / she)
            :ARG2 (t / telly)
            :ARG1-of (c2 / cause-01
                  :ARG0 (r / reason)))
      :ARG1 (p / possible-01
            :ARG1 (h / harsh-02
                  :polarity -
                  :mode imperative
                  :ARG0 (y / you)
                  :degree (s2 / so))))"
"Hey there, sexist and homophobic slurs are offensive and hurtful and should not be used. Please refrain from these types of comments. Thanks","# ::snt Hey there, sexist and homophobic slurs are offensive and hurtful and should not be used. Please refrain from these types of comments. Thanks
(m / multi-sentence
      :snt1 (a / and
            :op1 (o / offend-01
                  :ARG0 (s / slur
                        :mod (s2 / sexist)
                        :mod (h / homophobia)))
            :op2 (h2 / hurt-01
                  :ARG0 s)
            :op3 (r / recommend-01
                  :polarity -
                  :ARG1 (u / use-01
                        :ARG1 s))
            :mod (h3 / hey
                  :mode expressive))
      :snt2 (r2 / refrain-01
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 (c / comment-01
                  :mod (t / type
                        :mod (t2 / this))))
      :snt3 (t3 / thank-01
            :ARG0 (ii / i)
            :ARG1 y))"
