comment,amr
Centre-right. Like millions of decent folk,"# ::snt Centre-right. Like millions of decent folk
(m / multi-sentence
      :snt1 (r / right-08
            :mod (c / center))
      :snt2 (r2 / resemble-01
            :ARG2 (f / folk
                  :mod (d / decent)
                  :quant (m2 / multiple
                        :op1 1000000))))"
I'm extreme right. The only thing right of me is anarchists. At least that's what they claimed before I buried them in the back yard.,"# ::snt I'm extreme right. The only thing right of me is anarchists. At least that's what they claimed before I buried them in the back yard.
(m / multi-sentence
      :snt1 (r / right-06
            :ARG1 (ii / i)
            :degree (e / extreme))
      :snt2 (r2 / right-06
            :ARG1 (p / person
                  :mod (a / anarchy))
            :ARG2 (ii2 / i)
            :mod (o / only))
      :snt3 (c / claim-01
            :ARG0 (t / they)
            :ARG1 (t2 / that)
            :time (b / before
                  :op1 (b2 / bury-01
                        :ARG0 (ii3 / i)
                        :ARG1 t
                        :ARG2 (y / yard
                              :mod (b3 / back))))
            :mod (a2 / at-least)))"
I'm a woman you useless waste of sperm. Neck yourself means hang yourself. Please do it because your genetics shouldn't be allowed to spread.,"# ::snt I'm a woman you useless waste of sperm. Neck yourself means hang yourself. Please do it because your genetics shouldn't be allowed to spread.
(m / multi-sentence
      :snt1 (w / woman
            :domain (ii / i)
            :ARG0-of (w2 / waste-01
                  :ARG1 (s / sperm)
                  :mod (u / useless)))
      :snt2 (m2 / mean-01
            :ARG1 (n / neck
                  :part-of (y / you))
            :ARG2 (h / hang-01
                  :ARG1 y))
      :snt3 (d / do-02
            :mode imperative
            :polite +
            :ARG0 (y2 / you)
            :ARG1 (ii2 / it)
            :ARG1-of (c / cause-01
                  :ARG0 (r / recommend-01
                        :polarity -
                        :ARG1 (a / allow-01
                              :ARG1 (s2 / spread-03
                                    :ARG1 (g / genetics
                                          :poss y2)))))))"
Arguing with each other will only bring more problems,"# ::snt Arguing with each other will only bring more problems
(b / bring-01
      :ARG0 (a / argue-02
            :ARG1 (e / each
                  :mod (o / other)))
      :ARG1 (p / problem
            :quant (m / more))
      :mod (o2 / only))"
"People are free to identify with whatever ideology they see fit, but to confess to burying bodies, that's asking for trouble.","# ::snt People are free to identify with whatever ideology they see fit, but to confess to burying bodies, that's asking for trouble.
(c / contrast-01
      :ARG1 (f / free-04
            :ARG1 (p / person)
            :ARG3 (ii / identify-01
                  :ARG0 p
                  :ARG1 p
                  :ARG2 (ii2 / ideology
                        :mod (w / whatever)
                        :ARG1-of (s / see-01
                              :ARG0 p
                              :ARG1-of (p2 / possible-01)))))
      :ARG2 (a / ask-02
            :ARG0 (c2 / confess-01
                  :ARG0 p
                  :ARG1 (b / bury-01
                        :ARG0 p
                        :ARG1 (b2 / body)))
            :ARG1 (t / trouble-05)))"
"WOW you really know how to hurt a guys feeling, no need to bash me","# ::snt WOW you really know how to hurt a guys feeling, no need to bash me
(a / and
      :op1 (k / know-01
            :ARG0 (y / you)
            :ARG1 (t / thing
                  :manner-of (h / hurt-01
                        :ARG0 y
                        :ARG1 (f / feel-01
                              :ARG0 (g / guy))))
            :ARG1-of (r / real-04)
            :mod (w / wow
                  :mode expressive))
      :op2 (o / obligate-01
            :polarity -
            :ARG1 y
            :ARG2 (b / bash-01
                  :ARG0 y
                  :ARG1 (ii / i))))"
