comment,amr
She's like the arch entrance toa theme park,"# ::snt She's like the arch entrance toa theme park
(r / resemble-01
      :ARG1 (s / she)
      :ARG2 (e / enter-01
            :ARG0 (a / arch)
            :ARG1 (a2 / amusement-park
                  :mod (t / theme))))"
You can see the brown discoloration that suggests its more roast beef than pink taco,"# ::snt You can see the brown discoloration that suggests its more roast beef than pink taco
(p / possible-01
      :ARG1 (s / see-01
            :ARG0 (y / you)
            :ARG1 (d / discolor-01
                  :ARG1-of (b / brown-02)
                  :ARG0-of (s2 / suggest-01
                        :ARG1 (b2 / beef
                              :ARG1-of (r / roast-01)
                              :ARG2-of (h / have-degree-91
                                    :ARG3 (m / more)
                                    :ARG4 (t / taco
                                          :ARG1-of (p2 / pink-04)))
                              :ARG1-of h)))))"
LMMFAO LMMFAO LMMFAO,"# ::snt LMMFAO LMMFAO LMMFAO
(l / laugh-01
      :ARG1 (a / ass
            :part-of (ii / i))
      :mod (o / off))"
"Reckon it's been blackened? I wouldn't be surprised & this is what yr olds listen too until their recently separated mums start bring the blacks home.That's when girls start drinking & smoking weed listening to rap, dating blacks while there fathersa left wondering what happened","# ::snt Reckon it's been blackened? I wouldn't be surprised & this is what yr olds listen too until their recently separated mums start bring the blacks home.That's when girls start drinking & smoking weed listening to rap, dating blacks while there fathersa left wondering what happened
(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (b / blacken-01
                  :ARG1 (ii / it)
                  :polarity (a / amr-unknown))
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Reckon"")))
      :snt2 (a2 / and
            :op1 (s2 / surprise-01
                  :polarity -
                  :ARG0 (t / this
                        :ARG1-of (l / listen-01
                              :ARG0 (p2 / person
                                    :age (t2 / temporal-quantity
                                          :quant 1
                                          :unit (y / year)))
                              :mod (t3 / too)
                              :time (u / until
                                    :op1 (s3 / start-01
                                          :ARG0 (p3 / person
                                                :ARG0-of (h / have-rel-role-91
                                                      :ARG1 p2
                                                      :ARG2 (m2 / mum))
                                                :ARG1-of (s4 / separate-01
                                                      :time (r / recent)))
                                          :ARG1 (b2 / bring-01
                                                :ARG0 p3
                                                :ARG1 (p4 / person
                                                      :ARG1-of (b3 / black-05))
                                                :ARG2 (h2 / home))))))
                  :op2 (s5 / start-01
                        :ARG0 (g / girl)
                        :ARG1 (a3 / and
                              :op1 (d / drink-01
                                    :ARG0 g
                                    :ARG1 (w / weed))
                              :op2 (s6 / smoke-02
                                    :ARG0 g
                                    :ARG1 w))
                        :time (a4 / and
                              :op1 (d2 / date-02
                                    :ARG0 g
                                    :ARG1 (p5 / person
                                          :ARG1-of (b4 / black-05)))
                              :op2 (w2 / wonder-01
                                    :ARG0 (p6 / person
                                          :ARG0-of h
                                          :ARG2 (f / father)))
                              :ARG1 (e / event))))))"
Poor girls...,"# ::snt Poor girls...
(g / girl
      :mod (p / poor))"
You have to be insensitive to not be embarrassed in front of someone else even if she'sa friend & that's your mother - thick skinned isa good thing for bad examples. They'll probably end up the same way judging by the responsive behaviour,"# ::snt You have to be insensitive to not be embarrassed in front of someone else even if she'sa friend & that's your mother - thick skinned isa good thing for bad examples. They'll probably end up the same way judging by the responsive behaviour
(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG1 (y / you)
            :ARG2 (s / sensitive-03
                  :polarity -
                  :ARG0 y
                  :ARG1 (e / embarrass-01
                        :ARG1 y
                        :location (ii / in-front-of
                              :op1 (s2 / someone
                                    :mod (e2 / else))))
                  :concession (e3 / even-if
                        :op1 (a / and
                              :op1 (h / have-rel-role-91
                                    :ARG0 s2
                                    :ARG1 y
                                    :ARG2 (f / friend))
                              :op2 (h2 / have-rel-role-91
                                    :ARG0 s2
                                    :ARG1 y
                                    :ARG2 (m2 / mother))))))
      :snt2 (g / good-02
            :ARG1 (s3 / skin
                  :ARG1-of (t / thick-03))
            :ARG2 (e4 / example
                  :ARG1-of (b / bad-07)))
      :snt3 (p / probable
            :domain (e5 / end-up-03
                  :ARG1 (t2 / they)
                  :ARG2 (w / way
                        :ARG1-of (s4 / same-01
                              :ARG2 (w2 / way
                                    :ARG1-of (j / judge-01
                                          :ARG3 (b2 / behave-01
                                                :ARG1-of (r / respond-01)))))))))"
Wtf Lolol0... that is rather disgusting... like I said that's probably how she got herps.,"# ::snt Wtf Lolol0... that is rather disgusting... like I said that's probably how she got herps.
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (d / disgust-01
                  :ARG0 (t / that)
                  :degree (r / rather))
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Lolol0""))
            :mod (f / fuck
                  :mode expressive))
      :snt2 (r2 / resemble-01
            :ARG1 (r3 / resemble-01
                  :ARG2 (s2 / say-01
                        :ARG0 (ii2 / i)
                        :ARG1 (p2 / probable
                              :domain (g / get-01
                                    :ARG0 (s3 / she)
                                    :ARG1 (p3 / puke-01
                                          :ARG0 s3)))))))"
Betty rottencrotch,"# ::snt Betty rottencrotch
(p / person
      :name (n / name
            :op1 ""Betty""
            :op2 ""Rottencrotch""))"
She's inviting but nobody's coming.,"# ::snt She's inviting but nobody's coming.
(c / contrast-01
      :ARG1 (ii / invite-01
            :ARG0 (s / she))
      :ARG2 (c2 / come-01
            :ARG1 (n / nobody)))"
she needs to wash that it's dirty and you f'n see it's dirty OMFG,"# ::snt she needs to wash that it's dirty and you f'n see it's dirty OMFG
(a / and
      :op1 (n / need-01
            :ARG0 (s / she)
            :ARG1 (w / wash-01
                  :ARG0 s
                  :ARG1 (d / dirty-02
                        :ARG1 (ii / it))))
      :op2 (s2 / see-01
            :polarity -
            :ARG0 (y / you)
            :ARG1 (d2 / dirty-02
                  :ARG1 ii)
            :mod (o / oh-my-god
                  :mode expressive)))"
"If she had as many pricks sticking out of her as she's had stuck in her, she'd look like a porcupine. And thank God that's not a scratch 'n' sniff...","# ::snt If she had as many pricks sticking out of her as she's had stuck in her, she'd look like a porcupine. And thank God that's not a scratch 'n' sniff...
(m / multi-sentence
      :snt1 (l / look-02
            :ARG0 (s / she)
            :ARG1 (p / porcupine)
            :condition (s2 / stick-01
                  :ARG1 (p2 / prick
                        :ARG1-of (h / have-quant-91
                              :ARG2 (m2 / many)
                              :ARG3 (e / equal)
                              :ARG4 (p3 / prick
                                    :ARG1-of (s3 / stick-01
                                          :ARG2 (s4 / she)))))
                  :ARG2 s4)
            :snt2 (a / and
                  :op2 (t / thank-01
                        :ARG0 (ii / i)
                        :ARG1 (p4 / person
                              :name (n / name
                                    :op1 ""God""))
                        :ARG2 (s5 / stick-01
                              :polarity -
                              :ARG1 (p5 / prick)
                              :ARG2 s4)))))"
her absurd antics on stage are merely an effort to compensate for lack any real talent,"# ::snt her absurd antics on stage are merely an effort to compensate for lack any real talent
(e / effort-01
      :ARG0 (s / she)
      :ARG1 (c / compensate-01
            :ARG0 s
            :ARG1 (l / lack-01
                  :ARG1 (t / talent
                        :ARG1-of (r / real-04)
                        :mod (a / any))))
      :manner (a2 / absurd)
      :location (s2 / stage)
      :mod (m / mere))"
TMI people.,"# ::snt TMI people.
(s / say-01
      :ARG1 (m / MI)
      :ARG2 (p / person))"
,"# ::snt 
(a / amr-empty)"
I think she needs some of this new product...,"# ::snt I think she needs some of this new product...
(t / think-01
      :ARG0 (ii / i)
      :ARG1 (n / need-01
            :ARG0 (s / she)
            :ARG1 (p / product
                  :ARG1-of (n2 / new-01)
                  :mod (t2 / this)
                  :quant (s2 / some))))"
