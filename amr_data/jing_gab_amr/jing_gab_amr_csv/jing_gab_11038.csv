comment,amr
Just a reminder,"# ::snt Just a reminder
(r / remind-01
      :mod (j / just))"
"This was NOT Stevens. People actually need to verify their sources before posting. Come on, were better than this.","# ::snt This was NOT Stevens. People actually need to verify their sources before posting. Come on, were better than this.
(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""Stevens"")
            :polarity -
            :domain (t / this))
      :snt2 (n2 / need-01
            :ARG0 (p2 / person)
            :ARG1 (v / verify-01
                  :ARG0 p2
                  :ARG1 (s / source-01
                        :ARG0 p2)
                  :time (b / before
                        :op1 (p3 / post-01
                              :ARG0 p2)))
            :ARG1-of (a / actual-02))
      :snt3 (c / come-on-25
            :mode imperative
            :ARG1 (h / have-degree-91
                  :ARG1 (t2 / they)
                  :ARG2 (g / good-02
                        :ARG1 t2)
                  :ARG3 (m2 / more)
                  :ARG4 (t3 / this))))"
Hating an entire religion based on the actions of a few people doesn't make any sense.,"# ::snt Hating an entire religion based on the actions of a few people doesn't make any sense.
(s / sense-02
      :polarity -
      :ARG1 (h / hate-01
            :ARG1 (r / religion
                  :mod (e / entire))
            :ARG1-of (b / base-02
                  :ARG2 (a / act-02
                        :ARG0 (p / person
                              :quant (f / few))))))"
This is a really hateful way of voicing your disagreement and is offensive to a lot of people.,"# ::snt This is a really hateful way of voicing your disagreement and is offensive to a lot of people.
(a / and
      :op1 (w / way
            :ARG0-of (h / hate-01
                  :degree (r / really))
            :manner-of (v / voice-01
                  :ARG0 (y / you)
                  :ARG1 (d / disagree-01
                        :ARG0 y))
            :domain (t / this))
      :op2 (o / offend-01
            :ARG0 t
            :ARG1 (p / person
                  :quant (l / lot))))"
