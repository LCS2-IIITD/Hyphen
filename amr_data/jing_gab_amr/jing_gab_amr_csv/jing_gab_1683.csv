comment,amr
"It makes you wanna go, hmmmm.","# ::snt It makes you wanna go, hmmmm.
(m / make-02
      :ARG0 (ii / it)
      :ARG1 (w / want-01
            :ARG0 (y / you)
            :ARG1 (g / go-02
                  :ARG0 y))
      :mod (h / hmm
            :mode expressive))"
D!,"# ::snt D!
(e / emoticon
      :value ""D!"")"
DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD,"# ::snt DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
(t / thing)"
,"# ::snt 
(a / amr-empty)"
That's what I was thinking too. I bet she teaches men how to spread their legs for manspreading.,"# ::snt That's what I was thinking too. I bet she teaches men how to spread their legs for manspreading.
(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (t2 / that)
            :mod (t3 / too))
      :snt2 (b / bet-01
            :ARG0 (ii2 / i)
            :ARG2 (t4 / teach-01
                  :ARG0 (s / she)
                  :ARG1 (s2 / spread-01
                        :ARG0 (m2 / man
                              :part (l / leg))
                        :ARG1 l
                        :purpose (p / pread-00
                              :ARG0 m2))
                  :ARG2 m2)))"
ADD DUPE TO THE LIST.,"# ::snt ADD DUPE TO THE LIST.
(a / add-02
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (n / name
            :op1 ""DUPE"")
      :ARG2 (l / list))"
D!,"# ::snt D!
(e / emoticon
      :value ""D!"")"
Absolutely.,"# ::snt Absolutely.
(a / absolute)"
"You left out a few things I'd like to call her but ""D"" will suffice for now.","# ::snt You left out a few things I'd like to call her but ""D"" will suffice for now.
(l / leave-out-03
      :ARG0 (y / you)
      :ARG1 (t / thing
            :quant (f / few)
            :ARG1-of (c / call-01
                  :ARG0 (ii / i)
                  :ARG2 (s / she)
                  :ARG1-of (l2 / like-02
                        :ARG0 ii)))
      :concession-of (s2 / suffice-01
            :ARG0 (s3 / string-entity
                  :value ""D"")
            :time (n / now)))"
