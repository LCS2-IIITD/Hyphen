comment,amr
,"# ::snt 
(a / amr-empty)"
The anger that you're expressing is really disturbing and needs to be checked.,"# ::snt The anger that you're expressing is really disturbing and needs to be checked.
(a / and
      :op1 (d / disturb-01
            :ARG0 (a2 / anger-01
                  :ARG1 (y / you)
                  :ARG1-of (e / express-01
                        :ARG0 y))
            :degree (r / really))
      :op2 (n / need-01
            :ARG1 (c / check-01
                  :ARG1 a2)))"
"I see you are upset, but please try to be more mellow.","# ::snt I see you are upset, but please try to be more mellow.
(c / contrast-01
      :ARG1 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (u / upset-01
                  :ARG1 (y / you)))
      :ARG2 (t / try-01
            :polite +
            :mode imperative
            :ARG0 y
            :ARG1 (h / have-degree-91
                  :ARG1 y
                  :ARG2 (m / mellow-01
                        :ARG1 y)
                  :ARG3 (m2 / more))))"
"Everyone is entitled to an opini, but please don't display one that attacks another' character there are different ways to get your point ac","# ::snt Everyone is entitled to an opini, but please don't display one that attacks another' character there are different ways to get your point ac
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (e / entitle-01
                  :ARG1 (t / thing
                        :ARG1-of (o / opine-01
                              :ARG0 (e2 / everyone)))
                  :ARG2 e2)
            :ARG2 (d / display-01
                  :polarity -
                  :mode imperative
                  :polite +
                  :ARG0 (y / you)
                  :ARG1 (t2 / thing
                        :ARG1-of (o2 / opine-01
                              :ARG0 y)
                        :ARG0-of (a / attack-01
                              :ARG1 (c2 / character
                                    :mod (a2 / another))))))
      :snt2 (w / way
            :manner-of (g / get-30
                  :ARG0 (y2 / you)
                  :ARG1 (p / point-04
                        :ARG0 y2))
            :ARG1-of (d2 / differ-02)))"
