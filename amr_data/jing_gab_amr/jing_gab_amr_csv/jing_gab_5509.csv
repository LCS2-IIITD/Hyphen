comment,amr
,"# ::snt 
(a / amr-empty)"
Most people who get knighted in the UK are nonces!,"# ::snt Most people who get knighted in the UK are nonces!
(k / knight-01
      :ARG1 (p / person
            :mod (m / most))
      :location (c / country
            :name (n / name
                  :op1 ""UK"")))"
Using words that profanely refer to parts of a person of a specific gender are neither productive nor careful.,"# ::snt Using words that profanely refer to parts of a person of a specific gender are neither productive nor careful.
(o / or
      :op1 (p / productive-03
            :polarity -
            :ARG0 (u / use-01
                  :ARG1 (w / word
                        :ARG0-of (r / refer-01
                              :ARG1 (p2 / part
                                    :part-of (p3 / person
                                          :mod (g / gender
                                                :ARG1-of (s / specific-02))))
                              :manner (p4 / profane)))))
      :op2 (c / care-04
            :polarity -
            :ARG0 u))"
"But why though, what would make you come to that conclusion?","# ::snt But why though, what would make you come to that conclusion?
(c / contrast-01
      :ARG2 (c2 / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (c3 / conclude-01
                  :ARG0 (y / you)
                  :ARG1 (t / that)))
      :ARG1-of (h / have-concession-91))"
Your post contains offensive language which may lead to a loss of your account privileges on this platform.,"# ::snt Your post contains offensive language which may lead to a loss of your account privileges on this platform.
(c / contain-01
      :ARG0 (p / post-01
            :ARG0 (y / you))
      :ARG1 (l / language
            :ARG0-of (o / offend-01)
            :ARG0-of (l2 / lead-03
                  :ARG2 (l3 / lose-02
                        :ARG0 y
                        :ARG1 (p2 / privilege-01
                              :ARG1 y
                              :ARG2 (a / account)
                              :location (p3 / platform
                                    :mod (t / this)))
                        :ARG1-of (p4 / possible-01)))))"
