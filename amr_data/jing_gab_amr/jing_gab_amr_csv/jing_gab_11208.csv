comment,amr
"Whenever I see ""pro-Israel"" in someone's Gab profile, I cringe hardcore.","# ::snt Whenever I see ""pro-Israel"" in someone's Gab profile, I cringe hardcore.
(c / cringe-01
      :ARG0 (ii / i)
      :manner (h / hardcore)
      :time (s / see-01
            :ARG0 ii
            :ARG1 (p / person
                  :ARG0-of (f / favor-01
                        :ARG1 (c2 / country
                              :name (n / name
                                    :op1 ""Israel""))))
            :location (p2 / profile
                  :mod (p3 / product
                        :name (n2 / name
                              :op1 ""Gab""))
                  :poss (s2 / someone))
            :mod (a / any)))"
Canada ought to be our friend. White Canadians are of good stock.,"# ::snt Canada ought to be our friend. White Canadians are of good stock.
(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (h / have-rel-role-91
                  :ARG0 (c / country
                        :name (n / name
                              :op1 ""Canada""))
                  :ARG1 (w / we)
                  :ARG2 (f / friend)))
      :snt2 (s / stock-01
            :ARG1 (p / person
                  :ARG1-of (w2 / white-02)
                  :mod (c2 / country
                        :name (n2 / name
                              :op1 ""Canada"")))
            :ARG1-of (g / good-02)))"
"Yeah I like our Canadian bros but most Canadians hate us. Hell, most Americans hate us on this fringe against Israel.","# ::snt Yeah I like our Canadian bros but most Canadians hate us. Hell, most Americans hate us on this fringe against Israel.
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (l / like-01
                  :ARG0 (ii / i)
                  :ARG1 (p / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 ii
                              :ARG2 (b / bro))
                        :mod (c2 / country
                              :name (n / name
                                    :op1 ""Canada""))))
            :ARG2 (h2 / hate-01
                  :ARG0 (p2 / person
                        :mod c2
                        :quant (m2 / most))
                  :ARG1 (w / we)))
      :snt2 (h3 / hate-01
            :ARG0 (p3 / person
                  :mod (c3 / country
                        :name (n2 / name
                              :op1 ""America""))
                  :quant (m3 / most))
            :ARG1 (w2 / we)
            :location (f / fringe
                  :mod (t / this)
                  :prep-against (c4 / country
                        :name (n3 / name
                              :op1 ""Israel"")))
            :mod (h4 / hell)))"
"At least on Gab I can reply to them, unlike the cars I get behind w/ the 'I Stand with Israel' bumper sticker. All I can do is pass them and hope they understand my sticker","# ::snt At least on Gab I can reply to them, unlike the cars I get behind w/ the 'I Stand with Israel' bumper sticker. All I can do is pass them and hope they understand my sticker
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (r / reply-01
                  :ARG0 (ii / i)
                  :ARG1 (t / they))
            :mod (a / at-least)
            :medium (p2 / product
                  :name (n / name
                        :op1 ""Gab""))
            :ARG1-of (r2 / resemble-01
                  :polarity -
                  :ARG2 (c / car
                        :ARG1-of (g / get-05
                              :ARG2 (b / behind
                                    :op1 (b2 / bumper
                                          :part-of (t2 / thing
                                                :name (n2 / name
                                                      :op1 ""I""
                                                      :op2 ""Stand""
                                                      :op3 ""with""
                                                      :op4 ""Israel""))))))))
      :snt2 (a2 / and
            :op1 (p3 / pass-02
                  :ARG0 (ii2 / i)
                  :ARG1 (t3 / they))
            :op2 (h / hope-01
                  :ARG0 ii2
                  :ARG1 (u / understand-01
                        :ARG0 t3
                        :ARG1 (s / sticker
                              :poss ii2)))
            :mod (a3 / all)
            :ARG1-of (p4 / possible-01)))"
Get an anti-Israel sticker.,"# ::snt Get an anti-Israel sticker.
(g / get-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / sticker
            :ARG0-of (o / oppose-01
                  :ARG1 (c / country
                        :name (n / name
                              :op1 ""Israel"")))))"
"Please don't use the r-word, it just makes you look stupid","# ::snt Please don't use the r-word, it just makes you look stupid
(u / use-01
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (w / word
            :mod (s / string-entity
                  :value ""r-word""))
      :ARG1-of (c / cause-01
            :ARG0 (m / make-02
                  :ARG0 u
                  :ARG1 (l / look-02
                        :ARG0 y
                        :ARG1 (s2 / stupid))
                  :mod (j / just))))"
Disability and religion is not something anyone should make fun of or demean.,"# ::snt Disability and religion is not something anyone should make fun of or demean.
(r / recommend-01
      :polarity -
      :ARG1 (o / or
            :op1 (m / make-fun-04
                  :ARG0 (a / anyone)
                  :ARG1 (a2 / and
                        :op1 (d / disability)
                        :op2 (r2 / religion)))
            :op2 (d2 / demean-01
                  :ARG0 a
                  :ARG1 a2)))"
You don't need to use that word just to use express disagreement with a group.,"# ::snt You don't need to use that word just to use express disagreement with a group.
(n / need-01
      :polarity -
      :ARG0 (y / you)
      :ARG1 (u / use-01
            :ARG0 y
            :ARG1 (w / word
                  :mod (t / that))
            :purpose (u2 / use-01
                  :ARG0 y
                  :ARG1 (d / disagree-01
                        :ARG0 y
                        :ARG1 (g / group)
                        :mod (e / express))
                  :mod (j / just))))"
