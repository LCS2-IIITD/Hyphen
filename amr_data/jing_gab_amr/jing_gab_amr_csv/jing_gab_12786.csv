comment,amr
"Josh aka ""suspected jew"" aka antifa leader & John aka Asian boy","# ::snt Josh aka ""suspected jew"" aka antifa leader & John aka Asian boy
(a / and
      :op1 (p / person
            :name (n / name
                  :op1 ""Josh"")
            :mod (e / ethnic-group
                  :name (n2 / name
                        :op1 ""Jew"")
                  :ARG1-of (s / suspect-01)))
      :op2 (p2 / person
            :name (n3 / name
                  :op1 ""John"")
            :mod (b / boy
                  :mod (c / continent
                        :name (n4 / name
                              :op1 ""Asia"")))))"
Terrorists?,"# ::snt Terrorists?
(t / terrorist
      :polarity (a / amr-unknown))"
Please do not make homophobic remarks on here.,"# ::snt Please do not make homophobic remarks on here.
(r / remark-01
      :polarity -
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (h / homophobia)
      :location (h2 / here))"
Use of the slur here is unacceptable in our discourse as it demeans and insults gays.,"# ::snt Use of the slur here is unacceptable in our discourse as it demeans and insults gays.
(p / possible-01
      :polarity -
      :ARG1 (a / accept-01
            :ARG1 (u / use-01
                  :ARG1 (s / slur)
                  :location (h / here))
            :prep-in (d / discourse-01
                  :ARG0 (w / we)))
      :ARG1-of (c / cause-01
            :ARG0 (a2 / and
                  :op1 (d2 / demean-01
                        :ARG0 s
                        :ARG1 (p2 / person
                              :ARG1-of (g / gay-01)))
                  :op2 (ii / insult-01
                        :ARG0 s
                        :ARG1 p2))))"
Please explain what exactly Josh and John have done to offend you.,"# ::snt Please explain what exactly Josh and John have done to offend you.
(e / explain-01
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (d / do-02
            :ARG0 (a / and
                  :op1 (p / person
                        :name (n / name
                              :op1 ""Josh""))
                  :op2 (p2 / person
                        :name (n2 / name
                              :op1 ""John"")))
            :ARG1 (t / thing
                  :mod (e2 / exact))
            :ARG2 (o / offend-01
                  :ARG0 a
                  :ARG1 y)))"
