comment,amr
What's your problem - which words offend you ?,"# ::snt What's your problem - which words offend you ?
(p / problem
      :poss (y / you)
      :domain (o / offend-01
            :ARG0 (w / word)
            :ARG1 y
            :ARG2 (a / amr-unknown)))"
"LOL you guys make me laugh. it's just that in polite society, one does not use those words.","# ::snt LOL you guys make me laugh. it's just that in polite society, one does not use those words.
(m / multi-sentence
      :snt1 (l / laugh-01
            :ARG0 (ii / i)
            :manner (l2 / loud))
      :snt2 (u / use-01
            :polarity -
            :ARG0 (o / one)
            :ARG1 (w / word
                  :mod (t / that))
            :location (s / society
                  :ARG1-of (p / polite-01))
            :mod (j / just)))"
please refrain to referring to females with derogatory words as there are better ways to get your point across.,"# ::snt please refrain to referring to females with derogatory words as there are better ways to get your point across.
(r / refrain-01
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (r2 / refer-01
            :ARG0 y
            :ARG1 (f / female)
            :instrument (w / word
                  :mod (d / derogatory)))
      :ARG1-of (c / cause-01
            :ARG0 (w2 / way
                  :manner-of (g / get-04
                        :ARG0 y
                        :ARG1 (a / across
                              :domain (p / point-04
                                    :ARG0 y)))
                  :ARG1-of (h / have-degree-91
                        :ARG2 (g2 / good-02
                              :ARG1 w2)
                        :ARG3 (m / more)))))"
"When people tell you that they are upset, you shouldn't keep trying to upset them.","# ::snt When people tell you that they are upset, you shouldn't keep trying to upset them.
(r / recommend-01
      :ARG1 (k / keep-02
            :polarity -
            :ARG0 (y / you)
            :ARG1 (t / try-01
                  :ARG0 y
                  :ARG1 (u / upset-01
                        :ARG1 (p / person)))
            :time (t2 / tell-01
                  :ARG0 p
                  :ARG1 (u2 / upset-01
                        :ARG1 p)
                  :ARG2 y)))"
