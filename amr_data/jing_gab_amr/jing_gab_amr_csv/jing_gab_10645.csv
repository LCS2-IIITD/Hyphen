comment,amr
The French need to look at a map showing great circle flight routes from Paris to North America and then try to plan getting around UK airspace.,"# ::snt The French need to look at a map showing great circle flight routes from Paris to North America and then try to plan getting around UK airspace.
(a / and
      :op1 (n / need-01
            :ARG0 (p / person
                  :mod (c / country
                        :name (n2 / name
                              :op1 ""France"")))
            :ARG1 (l / look-01
                  :ARG0 p
                  :ARG1 (m / map
                        :ARG0-of (s / show-01
                              :ARG1 (r / route
                                    :mod (f / fly-01
                                          :mod (c2 / circle))
                                    :mod (g / great)
                                    :source (c3 / city
                                          :name (n3 / name
                                                :op1 ""Paris""))
                                    :destination (c4 / continent
                                          :name (n4 / name
                                                :op1 ""North""
                                                :op2 ""America"")))))))
      :op2 (t / try-01
            :ARG0 p
            :ARG1 (p2 / plan-01
                  :ARG0 p
                  :ARG1 (g2 / get-05
                        :ARG1 p
                        :ARG2 (a2 / around
                              :op1 (a3 / airspace
                                    :mod (c5 / country
                                          :name (n5 / name
                                                :op1 ""UK""))))))
            :time (t2 / then)))"
I can't continue this conversation with you if you continue to use offensive words.,"# ::snt I can't continue this conversation with you if you continue to use offensive words.
(p / possible-01
      :polarity -
      :ARG1 (c / continue-01
            :ARG0 (ii / i)
            :ARG1 (c2 / converse-01
                  :ARG0 ii
                  :ARG2 (y / you)
                  :mod (t / this)))
      :condition (c3 / continue-01
            :ARG0 y
            :ARG1 (u / use-01
                  :ARG0 y
                  :ARG1 (w / word
                        :ARG0-of (o / offend-01)))))"
That is not a suitable way of describing someone,"# ::snt That is not a suitable way of describing someone
(w / way
      :polarity -
      :ARG1-of (s / suitable-04)
      :manner-of (d / describe-01
            :ARG1 (s2 / someone))
      :domain (t / that))"
