comment,amr
"Good thread. The absurd antisemitism on Gab has been a downer for me. I like your solution, putting antisemites in an area of their own, to rant & rave out of view. If you want to go there you can, but you will have to make that choice.","# ::snt Good thread. The absurd antisemitism on Gab has been a downer for me. I like your solution, putting antisemites in an area of their own, to rant & rave out of view. If you want to go there you can, but you will have to make that choice.
(m / multi-sentence
      :snt1 (t / thread
            :ARG1-of (g / good-02))
      :snt2 (d / downer
            :domain (a / antisemitism
                  :mod (a2 / absurd)
                  :location (p / publication
                        :name (n / name
                              :op1 ""Gab"")))
            :beneficiary (ii / i))
      :snt3 (l / like-01
            :ARG0 ii
            :ARG1 (s / solution
                  :poss (y / you)
                  :ARG0-of (m2 / mean-01
                        :ARG1 (p2 / put-01
                              :ARG0 y
                              :ARG1 (p3 / person
                                    :ARG0-of (o / oppose-01))
                              :ARG2 (a3 / area
                                    :poss p3)
                              :purpose (a4 / and
                                    :op1 (r / rant-01
                                          :ARG0 p3)
                                    :op2 (r2 / rave-01
                                          :ARG0 p3)
                                    :ARG1-of (v / view-02
                                          :polarity -))))))
      :snt4 (c / contrast-01
            :ARG1 (p4 / possible-01
                  :ARG1 (g2 / go-02
                        :ARG0 y)
                  :ARG4 (t2 / there)))
      :ARG2 (o2 / obligate-01
            :ARG1 y
            :ARG2 (c2 / choose-01
                  :ARG0 y
                  :ARG1 g2))
      :condition (w / want-01
            :ARG0 y
            :ARG1 g2))"
"once again, you out yourself as a liberal. when did i say i was one? mind reading is a liberal trait.","# ::snt once again, you out yourself as a liberal. when did i say i was one? mind reading is a liberal trait.
(m / multi-sentence
      :snt1 (o / out-01
            :ARG0 (y / you)
            :ARG1 y
            :ARG2 (p / person
                  :ARG1-of (l / liberal-02))
            :mod (a / again
                  :mod (o2 / once)))
      :snt2 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (p2 / person
                  :ARG1-of (l2 / liberal-02)
                  :domain ii)
            :time (a2 / amr-unknown))
      :snt3 (t / trait
            :ARG1-of (l3 / liberal-02)
            :domain (r / read-01
                  :ARG1 (m2 / mind))))"
AJ is a liberal Democrat.,"# ::snt AJ is a liberal Democrat.
(p / person
      :ARG0-of (h / have-org-role-91
            :ARG1 (p2 / political-party
                  :name (n / name
                        :op1 ""Democrat"")))
      :domain (p3 / person
            :name (n2 / name
                  :op1 ""AJ""))
      :ARG1-of (l / liberal-02))"
"lol, good try buddy.","# ::snt lol, good try buddy.
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (t / try-01
                  :ARG0 (b / buddy)
                  :ARG1-of (g / good-02))
            :op2 (l / laugh-01
                  :mode expressive
                  :ARG0 ii
                  :manner (l2 / loud)))
      :ARG2 b)"
"Good try to you, too, but unfortunately you lost the last election.","# ::snt Good try to you, too, but unfortunately you lost the last election.
(c / contrast-01
      :ARG1 (t / try-01
            :ARG0 (ii / i)
            :ARG1 (y / you)
            :mod (t2 / too)
            :ARG1-of (g / good-02))
      :ARG2 (l / lose-03
            :ARG0 y
            :ARG1 (e / elect-01
                  :mod (l2 / last))
            :ARG2-of (f / fortunate-01
                  :polarity -)))"
i'm a Canadian you idiot,"# ::snt i'm a Canadian you idiot
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (c / country
            :name (n / name
                  :op1 ""Canada"")
            :domain ii)
      :ARG2 (y / you
            :mod (ii2 / idiot)))"
"Oh, no wonder I thought you were gay. Now it's all coming together.","# ::snt Oh, no wonder I thought you were gay. Now it's all coming together.
(m / multi-sentence
      :snt1 (w / wonder-02
            :polarity -
            :ARG1 (t / think-01
                  :ARG0 (ii / i)
                  :ARG1 (g / gay-01
                        :ARG1 (y / you)))
            :mod (o / oh
                  :mode expressive))
      :snt2 (c / come-up-13
            :ARG1 (ii2 / it
                  :mod (a / all))
            :mod (t2 / together)
            :time (n / now)))"
"I like that idea!! If you feel you need to allow those ppl to spew their ridiculous comments, dont put it on me to mute them (though I will!) put it on them to find each other. Good idea. Simple.","# ::snt I like that idea!! If you feel you need to allow those ppl to spew their ridiculous comments, dont put it on me to mute them (though I will!) put it on them to find each other. Good idea. Simple.
(m / multi-sentence
      :snt1 (l / like-01
            :ARG0 (ii / i)
            :ARG1 (ii2 / idea
                  :mod (t / that)))
      :snt2 (p / put-01
            :polarity -
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (ii3 / it)
            :ARG2 (ii4 / i)
            :condition (f / feel-02
                  :ARG0 y
                  :ARG1 (n / need-01
                        :ARG0 y
                        :ARG1 (a / allow-01
                              :ARG0 y
                              :ARG1 (s / spew-01
                                    :ARG0 (p2 / person
                                          :mod (t2 / that))
                                    :ARG1 (c / comment-01
                                          :ARG0 p2
                                          :ARG1-of (r / ridiculous-02))))))
            :concession (p3 / put-01
                  :ARG0 ii4
                  :ARG1 ii3
                  :ARG2 (o / on)
                  :purpose (f2 / find-01
                        :ARG0 p2
                        :ARG1 (o2 / other
                              :mod (e / each)))))
      :snt3 (ii5 / idea
            :ARG1-of (g / good-02))
      :snt4 (s2 / simple-02))"
