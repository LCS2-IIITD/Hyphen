comment,amr
"Could be a relation, that is the other reason for with holding names if they have the same name.","# ::snt Could be a relation, that is the other reason for with holding names if they have the same name.
(a / and
      :op1 (p / possible-01
            :ARG1 (r / relation-03))
      :op2 (r2 / reason
            :mod (o / other)
            :domain (t / that)
            :purpose (h / hold-01
                  :ARG1 (t2 / thing
                        :ARG2-of (n / name-01))
                  :condition (h2 / have-03
                        :ARG0 (t3 / they)
                        :ARG1 t2
                        :ARG2-of (n2 / name-01)
                        :ARG1-of (s / same-01)))))"
I know the town where this happened well. My money is on a relation. It will not be a migrant as many are assuming,"# ::snt I know the town where this happened well. My money is on a relation. It will not be a migrant as many are assuming
(m / multi-sentence
      :snt1 (k / know-02
            :ARG0 (ii / i)
            :ARG1 (t / town
                  :location-of (t2 / this))
            :manner (w / well-09))
      :snt2 (b / be-located-at-91
            :ARG1 (m2 / money
                  :poss (ii2 / i))
            :ARG2 (r / relation-03))
      :snt3 (p / person
            :ARG0-of (m3 / migrate-01
                  :polarity -)
            :domain (ii3 / it)
            :ARG1-of (a / assume-02
                  :ARG0 (p2 / person
                        :quant (m4 / many)))))"
Father who else gets near a baby so young.,"# ::snt Father who else gets near a baby so young.
(p / person
      :ARG0-of (h / have-rel-role-91
            :ARG2 (f / father))
      :ARG1-of (n / near-02
            :ARG2 (b / baby
                  :mod (y / young
                        :degree (s / so))))
      :mod (e / else))"
I know it but last there very early 's.,"# ::snt I know it but last there very early 's.
(c / contrast-01
      :ARG1 (k / know-01
            :ARG0 (ii / i)
            :ARG1 (ii2 / it))
      :ARG2 (l / last-01
            :ARG2 (e / early
                  :degree (v / very))
            :location (t / there)))"
Annalong hasn't changed,"# ::snt Annalong hasn't changed
(c / change-01
      :polarity -
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Annalong"")))"
