comment,amr
"He's been found, and fired! Good work!!","# ::snt He's been found, and fired! Good work!!
(m / multi-sentence
      :snt1 (a / and
            :op1 (f / find-01
                  :ARG1 (h / he))
            :op2 (f2 / fire-02
                  :ARG1 h))
      :snt2 (w / work-01
            :ARG1-of (g / good-02)))"
There's no reason to insult others. They're not harming you in any way.,"# ::snt There's no reason to insult others. They're not harming you in any way.
(m / multi-sentence
      :snt1 (r / reason
            :polarity -
            :purpose (ii / insult-01
                  :ARG1 (p / person
                        :mod (o / other))))
      :snt2 (h / harm-01
            :polarity -
            :ARG0 (t / they)
            :ARG1 (y / you)
            :manner (a / any)))"
"Use of this language is uncalled for and not necessary, please refrain.","# ::snt Use of this language is uncalled for and not necessary, please refrain.
(r / refrain-01
      :polite +
      :mode imperative
      :ARG0 (y / you)
      :ARG1-of (c / cause-01
            :ARG0 (a / and
                  :op1 (c2 / call-03
                        :polarity -
                        :ARG1 (u / use-01
                              :ARG1 (l / language
                                    :mod (t / this))))
                  :op2 (n / need-01
                        :polarity -
                        :ARG1 u))))"
"Even if what he did was wrong, there is no reason to destroy his life; those who support this are stooping to his level.","# ::snt Even if what he did was wrong, there is no reason to destroy his life; those who support this are stooping to his level.
(a / and
      :op1 (h / have-concession-91
            :ARG1 (r / reason
                  :polarity -
                  :purpose (d / destroy-01
                        :ARG1 (l / life
                              :poss (h2 / he))))
            :ARG2 (e / even-if
                  :op1 (w / wrong-04
                        :ARG1 (t / thing
                              :ARG1-of (d2 / do-02
                                    :ARG0 h2)))))
      :op2 (s / stoop-01
            :ARG0 (p / person
                  :ARG0-of (s2 / support-01
                        :ARG1 d))
            :ARG4 (l2 / level
                  :poss h2)))"
