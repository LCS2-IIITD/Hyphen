comment,amr
Bull-fucking-shit!,"# ::snt Bull-fucking-shit!
(b / bullshit-01
      :mode expressive)"
Nicholas Giampa Atomwaffen Aspie Romeo killed Juliet's parents Samuel Woodward Atomwaffen Aspie killed gay lover to keep it secret. Did you find that photo of Dylann Roof's watch yet? Notice anything about his watch? Don't photos make storytime more fun?,"# ::snt Nicholas Giampa Atomwaffen Aspie Romeo killed Juliet's parents Samuel Woodward Atomwaffen Aspie killed gay lover to keep it secret. Did you find that photo of Dylann Roof's watch yet? Notice anything about his watch? Don't photos make storytime more fun?
(m / multi-sentence
      :snt1 (k / kill-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Nicholas""
                        :op2 ""Giampa""
                        :op3 ""Atomwaffen""
                        :op4 ""Aspie""
                        :op5 ""Romeo""))
            :ARG1 (p2 / person
                  :name (n2 / name
                        :op1 ""Samuel""
                        :op2 ""Woodward""
                        :op3 ""Atomwaffen""
                        :op4 ""Aspie"")
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (p3 / person
                              :name (n3 / name
                                    :op1 ""Juliet""))
                        :ARG2 (p4 / parent)))
            :purpose (k2 / keep-01
                  :ARG0 p2
                  :ARG1 (ii / it)
                  :ARG2 (s / secret)))
      :snt2 (f / find-01
            :ARG0 (y / you)
            :ARG1 (p5 / photo
                  :topic (w / watch-01
                        :ARG0 (p6 / person
                              :name (n4 / name
                                    :op1 ""Dylann""
                                    :op2 ""Roosevelt""))))
            :time (y2 / yet)
            :polarity (a / amr-unknown))
      :snt3 (n5 / notice-01
            :ARG0 y
            :ARG1 (a2 / anything
                  :topic (w2 / watch-01
                        :ARG0 p6))
            :polarity (a3 / amr-unknown))
      :snt4 (m2 / make-02
            :ARG0 (p7 / photo)
            :ARG1 (f2 / fun-01
                  :ARG0 (s2 / storytime)
                  :ARG2-of (h2 / have-degree-91
                        :ARG1 s2
                        :ARG3 (m3 / more)))
            :polarity (a4 / amr-unknown)))"
Causation =/= correlllation,"# ::snt Causation =/= correlllation
(e / equal-01
      :polarity -
      :ARG1 (p / prescribe-02)
      :ARG2 (c / correlllation))"
"Sure, not EVERY Aspie gets out of Mommy's basement and away from the supply of Hot Pockets on DEMAND to go shoot up unarmed teens or little kids. But not EVERY Psychopath does either! Causation not equal correlation fits Psychopaths also. Do you have a more robust argument? What are YOUR comorbidities? You can ""stim"", flap your hands.","# ::snt Sure, not EVERY Aspie gets out of Mommy's basement and away from the supply of Hot Pockets on DEMAND to go shoot up unarmed teens or little kids. But not EVERY Psychopath does either! Causation not equal correlation fits Psychopaths also. Do you have a more robust argument? What are YOUR comorbidities? You can ""stim"", flap your hands.
(m / multi-sentence
      :snt1 (s / sure-02
            :ARG1 (g / get-05
                  :polarity -
                  :ARG1 (e / everyone
                        :mod (a / aspie))
                  :ARG2 (o / out-06
                        :ARG1 e
                        :ARG2 (b / basement
                              :poss (p / person
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 (ii / i)
                                          :ARG2 (m2 / mommy)))))
                  :direction (a2 / away
                        :op1 (s2 / supply-01
                              :ARG1 (p2 / product
                                    :name (n / name
                                          :op1 ""Hot""
                                          :op2 ""Pockets""))))
                  :ARG1-of (c / cause-01
                        :ARG0 (d / demand-01
                              :ARG0 e
                              :ARG1 (g2 / go-05
                                    :ARG0 e
                                    :ARG1 (s3 / shoot-up-05
                                          :ARG0 e
                                          :ARG1 (o2 / or
                                                :op1 (t / teen
                                                      :ARG1-of (a3 / arm-01
                                                            :polarity -))
                                                :op2 (k / kid
                                                      :mod (l / little)))))))))
      :snt2 (c2 / contrast-01
            :ARG2 (d2 / do-02
                  :polarity -
                  :ARG0 (p3 / person
                        :mod (p4 / psychology)
                        :mod (e2 / every))
                  :ARG1 (e3 / either)))
      :snt3 (f / fit-06
            :ARG1 (c3 / correlate-01
                  :ARG1-of (e4 / equal-01
                        :polarity -))
            :ARG2 (p5 / person
                  :mod (p6 / psychology)
                  :mod (e5 / every))
            :mod (a4 / also))
      :snt4 (h2 / have-03
            :ARG0 (y / you)
            :ARG1 (a5 / argue-01
                  :ARG1-of (h3 / have-degree-91
                        :ARG2 (r / robust)
                        :ARG3 (m3 / more))))
      :snt5 (a6 / amr-unknown
            :domain (c4 / comorbidity
                  :poss y))
      :snt6 (a7 / and
            :op1 (p7 / possible-01
                  :ARG1 (s4 / stimulate-01
                        :ARG1 (y2 / you
                              :part (h4 / hand))))
            :op2 (f2 / flap-01
                  :ARG0 y2
                  :ARG1 h4)))"
Well done admitting how flawed your argument is! Now you're getting muted!,"# ::snt Well done admitting how flawed your argument is! Now you're getting muted!
(m / multi-sentence
      :snt1 (d / do-02
            :ARG1 (a / admit-01
                  :ARG1 (f / flaw-01
                        :ARG1 (a2 / argue-01
                              :ARG0 (y / you))
                        :degree (s / so)))
            :ARG1-of (w / well-09))
      :snt2 (m2 / mute-01
            :ARG1 (y2 / you)
            :time (n / now)))"
"Audrey Your very claim that me saying ""not every psychopath actually kills either!"" is a ""win"" for you is autistic reasoning. Neurotypical people don't want to get anywhere near a psychopath, whether they actually kill or not. Your lack of common sense gave you away!","# ::snt Audrey Your very claim that me saying ""not every psychopath actually kills either!"" is a ""win"" for you is autistic reasoning. Neurotypical people don't want to get anywhere near a psychopath, whether they actually kill or not. Your lack of common sense gave you away!
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (w / win-01
                  :ARG0 (s2 / say-01
                        :ARG0 ii
                        :ARG1 (k / kill-01
                              :ARG0 (p / psychopath
                                    :mod (e / every
                                          :polarity -))
                              :mod (e2 / either)
                              :ARG1-of (a / actual-02)))
                  :ARG2 (y / you)
                  :mod (v / very))
            :ARG2 (p2 / person
                  :name (n / name
                        :op1 ""Audrey"")))
      :snt2 (w2 / want-01
            :polarity -
            :ARG0 (p3 / person
                  :mod (n2 / neurotypical))
            :ARG1 (g / get-05
                  :ARG1 p3
                  :ARG2 (a2 / anywhere
                        :ARG1-of (n3 / near-02
                              :ARG2 (p4 / psychopath))))
            :ARG1-of (r / regardless-91
                  :ARG2 (o / or
                        :op1 (k2 / kill-01
                              :ARG0 p4
                              :ARG1-of (a3 / actual-02))
                        :op2 (k3 / kill-01
                              :polarity -
                              :ARG0 p4))))
      :snt3 (g2 / give-away-02
            :ARG0 (l / lack-01
                  :ARG0 y
                  :ARG1 (s3 / sense-02
                        :mod (c / common)))
            :ARG1 (y2 / you)))"
"""Re---d"" used here may cause offence to the mentally disabled and their families","# ::snt ""Re---d"" used here may cause offence to the mentally disabled and their families
(p / possible-01
      :ARG1 (c / cause-01
            :ARG0 (s / string-entity
                  :value ""re---d""
                  :ARG1-of (u / use-01
                        :location (h / here)))
            :ARG1 (o / offend-01
                  :ARG0 s
                  :ARG1 (a / and
                        :op1 (p2 / person
                              :ARG1-of (d / disable-01
                                    :mod (m / mental)))
                        :op2 (f / family
                              :poss p2)))))"
Language that demeans based on disability is not ok,"# ::snt Language that demeans based on disability is not ok
(o / okay-04
      :polarity -
      :ARG1 (l / language
            :ARG1-of (d / demean-01)
            :ARG1-of (b / base-02
                  :ARG2 (d2 / disability))))"
"I am not exactly sure what the argument is, I believe we can have a better debate if we left the less than eloquent language out of it.","# ::snt I am not exactly sure what the argument is, I believe we can have a better debate if we left the less than eloquent language out of it.
(c / contrast-01
      :ARG1 (s / sure-02
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :ARG1-of (a / argue-01))
            :mod (e / exact))
      :ARG2 (b / believe-01
            :ARG0 ii
            :ARG1 (p / possible-01
                  :ARG1 (d / debate-01
                        :ARG0 (w / we)
                        :ARG1-of (h / have-degree-91
                              :ARG2 (g / good-02
                                    :ARG1 d)
                              :ARG3 (m / more)))
                  :condition (l / leave-out-03
                        :ARG0 w
                        :ARG1 (l2 / language
                              :ARG1-of h
                              :ARG2 (e2 / eloquent)
                              :ARG3 (l3 / less)))
                  :ARG2 (ii2 / it))))"
