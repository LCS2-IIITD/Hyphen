comment,amr
I guess the muslims who ran children over are just haters. Nothing more to it. NPC DETECTED,"# ::snt I guess the muslims who ran children over are just haters. Nothing more to it. NPC DETECTED
(m / multi-sentence
      :snt1 (g / guess-01
            :ARG0 (ii / i)
            :ARG1 (p / person
                  :ARG0-of (h / hate-01
                        :mod (j / just))
                  :domain (p2 / person
                        :mod (r / religious-group
                              :name (n / name
                                    :op1 ""Islam""))
                        :ARG0-of (r2 / run-08
                              :ARG1 (c / child)
                              :location (o / over)))))
      :snt2 (d / distract-01
            :ARG2 (g2 / government-organization
                  :name (n2 / name
                        :op1 ""NPC""))))"
"Yes we all hate, but hatred based on race alone? Nah we should be better than that","# ::snt Yes we all hate, but hatred based on race alone? Nah we should be better than that
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (h / hate-01
                  :ARG0 (w / we
                        :mod (a / all)))
            :ARG2 (h2 / hate-01
                  :ARG0 w
                  :ARG1-of (b / base-02
                        :ARG2 (r / race
                              :mod (a2 / alone)))))
      :snt2 (r2 / recommend-01
            :ARG1 (h3 / have-degree-91
                  :ARG1 (w2 / we)
                  :ARG2 (g / good-02
                        :ARG1 w2)
                  :ARG3 (m2 / more)
                  :ARG4 (t / that))
            :mod (n / nah)))"
I agree Jason All we keep hearing is that well be the minority by or,"# ::snt I agree Jason All we keep hearing is that well be the minority by or
(a / agree-01
      :ARG0 (ii / i)
      :ARG1 (k / keep-02
            :ARG0 (w / we)
            :ARG1 (h / hear-01
                  :ARG0 w
                  :ARG1 (m / minority
                        :domain (p / person
                              :name (n / name
                                    :op1 ""Jason""))
                        :mod (t / that)
                        :ARG1-of (p2 / possible-01))
                  :mod (a2 / all)))
      :ARG2 p)"
