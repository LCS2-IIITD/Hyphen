comment,amr
FRAUDULENT muslim NIGGER,"# ::snt FRAUDULENT muslim NIGGER
(p / person
      :mod (r / religious-group
            :name (n / name
                  :op1 ""Islam""))
      :ARG0-of (c / challenge-01))"
All of the foul language and name calling used does nothing to make any valid point.,"# ::snt All of the foul language and name calling used does nothing to make any valid point.
(u / use-01
      :ARG1 (a / and
            :op1 (l / language
                  :mod (f / foul))
            :op2 (c / call-01
                  :ARG2 (n / name))
            :mod (a2 / all))
      :ARG0-of (c2 / cause-01
            :ARG1 (p / point-04
                  :ARG0 a
                  :ARG1-of (v / valid-02)
                  :mod (a3 / any)))
      :mod (n2 / nothing))"
To define someone by their religion shows your narrow mindedness as people act out of their perceived norms all the time,"# ::snt To define someone by their religion shows your narrow mindedness as people act out of their perceived norms all the time
(s / show-01
      :ARG0 (d / define-01
            :ARG0 (y / you)
            :ARG1 (s2 / someone)
            :ARG2 (r / religion
                  :poss s2))
      :ARG1 (n / narrow-02
            :ARG1 (m / mind
                  :part-of y))
      :ARG1-of (c / cause-01
            :ARG0 (a / act-out-03
                  :ARG0 (p / person)
                  :ARG1 (n2 / norm
                        :ARG1-of (p2 / perceive-01
                              :ARG0 p))
                  :time (t / time
                        :mod (a2 / all)))))"
"I think that you're just yelling racist slurs at each other, I can't see how this is fulfilling.","# ::snt I think that you're just yelling racist slurs at each other, I can't see how this is fulfilling.
(a / and
      :op1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (y / yell-01
                  :ARG0 (y2 / you)
                  :ARG1 (s / slur
                        :mod (r / racist))
                  :ARG2 (o / other
                        :mod (e / each))
                  :mod (j / just)))
      :op2 (p / possible-01
            :polarity -
            :ARG1 (s2 / see-01
                  :ARG0 ii
                  :ARG1 (t2 / thing
                        :manner-of (f / fulfill-01
                              :ARG0 (t3 / this))))))"
