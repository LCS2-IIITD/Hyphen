comment,amr
"See, I told you so.","# ::snt See, I told you so.
(t / tell-01
      :ARG0 (ii / i)
      :ARG1 (s / so)
      :ARG2 (y / you)
      :mod (s2 / see-03
            :ARG0 ii))"
"For the record, if gab struggles going forward it wasnt because of any malfeasance like you predicted. Factors beyond his control are at work.","# ::snt For the record, if gab struggles going forward it wasnt because of any malfeasance like you predicted. Factors beyond his control are at work.
(m / multi-sentence
      :snt1 (h / have-condition-91
            :ARG1 (c / cause-01
                  :polarity -
                  :ARG0 (m2 / malfeasance
                        :mod (a / any)
                        :ARG1-of (p / predict-01
                              :ARG0 (y / you)))
                  :ARG1 (s / struggle-02
                        :ARG0 (p2 / person
                              :name (n / name
                                    :op1 ""Gab""))
                        :direction (f / forward)
                        :ARG2-of h))
            :prep-for (r / record))
      :snt2 (w / work-01
            :ARG0 (f2 / factor
                  :ARG1-of (c2 / control-01
                        :polarity -
                        :ARG0 (h2 / he)))))"
"I laid out more than one fail scenario. I called it on Azure, and this is the SAME ATTACK VECTOR. He had ONE MILLION BUCKS to work with to build infrastructure. He got married instead. Torba should have read less philosophy and more science fiction.","# ::snt I laid out more than one fail scenario. I called it on Azure, and this is the SAME ATTACK VECTOR. He had ONE MILLION BUCKS to work with to build infrastructure. He got married instead. Torba should have read less philosophy and more science fiction.
(m / multi-sentence
      :snt1 (l / lay-out-03
            :ARG0 (ii / i)
            :ARG1 (s / scenario
                  :mod (f / fail-01)
                  :quant (m2 / more-than
                        :op1 1)))
      :snt2 (a / and
            :op1 (c / call-01
                  :ARG0 (ii2 / i)
                  :ARG1 s
                  :ARG2 (c2 / company
                        :name (n / name
                              :op1 ""Azure"")))
            :op2 (s2 / same-01
                  :ARG1 (t / this)
                  :ARG2 (v / victim
                        :ARG0-of (a2 / attack-01))))
      :snt3 (h / have-03
            :ARG0 (h2 / he)
            :ARG1 (b / bitch
                  :quant 1000000)
            :purpose (w / work-01
                  :ARG0 h2
                  :ARG1 (b2 / build-01
                        :ARG0 h2
                        :ARG1 (ii3 / infrastructure))))
      :snt4 (m3 / marry-01
            :ARG1 (p / person
                  :name (n2 / name
                        :op1 ""Torba""))
            :ARG1-of (ii4 / instead-of-91
                  :ARG2 (r / recommend-01
                        :ARG1 (r2 / read-01
                              :ARG0 p
                              :ARG1 (a3 / and
                                    :op1 (p2 / philosophy
                                          :quant (l2 / less))
                                    :op2 (s3 / science-fiction
                                          :quant (m4 / more))))))))"
