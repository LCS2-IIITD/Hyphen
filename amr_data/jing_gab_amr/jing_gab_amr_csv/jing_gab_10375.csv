comment,amr
"""Chosen"" privilege tweets the ""n word."" She's catching heat. But still....","# ::snt ""Chosen"" privilege tweets the ""n word."" She's catching heat. But still....
(m / multi-sentence
      :snt1 (t / tweet-02
            :ARG0 (p / privilege
                  :ARG1-of (c / choose-01))
            :ARG1 (s / string-entity
                  :value ""n""))
      :snt2 (c2 / catch-02
            :ARG0 (s2 / she)
            :ARG1 (h / heat))
      :snt3 (c3 / contrast-01
            :ARG2 (s3 / still)))"
Using that language doesn't help you make your point here,"# ::snt Using that language doesn't help you make your point here
(h / help-01
      :polarity -
      :ARG0 (u / use-01
            :ARG0 (y / you)
            :ARG1 (l / language
                  :mod (t / that)))
      :ARG1 (p / point-04
            :ARG0 y
            :location (h2 / here)))"
You can get your point across better if you don't use racial slurs.,"# ::snt You can get your point across better if you don't use racial slurs.
(p / possible-01
      :ARG1 (g / get-04
            :ARG0 (y / you)
            :ARG1 (a / across
                  :domain (p2 / point-04
                        :ARG0 y))
            :ARG1-of (h / have-degree-91
                  :ARG2 (g2 / good-02
                        :ARG1 g)
                  :ARG3 (m / more)))
      :condition (u / use-01
            :polarity -
            :ARG0 y
            :ARG1 (s / slur
                  :mod (r / race))))"
"The cis-gender, heterosexual white man has never been, and will most likely never be the minority. He'll at least never be treated as such","# ::snt The cis-gender, heterosexual white man has never been, and will most likely never be the minority. He'll at least never be treated as such
(m / multi-sentence
      :snt1 (a / and
            :op1 (h / have-polarity-91
                  :ARG1 (m2 / man
                        :ARG1-of (w / white-02)
                        :mod (h2 / heterosexual)
                        :ARG1-of w))
            :ARG2 -
            :time (e / ever))
      :op2 (l / likely-01
            :ARG1 (m3 / minority
                  :polarity -
                  :domain m2
                  :time (e2 / ever))
            :ARG2-of (h3 / have-degree-91
                  :ARG1 m3
                  :ARG3 (m4 / most)))
      :snt2 (t / treat-01
            :polarity -
            :ARG1 (h4 / he)
            :ARG2 (s / such)
            :mod (a2 / at-least)
            :time (e3 / ever)))"
