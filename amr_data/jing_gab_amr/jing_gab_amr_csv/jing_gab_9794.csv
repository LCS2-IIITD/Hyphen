comment,amr
Leftists are the ones that created the NPC meme in the first place so they could paint the right as a bunch of homicidal maniacs when a false flag shooting happens. Dehumanizing themselves to dehumanize the enemy.,"# ::snt Leftists are the ones that created the NPC meme in the first place so they could paint the right as a bunch of homicidal maniacs when a false flag shooting happens. Dehumanizing themselves to dehumanize the enemy.
(m / multi-sentence
      :snt1 (c / create-01
            :ARG0 (p / person
                  :ARG1-of (l / left-19))
            :ARG1 (m2 / meme
                  :mod (g / government-organization
                        :name (n / name
                              :op1 ""NPC"")))
            :mod (ii / in-the-first-place)
            :purpose (p2 / possible-01
                  :ARG1 (p3 / paint-03
                        :ARG0 p
                        :ARG1 (r / right-08)
                        :ARG2 (m3 / maniac
                              :mod (h / homicidal)
                              :quant (b / bunch))
                        :time (s / shoot-02
                              :ARG1 (f / flag
                                    :mod (f2 / false))))))
      :snt2 (d / dehumanize-01
            :ARG1 (t / they)
            :purpose d
            :ARG0 t
            :ARG1 (e / enemy)))"
um wut?,"# ::snt um wut?
(w / wut
      :polarity (a / amr-unknown))"
Language that demeans based on disability is not ok,"# ::snt Language that demeans based on disability is not ok
(o / okay-04
      :polarity -
      :ARG1 (l / language
            :ARG1-of (d / demean-01)
            :ARG1-of (b / base-02
                  :ARG2 (d2 / disability))))"
"Dude! We don't use the r word anymore, please change your verbage.","# ::snt Dude! We don't use the r word anymore, please change your verbage.
(s / say-01
      :ARG1 (a / and
            :op1 (u / use-01
                  :polarity -
                  :ARG0 (w / we)
                  :ARG1 (w2 / word
                        :mod (s2 / string-entity
                              :value ""r""))
                  :time (a2 / anymore))
            :op2 (c / change-01
                  :mode imperative
                  :polite +
                  :ARG0 (d / dude)
                  :ARG1 (v / verbage
                        :poss d)))
      :ARG2 d)"
