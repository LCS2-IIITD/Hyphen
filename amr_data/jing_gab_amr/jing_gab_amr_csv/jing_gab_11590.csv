comment,amr
Former Paul Ryan Challenger Arrested In Radioactive Murder Plot,"# ::snt Former Paul Ryan Challenger Arrested In Radioactive Murder Plot
(a / arrest-01
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Paul""
                  :op2 ""Ryan""
                  :op3 ""Lenger"")
            :time (f / former))
      :ARG2 (p2 / plot-01
            :ARG1 (m / murder-01
                  :mod (r / radioactive))))"
I'd like to continue this discussion with you but I can't if you use language like that.,"# ::snt I'd like to continue this discussion with you but I can't if you use language like that.
(c / contrast-01
      :ARG1 (l / like-02
            :ARG0 (ii / i)
            :ARG1 (c2 / continue-01
                  :ARG0 ii
                  :ARG1 (d / discuss-01
                        :ARG0 ii
                        :ARG2 (y / you)
                        :mod (t / this))))
      :ARG2 (p / possible-01
            :polarity -
            :ARG1 (c3 / continue-01
                  :ARG0 ii
                  :ARG1 d)
            :condition (u / use-01
                  :ARG0 y
                  :ARG1 (l2 / language
                        :ARG1-of (r / resemble-01
                              :ARG2 (t2 / that))))))"
Using those kind of words do not contribute to a useful conversation.,"# ::snt Using those kind of words do not contribute to a useful conversation.
(c / contribute-01
      :polarity -
      :ARG0 (u / use-01
            :ARG1 (w / word
                  :mod (k / kind
                        :mod (t / that))))
      :ARG2 (c2 / converse-01
            :ARG1-of (u2 / useful-05)))"
Please refrain from using derogatory terms for people of any  religion/ethnicity.,"# ::snt Please refrain from using derogatory terms for people of any  religion/ethnicity.
(r / refrain-01
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (u / use-01
            :ARG0 y
            :ARG1 (t / term
                  :mod (d / derogatory))
            :ARG2 (p / person
                  :mod (s / slash
                        :op1 (r2 / religion)
                        :op2 (e / ethnicity)
                        :mod (a / any)))))"
