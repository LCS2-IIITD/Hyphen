comment,amr
"mocking you....means, I am ... mocking you....honey...","# ::snt mocking you....means, I am ... mocking you....honey...
(m / multi-sentence
      :snt1 (m2 / mock-01
            :ARG1 (y / you))
      :snt2 (m3 / mean-01
            :ARG2 (m4 / mock-01
                  :ARG0 (ii / i)
                  :ARG1 (y2 / you)))
      :snt3 (h / honey))"
"you aren't a Christ man.... she is his partner, he does not demean who she is... you are the kind of guy who beats a woman, and thinks it makes you a man.. you have no idea how to be a man..... you need to go find an example of what you should be...","# ::snt you aren't a Christ man.... she is his partner, he does not demean who she is... you are the kind of guy who beats a woman, and thinks it makes you a man.. you have no idea how to be a man..... you need to go find an example of what you should be...
(m / multi-sentence
      :snt1 (m2 / man
            :polarity -
            :mod (r / religious-group
                  :name (n / name
                        :op1 ""Christ""))
            :domain (y / you))
      :snt2 (a / and
            :op1 (p / partner-01
                  :ARG0 (h / he)
                  :ARG1 (s / she))
            :op2 (d / demean-01
                  :polarity -
                  :ARG0 h
                  :ARG1 s))
      :snt3 (g / guy
            :mod (k / kind)
            :ARG0-of (b / beat-01
                  :ARG1 (w / woman))
            :ARG0-of (t / think-01
                  :ARG1 (m3 / make-02
                        :ARG0 b
                        :ARG1 (m4 / man
                              :domain y)))
            :domain (y2 / you))
      :snt4 (h2 / have-03
            :polarity -
            :ARG0 (y3 / you)
            :ARG1 (ii / idea
                  :topic (t2 / thing
                        :manner-of (m5 / man
                              :domain y3))))
      :snt5 (n2 / need-01
            :ARG0 y3
            :ARG1 (g2 / go-05
                  :ARG0 y3
                  :ARG1 (f / find-01
                        :ARG0 y3
                        :ARG1 t2
                        :ARG0-of (e / exemplify-01
                              :ARG1 (r2 / recommend-01
                                    :ARG1 m5))))))"
"Using the n word is terrible, you are not only offending the other but generations that have suffered from racial insults.","# ::snt Using the n word is terrible, you are not only offending the other but generations that have suffered from racial insults.
(a / and
      :op1 (t / terrible-01
            :ARG1 (u / use-01
                  :ARG0 (y / you)
                  :ARG1 (w / word
                        :mod (s / string-entity
                              :value ""n""))))
      :op2 (o / offend-01
            :ARG0 y
            :ARG1 (a2 / and
                  :op1 (o2 / other)
                  :op2 (g / generation
                        :ARG0-of (s2 / suffer-01
                              :ARG1 (ii / insult-01
                                    :mod (r / race)))))))"
"Men don't need females to back them up, but a real woman who loves her man will always be by his side.","# ::snt Men don't need females to back them up, but a real woman who loves her man will always be by his side.
(c / contrast-01
      :ARG1 (n / need-01
            :polarity -
            :ARG0 (m / man)
            :ARG1 (b / back-up-04
                  :ARG0 (f / female)
                  :ARG1 (t / they)))
      :ARG2 (s / side-01
            :ARG0 (w / woman
                  :ARG1-of (r / real-04)
                  :ARG0-of (l / love-01
                        :ARG1 (m2 / man
                              :poss w)))
            :ARG1 m
            :time (a / always)))"
"Setting a good example would be a good solution, maybe try not to use the derogatory language next time.","# ::snt Setting a good example would be a good solution, maybe try not to use the derogatory language next time.
(m / multi-sentence
      :snt1 (s / solve-01
            :ARG2 (s2 / set-02
                  :ARG1 (e / example
                        :ARG1-of (g / good-02)))
            :ARG1-of (g2 / good-02))
      :snt2 (p / possible-01
            :ARG1 (t / try-01
                  :ARG1 (u / use-01
                        :polarity -
                        :ARG1 (l / language
                              :mod (d / derogatory))
                        :time (t2 / time
                              :mod (n / next))))))"
