comment,amr
,"# ::snt 
(a / amr-empty)"
blame white people,"# ::snt blame white people
(b / blame-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (p / person
            :ARG1-of (w / white-02)))"
"It's wrong to put the blame of an issue on an entire racial group. In addition, using slurs for mental disability is in poor taste.","# ::snt It's wrong to put the blame of an issue on an entire racial group. In addition, using slurs for mental disability is in poor taste.
(m / multi-sentence
      :snt1 (w / wrong-02
            :ARG1 (p / put-01
                  :ARG1 (b / blame-01
                        :ARG1 (ii / issue-02))
                  :ARG2 (g / group
                        :mod (r / race)
                        :mod (e / entire))))
      :snt2 (a / and
            :op2 (t / taste
                  :mod (p2 / poor)
                  :domain (u / use-01
                        :ARG1 (s / slur)
                        :ARG2 (d / disability
                              :mod (m2 / mind))))))"
I can't continue this conversation with you if you continue to use offensive words.,"# ::snt I can't continue this conversation with you if you continue to use offensive words.
(p / possible-01
      :polarity -
      :ARG1 (c / continue-01
            :ARG0 (ii / i)
            :ARG1 (c2 / converse-01
                  :ARG0 ii
                  :ARG2 (y / you)
                  :mod (t / this)))
      :condition (c3 / continue-01
            :ARG0 y
            :ARG1 (u / use-01
                  :ARG0 y
                  :ARG1 (w / word
                        :ARG0-of (o / offend-01)))))"
"I don't understand insulting people with serious disabilities to prove your point about how ""stupid"" someone else is.","# ::snt I don't understand insulting people with serious disabilities to prove your point about how ""stupid"" someone else is.
(u / understand-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (ii2 / insult-01
            :ARG0 (y / you)
            :ARG1 (p / person
                  :mod (d / disability
                        :ARG1-of (s / serious-02)))
            :purpose (p2 / prove-01
                  :ARG0 y
                  :ARG1 (p3 / point-04
                        :ARG0 y
                        :ARG1 (s2 / stupid
                              :domain (s3 / someone
                                    :mod (e / else))
                              :degree (s4 / so))))))"
