comment,amr
Got a tattoo of my power mantra.,"# ::snt Got a tattoo of my power mantra.
(t / tattoo-01
      :ARG1 (ii / i)
      :ARG2 (m / mantra
            :mod (p / power)
            :poss ii))"
This attempt at a joke is not even funny. Jokes do not need to be foul.,"# ::snt This attempt at a joke is not even funny. Jokes do not need to be foul.
(m / multi-sentence
      :snt1 (f / funny
            :polarity -
            :domain (a / attempt-01
                  :ARG1 (j / joke-01)
                  :mod (t / this))
            :mod (e / even))
      :snt2 (n / need-01
            :polarity -
            :ARG0 (j2 / joke-01)
            :ARG1 (f2 / foul
                  :domain j2)))"
"Your post uses speech that denigrates sex and gender, which is in violation of our Community Guidelines and TOS  Agreement.","# ::snt Your post uses speech that denigrates sex and gender, which is in violation of our Community Guidelines and TOS  Agreement.
(u / use-01
      :ARG0 (p / post-01
            :ARG0 (y / you))
      :ARG1 (s / speak-01
            :ARG0-of (d / denigrate-01
                  :ARG1 (a / and
                        :op1 (s2 / sex)
                        :op2 (g / gender)))
            :ARG0-of (v / violate-01
                  :ARG1 (a2 / and
                        :op1 (g2 / guideline
                              :mod (c / community)
                              :poss (w / we))
                        :op2 (a3 / agree-01
                              :ARG1 (t / treaty
                                    :name (n / name
                                          :op1 ""TOS"")))))))"
It really is hard to even listen to you using foul language like that.,"# ::snt It really is hard to even listen to you using foul language like that.
(h / hard-02
      :ARG1 (l / listen-01
            :ARG1 (y / you
                  :ARG0-of (u / use-01
                        :ARG1 (l2 / language
                              :mod (f / foul)
                              :ARG1-of (r / resemble-01
                                    :ARG2 (t / that)))))
            :mod (e / even))
      :ARG1-of (r2 / real-04))"
