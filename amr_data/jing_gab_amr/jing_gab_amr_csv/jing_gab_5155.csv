comment,amr
Don Lemon screams Fuck White People every chance he gets. Does this include his boyfriend Ben Tinker? Asking for all normal people,"# ::snt Don Lemon screams Fuck White People every chance he gets. Does this include his boyfriend Ben Tinker? Asking for all normal people
(m / multi-sentence
      :snt1 (s / scream-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Don""
                        :op2 ""Lemon""))
            :ARG1 (f / fuck-01
                  :ARG1 (p2 / person
                        :ARG1-of (w / white-02)))
            :frequency (r / rate-entity-91
                  :ARG4 (g / get-01
                        :ARG0 p)))
      :snt2 (ii / include-01
            :ARG1 (p3 / person
                  :name (n2 / name
                        :op1 ""Ben""
                        :op2 ""Tinker"")
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 p
                        :ARG2 (b / boyfriend)))
            :ARG2 (t / this)
            :polarity (a / amr-unknown))
      :snt3 (a2 / ask-02
            :ARG2 (p4 / person
                  :mod (a3 / all)
                  :ARG1-of (n3 / normal-02))))"
Please do not make insulting comments thanks,"# ::snt Please do not make insulting comments thanks
(c / comment-01
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG0-of (ii / insult-01
            :polarity -)
      :ARG2-of (t / thank-01
            :ARG0 (ii2 / i)))"
Those are last names that it would be easy to guess the origin of- lemon farmers and tinkerers.,"# ::snt Those are last names that it would be easy to guess the origin of- lemon farmers and tinkerers.
(n / name
      :mod (l / last)
      :domain (t / that)
      :ARG0-of (c / cause-01
            :ARG1 (e / easy-05
                  :ARG1 (g / guess-01
                        :ARG1 (t2 / thing
                              :ARG2-of (o / originate-01
                                    :ARG1 (a / and
                                          :op1 (p / person
                                                :ARG0-of (f / farm-01
                                                      :ARG1 (l2 / lemon)))
                                          :op2 (p2 / person
                                                :ARG0-of (t3 / tinkerer-00)))))))))"
Using that language doesn't help you make your point... it actually detracts from it,"# ::snt Using that language doesn't help you make your point... it actually detracts from it
(a / and
      :op1 (h / help-01
            :polarity -
            :ARG0 (u / use-01
                  :ARG0 (y / you)
                  :ARG1 (l / language
                        :mod (t / that)))
            :ARG1 (p / point-04
                  :ARG0 y))
      :op2 (d / detract-01
            :ARG0 u
            :ARG2 (ii / it)
            :ARG1-of (a2 / actual-02)))"
