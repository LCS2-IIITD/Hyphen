comment,amr
This kid!! ugh,"# ::snt This kid!! ugh
(k / kid
      :mod (t / this)
      :mod (u / ugh
            :mode expressive))"
"Hey there, derogatory comments are not productive. Please refrain from using them and consider other peoples feelings when posting. Thanks","# ::snt Hey there, derogatory comments are not productive. Please refrain from using them and consider other peoples feelings when posting. Thanks
(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (p / productive-03
                  :polarity -
                  :ARG0 (c / comment-01
                        :mod (d / derogatory))
                  :mod (h / hey
                        :mode expressive))
            :ARG2 (t / there))
      :snt2 (a / and
            :op1 (r / refrain-01
                  :mode imperative
                  :polite +
                  :ARG0 (y / you)
                  :ARG1 (u / use-01
                        :ARG0 y
                        :ARG1 (t2 / they)))
            :op2 (c2 / consider-02
                  :mode imperative
                  :polite +
                  :ARG0 y
                  :ARG1 (f / feel-01
                        :ARG0 (p2 / person
                              :mod (o / other)))
                  :time (p3 / post-01
                        :ARG0 y)))
      :snt3 (t3 / thank-01
            :ARG0 (ii / i)
            :ARG1 y))"
Your words are hateful on handicapped people. Educate yourself.,"# ::snt Your words are hateful on handicapped people. Educate yourself.
(m / multi-sentence
      :snt1 (h / hate-01
            :ARG0 (w / word-01
                  :ARG0 (y / you))
            :ARG1 (p / person
                  :ARG1-of (h2 / handicap-01)))
      :snt2 (e / educate-01
            :ARG0 (y2 / you)
            :ARG1 y2))"
"You must not know what that word means. If you did, you would not use it that way.","# ::snt You must not know what that word means. If you did, you would not use it that way.
(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG1 (y / you)
            :ARG2 (k / know-01
                  :polarity -
                  :ARG0 y
                  :ARG1 (t / thing
                        :ARG2-of (m2 / mean-01
                              :ARG1 (w / word
                                    :mod (t2 / that))))))
      :snt2 (u / use-01
            :polarity -
            :ARG0 (y2 / you)
            :ARG1 (ii / it)
            :manner (w2 / way
                  :mod (t3 / that))
            :condition (d / do-02
                  :ARG0 y2)))"
