comment,amr
"Judge ""Shocked"" To Find Obama State Dept Lied To Protect Hillary From Email Server Lawsuits | Zero Hedge","# ::snt Judge ""Shocked"" To Find Obama State Dept Lied To Protect Hillary From Email Server Lawsuits | Zero Hedge
(s / shock-01
      :ARG0 (f / find-02
            :ARG0 (p / person
                  :ARG0-of (j / judge-01))
            :ARG1 (l / lie-08
                  :ARG0 (g / government-organization
                        :name (n / name
                              :op1 ""State""
                              :op2 ""Dept"")
                        :mod (p2 / person
                              :name (n2 / name
                                    :op1 ""Obama"")))
                  :ARG1 (p3 / protect-01
                        :ARG0 g
                        :ARG1 (p4 / person
                              :name (n3 / name
                                    :op1 ""Hillary""))
                        :ARG2 (s2 / sue-02
                              :ARG2 (s3 / server
                                    :mod (e / email))))))
      :ARG1 p
      :ARG1-of (d / describe-01
            :ARG0 (p5 / publication
                  :name (n4 / name
                        :op1 ""Zero""
                        :op2 ""Hedge""))))"
Federal Judge discovers that Obama State Dept. lied to protect Hillary from Email Server Lawsuits. It is only a matter of time Cankles! -er-Cad -Marie -Plant -Actual,"# ::snt Federal Judge discovers that Obama State Dept. lied to protect Hillary from Email Server Lawsuits. It is only a matter of time Cankles! -er-Cad -Marie -Plant -Actual
(m / multi-sentence
      :snt1 (d / discover-01
            :ARG0 (p / person
                  :ARG0-of (j / judge-01)
                  :mod (f / federal))
            :ARG1 (l / lie-08
                  :ARG0 (g / government-organization
                        :name (n / name
                              :op1 ""State""
                              :op2 ""Dept"")
                        :mod (p2 / person
                              :name (n2 / name
                                    :op1 ""Obama"")))
                  :purpose (p3 / protect-01
                        :ARG0 g
                        :ARG1 (p4 / person
                              :name (n3 / name
                                    :op1 ""Hillary""))
                        :ARG2 (s / sue-02
                              :ARG2 (s2 / server
                                    :mod (e / email))))))
      :snt2 (m2 / matter
            :mod (o / only)
            :domain (ii / it)
            :mod (p5 / person
                  :name (n4 / name
                        :op1 ""Cankles""))))"
"I love the ""c"" alliteration in that post. Do you write poetry by any chance?","# ::snt I love the ""c"" alliteration in that post. Do you write poetry by any chance?
(m / multi-sentence
      :snt1 (l / love-01
            :ARG0 (ii / i)
            :ARG1 (a / alliterate-01
                  :ARG1 (s / string-entity
                        :value ""c""))
            :location (p / post
                  :mod (t / that)))
      :snt2 (w / write-01
            :ARG0 (y / you)
            :ARG1 (p2 / poetry)
            :polarity (a2 / amr-unknown)
            :ARG1-of (c / chance-02
                  :mod (a3 / any))))"
Ethnic background is not an appropriate insult,"# ::snt Ethnic background is not an appropriate insult
(ii / insult-01
      :ARG0 (b / background
            :mod (e / ethnic))
      :ARG1-of (a / appropriate-02
            :polarity -))"
I would like to debate this with you but I can't if you use those words.,"# ::snt I would like to debate this with you but I can't if you use those words.
(c / contrast-01
      :ARG1 (l / like-02
            :ARG0 (ii / i)
            :ARG1 (d / debate-01
                  :ARG0 ii
                  :ARG1 (t / this)
                  :ARG2 (y / you)))
      :ARG2 (p / possible-01
            :polarity -
            :ARG1 (d2 / debate-01
                  :ARG0 ii
                  :ARG2 y)
            :condition (u / use-01
                  :ARG0 y
                  :ARG1 (w / word
                        :mod (t2 / that)))))"
"We can do without the swearing, though.","# ::snt We can do without the swearing, though.
(p / possible-01
      :ARG1 (d / do-02
            :ARG0 (w / we)
            :prep-without (s / swear-02
                  :ARG0 w))
      :ARG1-of (h / have-concession-91))"
