# ::snt VOTE IN THE MIDTERMS!!! GET THE DEMOCRATS AND RINOS OUT SO WE CAN GET THE WALL BUILT!!!
# ::tokens ["VOTE", "IN", "THE", "MIDTERMS", "!", "!", "!", "GET", "THE", "DEMOCRATS", "AND", "RINOS", "OUT", "SO", "WE", "CAN", "GET", "THE", "WALL", "BUILT", "!", "!", "!"]
# ::lemmas ["VOTE", "in", "the", "midterm", "!", "!", "!", "get", "the", "DEMOCRATS", "and", "rinos", "out", "so", "we", "can", "get", "the", "wall", "BUILT", "!", "!", "!"]
(c1-14 / multi-sentence
       :snt1 (c1-8 / vote-01
                   :ARG0 (c1-16 / you)
                   :time (c1-0 / date-entity
                               :season (c1-3 / middle))
                   :mode imperative)
       :snt2 (c1-1 / and
                   :op1 (c1-12 / get-01
                               :ARG0 c1-16
                               :ARG1 (c1-13 / person
                                            :ARG0-of (c1-6 / have-org-role-91
                                                           :ARG1 (c1-9 / political-party
                                                                       :name (c1-15 / name
                                                                                    :op1 "Democratic"
                                                                                    :op2 "Party"))))
                               :mode imperative)
                   :op2 (c1-11 / run-out-05
                               :ARG0 c1-16
                               :mode imperative)
                   :purpose (c1-5 / possible-01
                                  :ARG1 (c1-2 / get-01
                                              :ARG0 (c1-4 / we)
                                              :ARG1 (c1-10 / thing
                                                           :ARG1-of (c1-7 / buy-01)
                                                           :mod (c1-17 / all))))))

# ::snt The wall will never be built.
# ::tokens ["The", "wall", "will", "never", "be", "built", "."]
# ::lemmas ["the", "wall", "will", "never", "be", "build", "."]
(c2-0 / build-01
      :ARG1 (c2-1 / wall)
      :time (c2-2 / ever)
      :polarity -)

# ::snt The wall is currently under construction contrary to what the LSM is saying
# ::tokens ["The", "wall", "is", "currently", "under", "construction", "contrary", "to", "what", "the", "LSM", "is", "saying"]
# ::lemmas ["the", "wall", "be", "currently", "under", "construction", "contrary", "to", "what", "the", "LSM", "be", "say"]
(c3-2 / construct-01
      :ARG1 (c3-3 / wall)
      :time (c3-0 / current)
      :ARG1-of (c3-4 / contrary-01
                     :ARG2 (c3-5 / thing
                                 :ARG1-of (c3-1 / say-01
                                                :ARG0 (c3-6 / company
                                                            :name (c3-7 / name
                                                                        :op1 "LSM"))))))

# ::snt :A token effort when you consider the enormity of the project. It will never be built.
# ::tokens [":", "A", "token", "effort", "when", "you", "consider", "the", "enormity", "of", "the", "project", ".", "It", "will", "never", "be", "built", "."]
# ::lemmas [":", "a", "token", "effort", "when", "you", "consider", "the", "enormity", "of", "the", "project", ".", "it", "will", "never", "be", "build", "."]
(c4-7 / multi-sentence
      :snt1 (c4-9 / effort-01
                  :mod (c4-4 / token)
                  :condition (c4-0 / consider-01
                                   :ARG0 (c4-8 / you)
                                   :ARG1 (c4-2 / enormity
                                               :domain (c4-6 / project))))
      :snt2 (c4-5 / build-01
                  :ARG1 (c4-1 / it)
                  :time (c4-3 / ever)
                  :polarity -))

# ::snt Its ALREADY being built moron! Typical libtard logic: A small token of the wall is being built but the wall will never be built
# ::tokens ["Its", "ALREADY", "being", "built", "moron", "!", "Typical", "libtard", "logic", ":", "A", "small", "token", "of", "the", "wall", "is", "being", "built", "but", "the", "wall", "will", "never", "be", "built"]
# ::lemmas ["its", "already", "be", "build", "moron", "!", "typical", "libtard", "logic", ":", "a", "small", "token", "of", "the", "wall", "be", "be", "build", "but", "the", "wall", "will", "never", "be", "build"]
(c5-7 / multi-sentence
      :snt1 (c5-9 / say-01
                  :ARG0 (c5-1 / i)
                  :ARG1 (c5-16 / build-01
                               :ARG1 (c5-11 / it)
                               :time (c5-13 / already))
                  :ARG2 (c5-14 / moron))
      :snt2 (c5-15 / logic
                   :ARG1-of (c5-5 / typical-02
                                  :ARG2 (c5-18 / person
                                               :ARG1-of (c5-0 / liberal-02)
                                               :ARG1-of (c5-6 / retard-01)))
                   :domain (c5-2 / contrast-01
                                 :ARG1 (c5-12 / build-01
                                              :ARG1 (c5-4 / token
                                                          :mod (c5-17 / small)
                                                          :part-of (c5-3 / wall)))
                                 :ARG2 (c5-10 / build-01
                                              :ARG1 c5-3
                                              :time (c5-8 / ever)
                                              :polarity -))))

# ::snt Well, if you meant some of the wall will be built, then I agree. Will it be finished? No, it never will. Its an animal farm windmill. Its idiot bait for rednecks .
# ::tokens ["Well", ",", "if", "you", "meant", "some", "of", "the", "wall", "will", "be", "built", ",", "then", "I", "agree", ".", "Will", "it", "be", "finished", "?", "No", ",", "it", "never", "will", ".", "Its", "an", "animal", "farm", "windmill", ".", "Its", "idiot", "bait", "for", "rednecks", "."]
# ::lemmas ["well", ",", "if", "you", "mean", "some", "of", "the", "wall", "will", "be", "build", ",", "then", "i", "agree", ".", "will", "it", "be", "finish", "?", "no", ",", "it", "never", "will", ".", "its", "an", "animal", "farm", "windmill", ".", "its", "idiot", "bait", "for", "redneck", "."]
(c6-7 / multi-sentence
      :snt1 (c6-17 / agree-01
                   :ARG0 (c6-3 / i)
                   :condition (c6-19 / mean-01
                                     :ARG0 (c6-15 / you)
                                     :ARG2 (c6-21 / build-01
                                                  :ARG1 (c6-5 / wall
                                                              :quant (c6-10 / some)
                                                              :ARG1-of (c6-12 / include-91
                                                                              :ARG2 (c6-9 / wall)))))
                   :mod (c6-2 / well))
      :snt2 (c6-18 / finish-01
                   :ARG1 (c6-13 / it)
                   :time (c6-11 / ever)
                   :polarity (c6-8 / amr-unknown)
                   :polarity -)
      :snt3 (c6-1 / windmill
                  :mod (c6-14 / farm-01
                              :ARG2 (c6-0 / animal))
                  :domain (c6-20 / it))
      :snt4 (c6-16 / bait-01
                   :ARG1 (c6-6 / redneck)
                   :mod (c6-4 / idiot)))

# ::snt I supposed you consulted your crystal ball to conclude that the wall will never be finished! Got it. Guess what, the San Francisco bridge has never been finished. They are constantly upgrading, painting and conducting preventative maintenance on it. So I guess technically you could be right.
# ::tokens ["I", "supposed", "you", "consulted", "your", "crystal", "ball", "to", "conclude", "that", "the", "wall", "will", "never", "be", "finished", "!", "Got", "it", ".", "Guess", "what", ",", "the", "San", "Francisco", "bridge", "has", "never", "been", "finished", ".", "They", "are", "constantly", "upgrading", ",", "painting", "and", "conducting", "preventative", "maintenance", "on", "it", ".", "So", "I", "guess", "technically", "you", "could", "be", "right", "."]
# ::lemmas ["i", "suppose", "you", "consult", "your", "crystal", "ball", "to", "conclude", "that", "the", "wall", "will", "never", "be", "finish", "!", "got", "it", ".", "guess", "what", ",", "the", "San", "Francisco", "bridge", "have", "never", "be", "finish", ".", "they", "be", "constantly", "upgrade", ",", "painting", "and", "conduct", "preventative", "maintenance", "on", "it", ".", "so", "i", "guess", "technically", "you", "could", "be", "right", "."]
(c7-13 / multi-sentence
       :snt1 (c7-17 / suppose-01
                    :ARG0 (c7-4 / i)
                    :ARG1 (c7-6 / consult-01
                                :ARG0 (c7-26 / you)
                                :ARG1 (c7-35 / ball
                                             :mod (c7-0 / crystal)
                                             :poss c7-26)
                                :purpose (c7-9 / conclude-01
                                               :ARG0 c7-26
                                               :ARG1 (c7-30 / finish-01
                                                            :ARG1 (c7-7 / wall)
                                                            :time (c7-16 / ever)
                                                            :polarity -))))
       :snt2 (c7-12 / get-01
                    :ARG0 (c7-27 / you)
                    :ARG1 (c7-21 / it))
       :snt3 (c7-25 / guess-01
                    :ARG0 (c7-1 / you)
                    :ARG1 (c7-10 / thing))
       :snt4 (c7-23 / finish-01
                    :ARG1 (c7-28 / bridge
                                 :location (c7-24 / city
                                                  :name (c7-14 / name
                                                               :op1 "San"
                                                               :op2 "Francisco")))
                    :time (c7-32 / ever)
                    :polarity -)
       :snt5 (c7-29 / and
                    :op1 (c7-33 / upgrade-02
                                :ARG0 (c7-8 / they)
                                :ARG1 c7-28
                                :frequency (c7-19 / constant))
                    :op2 (c7-36 / paint-02
                                :ARG0 c7-8
                                :ARG1 c7-28)
                    :op3 (c7-5 / conduct-01
                               :ARG0 c7-8
                               :ARG1 (c7-31 / maintain-01
                                            :ARG0 c7-8
                                            :ARG1 (c7-34 / preventative))
                               :frequency c7-19))
       :snt6 (c7-3 / cause-01
                   :ARG1 (c7-2 / guess-01
                               :ARG0 (c7-22 / i)
                               :ARG1 (c7-20 / possible-01
                                            :ARG1 (c7-11 / right-06
                                                         :ARG1 (c7-18 / you)
                                                         :mod (c7-15 / technical))))))

# ::snt Yes, I am right on this. You will never get your wall. Trump never intended to keep his promises. The wall is just idiot bait for election.
# ::tokens ["Yes", ",", "I", "am", "right", "on", "this", ".", "You", "will", "never", "get", "your", "wall", ".", "Trump", "never", "intended", "to", "keep", "his", "promises", ".", "The", "wall", "is", "just", "idiot", "bait", "for", "election", "."]
# ::lemmas ["yes", ",", "i", "be", "right", "on", "this", ".", "you", "will", "never", "get", "your", "wall", ".", "Trump", "never", "intend", "to", "keep", "his", "promise", ".", "the", "wall", "be", "just", "idiot", "bait", "for", "election", "."]
(c8-6 / multi-sentence
      :snt1 (c8-4 / right-06
                  :ARG1 (c8-1 / i)
                  :ARG2 (c8-3 / this))
      :snt2 (c8-5 / get-01
                  :ARG0 (c8-12 / you)
                  :ARG1 (c8-2 / wall
                              :poss c8-12)
                  :time (c8-9 / ever)
                  :polarity -)
      :snt3 (c8-10 / intend-01
                   :ARG0 (c8-17 / person
                                :name (c8-7 / name
                                            :op1 "Trump"))
                   :ARG1 (c8-18 / keep-01
                                :ARG0 c8-17
                                :ARG1 (c8-14 / promise-01
                                             :ARG0 c8-17))
                   :time (c8-13 / ever)
                   :polarity -)
      :snt4 (c8-15 / bait-01
                   :ARG0 (c8-8 / wall)
                   :ARG2 (c8-0 / elect-01)
                   :mod (c8-11 / idiot)
                   :mod (c8-16 / just)))

# ::snt We'll see, i hope for the sake of America that they do build it.
# ::tokens ["We", "'ll", "see", ",", "i", "hope", "for", "the", "sake", "of", "America", "that", "they", "do", "build", "it", "."]
# ::lemmas ["we", "'ll", "see", ",", "i", "hope", "for", "the", "sake", "of", "America", "that", "they", "do", "build", "it", "."]
(c9-1 / and
      :op1 (c9-0 / see-01
                 :ARG0 (c9-3 / we))
      :op2 (c9-4 / hope-01
                 :ARG0 (c9-9 / i)
                 :ARG1 (c9-7 / build-01
                             :ARG0 (c9-6 / they)
                             :ARG1 (c9-5 / it)
                             :purpose (c9-8 / sake
                                            :poss (c9-2 / country
                                                        :name (c9-10 / name
                                                                     :op1 "America"))))))

# ::snt Isnt it funny that I hope they dont for the same reason?
# ::tokens ["Is", "nt", "it", "funny", "that", "I", "hope", "they", "do", "nt", "for", "the", "same", "reason", "?"]
# ::lemmas ["be", "not", "it", "funny", "that", "i", "hope", "they", "do", "not", "for", "the", "same", "reason", "?"]
(c10-2 / funny
       :domain (c10-4 / hope-01
                      :ARG0 (c10-7 / i)
                      :ARG1 (c10-8 / event
                                   :mod (c10-5 / they)
                                   :ARG1-of (c10-3 / cause-01
                                                   :ARG0 (c10-6 / reason
                                                                :ARG1-of (c10-0 / same-01)))
                                   :polarity -))
       :polarity (c10-1 / amr-unknown)
       :polarity -)

# ::snt Please enlighten us - how would The Wall be detrimental to America and her citizens? I'll wait.
# ::tokens ["Please", "enlighten", "us", "-", "how", "would", "The", "Wall", "be", "detrimental", "to", "America", "and", "her", "citizens", "?", "I", "'ll", "wait", "."]
# ::lemmas ["please", "enlighten", "we", "-", "how", "would", "the", "Wall", "be", "detrimental", "to", "America", "and", "her", "citizen", "?", "i", "'ll", "wait", "."]
(c11-9 / multi-sentence
       :snt1 (c11-13 / enlighten-01
                     :ARG0 (c11-11 / you)
                     :ARG1 (c11-3 / we)
                     :ARG2 (c11-6 / harm-01
                                  :ARG0 (c11-8 / political-movement
                                               :name (c11-10 / name
                                                             :op1 "Wall"))
                                  :ARG1 (c11-1 / and
                                               :op1 (c11-2 / country
                                                           :name (c11-7 / name
                                                                        :op1 "America"))
                                               :op2 (c11-0 / citizen
                                                           :poss c11-2))
                                  :manner (c11-12 / amr-unknown))
                     :mode imperative
                     :polite +)
       :snt2 (c11-4 / wait-01
                    :ARG1 (c11-5 / i)))

# ::snt Firstly, youre giving power to people who consistently show that they will abuse whatever power you give them. Secondly, the immigration process is too slow to supply the USA with the labor it desperately needs to grow wealth.
# ::tokens ["Firstly", ",", "you", "re", "giving", "power", "to", "people", "who", "consistently", "show", "that", "they", "will", "abuse", "whatever", "power", "you", "give", "them", ".", "Secondly", ",", "the", "immigration", "process", "is", "too", "slow", "to", "supply", "the", "USA", "with", "the", "labor", "it", "desperately", "needs", "to", "grow", "wealth", "."]
# ::lemmas ["Firstly", ",", "you", "re", "give", "power", "to", "people", "who", "consistently", "show", "that", "they", "will", "abuse", "whatever", "power", "you", "give", "they", ".", "Secondly", ",", "the", "immigration", "process", "be", "too", "slow", "to", "supply", "the", "USA", "with", "the", "labor", "it", "desperately", "need", "to", "grow", "wealth", "."]
(c12-9 / multi-sentence
       :snt1 (c12-8 / give-01
                    :ARG0 (c12-17 / you)
                    :ARG1 (c12-23 / power)
                    :ARG2 (c12-20 / person
                                  :ARG0-of (c12-12 / show-01
                                                   :ARG1 (c12-18 / abuse-02
                                                                 :ARG0 c12-20
                                                                 :ARG1 (c12-14 / power
                                                                               :ARG1-of (c12-16 / give-01
                                                                                                :ARG0 c12-17
                                                                                                :ARG2 c12-20))
                                                                 :mod (c12-6 / whatever))
                                                   :ARG1-of (c12-5 / consistent-02)))
                    :li 1)
       :snt2 (c12-19 / have-degree-91
                     :ARG1 (c12-13 / process-02
                                   :ARG1 (c12-4 / immigrate-01))
                     :ARG2 (c12-22 / slow-05
                                   :ARG1 c12-13)
                     :ARG3 (c12-7 / too)
                     :ARG6 (c12-15 / supply-01
                                   :ARG0 c12-13
                                   :ARG1 (c12-21 / labor
                                                 :ARG1-of (c12-10 / need-01
                                                                  :ARG0 (c12-0 / country
                                                                               :name (c12-3 / name
                                                                                            :op1 "USA"))
                                                                  :purpose (c12-2 / grow-01
                                                                                  :ARG0 c12-0
                                                                                  :ARG1 (c12-11 / wealth))
                                                                  :ARG1-of (c12-1 / desperate-02)))
                                   :ARG2 c12-0)
                     :li 2))
